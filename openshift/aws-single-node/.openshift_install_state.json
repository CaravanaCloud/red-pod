{
    "*baremetal.IronicCreds": {
        "Username": "bootstrap-user",
        "Password": "DTm9zOvBVgeRoOOt"
    },
    "*bootkube.CVOOverrides": {
        "FileList": [
            {
                "Filename": "templates/cvo-overrides.yaml.template",
                "Data": "YXBpVmVyc2lvbjogY29uZmlnLm9wZW5zaGlmdC5pby92MQpraW5kOiBDbHVzdGVyVmVyc2lvbgptZXRhZGF0YToKICBuYW1lc3BhY2U6IG9wZW5zaGlmdC1jbHVzdGVyLXZlcnNpb24KICBuYW1lOiB2ZXJzaW9uCnNwZWM6Cnt7LSBpZiAuSXNGQ09TIH19CiAgdXBzdHJlYW06IGh0dHBzOi8vYW1kNjQub3JpZ2luLnJlbGVhc2VzLmNpLm9wZW5zaGlmdC5vcmcvZ3JhcGgKICBjaGFubmVsOiBzdGFibGUtNAp7ey0gZWxzZSBpZiAuSXNTQ09TIH19CiAgdXBzdHJlYW06IGh0dHBzOi8vYW1kNjQub3JpZ2luLnJlbGVhc2VzLmNpLm9wZW5zaGlmdC5vcmcvZ3JhcGgKICBjaGFubmVsOiBzdGFibGUtc2Nvcy00Cnt7LSBlbHNlIH19CiAgY2hhbm5lbDogc3RhYmxlLTQuMTIKe3stIGVuZCB9fQogIGNsdXN0ZXJJRDoge3suQ1ZPQ2x1c3RlcklEfX0Ke3stIGlmIC5DVk9DYXBhYmlsaXRpZXMgfX0KICBjYXBhYmlsaXRpZXM6CiAgICBiYXNlbGluZUNhcGFiaWxpdHlTZXQ6IHt7LkNWT0NhcGFiaWxpdGllcy5CYXNlbGluZUNhcGFiaWxpdHlTZXR9fQogICAge3stIGlmIC5DVk9DYXBhYmlsaXRpZXMuQWRkaXRpb25hbEVuYWJsZWRDYXBhYmlsaXRpZXN9fQogICAgYWRkaXRpb25hbEVuYWJsZWRDYXBhYmlsaXRpZXM6IHt7cmFuZ2UgLkNWT0NhcGFiaWxpdGllcy5BZGRpdGlvbmFsRW5hYmxlZENhcGFiaWxpdGllc319CiAgICAtIHt7Ln19CiAgICB7ey0gZW5kfX0KICAgIHt7LSBlbmR9fQp7ey0gZW5kIH19Cg=="
            }
        ]
    },
    "*bootkube.KubeCloudConfig": {
        "FileList": [
            {
                "Filename": "templates/kube-cloud-config.yaml",
                "Data": "YXBpVmVyc2lvbjogdjEKa2luZDogU2VjcmV0Cm1ldGFkYXRhOgogIG5hbWU6IGt1YmUtY2xvdWQtY2ZnCiAgbmFtZXNwYWNlOiBrdWJlLXN5c3RlbQp0eXBlOiBPcGFxdWUKZGF0YToKICBjb25maWc6ICIiCg=="
            }
        ]
    },
    "*bootkube.KubeSystemConfigmapRootCA": {
        "FileList": [
            {
                "Filename": "templates/kube-system-configmap-root-ca.yaml.template",
                "Data": "YXBpVmVyc2lvbjogdjEKa2luZDogQ29uZmlnTWFwCm1ldGFkYXRhOgogIG5hbWU6IHJvb3QtY2EKICBuYW1lc3BhY2U6IGt1YmUtc3lzdGVtCmRhdGE6CiAgY2EuY3J0OiB8CiAgICB7ey5Sb290Q2FDZXJ0IHwgaW5kZW50IDR9fQo="
            }
        ]
    },
    "*bootkube.MachineConfigServerTLSSecret": {
        "FileList": [
            {
                "Filename": "templates/machine-config-server-tls-secret.yaml.template",
                "Data": "YXBpVmVyc2lvbjogdjEKa2luZDogU2VjcmV0Cm1ldGFkYXRhOgogIG5hbWU6IG1hY2hpbmUtY29uZmlnLXNlcnZlci10bHMKICBuYW1lc3BhY2U6IG9wZW5zaGlmdC1tYWNoaW5lLWNvbmZpZy1vcGVyYXRvcgp0eXBlOiBPcGFxdWUKZGF0YToKICB0bHMuY3J0OiB7ey5NY3NUTFNDZXJ0fX0KICB0bHMua2V5OiB7ey5NY3NUTFNLZXl9fQo="
            }
        ]
    },
    "*bootkube.OpenshiftConfigSecretPullSecret": {
        "FileList": [
            {
                "Filename": "templates/openshift-config-secret-pull-secret.yaml.template",
                "Data": "YXBpVmVyc2lvbjogdjEKa2luZDogU2VjcmV0CnR5cGU6IGt1YmVybmV0ZXMuaW8vZG9ja2VyY29uZmlnanNvbgptZXRhZGF0YToKICBuYW1lc3BhY2U6IG9wZW5zaGlmdC1jb25maWcKICBuYW1lOiBwdWxsLXNlY3JldApkYXRhOgogIC5kb2NrZXJjb25maWdqc29uOiB7ey5QdWxsU2VjcmV0QmFzZTY0fX0K"
            }
        ]
    },
    "*bootstrap.Bootstrap": {
        "Config": {
            "ignition": {
                "config": {
                    "replace": {
                        "verification": {}
                    }
                },
                "proxy": {},
                "security": {
                    "tls": {}
                },
                "timeouts": {},
                "version": "3.2.0"
            },
            "passwd": {
                "users": [
                    {
                        "name": "core",
                        "sshAuthorizedKeys": [
                            "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQDUrDu6U+4/PxPYH0gyPTi5onqeyeqmwgKXeh8qTee6XJ3Zbk0uJtMbb0x0VrkZqao8+8raz+FOT+AbbEjjxMb1+C4QLC6EmDrCMTLsWiI+yHlxH+g9FO5v+g5hUQe6MtzHdwjD29k0zC5ADh2xWWcz0nwZ9borhYUF3XaRBB6yN2DeB+Hex/zN7geueVxIt8zadqtaEqvgFrjPP9cXjijz4+QwOjlU+OGYp9IYsnMmGC55AFPeEhKiFWG1DoEfls3DBJaWE3E8emCjEP49q9ZMwJDAf2RgkKJbylq8c2b/R4JQEBP7YqDUzMkYjf+BH8u9aeggL5oGTJUKkJVGoQZQyjCYg899lVTx5aPwwpZTtMc0tAZpewMVc2VpaiGLVYRnMqLwBGVveD5iMU4irXDdYWGB1M3BLZIfNGxfWrbpKPCtl2+t8DF5FDQMMtoQdzop9sU2Z3TJsNI3iPP2jjA74jy9aZJMwqzzWOyGoMGtSsecdWxYaeMSRysHdBTGC2k= faermanj@fedora\n",
                            "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQC8MMHNqpolxN4gti4oQMQispeBEOuS3vVsoR76fiY0uYYebJ6ma9f18pBfohX77+hNDbDCkrte4VxoJXBUlhiaoAmhXQ3LtuKypNfuBW3RVMUHxh0J70dCfQGND7DcJJUym2B/NDX5D+RPUxLbY9+ZsBu4YM+RDtdGoKS+p/3jBPNuM+2tNJPfewY8+W4pEU4McjWJjC6VlVobT4MjUrmyDl0fvC5Zjj5gQQOdC8nBPTIXBA9DWSnFAGBxoHzE+HSPuew0sLT3G2iA8Gi++wghWFOvFjNK01zMa9ZwBiA08VM86jSXzocM4sMwuJ+3bQn4/TkfXimPCQ0GMCaY6bc/\n"
                        ]
                    }
                ]
            },
            "storage": {
                "files": [
                    {
                        "group": {},
                        "overwrite": true,
                        "path": "/etc/containers/registries.conf",
                        "user": {
                            "name": "root"
                        },
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,",
                            "verification": {}
                        },
                        "mode": 384
                    },
                    {
                        "group": {},
                        "overwrite": true,
                        "path": "/etc/ignition-machine-config-encapsulated.json",
                        "user": {
                            "name": "root"
                        },
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,ewogICJtZXRhZGF0YSI6IHsKICAgICJuYW1lIjogImJvb3RzdHJhcC1maXBzIgogIH0sCiAgInNwZWMiOiB7CiAgICAiY29uZmlnIjogewogICAgICAiaWduaXRpb24iOiB7CiAgICAgICAgInZlcnNpb24iOiAiMy4xLjAiCiAgICAgIH0KICAgIH0sCiAgICAia2VybmVsQXJndW1lbnRzIjogW10sCiAgICAiZmlwcyI6IGZhbHNlCiAgfQp9Cg==",
                            "verification": {}
                        },
                        "mode": 384
                    },
                    {
                        "group": {},
                        "overwrite": false,
                        "path": "/etc/motd",
                        "user": {
                            "name": "root"
                        },
                        "append": [
                            {
                                "source": "data:text/plain;charset=utf-8;base64,VGhpcyBpcyB0aGUgYm9vdHN0cmFwIG5vZGU7IGl0IHdpbGwgYmUgZGVzdHJveWVkIHdoZW4gdGhlIG1hc3RlciBpcyBmdWxseSB1cC4KClRoZSBwcmltYXJ5IHNlcnZpY2VzIGFyZSByZWxlYXNlLWltYWdlLnNlcnZpY2UgZm9sbG93ZWQgYnkgYm9vdGt1YmUuc2VydmljZS4gVG8gd2F0Y2ggdGhlaXIgc3RhdHVzLCBydW4gZS5nLgoKICBqb3VybmFsY3RsIC1iIC1mIC11IHJlbGVhc2UtaW1hZ2Uuc2VydmljZSAtdSBib290a3ViZS5zZXJ2aWNlCg==",
                                "verification": {}
                            }
                        ],
                        "contents": {
                            "verification": {}
                        },
                        "mode": 420
                    },
                    {
                        "group": {},
                        "overwrite": true,
                        "path": "/etc/pki/ca-trust/source/anchors/ca.crt",
                        "user": {
                            "name": "root"
                        },
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,",
                            "verification": {}
                        },
                        "mode": 384
                    },
                    {
                        "group": {},
                        "overwrite": true,
                        "path": "/etc/profile.d/proxy.sh",
                        "user": {
                            "name": "root"
                        },
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,",
                            "verification": {}
                        },
                        "mode": 384
                    },
                    {
                        "group": {},
                        "overwrite": true,
                        "path": "/etc/systemd/system.conf.d/10-default-env.conf",
                        "user": {
                            "name": "root"
                        },
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,W01hbmFnZXJdCg==",
                            "verification": {}
                        },
                        "mode": 384
                    },
                    {
                        "group": {},
                        "overwrite": true,
                        "path": "/root/.docker/config.json",
                        "user": {
                            "name": "root"
                        },
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,eyJhdXRocyI6eyJjbG91ZC5vcGVuc2hpZnQuY29tIjp7ImF1dGgiOiJiM0JsYm5Ob2FXWjBMWEpsYkdWaGMyVXRaR1YySzI5amJWOWhZMk5sYzNOZll6WmlNamRoTWpBNU16STFORFk0WkdFeU5HTmhObVUxWm1FNE1HUXdPVGc2VTBwWVJEUTJSMDVNTjBZNVZGQXhOMWxJTWpCSU0xUlFSREphTVVOWlZVNVpVVUpIUzB0Sk16QTJNMEZST1VVMVJWYzBRVEZMVWxkTlVUUkZWVlV3TlE9PSIsImVtYWlsIjoianVmYWVybWFAcmVkaGF0LmNvbSJ9LCJxdWF5LmlvIjp7ImF1dGgiOiJiM0JsYm5Ob2FXWjBMWEpsYkdWaGMyVXRaR1YySzI5amJWOWhZMk5sYzNOZll6WmlNamRoTWpBNU16STFORFk0WkdFeU5HTmhObVUxWm1FNE1HUXdPVGc2VTBwWVJEUTJSMDVNTjBZNVZGQXhOMWxJTWpCSU0xUlFSREphTVVOWlZVNVpVVUpIUzB0Sk16QTJNMEZST1VVMVJWYzBRVEZMVWxkTlVUUkZWVlV3TlE9PSIsImVtYWlsIjoianVmYWVybWFAcmVkaGF0LmNvbSJ9LCJyZWdpc3RyeS5jb25uZWN0LnJlZGhhdC5jb20iOnsiYXV0aCI6ImZIVm9ZeTF3YjI5c0xXVmxaRFV5WmpjMUxUa3lNR1F0TkRoak15MWlNMlZoTFROa05HRmxPVE0yT0RCak16cGxlVXBvWWtkamFVOXBTbE5WZWxWNFRXbEtPUzVsZVVwNlpGZEphVTlwU1hkUFIxVjZUWHBHYTFwcVJUTmFSRmt3VFZSc2ExbFVTbXBOTWxrMVRVZEZlRTFxUW1sT1JGVXpXVk5LT1M1YWVTMVJXazgzVFY5dVYzZGFTSFE0U1RKcGNrNXVNa0ZvYjBaeVUxZzBTbkJzYzFsTWNWOTJUMk5ETFdZeU4xVnNjVE42Tmtoek4weHdOM2RmV2xRMlIwNW9hSFpWYzNSMGVGazRhVGQzZUZsd05uWkdjRUpyZWxneE9GbEZjMDFNYzNsNldubDVUR2wwWW1ZdFUyRTVWSFo2TTFwbVluQlNWbVZHVFhseGNWQnBSbmhMUjIxZk5XMTBaVGQ2ZGxCSWNIUkhZbDlGUVRsQmJVNVhNbnBRUTNndFZFMXJUVGw2Ykdod1oyTkdjVEYzTldocWRWbHFSek4zYWxocWEwUm9aalo1V21kNWRVczFMV0ZLTnpkd1RHdG5NVkZCUkc0eE0yTXhXSGhSUTB4a1ZrTkZTVTF0VEc1NVNUbHlabE5XWDFGdVNrMUxla3AzTUhkUmJUQkxkVGhSVDJOSFgyeE1iMGxmYlcxMk1WWmZTRlF5WDBOUlRubzBaVnAwVm5NMVVHODBhbTB6VUV0WWJsUm9kalZLYW5SQlEydEtiVmRIZFhsWlVqVTVZbUpUTUd4M2FsOVVWSEUwWjJaQ1lrdDFiV3g1TURGYVpuSm5PWFphUkhkQ2JXUmpaMnd6VDJGNFEyTnVYM0JsYmxaMlRuSlRUM0pxT1hoaGVHTjJWRXMzZGtnMk9VRmhlbnBrZEV4NlVUTmZVMGw0UjFsekxXVmxNa015TWw5RWRUVXdRWEEyWTFka1kwOVhTelpUVURscVNFUktSalY1U1cxUGVYUkJZMU5KZW05blRGaEhaRlJTUTNCbVpVSkZXbFpHVm5ORmJVWjJYMjlEVjNaUVVGZEdlazVIZFdSb1JUZFdZMkZoWDJSQ1QwbzBjMjFNYVRZNVNrUmllRXRJU1V3MWJIUlFObEkyY0d4V1RHcG1hMU4yV2tSTU56RnZWbW80Ym5ock1reFNWamN4YlZCeFVGaG9SVEZrYUdndGRWQlRNMUZLZVcwMmFXUTVTVWRxTUhabmNERkZZbkJyU1hKdU9UZHhZMUJTTUZoYVdGUTVXa2RrUTE5cWRHbFZiVzVtY0dWUFFWZHhPWHBtY21scFdrNVVaMlZKYlU1NmFWZGtWV05KTFZCbGRXWmFNSGhOTmt4d1RGVlpWbEl3TkcxNVVsQnFaVE5tTkhsWlVYcGZMVEIxVjBkek1rSlZkRXRxV1E9PSIsImVtYWlsIjoianVmYWVybWFAcmVkaGF0LmNvbSJ9LCJyZWdpc3RyeS5yZWRoYXQuaW8iOnsiYXV0aCI6ImZIVm9ZeTF3YjI5c0xXVmxaRFV5WmpjMUxUa3lNR1F0TkRoak15MWlNMlZoTFROa05HRmxPVE0yT0RCak16cGxlVXBvWWtkamFVOXBTbE5WZWxWNFRXbEtPUzVsZVVwNlpGZEphVTlwU1hkUFIxVjZUWHBHYTFwcVJUTmFSRmt3VFZSc2ExbFVTbXBOTWxrMVRVZEZlRTFxUW1sT1JGVXpXVk5LT1M1YWVTMVJXazgzVFY5dVYzZGFTSFE0U1RKcGNrNXVNa0ZvYjBaeVUxZzBTbkJzYzFsTWNWOTJUMk5ETFdZeU4xVnNjVE42Tmtoek4weHdOM2RmV2xRMlIwNW9hSFpWYzNSMGVGazRhVGQzZUZsd05uWkdjRUpyZWxneE9GbEZjMDFNYzNsNldubDVUR2wwWW1ZdFUyRTVWSFo2TTFwbVluQlNWbVZHVFhseGNWQnBSbmhMUjIxZk5XMTBaVGQ2ZGxCSWNIUkhZbDlGUVRsQmJVNVhNbnBRUTNndFZFMXJUVGw2Ykdod1oyTkdjVEYzTldocWRWbHFSek4zYWxocWEwUm9aalo1V21kNWRVczFMV0ZLTnpkd1RHdG5NVkZCUkc0eE0yTXhXSGhSUTB4a1ZrTkZTVTF0VEc1NVNUbHlabE5XWDFGdVNrMUxla3AzTUhkUmJUQkxkVGhSVDJOSFgyeE1iMGxmYlcxMk1WWmZTRlF5WDBOUlRubzBaVnAwVm5NMVVHODBhbTB6VUV0WWJsUm9kalZLYW5SQlEydEtiVmRIZFhsWlVqVTVZbUpUTUd4M2FsOVVWSEUwWjJaQ1lrdDFiV3g1TURGYVpuSm5PWFphUkhkQ2JXUmpaMnd6VDJGNFEyTnVYM0JsYmxaMlRuSlRUM0pxT1hoaGVHTjJWRXMzZGtnMk9VRmhlbnBrZEV4NlVUTmZVMGw0UjFsekxXVmxNa015TWw5RWRUVXdRWEEyWTFka1kwOVhTelpUVURscVNFUktSalY1U1cxUGVYUkJZMU5KZW05blRGaEhaRlJTUTNCbVpVSkZXbFpHVm5ORmJVWjJYMjlEVjNaUVVGZEdlazVIZFdSb1JUZFdZMkZoWDJSQ1QwbzBjMjFNYVRZNVNrUmllRXRJU1V3MWJIUlFObEkyY0d4V1RHcG1hMU4yV2tSTU56RnZWbW80Ym5ock1reFNWamN4YlZCeFVGaG9SVEZrYUdndGRWQlRNMUZLZVcwMmFXUTVTVWRxTUhabmNERkZZbkJyU1hKdU9UZHhZMUJTTUZoYVdGUTVXa2RrUTE5cWRHbFZiVzVtY0dWUFFWZHhPWHBtY21scFdrNVVaMlZKYlU1NmFWZGtWV05KTFZCbGRXWmFNSGhOTmt4d1RGVlpWbEl3TkcxNVVsQnFaVE5tTkhsWlVYcGZMVEIxVjBkek1rSlZkRXRxV1E9PSIsImVtYWlsIjoianVmYWVybWFAcmVkaGF0LmNvbSJ9fX0K",
                            "verification": {}
                        },
                        "mode": 384
                    },
                    {
                        "group": {},
                        "overwrite": true,
                        "path": "/usr/local/bin/approve-csr.sh",
                        "user": {
                            "name": "root"
                        },
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,IyEvdXNyL2Jpbi9lbnYgYmFzaAoKIyBzaGVsbGNoZWNrIGRpc2FibGU9U0MxMDkxICAjIHVzaW5nIHBhdGggb24gYm9vdHN0cmFwIG1hY2hpbmUKLiAvdXNyL2xvY2FsL2Jpbi9ib290c3RyYXAtc2VydmljZS1yZWNvcmQuc2gKCktVQkVDT05GSUc9IiR7MX0iCgplY2hvICJBcHByb3ZpbmcgYWxsIENTUiByZXF1ZXN0cyB1bnRpbCBib290c3RyYXBwaW5nIGlzIGNvbXBsZXRlLi4uIgp3aGlsZSBbICEgLWYgL29wdC9vcGVuc2hpZnQvLmJvb3RrdWJlLmRvbmUgXQpkbwogICAgb2MgLS1rdWJlY29uZmlnPSIkS1VCRUNPTkZJRyIgZ2V0IGNzciAtLW5vLWhlYWRlcnMgfCBncmVwIFBlbmRpbmcgfCBcCiAgICAgICAgYXdrICd7cHJpbnQgJDF9JyB8IFwKICAgICAgICB4YXJncyAtLW5vLXJ1bi1pZi1lbXB0eSBvYyAtLWt1YmVjb25maWc9IiRLVUJFQ09ORklHIiBhZG0gY2VydGlmaWNhdGUgYXBwcm92ZQoJc2xlZXAgMjAKZG9uZQo=",
                            "verification": {}
                        },
                        "mode": 365
                    },
                    {
                        "group": {},
                        "overwrite": true,
                        "path": "/usr/local/bin/bootkube.sh",
                        "user": {
                            "name": "root"
                        },
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,",
                            "verification": {}
                        },
                        "mode": 365
                    },
                    {
                        "group": {},
                        "overwrite": true,
                        "path": "/usr/local/bin/bootstrap-cluster-gather.sh",
                        "user": {
                            "name": "root"
                        },
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,IyEvdXNyL2Jpbi9lbnYgYmFzaAoKQVBJX1NFUlZFUl9BUlRJRkFDVFNfRElSPSIvdG1wL2FydGlmYWN0cy1hcGktc2VydmVyLXRlbXAiCmZ1bmN0aW9uIHF1ZXVlKCkgewogICAgbG9jYWwgVEFSR0VUPSIke0FSVElGQUNUU19URU1QfS8kezF9IgogICAgc2hpZnQKICAgICMgc2hlbGxjaGVjayBkaXNhYmxlPVNDMjE1NQogICAgbG9jYWwgTElWRT0iJChqb2JzIHwgd2MgLWwpIgogICAgd2hpbGUgW1sgIiR7TElWRX0iIC1nZSA0NSBdXTsgZG8KICAgICAgICBzbGVlcCAxCiAgICAgICAgTElWRT0iJChqb2JzIHwgd2MgLWwpIgogICAgZG9uZQogICAgaWYgW1sgLW4gIiR7RklMVEVSLX0iIF1dOyB0aGVuCiAgICAgICAgIyBzaGVsbGNoZWNrIGRpc2FibGU9U0MyMDI0CiAgICAgICAgc3VkbyBLVUJFQ09ORklHPSIke0dBVEhFUl9LVUJFQ09ORklHfSIgIiR7QH0iIHwgIiR7RklMVEVSfSIgPiIke1RBUkdFVH0iICYKICAgIGVsc2UKICAgICAgICAjIHNoZWxsY2hlY2sgZGlzYWJsZT1TQzIwMjQKICAgICAgICBzdWRvIEtVQkVDT05GSUc9IiR7R0FUSEVSX0tVQkVDT05GSUd9IiAiJHtAfSIgPiIke1RBUkdFVH0iICYKICAgIGZpCn0KCmZ1bmN0aW9uIGNsdXN0ZXJfYm9vdHN0cmFwX2dhdGhlcigpIHsKICAgIEdBVEhFUl9LVUJFQ09ORklHPSIvb3B0L29wZW5zaGlmdC9hdXRoL2t1YmVjb25maWciCgogICAgQUxURVJOQVRJVkVfS1VCRUNPTkZJRz0iL2V0Yy9rdWJlcm5ldGVzL2Jvb3RzdHJhcC1zZWNyZXRzL2t1YmVjb25maWciCiAgICBpZiBbWyAtZiAke0FMVEVSTkFUSVZFX0tVQkVDT05GSUd9IF1dOyB0aGVuCiAgICAgICAgR0FUSEVSX0tVQkVDT05GSUc9JHtBTFRFUk5BVElWRV9LVUJFQ09ORklHfQogICAgZmkKCiAgICBlY2hvICJVc2luZyAke0dBVEhFUl9LVUJFQ09ORklHfSBhcyBLVUJFQ09ORklHIgoKICAgIEFSVElGQUNUU19URU1QPSIkKG1rdGVtcCAtZCkiCgogICAgbWtkaXIgLXAgIiR7QVJUSUZBQ1RTX1RFTVB9L3Jlc291cmNlcyIKCiAgICBlY2hvICJHYXRoZXJpbmcgY2x1c3RlciByZXNvdXJjZXMgLi4uIgogICAgcXVldWUgcmVzb3VyY2VzL25vZGVzLmxpc3Qgb2MgLS1yZXF1ZXN0LXRpbWVvdXQ9NXMgZ2V0IG5vZGVzIC1vIGpzb25wYXRoIC0tdGVtcGxhdGUgJ3tyYW5nZSAuaXRlbXNbKl19ey5tZXRhZGF0YS5uYW1lfXsiXG4ifXtlbmR9JwogICAgcXVldWUgcmVzb3VyY2VzL21hc3RlcnMubGlzdCBvYyAtLXJlcXVlc3QtdGltZW91dD01cyBnZXQgbm9kZXMgLW8ganNvbnBhdGggLWwgJ25vZGUtcm9sZS5rdWJlcm5ldGVzLmlvL21hc3RlcicgLS10ZW1wbGF0ZSAne3JhbmdlIC5pdGVtc1sqXX17Lm1ldGFkYXRhLm5hbWV9eyJcbiJ9e2VuZH0nCiAgICAjIFNoZWxsQ2hlY2sgZG9lc24ndCByZWFsaXplIHRoYXQgJG5zIGlzIGZvciB0aGUgR28gdGVtcGxhdGUsIG5vdCBzb21ldGhpbmcgd2UncmUgdHJ5aW5nIHRvIGV4cGFuZCBpbiB0aGUgc2hlbGwKICAgICMgc2hlbGxjaGVjayBkaXNhYmxlPTIwMTYKICAgIHF1ZXVlIHJlc291cmNlcy9jb250YWluZXJzIG9jIC0tcmVxdWVzdC10aW1lb3V0PTVzIGdldCBwb2RzIC0tYWxsLW5hbWVzcGFjZXMgLS10ZW1wbGF0ZSAne3sgcmFuZ2UgLml0ZW1zIH19e3sgJG5hbWUgOj0gLm1ldGFkYXRhLm5hbWUgfX17eyAkbnMgOj0gLm1ldGFkYXRhLm5hbWVzcGFjZSB9fXt7IHJhbmdlIC5zcGVjLmNvbnRhaW5lcnMgfX0tbiB7eyAkbnMgfX0ge3sgJG5hbWUgfX0gLWMge3sgLm5hbWUgfX17eyAiXG4iIH19e3sgZW5kIH19e3sgcmFuZ2UgLnNwZWMuaW5pdENvbnRhaW5lcnMgfX0tbiB7eyAkbnMgfX0ge3sgJG5hbWUgfX0gLWMge3sgLm5hbWUgfX17eyAiXG4iIH19e3sgZW5kIH19e3sgZW5kIH19JwogICAgcXVldWUgcmVzb3VyY2VzL2FwaS1wb2RzIG9jIC0tcmVxdWVzdC10aW1lb3V0PTVzIGdldCBwb2RzIC1sIGFwaXNlcnZlcj10cnVlIC0tYWxsLW5hbWVzcGFjZXMgLS10ZW1wbGF0ZSAne3sgcmFuZ2UgLml0ZW1zIH19LW4ge3sgLm1ldGFkYXRhLm5hbWVzcGFjZSB9fSB7eyAubWV0YWRhdGEubmFtZSB9fXt7ICJcbiIgfX17eyBlbmQgfX0nCgogICAgcXVldWUgcmVzb3VyY2VzL2FwaXNlcnZpY2VzLmpzb24gb2MgLS1yZXF1ZXN0LXRpbWVvdXQ9NXMgZ2V0IGFwaXNlcnZpY2VzIC1vIGpzb24KICAgIHF1ZXVlIHJlc291cmNlcy9jbHVzdGVyb3BlcmF0b3JzLmpzb24gb2MgLS1yZXF1ZXN0LXRpbWVvdXQ9NXMgZ2V0IGNsdXN0ZXJvcGVyYXRvcnMgLW8ganNvbgogICAgcXVldWUgcmVzb3VyY2VzL2NsdXN0ZXJ2ZXJzaW9uLmpzb24gb2MgLS1yZXF1ZXN0LXRpbWVvdXQ9NXMgZ2V0IGNsdXN0ZXJ2ZXJzaW9uIC1vIGpzb24KICAgIHF1ZXVlIHJlc291cmNlcy9jb25maWdtYXBzLmpzb24gb2MgLS1yZXF1ZXN0LXRpbWVvdXQ9NXMgZ2V0IGNvbmZpZ21hcHMgLS1hbGwtbmFtZXNwYWNlcyAtbyBqc29uCiAgICBxdWV1ZSByZXNvdXJjZXMvY3NyLmpzb24gb2MgLS1yZXF1ZXN0LXRpbWVvdXQ9NXMgZ2V0IGNzciAtbyBqc29uCiAgICBxdWV1ZSByZXNvdXJjZXMvZW5kcG9pbnRzLmpzb24gb2MgLS1yZXF1ZXN0LXRpbWVvdXQ9NXMgZ2V0IGVuZHBvaW50cyAtLWFsbC1uYW1lc3BhY2VzIC1vIGpzb24KICAgIHF1ZXVlIHJlc291cmNlcy9ldmVudHMuanNvbiBvYyAtLXJlcXVlc3QtdGltZW91dD01cyBnZXQgZXZlbnRzIC0tYWxsLW5hbWVzcGFjZXMgLW8ganNvbgogICAgcXVldWUgcmVzb3VyY2VzL2t1YmVhcGlzZXJ2ZXIuanNvbiBvYyAtLXJlcXVlc3QtdGltZW91dD01cyBnZXQga3ViZWFwaXNlcnZlciAtbyBqc29uCiAgICBxdWV1ZSByZXNvdXJjZXMva3ViZWNvbnRyb2xsZXJtYW5hZ2VyLmpzb24gb2MgLS1yZXF1ZXN0LXRpbWVvdXQ9NXMgZ2V0IGt1YmVjb250cm9sbGVybWFuYWdlciAtbyBqc29uCiAgICBxdWV1ZSByZXNvdXJjZXMvbWFjaGluZXMuanNvbiBvYyAtLXJlcXVlc3QtdGltZW91dD01cyBnZXQgbWFjaGluZXMgLS1hbGwtbmFtZXNwYWNlcyAtbyBqc29uCiAgICBxdWV1ZSByZXNvdXJjZXMvbWFjaGluZWNvbmZpZ3Bvb2xzLmpzb24gb2MgLS1yZXF1ZXN0LXRpbWVvdXQ9NXMgZ2V0IG1hY2hpbmVjb25maWdwb29scyAtbyBqc29uCiAgICBxdWV1ZSByZXNvdXJjZXMvbWFjaGluZWNvbmZpZ3MuanNvbiBvYyAtLXJlcXVlc3QtdGltZW91dD01cyBnZXQgbWFjaGluZWNvbmZpZ3MgLW8ganNvbgogICAgcXVldWUgcmVzb3VyY2VzL25hbWVzcGFjZXMuanNvbiBvYyAtLXJlcXVlc3QtdGltZW91dD01cyBnZXQgbmFtZXNwYWNlcyAtbyBqc29uCiAgICBxdWV1ZSByZXNvdXJjZXMvbm9kZXMuanNvbiBvYyAtLXJlcXVlc3QtdGltZW91dD01cyBnZXQgbm9kZXMgLW8ganNvbgogICAgcXVldWUgcmVzb3VyY2VzL29wZW5zaGlmdGFwaXNlcnZlci5qc29uIG9jIC0tcmVxdWVzdC10aW1lb3V0PTVzIGdldCBvcGVuc2hpZnRhcGlzZXJ2ZXIgLW8ganNvbgogICAgcXVldWUgcmVzb3VyY2VzL3BvZHMuanNvbiBvYyAtLXJlcXVlc3QtdGltZW91dD01cyBnZXQgcG9kcyAtLWFsbC1uYW1lc3BhY2VzIC1vIGpzb24KICAgIHF1ZXVlIHJlc291cmNlcy9yb2xlYmluZGluZ3MuanNvbiBvYyAtLXJlcXVlc3QtdGltZW91dD01cyBnZXQgcm9sZWJpbmRpbmdzIC0tYWxsLW5hbWVzcGFjZXMgLW8ganNvbgogICAgcXVldWUgcmVzb3VyY2VzL3JvbGVzLmpzb24gb2MgLS1yZXF1ZXN0LXRpbWVvdXQ9NXMgZ2V0IHJvbGVzIC0tYWxsLW5hbWVzcGFjZXMgLW8ganNvbgogICAgIyB0aGlzIGp1c3QgbGlzdHMgbmFtZXMgYW5kIG51bWJlciBvZiBrZXlzCiAgICBxdWV1ZSByZXNvdXJjZXMvc2VjcmV0cy1uYW1lcy50eHQgb2MgLS1yZXF1ZXN0LXRpbWVvdXQ9NXMgZ2V0IHNlY3JldHMgLS1hbGwtbmFtZXNwYWNlcwogICAgIyB0aGlzIGFkZHMgYW5ub3RhdGlvbnMsIGJ1dCBzdHJpcHMgb3V0IHRoZSBTQSB0b2tlbnMgYW5kIGRvY2tlcmNmZyBzZWNyZXRzIHdoaWNoIGFyZSBub2lzeSBhbmQgbWF5IGNvbnRhaW4gc2VjcmV0cyBpbiB0aGUgYW5ub3RhdGlvbnMKICAgIHF1ZXVlIHJlc291cmNlcy9zZWNyZXRzLW5hbWVzLXdpdGgtYW5ub3RhdGlvbnMudHh0IG9jIC0tcmVxdWVzdC10aW1lb3V0PTVzIGdldCBzZWNyZXRzIC0tYWxsLW5hbWVzcGFjZXMgLW89Y3VzdG9tLWNvbHVtbnM9TkFNRVNQQUNFOi5tZXRhZGF0YS5uYW1lc3BhY2UsTkFNRToubWV0YWRhdGEubmFtZSxUWVBFOi50eXBlLEFOTk9UQVRJT05TOi5tZXRhZGF0YS5hbm5vdGF0aW9ucyB8IGdyZXAgLXYgLS0gJy10b2tlbi0nIHwgZ3JlcCAtdiAtLSAnLWRvY2tlcmNmZy0nCiAgICBxdWV1ZSByZXNvdXJjZXMvc2VydmljZXMuanNvbiBvYyAtLXJlcXVlc3QtdGltZW91dD01cyBnZXQgc2VydmljZXMgLS1hbGwtbmFtZXNwYWNlcyAtbyBqc29uCgogICAgRklMVEVSPWd6aXAgcXVldWUgcmVzb3VyY2VzL29wZW5hcGkuanNvbi5neiBvYyAtLXJlcXVlc3QtdGltZW91dD01cyBnZXQgLS1yYXcgL29wZW5hcGkvdjIKCiAgICBlY2hvICJXYWl0aW5nIGZvciBsb2dzIC4uLiIKICAgIHdoaWxlIHdhaXQgLW47IGRvIGpvYnM7IGRvbmUKCiAgICBpZiAoKCAkKHN0YXQgLWMlcyAiJHtBUlRJRkFDVFNfVEVNUH0vcmVzb3VyY2VzL29wZW5hcGkuanNvbi5neiIpIDw9IDIwICkpCiAgICB0aGVuCiAgICAgICAgcm0gLXJmICIke0FSVElGQUNUU19URU1QfSIKICAgIGVsc2UKICAgICAgICBybSAtcmYgIiR7QVBJX1NFUlZFUl9BUlRJRkFDVFNfRElSfSIKICAgICAgICBta2RpciAtcCAiJHtBUElfU0VSVkVSX0FSVElGQUNUU19ESVJ9IgogICAgICAgIG12ICIke0FSVElGQUNUU19URU1QfS9yZXNvdXJjZXMiICIke0FQSV9TRVJWRVJfQVJUSUZBQ1RTX0RJUn0iCiAgICBmaQp9Cg==",
                            "verification": {}
                        },
                        "mode": 365
                    },
                    {
                        "group": {},
                        "overwrite": true,
                        "path": "/usr/local/bin/bootstrap-pivot.sh",
                        "user": {
                            "name": "root"
                        },
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,",
                            "verification": {}
                        },
                        "mode": 365
                    },
                    {
                        "group": {},
                        "overwrite": true,
                        "path": "/usr/local/bin/bootstrap-service-record.sh",
                        "user": {
                            "name": "root"
                        },
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,IyEvdXNyL2Jpbi9lbnYgYmFzaAojIFRoaXMgbGlicmFyeSBwcm92aWRlcyBhIGhlbHBlciBmdW5jdGlvbnMgZm9yIHJlY29yZGluZyB3aGVuIGEgc2VydmljZQojIGFuZCBpdHMgc3RhZ2VzIHN0YXJ0IGFuZCBlbmQuCgojIyMKIyBXaGVuIHJ1bm5pbmcgYXMgYSBwcmUtIG9yIHBvc3QtY29tbWFuZCwgc2V0IFBSRV9DT01NQU5EIG9yIFBPU1RfQ09NTUFORCwgcmVzcGVjdGl2ZWx5LgojIFRoZXNlIG11c3QgYmUgc2V0ICpwcmlvciogdG8gc291cmNpbmcgdGhpcyBzY3JpcHQuCiMgUFJFX0NPTU1BTkQgaXMgdGhlIG5hbWUgaWRlbnRpZnlpbmcgdGhlIHByZS1jb21tYW5kIGJlaW5nIHJ1bi4KIyBQT1NUX0NPTU1BTkQgaXMgdGhlIG5hbWUgaWRlbnRpZnlpbmcgdGhlIHBvc3QtY29tbWFuZCBiZWluZyBydW4uCgojIFNFUlZJQ0VfUkVDT1JEU19ESVIgaXMgdGhlIGRpcmVjdG9yeSB1bmRlciB3aGljaCBzZXJ2aWNlIHJlY29yZHMgd2lsbCBiZSBzdG9yZWQuClNFUlZJQ0VfUkVDT1JEU19ESVI9IiR7U0VSVklDRV9SRUNPUkRTX0RJUjotL3Zhci9sb2cvb3BlbnNoaWZ0L30iCiMgU1lTVEVNRF9VTklUX05BTUUgaXMgdGhlIG5hbWUgb2YgdGhlIHN5c3RlbWQgdW5pdCBmb3IgdGhlIHNlcnZpY2UKU1lTVEVNRF9VTklUX05BTUU9IiQocHMgLW8gdW5pdD0gJCQpIgojIFNFUlZJQ0VfTkFNRSBpcyB0aGUgbmFtZSBvZiB0aGUgc2VydmljZQpTRVJWSUNFX05BTUU9IiR7U0VSVklDRV9OQU1FOi0ke1NZU1RFTURfVU5JVF9OQU1FJS5zZXJ2aWNlfX0iCgojIGFkZF9zZXJ2aWNlX3JlY29yZF9lbnRyeSBhZGRzIGEgcmVjb3JkIGVudHJ5IHRvIHRoZSBzZXJ2aWNlIHJlY29yZHMgZmlsZS4KIyAgIFBIQVNFIC0gcGhhc2UgYmVpbmcgcmVjb3JkZWQ7IG9uZSBvZiAic2VydmljZSBzdGFydCIsICJzZXJ2aWNlIGVuZCIsICJzdGFnZSBzdGFydCIsICJzdGFnZSBlbmQiLCAicHJlLWNvbW1hbmQgc3RhcnQiLAojICAgICAgICAgICAicHJlLWNvbW1hbmQgZW5kIiwgInBvc3QtY29tbWFuZCBzdGFydCIsICJwb3N0LWNvbW1hbmQgZW5kIgojICAgUkVTVUxUIC0gcmVzdWx0IG9mIHRoZSBhY3Rpb24KIyAgIFNUQUdFIChvcHRpb25hbCkgLSBzdGFnZSBvZiB0aGUgc2VydmljZQojICAgUFJFX0NPTU1BTkQgKG9wdGlvbmFsKSAtIG5hbWUgb2YgdGhlIHByZS1jb21tYW5kCiMgICBQT1NUX0NPTU1BTkQgKG9wdGlvbmFsKSAtIG5hbWUgb2YgdGhlIHBvc3QtY29tbWFuZAojICAgRVJST1JfTElORSAob3B0aW9uYWwpIC0gbGluZSB3aGVyZSB0aGUgZXJyb3Igb2NjdXJyZWQKIyAgIEVSUk9SX01FU1NBR0UgKG9wdGlvbmFsKSAtIG1lc3NhZ2UgZm9yIHRoZSBlcnJvcgphZGRfc2VydmljZV9yZWNvcmRfZW50cnkoKSB7CiAgbG9jYWwgRklMRU5BTUU9IiR7U0VSVklDRV9SRUNPUkRTX0RJUn0vJHtTRVJWSUNFX05BTUV9Lmpzb24iCiAgbWtkaXIgLS1wYXJlbnRzICIkKGRpcm5hbWUgIiR7RklMRU5BTUV9IikiCiAgIyBBcHBlbmQgdGhlIG5ldyBlbnRyeSB0byB0aGUgZXhpc3RpbmcgYXJyYXkgaW4gdGhlIGZpbGUuCiAgIyBJZiB0aGUgZmlsZSBkb2VzIG5vdCBhbHJlYWR5IGV4aXN0LCBzdGFydCB3aXRoIGFuIGVtcHR5IGFycmF5LgogICMgVGhlIG5ldyBlbnRyeSBjb250YWlucyBvbmx5IHRoZSBmaWVsZHMgdGhhdCBoYXZlIG5vbi1lbXB0eSB2YWx1ZXMsIHRvIG9taXQgb3B0aW9uYWwgdmFsdWVzIHRoYXQgd2VyZSBub3QgcHJvdmlkZWQuCiAgKFsgLWYgIiR7RklMRU5BTUV9IiBdICYmIGNhdCAiJHtGSUxFTkFNRX0iIHx8IGVjaG8gJ1tdJykgfCBcCiAgICAgIGpxIFwKICAgICAgICAtLWFyZyB0aW1lc3RhbXAgIiQoZGF0ZSArIiVZLSVtLSVkVCVIOiVNOiVTWiIpIiBcCiAgICAgICAgLS1hcmcgcHJlQ29tbWFuZCAiJHtQUkVfQ09NTUFORC19IiBcCiAgICAgICAgLS1hcmcgcG9zdENvbW1hbmQgIiR7UE9TVF9DT01NQU5ELX0iIFwKICAgICAgICAtLWFyZyBzdGFnZSAiJHtTVEFHRV9OQU1FLX0iIFwKICAgICAgICAtLWFyZyBwaGFzZSAiJHtQSEFTRX0iIFwKICAgICAgICAtLWFyZyByZXN1bHQgIiR7UkVTVUxULX0iIFwKICAgICAgICAtLWFyZyBlcnJvckxpbmUgIiR7RVJST1JfTElORS19IiBcCiAgICAgICAgLS1hcmcgZXJyb3JNZXNzYWdlICIke0VSUk9SX01FU1NBR0UtfSIgXAogICAgICAgICcuICs9IFsKICAgICAgICAgIHskdGltZXN0YW1wLCRwcmVDb21tYW5kLCRwb3N0Q29tbWFuZCwkc3RhZ2UsJHBoYXNlLCRyZXN1bHQsJGVycm9yTGluZSwkZXJyb3JNZXNzYWdlfSB8CiAgICAgICAgICByZWR1Y2Uga2V5c1tdIGFzICRrICguOyBpZiAuWyRrXSA9PSAiIiB0aGVuIGRlbCguWyRrXSkgZWxzZSAuIGVuZCkKICAgICAgICBdJyBcCiAgICAgID4gIiR7RklMRU5BTUV9LnRtcCIgJiYgXAogICAgbXYgIiR7RklMRU5BTUV9LnRtcCIgIiR7RklMRU5BTUV9Igp9CgojIHJlY29yZF9zZXJ2aWNlX3N0YXJ0KCkgcmVjb3JkcyB0aGUgc3RhcnQgb2YgYSBzZXJ2aWNlLgpyZWNvcmRfc2VydmljZV9zdGFydCgpIHsKICBpZiBbICIke1BSRV9DT01NQU5ELX0iIF0KICB0aGVuCiAgICBsb2NhbCBQSEFTRT0icHJlLWNvbW1hbmQgc3RhcnQiCiAgZWxpZiBbICIke1BPU1RfQ09NTUFORC19IiBdCiAgdGhlbgogICAgbG9jYWwgUEhBU0U9InBvc3QtY29tbWFuZCBzdGFydCIKICBlbHNlCiAgICBsb2NhbCBQSEFTRT0ic2VydmljZSBzdGFydCIKICBmaQoKICBhZGRfc2VydmljZV9yZWNvcmRfZW50cnkKfQoKIyByZWNvcmRfc2VydmljZV9lbmQocmVzdWx0KSByZWNvcmRzIHRoZSBlbmQgb2YgYSBzZXJ2aWNlLgojICAgRVJST1JfTElORSAtIGxpbmUgd2hlcmUgdGhlIGVycm9yIG9jY3VycmVkLCBpZiB0aGVyZSB3YXMgYW4gZXJyb3IKIyAgIEVSUk9SX01FU1NBR0UgLSBlcnJvciBtZXNzYWdlLCBpZiB0aGVyZSB3YXMgYW4gZXJyb3IKcmVjb3JkX3NlcnZpY2VfZW5kKCkgewogIGlmIFsgIiR7UFJFX0NPTU1BTkQtfSIgXQogIHRoZW4KICAgIGxvY2FsIFBIQVNFPSJwcmUtY29tbWFuZCBlbmQiCiAgZWxpZiBbICIke1BPU1RfQ09NTUFORC19IiBdCiAgdGhlbgogICAgbG9jYWwgUEhBU0U9InBvc3QtY29tbWFuZCBlbmQiCiAgZWxzZQogICAgbG9jYWwgUEhBU0U9InNlcnZpY2UgZW5kIgogIGZpCiAgbG9jYWwgUkVTVUxUPSR7MTo/TXVzdCBzcGVjaWZ5IGEgcmVzdWx0fQoKICBhZGRfc2VydmljZV9yZWNvcmRfZW50cnkKfQoKIyByZWNvcmRfc2VydmljZV9zdGFnZV9zdGFydChzdGFnZV9uYW1lKSByZWNvcmRzIHRoZSBzdGFydCBvZiBhIHN0YWdlIG9mIGEgc2VydmljZS4KcmVjb3JkX3NlcnZpY2Vfc3RhZ2Vfc3RhcnQoKSB7CiAgaWYgWyAiJHtTVEFHRV9OQU1FLX0iIF0KICB0aGVuCiAgICBlY2hvICJhdHRlbXB0IHRvIHJlY29yZCB0aGUgc3RhcnQgb2YgYSBzdGFnZSB3aXRob3V0IGVuZGluZyB0aGUgcHJldmlvdXMgb25lIgogICAgZXhpdCAxCiAgZmkKCiAgbG9jYWwgUEhBU0U9InN0YWdlIHN0YXJ0IgogIFNUQUdFX05BTUU9JHsxOj9NdXN0IHNwZWNpZnkgYSBzdGFnZSBuYW1lfQoKICBhZGRfc2VydmljZV9yZWNvcmRfZW50cnkKfQoKIyByZWNvcmRfc2VydmljZV9zdGFnZV9lbmQocmVzdWx0KSByZWNvcmRzIHRoZSBlbmQgIG9mIGEgc3RhZ2Ugb2YgYSBzZXJ2aWNlLgojICAgRVJST1JfTElORSAtIGxpbmUgd2hlcmUgdGhlIGVycm9yIG9jY3VycmVkLCBpZiB0aGVyZSB3YXMgYW4gZXJyb3IKIyAgIEVSUk9SX01FU1NBR0UgLSBlcnJvciBtZXNzYWdlLCBpZiB0aGVyZSB3YXMgYW4gZXJyb3IKcmVjb3JkX3NlcnZpY2Vfc3RhZ2VfZW5kKCkgewogIGlmIFsgLXogIiR7U1RBR0VfTkFNRS19IiBdCiAgdGhlbgogICAgZWNobyAiYXR0ZW1wdCB0byByZWNvcmQgdGhlIGVuZCBvZiBhIHN0YWdlIHdpdGhvdXQgc3RhcnRpbmcgb25lIgogICAgZXhpdCAxCiAgZmkKCiAgbG9jYWwgUEhBU0U9InN0YWdlIGVuZCIKICBsb2NhbCBSRVNVTFQ9JHsxOj9NdXN0IHNwZWNpZnkgYSByZXN1bHR9CgogIGFkZF9zZXJ2aWNlX3JlY29yZF9lbnRyeQoKICBTVEFHRV9OQU1FPSIiCn0KCiMgcmVjb3JkX3NlcnZpY2Vfc3RhZ2Vfc3VjY2VzcyByZWNvcmRzIHRoZSBzdWNjZXNzZnVsIGVuZCBvZiBhIHN0YWdlIG9mIGEgc2VydmljZS4KcmVjb3JkX3NlcnZpY2Vfc3RhZ2Vfc3VjY2VzcygpIHsKICByZWNvcmRfc2VydmljZV9zdGFnZV9lbmQgInN1Y2Nlc3MiCn0KCnJlY29yZF9zZXJ2aWNlX3N0YWdlX2ZhaWx1cmUoKSB7CiAgbG9jYWwgRVJST1JfTElORQogIGxvY2FsIEVSUk9SX01FU1NBR0UKICBnZXRfZXJyb3JfaW5mbyBFUlJPUl9MSU5FIEVSUk9SX01FU1NBR0UKICByZWNvcmRfc2VydmljZV9zdGFnZV9lbmQgImZhaWx1cmUiCn0KCnJlY29yZF9zZXJ2aWNlX2V4aXQoKSB7CiAgaWYgWyAiJDEiIC1lcSAwIF0KICB0aGVuCiAgICBsb2NhbCBSRVNVTFQ9InN1Y2Nlc3MiCiAgZWxzZQogICAgbG9jYWwgUkVTVUxUPSJmYWlsdXJlIgogICAgbG9jYWwgRVJST1JfTElORQogICAgbG9jYWwgRVJST1JfTUVTU0FHRQogICAgZ2V0X2Vycm9yX2luZm8gRVJST1JfTElORSBFUlJPUl9NRVNTQUdFCiAgZmkKCiAgaWYgWyAiJHtTVEFHRV9OQU1FLX0iIF0KICB0aGVuCiAgICByZWNvcmRfc2VydmljZV9zdGFnZV9lbmQgIiR7UkVTVUxUfSIKICBmaQoKICByZWNvcmRfc2VydmljZV9lbmQgIiR7UkVTVUxUfSIKfQoKZ2V0X2Vycm9yX2luZm8oKSB7CiAgbG9jYWwgLW4gZXJyb3JfbGluZT0kMQogIGxvY2FsIC1uIGVycm9yX21lc3NhZ2U9JDIKICAjIHNoZWxsY2hlY2sgZGlzYWJsZT1TQzIwMzQgICMgdmFyaWFibGUgdXNlZCBpbmRpcmVjdGx5CiAgZXJyb3JfbGluZT0iJChjYWxsZXIgMSkiCiAgIyBzaGVsbGNoZWNrIGRpc2FibGU9U0MyMDM0ICAjIHZhcmlhYmxlIHVzZWQgaW5kaXJlY3RseQogIGVycm9yX21lc3NhZ2U9IiQoam91cm5hbGN0bCAtLXVuaXQ9IiR7U1lTVEVNRF9VTklUX05BTUV9IiAtLWxpbmVzPTMgLS1vdXRwdXQ9Y2F0KSIKfQoKcmVjb3JkX3NlcnZpY2Vfc3RhcnQKCnRyYXAgJ3JlY29yZF9zZXJ2aWNlX2V4aXQgJD8nIEVYSVQ=",
                            "verification": {}
                        },
                        "mode": 365
                    },
                    {
                        "group": {},
                        "overwrite": true,
                        "path": "/usr/local/bin/bootstrap-verify-api-server-urls.sh",
                        "user": {
                            "name": "root"
                        },
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,IyEvdXNyL2Jpbi9lbnYgYmFzaAoKIyBzaGVsbGNoZWNrIGRpc2FibGU9U0MxMDkxCi4gL3Vzci9sb2NhbC9iaW4vYm9vdHN0cmFwLXNlcnZpY2UtcmVjb3JkLnNoCgojIFRoaXMgZnVuY3Rpb25zIGV4cGVjdHMgMiBhcmd1bWVudHM6CiMgMS4gbmFtZSBvZiB0aGUgVVJMCiMgMi4gVGhlIHZhbHVlIG9mIHRoZSBVUkwKZnVuY3Rpb24gcmVzb2x2ZV91cmwoKSB7CiAgICB1bnNldCBJUFMKICAgIHVuc2V0IElQCiAgICBJUFM9JChkaWcgIiR7Mn0iICtzaG9ydCkKICAgIGlmIFtbICEgLXogIiR7SVBTfSIgXV0gOyB0aGVuCiAgICAgICAgZWNobyAiU3VjY2Vzc2Z1bGx5IHJlc29sdmVkICR7MX0gJHsyfSIKICAgICAgICAjIGRpZyByZXR1cm5zIG11bHRpcGxlIElQcy4gQ2hlY2sgaWYgdGhlCiAgICAgICAgIyBmaXJzdCBJUCBpcyByZWFjaGFibGUuCiAgICAgICAgaXBfYXJyPSIiCiAgICAgICAgcmVhZGFycmF5IGlwX2FyciAtdCA8PDwiJHtJUFN9IgogICAgICAgIElQPSIkKGVjaG8gIiR7aXBfYXJyWzBdfSIgfCB0ciAtZCAnXG4nKSIKICAgICAgICByZXR1cm4gMAogICAgZWxzZQogICAgICAgIGVjaG8gIlVuYWJsZSB0byByZXNvbHZlICR7MX0gJHsyfSIKICAgICAgICByZXR1cm4gMQogICAgZmkKfQoKIyBUaGlzIGZ1bmN0aW9ucyBleHBlY3RzIDIgYXJndW1lbnRzOgojIDEuIG5hbWUgb2YgdGhlIFVSTAojIDIuIFVSTCB0byB2YWxpZGF0ZQpmdW5jdGlvbiB2YWxpZGF0ZV91cmwoKSB7CiAgICBpZiBbWyAkKGN1cmwgLS1oZWFkIC1rIC0tc2lsZW50IC0tZmFpbCAtLXdyaXRlLW91dCAiJXtodHRwX2NvZGV9XFxuIiAiJHsyfSIgLW8gL2Rldi9udWxsKSA9PSAyMDAgXV07IHRoZW4KICAgICAgICBlY2hvICJTdWNjZXNzIHdoaWxlIHRyeWluZyB0byByZWFjaCAkezF9J3MgaHR0cHMgZW5kcG9pbnQgYXQgJHsyfSIKICAgICAgICByZXR1cm4gMAogICAgZWxzZQogICAgICAgIGVjaG8gIlVuYWJsZSB0byByZWFjaCAkezF9J3MgaHR0cHMgZW5kcG9pbnQgYXQgJHsyfSIKICAgICAgICByZXR1cm4gMQogICAgZmkKfQoKZnVuY3Rpb24gY2hlY2tfdXJsKCkgewogICAgaWYgW1sgLXogIiR7MX0iIF1dIHx8IFtbIC16ICIkezJ9IiBdXTsgdGhlbgogICAgICAgIGVjaG8gIlVzYWdlOiBjaGVja191cmwgPEFQSV9VUkwgb3IgQVBJX0lOVCBVUkw+IDxVUkwgdGhhdCBuZWVkcyB0byBiZSB2ZXJpZmllZD4iCiAgICAgICAgcmV0dXJuCiAgICBmaQoKICAgIGxvY2FsIFVSTF9UWVBFPSR7MX0KICAgIGxvY2FsIFNFUlZFUl9VUkw9JHsyfQoKICAgIGlmIFtbICR7VVJMX1RZUEV9ICE9IEFQSV9VUkwgXV0gJiYgW1sgJHtVUkxfVFlQRX0gIT0gQVBJX0lOVF9VUkwgXV07IHRoZW4KICAgICAgICBlY2hvICJVc2FnZTogY2hlY2tfdXJsIDxBUElfVVJMIG9yIEFQSV9JTlQgVVJMPiA8VVJMIHRoYXQgbmVlZHMgdG8gYmUgdmVyaWZpZWQ+IgogICAgICAgIHJldHVybgogICAgZmkKCiAgICBlY2hvICJDaGVja2luZyB2YWxpZGl0eSBvZiAke1NFUlZFUl9VUkx9IG9mIHR5cGUgJHtVUkxfVFlQRX0iCgogICAgaWYgW1sgIiR7VVJMX1RZUEV9IiA9ICJBUElfVVJMIiBdXTsgdGhlbgogICAgICAgIGxvY2FsIFVSTF9TVEFHRV9OQU1FPSJjaGVjay1hcGktdXJsIgogICAgZWxzZSAKICAgICAgICBsb2NhbCBVUkxfU1RBR0VfTkFNRT0iY2hlY2stYXBpLWludC11cmwiCiAgICBmaQoKICAgIGVjaG8gIlN0YXJ0aW5nIHN0YWdlICR7VVJMX1NUQUdFX05BTUV9IgogICAgcmVjb3JkX3NlcnZpY2Vfc3RhZ2Vfc3RhcnQgJHtVUkxfU1RBR0VfTkFNRX0KICAgIGlmIHJlc29sdmVfdXJsICIkVVJMX1RZUEUiICIkU0VSVkVSX1VSTCI7IHRoZW4KICAgICAgICByZWNvcmRfc2VydmljZV9zdGFnZV9zdWNjZXNzCiAgICBlbHNlCiAgICAgICAgcmVjb3JkX3NlcnZpY2Vfc3RhZ2VfZmFpbHVyZQogICAgICAgICMgV2UgZG8gbm90IHdhbnQgdG8gc3RvcCBib290a3ViZSBzZXJ2aWNlIGR1ZSB0byB0aGlzIGZhaWx1cmUuCiAgICAgICAgIyBTbyBub3QgcmV0dXJuaW5nIGZhaWx1cmUgYXQgdGhpcyBwb2ludC4KICAgICAgICByZXR1cm4KICAgIGZpCgogICAgQ1VSTF9VUkw9Imh0dHBzOi8vJHtJUH06NjQ0My92ZXJzaW9uIgoKICAgIHJlY29yZF9zZXJ2aWNlX3N0YWdlX3N0YXJ0ICR7VVJMX1NUQUdFX05BTUV9CiAgICBpZiB2YWxpZGF0ZV91cmwgIiRVUkxfVFlQRSIgIiRDVVJMX1VSTCI7IHRoZW4KICAgICAgICByZWNvcmRfc2VydmljZV9zdGFnZV9zdWNjZXNzCiAgICBlbHNlCiAgICAgICAgZWNobyAiSXQgbWlnaHQgYmUgdG9vIGVhcmx5IGZvciB0aGUgJHtDVVJMX1VSTH0gdG8gYmUgYXZhaWxhYmxlLiIKICAgICAgICByZWNvcmRfc2VydmljZV9zdGFnZV9mYWlsdXJlCiAgICBmaQp9Cg==",
                            "verification": {}
                        },
                        "mode": 365
                    },
                    {
                        "group": {},
                        "overwrite": true,
                        "path": "/usr/local/bin/crio-configure.sh",
                        "user": {
                            "name": "root"
                        },
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,IyEvdXNyL2Jpbi9lbnYgYmFzaApzZXQgLWV1byBwaXBlZmFpbAojIEJlZm9yZSBrdWJlbGV0LnNlcnZpY2UgYW5kIGNyaW8uc2VydmljZSBzdGFydCwgZW5zdXJlCiMgdGhhdCB3ZSdyZSB1c2luZyB0aGUgcGF1c2UgaW1hZ2UgZnJvbSBvdXIgcGF5bG9hZCBqdXN0IGxpa2UgdGhlIHByaW1hcnkgY2x1c3Rlci4KIyBUaGUgY29uZmlnIHNob3VsZCBtYXRjaCB0aGUgb25lIGdlbmVyYXRlZCBieSB0aGUgTUNPIGlkZWFsbHk6CiMgaHR0cHM6Ly9naXRodWIuY29tL29wZW5zaGlmdC9tYWNoaW5lLWNvbmZpZy1vcGVyYXRvci9ibG9iL2U4NjFjY2IxMmYwOWM3Yzc2OGQ1MWZkZjBhMTc4NzlmY2M5YTg3ZDUvdGVtcGxhdGVzL21hc3Rlci8wMS1tYXN0ZXItY29udGFpbmVyLXJ1bnRpbWUvX2Jhc2UvZmlsZXMvY3Jpby55YW1sCiMgQnV0IGZvciBub3cgd2UncmUganVzdCBjaGFuZ2luZyB0aGUga2V5IGJpdHM6IGltYWdlIGFuZCBjb21tYW5kLgojIFBlcmhhcHMgZG93biB0aGUgbGluZSB3ZSBjaGFuZ2UgdGhpcyB0byBydW4gc29tZXRoaW5nIGxpa2U6CiMgcG9kbWFuIHJ1biBtYWNoaW5lLWNvbmZpZy1kYWVtb24gYm9vdHN0cmFwIC4uLiAocGFzc2luZyB0aGUgcmVsZWFzZSBpbWFnZSBhbmQgdGhlIGhvc3Qgcm9vdGZzKQoKLiAvdXNyL2xvY2FsL2Jpbi9ib290c3RyYXAtc2VydmljZS1yZWNvcmQuc2gKCi4gL3Vzci9sb2NhbC9iaW4vcmVsZWFzZS1pbWFnZS5zaAoKTUFDSElORV9DT05GSUdfSU5GUkFfSU1BR0U9JChpbWFnZV9mb3IgcG9kKQoKIyBtYWtlIHRoZSBkcm9wLWluIGRpcmVjdG9yeSBpZiB0aGF0IGhhc24ndCBiZWVuIGRvbmUgeWV0Cm1rZGlyIC1wIC9ldGMvY3Jpby9jcmlvLmNvbmYuZAoKY2F0IDw8RU9GID4gL2V0Yy9jcmlvL2NyaW8uY29uZi5kLzUwLWJvb3RzdHJhcC1vdmVycmlkZS5jb25mCltjcmlvXQpbY3Jpby5ydW50aW1lXQpob29rc19kaXIgPSBbCgkiL3Vzci9zaGFyZS9jb250YWluZXJzL29jaS9ob29rcy5kIiwKCSIvZXRjL2NvbnRhaW5lcnMvb2NpL2hvb2tzLmQiLApdCltjcmlvLmltYWdlXQpwYXVzZV9pbWFnZSA9ICIkTUFDSElORV9DT05GSUdfSU5GUkFfSU1BR0UiCnBhdXNlX2NvbW1hbmQgPSAiL3Vzci9iaW4vcG9kIgpFT0YK",
                            "verification": {}
                        },
                        "mode": 365
                    },
                    {
                        "group": {},
                        "overwrite": true,
                        "path": "/usr/local/bin/installer-gather.sh",
                        "user": {
                            "name": "root"
                        },
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,",
                            "verification": {}
                        },
                        "mode": 365
                    },
                    {
                        "group": {},
                        "overwrite": true,
                        "path": "/usr/local/bin/installer-masters-gather.sh",
                        "user": {
                            "name": "root"
                        },
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,IyEvdXNyL2Jpbi9lbnYgYmFzaAoKIyBHZXQgdGFyZ2V0IGFyY2hpdGVjdHVyZQphcmNoPSQodW5hbWUgLW0pCgppZiB0ZXN0ICJ4JHsxfSIgPSAneC0taWQnCnRoZW4KCUdBVEhFUl9JRD0iJHsyfSIKCXNoaWZ0IDIKZmkKCkFSVElGQUNUUz0iL3RtcC9hcnRpZmFjdHMtJHtHQVRIRVJfSUR9Igpta2RpciAtcCAiJHtBUlRJRkFDVFN9IgoKZWNobyAiR2F0aGVyaW5nIG1hc3RlciBzeXN0ZW1kIHN1bW1hcnkgLi4uIgpMQU5HPVBPU0lYIHN5c3RlbWN0bCBsaXN0LXVuaXRzIC0tc3RhdGU9ZmFpbGVkID4mICIke0FSVElGQUNUU30vZmFpbGVkLXVuaXRzLnR4dCIKCmVjaG8gIkdhdGhlcmluZyBtYXN0ZXIgZmFpbGVkIHN5c3RlbWQgdW5pdCBzdGF0dXMgLi4uIgpta2RpciAtcCAiJHtBUlRJRkFDVFN9L3VuaXQtc3RhdHVzIgpzZWQgLW4gJ3MvXlwqIFwoW14gXSpcKSAuKi9cMS9wJyA8ICIke0FSVElGQUNUU30vZmFpbGVkLXVuaXRzLnR4dCIgfCB3aGlsZSByZWFkIC1yIFVOSVQKZG8KICAgIHN5c3RlbWN0bCBzdGF0dXMgLS1mdWxsICIke1VOSVR9IiA+JiAiJHtBUlRJRkFDVFN9L3VuaXQtc3RhdHVzLyR7VU5JVH0udHh0IgogICAgam91cm5hbGN0bCAtdSAiJHtVTklUfSIgPiAiJHtBUlRJRkFDVFN9L3VuaXQtc3RhdHVzLyR7VU5JVH0ubG9nIgpkb25lCgplY2hvICJHYXRoZXJpbmcgbWFzdGVyIGpvdXJuYWxzIC4uLiIKbWtkaXIgLXAgIiR7QVJUSUZBQ1RTfS9qb3VybmFscyIKZm9yIHNlcnZpY2UgaW4gY3JpbyBrdWJlbGV0IG1hY2hpbmUtY29uZmlnLWRhZW1vbi1ob3N0IG1hY2hpbmUtY29uZmlnLWRhZW1vbi1maXJzdGJvb3Qgb3BlbnNoaWZ0LWF6dXJlLXJvdXRlcyBvcGVuc2hpZnQtZ2NwLXJvdXRlcyBwaXZvdCBzc3NkCmRvCiAgICBqb3VybmFsY3RsIC0tYm9vdCAtLW5vLXBhZ2VyIC0tb3V0cHV0PXNob3J0IC0tdW5pdD0iJHtzZXJ2aWNlfSIgPiAiJHtBUlRJRkFDVFN9L2pvdXJuYWxzLyR7c2VydmljZX0ubG9nIgpkb25lCgpqb3VybmFsY3RsIC0tbm8tcGFnZXIgfCBnemlwID4gIiR7QVJUSUZBQ1RTfS9qb3VybmFscy9qb3VybmFsLmxvZy5neiIKCmVjaG8gIkdhdGhlcmluZyBtYXN0ZXIgbmV0d29ya2luZyAuLi4iCm1rZGlyIC1wICIke0FSVElGQUNUU30vbmV0d29yayIKaXAgYWRkciA+JiAiJHtBUlRJRkFDVFN9L25ldHdvcmsvaXAtYWRkci50eHQiCmlwIHJvdXRlID4mICIke0FSVElGQUNUU30vbmV0d29yay9pcC1yb3V0ZS50eHQiCmhvc3RuYW1lID4mICIke0FSVElGQUNUU30vbmV0d29yay9ob3N0bmFtZS50eHQiCm5ldHN0YXQgLWFucCA+JiAiJHtBUlRJRkFDVFN9L25ldHdvcmsvbmV0c3RhdC50eHQiCmNwIC1yIC9ldGMvcmVzb2x2LmNvbmYgIiR7QVJUSUZBQ1RTfS9uZXR3b3JrLyIKCmVjaG8gIkdhdGhlcmluZyBtYXN0ZXIgY29udGFpbmVycyAuLi4iCm1rZGlyIC1wICIke0FSVElGQUNUU30vY29udGFpbmVycyIKZm9yIGNvbnRhaW5lciBpbiAkKGNyaWN0bCBwcyAtLWFsbCAtLXF1aWV0KQpkbwogICAgY29udGFpbmVyX25hbWU9JChjcmljdGwgcHMgLWEgLS1pZCAiJHtjb250YWluZXJ9IiAtdiB8IGdyZXAgLW9QICJOYW1lOiBcXEsoLiopIikKICAgIGNyaWN0bCBsb2dzICIke2NvbnRhaW5lcn0iID4mICIke0FSVElGQUNUU30vY29udGFpbmVycy8ke2NvbnRhaW5lcl9uYW1lfS0ke2NvbnRhaW5lcn0ubG9nIgogICAgY3JpY3RsIGluc3BlY3QgIiR7Y29udGFpbmVyfSIgPiYgIiR7QVJUSUZBQ1RTfS9jb250YWluZXJzLyR7Y29udGFpbmVyX25hbWV9LSR7Y29udGFpbmVyfS5pbnNwZWN0Igpkb25lCgpwb2RtYW4gcHMgLS1hbGwgLS1mb3JtYXQgInt7IC5JRCB9fSB7eyAuTmFtZXMgfX0iIHwgd2hpbGUgcmVhZCAtciBjb250YWluZXJfaWQgY29udGFpbmVyX25hbWUKZG8KICAgIHBvZG1hbiBsb2dzICIke2NvbnRhaW5lcl9pZH0iID4mICIke0FSVElGQUNUU30vY29udGFpbmVycy8ke2NvbnRhaW5lcl9uYW1lfS0ke2NvbnRhaW5lcl9pZH0ubG9nIgogICAgcG9kbWFuIGluc3BlY3QgIiR7Y29udGFpbmVyX2lkfSIgPiYgIiR7QVJUSUZBQ1RTfS9jb250YWluZXJzLyR7Y29udGFpbmVyX25hbWV9LSR7Y29udGFpbmVyX2lkfS5pbnNwZWN0Igpkb25lCgplY2hvICJHYXRoZXJpbmcgbWFzdGVyIHJwbS1vc3RyZWUgaW5mbyAuLi4iCm1rZGlyIC1wICIke0FSVElGQUNUU30vcnBtLW9zdHJlZSIKc3VkbyBycG0tb3N0cmVlIHN0YXR1cyA+JiAiJHtBUlRJRkFDVFN9L3JwbS1vc3RyZWUvc3RhdHVzIgpzdWRvIHJwbS1vc3RyZWUgZXggaGlzdG9yeSA+JiAiJHtBUlRJRkFDVFN9L3JwbS1vc3RyZWUvaGlzdG9yeSIKCiMgQ29sbGVjdCBzeXN0ZW0gaW5mb3JtYXRpb24gc3BlY2lmaWMgdG8gSUJNIExpbnV4IFogKHMzOTB4KSBzeXN0ZW1zLiBUaGUgZGJnaW5mbwojIHNjcmlwdCBpcyBhdmFpbGFibGUgYnkgZGVmYXVsdCBhcyBwYXJ0IG9mIHRoZSBzMzkwLXV0aWxzIHJwbSBwYWNrYWdlCmlmIFsgIiRhcmNoIiA9PSAiczM5MHgiIF0KdGhlbgogICAgZWNobyAiR2F0aGVyaW5nIGRiZ2luZm8gZm9yIHRoZSBzMzkweCBzeXN0ZW0iCiAgICBta2RpciAtcCAiJHtBUlRJRkFDVFN9L25vZGUtZGJnaW5mbyIKICAgIC91c3Ivc2Jpbi9kYmdpbmZvLnNoIC1kICIke0FSVElGQUNUU30vbm9kZS1kYmdpbmZvIgogICAgZmluZCAiJHtBUlRJRkFDVFN9L25vZGUtZGJnaW5mbyIgLXByaW50MCB8IHhhcmdzIC0wIGNobW9kIGErcgpmaQoKZWNobyAiV2FpdGluZyBmb3IgbG9ncyAuLi4iCndoaWxlIHdhaXQgLW47IGRvIGpvYnM7IGRvbmUK",
                            "verification": {}
                        },
                        "mode": 365
                    },
                    {
                        "group": {},
                        "overwrite": true,
                        "path": "/usr/local/bin/kubelet-pause-image.sh",
                        "user": {
                            "name": "root"
                        },
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,IyEvdXNyL2Jpbi9lbnYgYmFzaApzZXQgLWV1byBwaXBlZmFpbAojIEJlZm9yZSBrdWJlbGV0LnNlcnZpY2UgYW5kIGNyaW8uc2VydmljZSBzdGFydCwgZW5zdXJlCiMgdGhhdCB3ZSdyZSB1c2luZyB0aGUgcGF1c2UgaW1hZ2UgZnJvbSBvdXIgcGF5bG9hZCBqdXN0IGxpa2UgdGhlIHByaW1hcnkgY2x1c3Rlci4KIyBOZWVkIHRvIHNldCB0aGUgLS1wb2QtaW5mcmEtY29udGFpbmVyLWltYWdlIGZsYWcgZm9yIHRoZSBrdWJlbGV0IHRvIHBvaW50IHRvIHRoZSBwYXVzZSBpbWFnZSBmcm9tIHRoZSBwYXlsb2FkCiMgU28gd2UgYWRkIE1BQ0hJTkVfQ09ORklHX0lORlJBX0lNQUdFIHRvIGFuIGVudmlyb25tZW50IGZpbGUgYW5kIHNvdXJjZSB0aGF0IGluIHRoZSBrdWJlbGV0IHNlcnZpY2UKClBSRV9DT01NQU5EPSJrdWJlbGV0LXBhdXNlLWltYWdlIgouIC91c3IvbG9jYWwvYmluL2Jvb3RzdHJhcC1zZXJ2aWNlLXJlY29yZC5zaAoKLiAvdXNyL2xvY2FsL2Jpbi9yZWxlYXNlLWltYWdlLnNoCgplY2hvICJNQUNISU5FX0NPTkZJR19JTkZSQV9JTUFHRT0kKGltYWdlX2ZvciBwb2QpIiA+IC9ldGMva3ViZXJuZXRlcy9rdWJlbGV0LXBhdXNlLWltYWdlLW92ZXJyaWRlCg==",
                            "verification": {}
                        },
                        "mode": 365
                    },
                    {
                        "group": {},
                        "overwrite": true,
                        "path": "/usr/local/bin/kubelet.sh",
                        "user": {
                            "name": "root"
                        },
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,IyEvdXNyL2Jpbi9lbnYgYmFzaAoKIyBzaGVsbGNoZWNrIGRpc2FibGU9U0MxMDkxICAjIHVzaW5nIHBhdGggb24gYm9vdHN0cmFwIG1hY2hpbmUKLiAvdXNyL2xvY2FsL2Jpbi9ib290c3RyYXAtc2VydmljZS1yZWNvcmQuc2gKCi91c3IvYmluL2h5cGVya3ViZSBcCiAga3ViZWxldCBcCiAgICAtLWFub255bW91cy1hdXRoPWZhbHNlIFwKICAgIC0tY29udGFpbmVyLXJ1bnRpbWU9cmVtb3RlIFwKICAgIC0tY29udGFpbmVyLXJ1bnRpbWUtZW5kcG9pbnQ9L3Zhci9ydW4vY3Jpby9jcmlvLnNvY2sgXAogICAgLS1ydW50aW1lLXJlcXVlc3QtdGltZW91dD0iJHtLVUJFTEVUX1JVTlRJTUVfUkVRVUVTVF9USU1FT1VUfSIgXAogICAgLS1wb2QtbWFuaWZlc3QtcGF0aD0vZXRjL2t1YmVybmV0ZXMvbWFuaWZlc3RzIFwKICAgIC0tbWluaW11bS1jb250YWluZXItdHRsLWR1cmF0aW9uPTZtMHMgXAogICAgLS1jbHVzdGVyLWRvbWFpbj1jbHVzdGVyLmxvY2FsIFwKICAgIC0tY2dyb3VwLWRyaXZlcj1zeXN0ZW1kIFwKICAgIC0tc2VyaWFsaXplLWltYWdlLXB1bGxzPWZhbHNlIFwKICAgIC0tdj0yIFwKICAgIC0tdm9sdW1lLXBsdWdpbi1kaXI9L2V0Yy9rdWJlcm5ldGVzL2t1YmVsZXQtcGx1Z2lucy92b2x1bWUvZXhlYyBcCiAgICAtLXBvZC1pbmZyYS1jb250YWluZXItaW1hZ2U9IiR7TUFDSElORV9DT05GSUdfSU5GUkFfSU1BR0V9Igo=",
                            "verification": {}
                        },
                        "mode": 365
                    },
                    {
                        "group": {},
                        "overwrite": true,
                        "path": "/usr/local/bin/release-image-download.sh",
                        "user": {
                            "name": "root"
                        },
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,IyEvdXNyL2Jpbi9lbnYgYmFzaApzZXQgLWV1byBwaXBlZmFpbAojIERvd25sb2FkIHRoZSByZWxlYXNlIGltYWdlLiBUaGlzIHNjcmlwdCBpcyBleGVjdXRlZCBhcyBhIG9uZXNob3QKIyBzZXJ2aWNlIGJ5IHN5c3RlbWQsIGJlY2F1c2Ugd2UgY2Fubm90IG1ha2UgdXNlIG9mIFJlcXVpcmVzIGFuZCBhCiMgc2ltcGxlIHNlcnZpY2U6IGh0dHBzOi8vZ2l0aHViLmNvbS9zeXN0ZW1kL3N5c3RlbWQvaXNzdWVzLzEzMTIuCiMKIyBUaGlzIHNjcmlwdCBjb250aW51ZXMgdHJ5aW5nIHRvIGRvd25sb2FkIHRoZSByZWxlYXNlIGltYWdlIHVudGlsCiMgc3VjY2Vzc2Z1bCBiZWNhdXNlIHdlIGNhbm5vdCB1c2UgUmVzdGFydD1vbi1mYWlsdXJlIHdpdGggYSBvbmVzaG90CiMgc2VydmljZTogaHR0cHM6Ly9naXRodWIuY29tL3N5c3RlbWQvc3lzdGVtZC9pc3N1ZXMvMjU4Mi4KIwoKLiAvdXNyL2xvY2FsL2Jpbi9ib290c3RyYXAtc2VydmljZS1yZWNvcmQuc2gKClJFTEVBU0VfSU1BR0U9cXVheS5pby9vcGVuc2hpZnQtcmVsZWFzZS1kZXYvb2NwLXJlbGVhc2VAc2hhMjU2OmI5ZDZjY2I1YmE1YTg3ODE0MWU0NjhlNTZmYTYyOTEyYWQ3YzA0ODY0YWNmZWMwYzAwNTZkMmI0MWUzMjU5Y2MKCmVjaG8gIlB1bGxpbmcgJFJFTEVBU0VfSU1BR0UuLi4iCnJlbGVhc2VfaW1hZ2VfaXNzdWU9Ii9ldGMvaXNzdWUuZC81MF9yZWxlYXNlLWltYWdlLmlzc3VlIgp3aGlsZSB0cnVlCmRvCiAgICByZWNvcmRfc2VydmljZV9zdGFnZV9zdGFydCAicHVsbC1yZWxlYXNlLWltYWdlIgogICAgaWYgcG9kbWFuIHB1bGwgLS1xdWlldCAiJFJFTEVBU0VfSU1BR0UiCiAgICB0aGVuCiAgICAgICAgcm0gLWYgIiR7cmVsZWFzZV9pbWFnZV9pc3N1ZX0iCiAgICAgICAgYWdldHR5IC0tcmVsb2FkCiAgICAgICAgcmVjb3JkX3NlcnZpY2Vfc3RhZ2Vfc3VjY2VzcwogICAgICAgIGJyZWFrCiAgICBlbHNlCiAgICAgICAgcHJpbnRmICdcblxcZXtsaWdodHJlZH1VbmFibGUgdG8gcHVsbCBPcGVuU2hpZnQgcmVsZWFzZSBpbWFnZVxcZXtyZXNldH1cbicgPiIke3JlbGVhc2VfaW1hZ2VfaXNzdWV9IgogICAgICAgIGFnZXR0eSAtLXJlbG9hZAogICAgICAgIHJlY29yZF9zZXJ2aWNlX3N0YWdlX2ZhaWx1cmUKICAgICAgICBlY2hvICJQdWxsIGZhaWxlZC4gUmV0cnlpbmcgJFJFTEVBU0VfSU1BR0UuLi4iCiAgICBmaQpkb25lCgojIFNhbml0eSBjaGVjayB0aGUgaW1hZ2UgbWV0YWRhdGEgdG8gc2VlIGlmIHRoZSBhcmNoZXMgbWF0Y2gKcmVjb3JkX3NlcnZpY2Vfc3RhZ2Vfc3RhcnQgImltYWdlLW1ldGFkYXRhLWFyY2hlcy1tYXRjaCIKaW1hZ2VfYXJjaD0kKHBvZG1hbiBpbnNwZWN0ICRSRUxFQVNFX0lNQUdFIC0tZm9ybWF0IHt7LkFyY2hpdGVjdHVyZX19KQpob3N0X2FyY2g9JCh1bmFtZSAtbSkKY2FzZSAkaG9zdF9hcmNoIGluCiAgICAieDg2XzY0IikgIGhvc3RfYXJjaD0iYW1kNjQiICAgOzsKICAgICJhYXJjaDY0IikgaG9zdF9hcmNoPSJhcm02NCIgICA7OyAjIG5vdCB1c2VkLCBqdXN0IGZvciBjb21wbGV0ZW5lc3MKZXNhYwoKaWYgW1sgIiRpbWFnZV9hcmNoIiAhPSAiJGhvc3RfYXJjaCIgXV07IHRoZW4KICAgIHByaW50ZiAnXG5cXGV7bGlnaHRyZWR9UmVsZWFzZSBpbWFnZSBhcmNoICVzIGRvZXMgbm90IG1hdGNoIGhvc3QgYXJjaCAlc1xcZXtyZXNldH1cbicgIiR7aW1hZ2VfYXJjaH0iICIke2hvc3RfYXJjaH0iID4iJHtyZWxlYXNlX2ltYWdlX2lzc3VlfSIKICAgIGFnZXR0eSAtLXJlbG9hZAogICAgcmVjb3JkX3NlcnZpY2Vfc3RhZ2VfZmFpbHVyZQogICAgZWNobyAiRVJST1I6IHJlbGVhc2UgaW1hZ2UgYXJjaCAkaW1hZ2VfYXJjaCBkb2VzIG5vdCBtYXRjaCBob3N0IGFyY2ggJGhvc3RfYXJjaCIKICAgIGV4aXQgMQplbHNlCiAgICByZWNvcmRfc2VydmljZV9zdGFnZV9zdWNjZXNzCmZpCg==",
                            "verification": {}
                        },
                        "mode": 365
                    },
                    {
                        "group": {},
                        "overwrite": true,
                        "path": "/usr/local/bin/release-image.sh",
                        "user": {
                            "name": "root"
                        },
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,IyEvdXNyL2Jpbi9lbnYgYmFzaAojIFRoaXMgbGlicmFyeSBwcm92aWRlcyBhbiBgaW1hZ2VfZm9yYCBoZWxwZXIgZnVuY3Rpb24gd2hpY2ggY2FuIGdldCB0aGUKIyBwdWxsIHNwZWMgZm9yIGEgc3BlY2lmaWMgaW1hZ2UgaW4gYSByZWxlYXNlLgoKIyBDb252ZXJ0IHRoZSByZWxlYXNlIGltYWdlIHB1bGwgc3BlYyB0byBhbiAiYWJzb2x1dGUiIGZvcm0gaWYgYSBkaWdlc3QgaXMgYXZhaWxhYmxlCmlmICEgUkVMRUFTRV9JTUFHRV9ESUdFU1Q9JCggcG9kbWFuIGluc3BlY3QgcXVheS5pby9vcGVuc2hpZnQtcmVsZWFzZS1kZXYvb2NwLXJlbGVhc2VAc2hhMjU2OmI5ZDZjY2I1YmE1YTg3ODE0MWU0NjhlNTZmYTYyOTEyYWQ3YzA0ODY0YWNmZWMwYzAwNTZkMmI0MWUzMjU5Y2MgLS1mb3JtYXQgJ3t7IGluZGV4IC5SZXBvRGlnZXN0cyAwIH19JyApIHx8IFtbIC16ICIke1JFTEVBU0VfSU1BR0VfRElHRVNUfSIgXV07IHRoZW4KCWVjaG8gIldhcm5pbmc6IENvdWxkIG5vdCByZXNvbHZlIHJlbGVhc2UgaW1hZ2UgdG8gcHVsbCBieSBkaWdlc3QiIDI+JjEKCVJFTEVBU0VfSU1BR0VfRElHRVNUPSJxdWF5LmlvL29wZW5zaGlmdC1yZWxlYXNlLWRldi9vY3AtcmVsZWFzZUBzaGEyNTY6YjlkNmNjYjViYTVhODc4MTQxZTQ2OGU1NmZhNjI5MTJhZDdjMDQ4NjRhY2ZlYzBjMDA1NmQyYjQxZTMyNTljYyIKZmkKCmltYWdlX2ZvcigpIHsKICAgIHBvZG1hbiBydW4gLS1xdWlldCAtLXJtIC0tbmV0PW5vbmUgIiR7UkVMRUFTRV9JTUFHRV9ESUdFU1R9IiBpbWFnZSAiJHsxfSIKfQo=",
                            "verification": {}
                        },
                        "mode": 365
                    },
                    {
                        "group": {},
                        "overwrite": true,
                        "path": "/usr/local/bin/report-progress.sh",
                        "user": {
                            "name": "root"
                        },
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,IyEvdXNyL2Jpbi9lbnYgYmFzaAoKIyBzaGVsbGNoZWNrIGRpc2FibGU9U0MxMDkxICAjIHVzaW5nIHBhdGggb24gYm9vdHN0cmFwIG1hY2hpbmUKLiAvdXNyL2xvY2FsL2Jpbi9ib290c3RyYXAtc2VydmljZS1yZWNvcmQuc2gKCktVQkVDT05GSUc9IiR7MX0iCgp3YWl0X2Zvcl9leGlzdGVuY2UoKSB7Cgl3aGlsZSBbICEgLWUgIiR7MX0iIF0KCWRvCgkJc2xlZXAgNQoJZG9uZQp9CgpyZWNvcmRfc2VydmljZV9zdGFnZV9zdGFydCAid2FpdC1mb3ItYm9vdHN0cmFwLWNvbXBsZXRlIgplY2hvICJXYWl0aW5nIGZvciBib290c3RyYXAgdG8gY29tcGxldGUuLi4iCndhaXRfZm9yX2V4aXN0ZW5jZSAvb3B0L29wZW5zaGlmdC8uYm9vdGt1YmUuZG9uZQpyZWNvcmRfc2VydmljZV9zdGFnZV9zdWNjZXNzCgpyZWNvcmRfc2VydmljZV9zdGFnZV9zdGFydCAicmVwb3J0LWJvb3RzdHJhcC1jb21wbGV0ZSIKZWNobyAiUmVwb3J0aW5nIGluc3RhbGwgcHJvZ3Jlc3MuLi4iCndoaWxlICEgb2MgLS1rdWJlY29uZmlnPSIkS1VCRUNPTkZJRyIgY3JlYXRlIC1mIC0gPDwtRU9GCglhcGlWZXJzaW9uOiB2MQoJa2luZDogQ29uZmlnTWFwCgltZXRhZGF0YToKCSAgbmFtZTogYm9vdHN0cmFwCgkgIG5hbWVzcGFjZToga3ViZS1zeXN0ZW0KCWRhdGE6CgkgIHN0YXR1czogY29tcGxldGUKRU9GCmRvCglzbGVlcCA1CmRvbmUKcmVjb3JkX3NlcnZpY2Vfc3RhZ2Vfc3VjY2Vzcwo=",
                            "verification": {}
                        },
                        "mode": 365
                    },
                    {
                        "group": {},
                        "overwrite": true,
                        "path": "/opt/openshift/manifests/cluster-config.yaml",
                        "user": {
                            "name": "root"
                        },
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,YXBpVmVyc2lvbjogdjEKZGF0YToKICBpbnN0YWxsLWNvbmZpZzogfAogICAgYWRkaXRpb25hbFRydXN0QnVuZGxlUG9saWN5OiBQcm94eW9ubHkKICAgIGFwaVZlcnNpb246IHYxCiAgICBiYXNlRG9tYWluOiBkZXZjbHVzdGVyLm9wZW5zaGlmdC5jb20KICAgIGNvbXB1dGU6CiAgICAtIGFyY2hpdGVjdHVyZTogYW1kNjQKICAgICAgaHlwZXJ0aHJlYWRpbmc6IEVuYWJsZWQKICAgICAgbmFtZTogd29ya2VyCiAgICAgIHBsYXRmb3JtOiB7fQogICAgICByZXBsaWNhczogMAogICAgY29udHJvbFBsYW5lOgogICAgICBhcmNoaXRlY3R1cmU6IGFtZDY0CiAgICAgIGh5cGVydGhyZWFkaW5nOiBFbmFibGVkCiAgICAgIG5hbWU6IG1hc3RlcgogICAgICBwbGF0Zm9ybToKICAgICAgICBhd3M6CiAgICAgICAgICBtZXRhZGF0YVNlcnZpY2U6IHt9CiAgICAgICAgICByb290Vm9sdW1lOgogICAgICAgICAgICBpb3BzOiAwCiAgICAgICAgICAgIHNpemU6IDY0CiAgICAgICAgICAgIHR5cGU6ICIiCiAgICAgICAgICB0eXBlOiByNS4yeGxhcmdlCiAgICAgIHJlcGxpY2FzOiAxCiAgICBtZXRhZGF0YToKICAgICAgY3JlYXRpb25UaW1lc3RhbXA6IG51bGwKICAgICAgbmFtZTogcmVkcG9kLWF3cy1zbm8KICAgIG5ldHdvcmtpbmc6CiAgICAgIGNsdXN0ZXJOZXR3b3JrOgogICAgICAtIGNpZHI6IDEwLjEyOC4wLjAvMTQKICAgICAgICBob3N0UHJlZml4OiAyMwogICAgICBtYWNoaW5lTmV0d29yazoKICAgICAgLSBjaWRyOiAxMC4wLjAuMC8xNgogICAgICBuZXR3b3JrVHlwZTogT1ZOS3ViZXJuZXRlcwogICAgICBzZXJ2aWNlTmV0d29yazoKICAgICAgLSAxNzIuMzAuMC4wLzE2CiAgICBwbGF0Zm9ybToKICAgICAgYXdzOgogICAgICAgIHJlZ2lvbjogdXMtd2VzdC0yCiAgICBwdWJsaXNoOiBFeHRlcm5hbAogICAgcHVsbFNlY3JldDogIiIKICAgIHNzaEtleTogfAogICAgICBzc2gtcnNhIEFBQUFCM056YUMxeWMyRUFBQUFEQVFBQkFBQUJnUURVckR1NlUrNC9QeFBZSDBneVBUaTVvbnFleWVxbXdnS1hlaDhxVGVlNlhKM1piazB1SnRNYmIweDBWcmtacWFvOCs4cmF6K0ZPVCtBYmJFamp4TWIxK0M0UUxDNkVtRHJDTVRMc1dpSSt5SGx4SCtnOUZPNXYrZzVoVVFlNk10ekhkd2pEMjlrMHpDNUFEaDJ4V1djejBud1o5Ym9yaFlVRjNYYVJCQjZ5TjJEZUIrSGV4L3pON2dldWVWeEl0OHphZHF0YUVxdmdGcmpQUDljWGppano0K1F3T2psVStPR1lwOUlZc25NbUdDNTVBRlBlRWhLaUZXRzFEb0VmbHMzREJKYVdFM0U4ZW1DakVQNDlxOVpNd0pEQWYyUmdrS0pieWxxOGMyYi9SNEpRRUJQN1lxRFV6TWtZamYrQkg4dTlhZWdnTDVvR1RKVUtrSlZHb1FaUXlqQ1lnODk5bFZUeDVhUHd3cFpUdE1jMHRBWnBld01WYzJWcGFpR0xWWVJuTXFMd0JHVnZlRDVpTVU0aXJYRGRZV0dCMU0zQkxaSWZOR3hmV3JicEtQQ3RsMit0OERGNUZEUU1NdG9RZHpvcDlzVTJaM1RKc05JM2lQUDJqakE3NGp5OWFaSk13cXp6V095R29NR3RTc2VjZFd4WWFlTVNSeXNIZEJUR0Myaz0gZmFlcm1hbmpAZmVkb3JhCmtpbmQ6IENvbmZpZ01hcAptZXRhZGF0YToKICBhbm5vdGF0aW9uczoKICAgIGt1YmVybmV0ZXMuaW8vZGVzY3JpcHRpb246IFRoZSBpbnN0YWxsLWNvbmZpZyBjb250ZW50IHVzZWQgdG8gY3JlYXRlIHRoZSBjbHVzdGVyLiAgVGhlCiAgICAgIGNsdXN0ZXIgY29uZmlndXJhdGlvbiBtYXkgaGF2ZSBldm9sdmVkIHNpbmNlIGluc3RhbGxhdGlvbiwgc28gY2hlY2sgY2x1c3RlcgogICAgICBjb25maWd1cmF0aW9uIHJlc291cmNlcyBkaXJlY3RseSBpZiB5b3UgYXJlIGludGVyZXN0ZWQgaW4gdGhlIGN1cnJlbnQgY2x1c3RlcgogICAgICBzdGF0ZS4KICBuYW1lOiBjbHVzdGVyLWNvbmZpZy12MQogIG5hbWVzcGFjZToga3ViZS1zeXN0ZW0K",
                            "verification": {}
                        },
                        "mode": 420
                    },
                    {
                        "group": {},
                        "overwrite": true,
                        "path": "/opt/openshift/manifests/cluster-dns-02-config.yml",
                        "user": {
                            "name": "root"
                        },
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,YXBpVmVyc2lvbjogY29uZmlnLm9wZW5zaGlmdC5pby92MQpraW5kOiBETlMKbWV0YWRhdGE6CiAgY3JlYXRpb25UaW1lc3RhbXA6IG51bGwKICBuYW1lOiBjbHVzdGVyCnNwZWM6CiAgYmFzZURvbWFpbjogcmVkcG9kLWF3cy1zbm8uZGV2Y2x1c3Rlci5vcGVuc2hpZnQuY29tCiAgcHJpdmF0ZVpvbmU6CiAgICB0YWdzOgogICAgICBOYW1lOiByZWRwb2QtYXdzLXNuby1uZzVzci1pbnQKICAgICAga3ViZXJuZXRlcy5pby9jbHVzdGVyL3JlZHBvZC1hd3Mtc25vLW5nNXNyOiBvd25lZAogIHB1YmxpY1pvbmU6CiAgICBpZDogWjNVUlk2VFdROTFLVlYKc3RhdHVzOiB7fQo=",
                            "verification": {}
                        },
                        "mode": 420
                    },
                    {
                        "group": {},
                        "overwrite": true,
                        "path": "/opt/openshift/manifests/cluster-infrastructure-02-config.yml",
                        "user": {
                            "name": "root"
                        },
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,YXBpVmVyc2lvbjogY29uZmlnLm9wZW5zaGlmdC5pby92MQpraW5kOiBJbmZyYXN0cnVjdHVyZQptZXRhZGF0YToKICBjcmVhdGlvblRpbWVzdGFtcDogbnVsbAogIG5hbWU6IGNsdXN0ZXIKc3BlYzoKICBjbG91ZENvbmZpZzoKICAgIG5hbWU6ICIiCiAgcGxhdGZvcm1TcGVjOgogICAgYXdzOiB7fQogICAgdHlwZTogQVdTCnN0YXR1czoKICBhcGlTZXJ2ZXJJbnRlcm5hbFVSSTogaHR0cHM6Ly9hcGktaW50LnJlZHBvZC1hd3Mtc25vLmRldmNsdXN0ZXIub3BlbnNoaWZ0LmNvbTo2NDQzCiAgYXBpU2VydmVyVVJMOiBodHRwczovL2FwaS5yZWRwb2QtYXdzLXNuby5kZXZjbHVzdGVyLm9wZW5zaGlmdC5jb206NjQ0MwogIGNvbnRyb2xQbGFuZVRvcG9sb2d5OiBTaW5nbGVSZXBsaWNhCiAgZXRjZERpc2NvdmVyeURvbWFpbjogIiIKICBpbmZyYXN0cnVjdHVyZU5hbWU6IHJlZHBvZC1hd3Mtc25vLW5nNXNyCiAgaW5mcmFzdHJ1Y3R1cmVUb3BvbG9neTogU2luZ2xlUmVwbGljYQogIHBsYXRmb3JtOiBBV1MKICBwbGF0Zm9ybVN0YXR1czoKICAgIGF3czoKICAgICAgcmVnaW9uOiB1cy13ZXN0LTIKICAgIHR5cGU6IEFXUwo=",
                            "verification": {}
                        },
                        "mode": 420
                    },
                    {
                        "group": {},
                        "overwrite": true,
                        "path": "/opt/openshift/manifests/cluster-ingress-02-config.yml",
                        "user": {
                            "name": "root"
                        },
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,YXBpVmVyc2lvbjogY29uZmlnLm9wZW5zaGlmdC5pby92MQpraW5kOiBJbmdyZXNzCm1ldGFkYXRhOgogIGNyZWF0aW9uVGltZXN0YW1wOiBudWxsCiAgbmFtZTogY2x1c3RlcgpzcGVjOgogIGRvbWFpbjogYXBwcy5yZWRwb2QtYXdzLXNuby5kZXZjbHVzdGVyLm9wZW5zaGlmdC5jb20KICBsb2FkQmFsYW5jZXI6CiAgICBwbGF0Zm9ybToKICAgICAgYXdzOgogICAgICAgIHR5cGU6IENsYXNzaWMKICAgICAgdHlwZTogQVdTCnN0YXR1czoKICBkZWZhdWx0UGxhY2VtZW50OiBXb3JrZXJzCg==",
                            "verification": {}
                        },
                        "mode": 420
                    },
                    {
                        "group": {},
                        "overwrite": true,
                        "path": "/opt/openshift/manifests/cluster-network-01-crd.yml",
                        "user": {
                            "name": "root"
                        },
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,",
                            "verification": {}
                        },
                        "mode": 420
                    },
                    {
                        "group": {},
                        "overwrite": true,
                        "path": "/opt/openshift/manifests/cluster-network-02-config.yml",
                        "user": {
                            "name": "root"
                        },
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,YXBpVmVyc2lvbjogY29uZmlnLm9wZW5zaGlmdC5pby92MQpraW5kOiBOZXR3b3JrCm1ldGFkYXRhOgogIGNyZWF0aW9uVGltZXN0YW1wOiBudWxsCiAgbmFtZTogY2x1c3RlcgpzcGVjOgogIGNsdXN0ZXJOZXR3b3JrOgogIC0gY2lkcjogMTAuMTI4LjAuMC8xNAogICAgaG9zdFByZWZpeDogMjMKICBleHRlcm5hbElQOgogICAgcG9saWN5OiB7fQogIG5ldHdvcmtUeXBlOiBPVk5LdWJlcm5ldGVzCiAgc2VydmljZU5ldHdvcms6CiAgLSAxNzIuMzAuMC4wLzE2CnN0YXR1czoge30K",
                            "verification": {}
                        },
                        "mode": 420
                    },
                    {
                        "group": {},
                        "overwrite": true,
                        "path": "/opt/openshift/manifests/cluster-proxy-01-config.yaml",
                        "user": {
                            "name": "root"
                        },
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,YXBpVmVyc2lvbjogY29uZmlnLm9wZW5zaGlmdC5pby92MQpraW5kOiBQcm94eQptZXRhZGF0YToKICBjcmVhdGlvblRpbWVzdGFtcDogbnVsbAogIG5hbWU6IGNsdXN0ZXIKc3BlYzoKICB0cnVzdGVkQ0E6CiAgICBuYW1lOiAiIgpzdGF0dXM6IHt9Cg==",
                            "verification": {}
                        },
                        "mode": 420
                    },
                    {
                        "group": {},
                        "overwrite": true,
                        "path": "/opt/openshift/manifests/cluster-scheduler-02-config.yml",
                        "user": {
                            "name": "root"
                        },
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,YXBpVmVyc2lvbjogY29uZmlnLm9wZW5zaGlmdC5pby92MQpraW5kOiBTY2hlZHVsZXIKbWV0YWRhdGE6CiAgY3JlYXRpb25UaW1lc3RhbXA6IG51bGwKICBuYW1lOiBjbHVzdGVyCnNwZWM6CiAgbWFzdGVyc1NjaGVkdWxhYmxlOiB0cnVlCiAgcG9saWN5OgogICAgbmFtZTogIiIKc3RhdHVzOiB7fQo=",
                            "verification": {}
                        },
                        "mode": 420
                    },
                    {
                        "group": {},
                        "overwrite": true,
                        "path": "/opt/openshift/manifests/cvo-overrides.yaml",
                        "user": {
                            "name": "root"
                        },
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,YXBpVmVyc2lvbjogY29uZmlnLm9wZW5zaGlmdC5pby92MQpraW5kOiBDbHVzdGVyVmVyc2lvbgptZXRhZGF0YToKICBuYW1lOiB2ZXJzaW9uCiAgbmFtZXNwYWNlOiBvcGVuc2hpZnQtY2x1c3Rlci12ZXJzaW9uCnNwZWM6CiAgY2hhbm5lbDogc3RhYmxlLTQuMTIKICBjbHVzdGVySUQ6IGNmYzY3NWQwLWY1YTItNDg2OS05ZGY3LTZmMzJiMzYzZGVmZAogIG92ZXJyaWRlczoKICAtIGdyb3VwOiAiIgogICAga2luZDogQ29uZmlnTWFwCiAgICBuYW1lOiBjbHVzdGVyLWNvbmZpZy12MQogICAgbmFtZXNwYWNlOiBrdWJlLXN5c3RlbQogICAgdW5tYW5hZ2VkOiB0cnVlCiAgLSBncm91cDogY29uZmlnLm9wZW5zaGlmdC5pbwogICAga2luZDogRE5TCiAgICBuYW1lOiBjbHVzdGVyCiAgICBuYW1lc3BhY2U6ICIiCiAgICB1bm1hbmFnZWQ6IHRydWUKICAtIGdyb3VwOiBjb25maWcub3BlbnNoaWZ0LmlvCiAgICBraW5kOiBJbmZyYXN0cnVjdHVyZQogICAgbmFtZTogY2x1c3RlcgogICAgbmFtZXNwYWNlOiAiIgogICAgdW5tYW5hZ2VkOiB0cnVlCiAgLSBncm91cDogY29uZmlnLm9wZW5zaGlmdC5pbwogICAga2luZDogSW5ncmVzcwogICAgbmFtZTogY2x1c3RlcgogICAgbmFtZXNwYWNlOiAiIgogICAgdW5tYW5hZ2VkOiB0cnVlCiAgLSBncm91cDogYXBpZXh0ZW5zaW9ucy5rOHMuaW8KICAgIGtpbmQ6IEN1c3RvbVJlc291cmNlRGVmaW5pdGlvbgogICAgbmFtZTogbmV0d29ya3MuY29uZmlnLm9wZW5zaGlmdC5pbwogICAgbmFtZXNwYWNlOiAiIgogICAgdW5tYW5hZ2VkOiB0cnVlCiAgLSBncm91cDogY29uZmlnLm9wZW5zaGlmdC5pbwogICAga2luZDogTmV0d29yawogICAgbmFtZTogY2x1c3RlcgogICAgbmFtZXNwYWNlOiAiIgogICAgdW5tYW5hZ2VkOiB0cnVlCiAgLSBncm91cDogY29uZmlnLm9wZW5zaGlmdC5pbwogICAga2luZDogUHJveHkKICAgIG5hbWU6IGNsdXN0ZXIKICAgIG5hbWVzcGFjZTogIiIKICAgIHVubWFuYWdlZDogdHJ1ZQogIC0gZ3JvdXA6IGNvbmZpZy5vcGVuc2hpZnQuaW8KICAgIGtpbmQ6IFNjaGVkdWxlcgogICAgbmFtZTogY2x1c3RlcgogICAgbmFtZXNwYWNlOiAiIgogICAgdW5tYW5hZ2VkOiB0cnVlCiAgLSBncm91cDogIiIKICAgIGtpbmQ6IFNlY3JldAogICAgbmFtZToga3ViZS1jbG91ZC1jZmcKICAgIG5hbWVzcGFjZToga3ViZS1zeXN0ZW0KICAgIHVubWFuYWdlZDogdHJ1ZQogIC0gZ3JvdXA6ICIiCiAgICBraW5kOiBDb25maWdNYXAKICAgIG5hbWU6IHJvb3QtY2EKICAgIG5hbWVzcGFjZToga3ViZS1zeXN0ZW0KICAgIHVubWFuYWdlZDogdHJ1ZQogIC0gZ3JvdXA6ICIiCiAgICBraW5kOiBTZWNyZXQKICAgIG5hbWU6IG1hY2hpbmUtY29uZmlnLXNlcnZlci10bHMKICAgIG5hbWVzcGFjZTogb3BlbnNoaWZ0LW1hY2hpbmUtY29uZmlnLW9wZXJhdG9yCiAgICB1bm1hbmFnZWQ6IHRydWUKICAtIGdyb3VwOiAiIgogICAga2luZDogU2VjcmV0CiAgICBuYW1lOiBwdWxsLXNlY3JldAogICAgbmFtZXNwYWNlOiBvcGVuc2hpZnQtY29uZmlnCiAgICB1bm1hbmFnZWQ6IHRydWUKICAtIGdyb3VwOiAiIgogICAga2luZDogU2VjcmV0CiAgICBuYW1lOiBhd3MtY3JlZHMKICAgIG5hbWVzcGFjZToga3ViZS1zeXN0ZW0KICAgIHVubWFuYWdlZDogdHJ1ZQogIC0gZ3JvdXA6ICIiCiAgICBraW5kOiBTZWNyZXQKICAgIG5hbWU6IGt1YmVhZG1pbgogICAgbmFtZXNwYWNlOiBrdWJlLXN5c3RlbQogICAgdW5tYW5hZ2VkOiB0cnVlCiAgLSBncm91cDogcmJhYy5hdXRob3JpemF0aW9uLms4cy5pbwogICAga2luZDogUm9sZQogICAgbmFtZTogYXdzLWNyZWRzLXNlY3JldC1yZWFkZXIKICAgIG5hbWVzcGFjZToga3ViZS1zeXN0ZW0KICAgIHVubWFuYWdlZDogdHJ1ZQogIC0gZ3JvdXA6ICIiCiAgICBraW5kOiBDb25maWdNYXAKICAgIG5hbWU6IG9wZW5zaGlmdC1pbnN0YWxsLW1hbmlmZXN0cwogICAgbmFtZXNwYWNlOiBvcGVuc2hpZnQtY29uZmlnCiAgICB1bm1hbmFnZWQ6IHRydWUK",
                            "verification": {}
                        },
                        "mode": 420
                    },
                    {
                        "group": {},
                        "overwrite": true,
                        "path": "/opt/openshift/manifests/kube-cloud-config.yaml",
                        "user": {
                            "name": "root"
                        },
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,YXBpVmVyc2lvbjogdjEKa2luZDogU2VjcmV0Cm1ldGFkYXRhOgogIG5hbWU6IGt1YmUtY2xvdWQtY2ZnCiAgbmFtZXNwYWNlOiBrdWJlLXN5c3RlbQp0eXBlOiBPcGFxdWUKZGF0YToKICBjb25maWc6ICIiCg==",
                            "verification": {}
                        },
                        "mode": 420
                    },
                    {
                        "group": {},
                        "overwrite": true,
                        "path": "/opt/openshift/manifests/kube-system-configmap-root-ca.yaml",
                        "user": {
                            "name": "root"
                        },
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,YXBpVmVyc2lvbjogdjEKa2luZDogQ29uZmlnTWFwCm1ldGFkYXRhOgogIG5hbWU6IHJvb3QtY2EKICBuYW1lc3BhY2U6IGt1YmUtc3lzdGVtCmRhdGE6CiAgY2EuY3J0OiB8CiAgICAtLS0tLUJFR0lOIENFUlRJRklDQVRFLS0tLS0KICAgIE1JSURFRENDQWZpZ0F3SUJBZ0lJVTVpTWZlTEFzMFV3RFFZSktvWklodmNOQVFFTEJRQXdKakVTTUJBR0ExVUUKICAgIEN4TUpiM0JsYm5Ob2FXWjBNUkF3RGdZRFZRUURFd2R5YjI5MExXTmhNQjRYRFRJek1EUXhPREV6TURnd09Wb1gKICAgIERUTXpNRFF4TlRFek1EZ3dPVm93SmpFU01CQUdBMVVFQ3hNSmIzQmxibk5vYVdaME1SQXdEZ1lEVlFRREV3ZHkKICAgIGIyOTBMV05oTUlJQklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQ0FRRUFzYTV3YzRSdzZRQWEKICAgIFdPcjBWWDk1RmNMK1g5cVo1bW0vMjcvVHdra1U3NGM4dUdPd013Y1RjM3NGTFlsUGt5dlo3bVVjUE9Qbmc1anIKICAgIC83Uk94bksxTDBQMVYyRFlDSnRrdzVzYzFvOXR4NGhVSEgxMnVvVzRSb2YyQjJBVE5sdHZFTmxuUEVuV1NqVHkKICAgIGdEZjRTc25HaXJ5d1NYZE1SZHAzK0N2R2VjQUFmZWw5OHVQdEYzcWd5ZnRScEM2Ri8zSmVUTEQ4Z29CQ0I1aWkKICAgIFRrNjAyWDZBTDVDK1dJUTJ5RUd1SE9LQzhZWFo0cDljUXQvS0hDR0svYlFFMXNURVRCdmJxUjNLU05ycFNTM1QKICAgIHgwVkFhTGQ3TnFCUUJJUWFrd1RrM3QrN3NpSlZkV2VsNlVmMTV5a2JvMkNSR1pxcUoxYy9hWEo1d1NBSFozUW4KICAgIGZ6cnJJRHR5SlFJREFRQUJvMEl3UURBT0JnTlZIUThCQWY4RUJBTUNBcVF3RHdZRFZSMFRBUUgvQkFVd0F3RUIKICAgIC96QWRCZ05WSFE0RUZnUVVlNGt5VHhNRTJLcVV2ZjduN0NlOEpiNU9id2t3RFFZSktvWklodmNOQVFFTEJRQUQKICAgIGdnRUJBSHFRZ0tkb2VVS0N0ZWZNNnRTYjBUb3B0K01Rc0tjR3IvUkVtaUJSL0xEQWFjbWQ5dlZZQzJTSUpCTVMKICAgIFdwcjlSS2lreENqMTlFSDdsL1FrbGJ6a0VTcS96TUlYTmpaU3NHUTFJZWpBQ0RSdVVDZzFTS21sZHlBeCtHemYKICAgIDNzWnlUVlBsejRTd0NKRzNwZzBuMitlY0F0MTRkUFRIbnBFemJTd1RHSCtZeGpzVDd2Q2sxMzFEejhOQm9rQksKICAgIHJDNXRpQ0hYYnQwWTJwcHV6Z2NpVDg5eUhiUk5YbVR1d21keG5VRm1oYjBzUERYUnhXbVFLSTRseGtEZVNUUFUKICAgIG91blZwbWt4SlAzWW9KcXJCZFZ6TW5GZmJtR2RvL3M4N3J4Zng1cnRrcVVTOUVtbDh5N25kR1pKTXIyWDBsd0YKICAgIHJmaTE3MUZuNldkUGRCZEVkSFQ0NEh1S0lEbz0KICAgIC0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0KICAgIAo=",
                            "verification": {}
                        },
                        "mode": 420
                    },
                    {
                        "group": {},
                        "overwrite": true,
                        "path": "/opt/openshift/manifests/machine-config-server-tls-secret.yaml",
                        "user": {
                            "name": "root"
                        },
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,YXBpVmVyc2lvbjogdjEKa2luZDogU2VjcmV0Cm1ldGFkYXRhOgogIG5hbWU6IG1hY2hpbmUtY29uZmlnLXNlcnZlci10bHMKICBuYW1lc3BhY2U6IG9wZW5zaGlmdC1tYWNoaW5lLWNvbmZpZy1vcGVyYXRvcgp0eXBlOiBPcGFxdWUKZGF0YToKICB0bHMuY3J0OiBMUzB0TFMxQ1JVZEpUaUJEUlZKVVNVWkpRMEZVUlMwdExTMHRDazFKU1VSamFrTkRRV3h4WjBGM1NVSkJaMGxKUVhocU9IazBiV1JqYWtsM1JGRlpTa3R2V2tsb2RtTk9RVkZGVEVKUlFYZEtha1ZUVFVKQlIwRXhWVVVLUTNoTlNtSXpRbXhpYms1dllWZGFNRTFTUVhkRVoxbEVWbEZSUkVWM1pIbGlNamt3VEZkT2FFMUNORmhFVkVsNlRVUlJlRTlFUlhwTlJHZDNUMVp2V0FwRVZFMTZUVVJSZUU1VVJYcE5SR2QzVDFadmQwcDZSV3hOUTAxSFFURlZSVUY0VFdOak0yeDZaRWRXZEU5dE1XaFpNbWh3WW0xVmRGa3lPWFZhYld4dUNreFlUbXhqYmxwc1kycERRMEZUU1hkRVVWbEtTMjlhU1doMlkwNUJVVVZDUWxGQlJHZG5SVkJCUkVORFFWRnZRMmRuUlVKQlVHVnNZVGhwVlZkb1dtZ0tkSFZwYTNnM1RWSlFWamc1YTNaMVVrMXFObXg2Ym1rellVSjNhbHBSV1hRdmNEVnpVMlJtVUU1aGFscElZbWROTUhkU1RuUkNXR3BGYkhaR1prcExTQXBxWTFkR1MyOU9TM0JGUVd4alZUTjRhMnRyYnpSdGRtWnZXRWRvYUZCSVlUWXZja3RtZVhabldISkVOelZ0YlZaYWVqUlpOVXgzYWs5RFEzTk1RMUF2Q2tOV1kycG9kV0pzUnpGV1VUbE5iUzlqVEdjd1pFTTBTR1JxUVVOclZWcHlkWG80Tm5aV1ZUZDNTV1J3TVdObU9FeGtNVU5QVVZRMlEzZDNRekp5VldrS1JGcG5hRzkwYUZWMGRWWlhXVVZhWkVNMVpXRlhWMXBOY1RkdWNGVnBkQzl3ZVhCS1JVa3hlbFZVVURsTlMydFpjMFJLUjBaa09FVm1SMDEzZUdGRmJ3cExlR2N5UWxGSmNHWkRkM1UzYUcxQ1pIRlRRVzV4Tmk5dmVHMXpOVUZHTmxodE9XTk5UbkpSUW1wWU9XRjBVVUppUlZJelMwbGpTbWRhVldaSGNGYzVDa2xMYWxoU0wyMUVhR0U0UTBGM1JVRkJZVTlDYjJwRFFtNTZRVlJDWjA1V1NGTlZSVVJFUVV0Q1oyZHlRbWRGUmtKUlkwUkJWRUZOUW1kT1ZraFNUVUlLUVdZNFJVRnFRVUZOUWpCSFFURlZaRVJuVVZkQ1FsRTRUVzVZYVRKS1VWVnJlVXBZT0hSeE4ybENaak5zSzJWMk9FUkJaa0puVGxaSVUwMUZSMFJCVndwblFsSTNhVlJLVUVWM1ZGbHhjRk01TDNWbWMwbzNkMngyYXpWMlExUkJOa0puVGxaSVVrVkZUWHBCZUdkcE9XaGpSMnQwWVZjMU1FeHVTbXhhU0VKMkNscERNV2hrTTAxMFl6STFka3h0VW14a2JVNXpaRmhPTUZwWVNYVmlNMEpzWW01T2IyRlhXakJNYlU1MllsUkJUa0puYTNGb2EybEhPWGN3UWtGUmMwWUtRVUZQUTBGUlJVRlhOV0p3YUdwQmRVZzRZVzFwTHk5b2VXSmhXbmxWVnpacVRYSTNPWGx2WkRnNWIwaEpSR1JSZDJkRVYyZFVla0VyYUVOeWRVSnZjUW8zY21kbE4zVmlPV2xGTXpaemIyeFNNSFJwY1RKeVdXcHhhRTF1Y0ZSamNHdE9RblJrVTJoSE5FSnlNR1JDUkc1MFZGWXJiREkxWkdoQ1JtTjFMMEYwQ214R0swcDBhRWsyWnpOMGJXNVRabmtyTjA5MmJVMTZNWGxJV0ZaclREbHRWR1YwV21VMFVETm1WR0ZqVUN0eU5EUTBhR0UwYUZOSVUyeENPSGR6YzNRS09ITkdZV05GU3pjdk5tYzNkbGhhVGxkV1VVUXdiQ3Q2VWpkRmMxcFZaa1ZwT0VWb09XSkxXR2hqT0dsNFozTmxlV1pYTjJoaVFrcEJLMUJWWjBWdlZBb3ZTbU5WV205cFpGa3ZiR1JwV0cwd1JFSmtiVWxTUlZCTlYwcEtjR2xHVm1wa2NIQnpiMGxwWjNKVWVEUXJZbUpNYlVFM2NsaGtNbmxvTjNaWk5pdFdDbWRtTXpaRWJESnpUbkZvY1hGaGF6aEtjblEzVTNGd01sQjBUMnhNUVQwOUNpMHRMUzB0UlU1RUlFTkZVbFJKUmtsRFFWUkZMUzB0TFMwSwogIHRscy5rZXk6IExTMHRMUzFDUlVkSlRpQlNVMEVnVUZKSlZrRlVSU0JMUlZrdExTMHRMUXBOU1VsRmNHZEpRa0ZCUzBOQlVVVkJPVFpXY25sS1VtRkdiVWN5Tmt0VVNITjRSVGxZZWpKVEt6VkZlVkJ4V0U5bFRHUnZTRU5PYkVKcE15dHViWGhLQ2pFNE9ERnhUbXRrZFVGNlZFSkZNakJHWlUxVFZ6aFdPR3R2WlU1NFdWVnhaekJ4YTFGRFZuaFVaa2RUVTFOcWFXRTVLMmhqWVVkRk9HUnljaXR6Y0M4S1N5dENaWE5RZG0xaFdsWnVVR2hxYTNaRFRUUkpTM2R6U1M4NFNsWjVUMGMxZFZWaVZsWkVNSGxpT1hkMVJGSXdUR2RrTWsxQlMxSlNiWFUzVUhweE9RcFdWSFpCYURKdVZuZ3ZkM1F6VlVrMVFsQnZURVJCVEdGMFUwbE9iVU5IYVRKR1V6STFWbHBuVW13d1RHdzFjRnBhYTNseWRXVnNVMHN6SzI1TGEydFJDbXBZVGxKTkx6QjNjVkpwZDAxcldWWXpkMUk0V1hwRVJtOVRaM0pIUkZsR1FXbHNPRXhETjNWSFdVWXljRWxEWlhKeUsycEhZWHByUVZod1pXSXhkM2NLTW5SQlIwNW1NWEV4UVVaelVraGpiMmgzYlVKc1VqaGhiR0l3WjNGT1pFZ3JXVTlHY25kSlJFRlJRVUpCYjBsQ1FWRkVUVFUzUTJoRVF6ZHRTMllyTHdwNWRXWTFaME5CTlhRMlluZFNRbXhCZDAxNGQwVmpSWGN4ZUVJeE5XOVRkemRKVkVVM1ozaEhTWGs1TVRWQ1lVNXFkMWRqZG00cmIwMHlWalZyU0U0M0NuQlZNbWg1U21KVVFrdG5WbWd2V1RCV2IwaFRTUzh4WmtkbVpqUmlaREp1WVhadFEyZHRiVmhKZWxwdk1HeG1WV2cyUW5KRmRrVlZRalpIVjFCNVYzQUtWbWh1S3pOcU5scG1lSGx5SzFwNk5ISldOR0l6T0hsdmRVNWpabGhqSzJ4TE9HbzRaRTh3WVhOdmVFdFZVbmR6T1VsaWFtbDVjblZrWTNGeE9IZHViUW8zVkRKSmNXMDFaSE5XYmtScFEzUXpUMWtyVDJ0UU4wUXpjbEZPTVVzeFluRlNORGR3ZUdFeGRIUXdkRFJDYURSMVprMDRTamxRTDBsblIwOUthR1JXQ2xaVVRHeGxZVE5NUW5Vd2NrZEdUbUpVVW5NeWNtSjNiMnRwYUdsQlJIUlZaVk5zUjFoUmNFbzBWamx2WVhFclVHcDZVWFZYZWpGRlRGSndhSFZFYmtrS1ZFRnFNV05EZFZKQmIwZENRVkJyYlZaTlFrRTRMMGxPZEd4NVNYaEthV0ZQVldJeU1GWjVlbTh6ZEhwd1MzVjZhVzF1UnpoUlpHSXZWVXBQU0ZkQmN3cEljV1JFTUVSbloyaEJURVZXYUdGaU1WQkpWSGRaUzJVcldEbE1RV2hyY2pCWGRFaElVVzV0ZVVrNFZHdzRTMUV3ZW5oT1lXTTBLM2xYUzNWeFNFZHdDblZrUmk5eFNteGxSMGhVYjNWR1YwRlBkV3M1ZHpOM1RsRk9hWFpXWmtwcWNuTmhPRFprVjJwWlZVSTFhSFZSYUdkaFRUVXlUelJxUVc5SFFrRlFOVEFLWjJONVZtbHdibWRSU0hkV2RUSkhVa2RSYTA5UEwwMXZPV2RZVkRGUmJXVjNlRWMxVWtsbmFXUmtiaXRMTUhoMmQxZDJTMjVrYmxoc05ubEtUakZFYkFweGNrZDNNalZQVm5VcmEzRm5jREJxZUZkTVREQm5aelIwTjFsUk5VOUVjWEF2ZFhKeVFuZFROM3A0WnpaemRuRkJPVUZxTm0xc1RtbEVMMVZYVW1ONUNteE5SMVF6UldSaFZtcDFWeXRWZGk5c2NHbENMemxFTVhCb2NGTk9VMU01TmpFMVNrdG9WVVpCYjBkQ1FVcDNVRFpaYUdaYWVUWlpZbXRGTmtoclRXc0tXRE53V0VGcU9Wb3JjVFZMWlhKNFpXZDJXRTByYnpsTmFrc3ZjWFJFV0ZscVVEZHBNa1p6THpaMFF6ZzBUblpoYTNGR2NuaEpkVzlRYzI5QlZuWnJhZ3BZUmsxb1VWVjRRbVJwUmtFcldTdFVTR1V5YnpRdmVXWnJXU3Q0Y21Gek9EQkVjM1JDY0ZCRGRpOXJSRU5QZG5SdVdHdGhRMmRtTjFkVlNXaFhaVzE0Q21wUWJrcDJXVXh1YVhaU1V6WjVObU15YkVrck1uVlpXRUZ2UjBKQlRsSmlSM3BDU0RWUlNVTlhkelo2WmtWM2VYTmlaMU12ZDJ0NGRVSkRiemwyVVhVS1dWSklZbXRyZDJsd2ExRnNhMHhGWWpJd2NFRk5TR2h5UzNCUE9XVkZTekZUVkRBclNXbEpURXB0VjNwTGIzQkhTR2xqVkdaMFpVcHlhR1oxUWxoWFNBcHZSMWQ1YjJSS1ZVbDNRVFo1Wm10bU9XTnhlRVJ4UzFCTFFsSk5MMWxWVlcwemVuRkVlalJzVFVNMVVFVjNURkEzVkdsa01WbGliMWMxVlM4MGExbHNDbXRrWVVGTVVGTmFRVzlIUWtGTlJYcGtjMlpqTlhCNmRrNW1WazFtUWpkNE5uWjBkRlI1ZFhjdmIxUk5lVGRCV25CVFJtaDJLMlo0YVRkTlExTmhVR3dLTldkSFFXZGFXSEJ2TkV4SlVVVjZWVTQxVkVoV1oycGpjRlpJTXpGMlpuaHFVMUpoVFRSMWVGZFNkWGszUlhKMUsxaGpaR05KUzBGeGRETjNVV2N2YlFwamRsZDFXVVJrZW1KaU5TdGxkVEZUYnpab2NYY3ZWWEJWUzBacmRrdHRRMjByVHl0RlMxaFJjVzlwUm5SdlVsY3lPVmxxYUZGSE1Rb3RMUzB0TFVWT1JDQlNVMEVnVUZKSlZrRlVSU0JMUlZrdExTMHRMUW89Cg==",
                            "verification": {}
                        },
                        "mode": 420
                    },
                    {
                        "group": {},
                        "overwrite": true,
                        "path": "/opt/openshift/manifests/openshift-config-secret-pull-secret.yaml",
                        "user": {
                            "name": "root"
                        },
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,YXBpVmVyc2lvbjogdjEKa2luZDogU2VjcmV0CnR5cGU6IGt1YmVybmV0ZXMuaW8vZG9ja2VyY29uZmlnanNvbgptZXRhZGF0YToKICBuYW1lc3BhY2U6IG9wZW5zaGlmdC1jb25maWcKICBuYW1lOiBwdWxsLXNlY3JldApkYXRhOgogIC5kb2NrZXJjb25maWdqc29uOiBleUpoZFhSb2N5STZleUpqYkc5MVpDNXZjR1Z1YzJocFpuUXVZMjl0SWpwN0ltRjFkR2dpT2lKaU0wSnNZbTVPYjJGWFdqQk1XRXBzWWtkV2FHTXlWWFJhUjFZeVN6STVhbUpXT1doWk1rNXNZek5PWmxsNldtbE5hbVJvVFdwQk5VMTZTVEZPUkZrMFdrZEZlVTVIVG1oT2JWVXhXbTFGTkUxSFVYZFBWR2MyVlRCd1dWSkVVVEpTTURWTlRqQlpOVlpHUVhoT01XeEpUV3BDU1UweFVsRlNSRXBoVFZWT1dsWlZOVnBWVlVwSVV6QjBTazE2UVRKTk1FWlNUMVZWTVZKV1l6QlJWRVpNVld4a1RsVlVVa1pXVmxWM1RsRTlQU0lzSW1WdFlXbHNJam9pYW5WbVlXVnliV0ZBY21Wa2FHRjBMbU52YlNKOUxDSnhkV0Y1TG1sdklqcDdJbUYxZEdnaU9pSmlNMEpzWW01T2IyRlhXakJNV0Vwc1lrZFdhR015VlhSYVIxWXlTekk1YW1KV09XaFpNazVzWXpOT1psbDZXbWxOYW1Sb1RXcEJOVTE2U1RGT1JGazBXa2RGZVU1SFRtaE9iVlV4V20xRk5FMUhVWGRQVkdjMlZUQndXVkpFVVRKU01EVk5UakJaTlZaR1FYaE9NV3hKVFdwQ1NVMHhVbEZTUkVwaFRWVk9XbFpWTlZwVlZVcElVekIwU2sxNlFUSk5NRVpTVDFWVk1WSldZekJSVkVaTVZXeGtUbFZVVWtaV1ZsVjNUbEU5UFNJc0ltVnRZV2xzSWpvaWFuVm1ZV1Z5YldGQWNtVmthR0YwTG1OdmJTSjlMQ0p5WldkcGMzUnllUzVqYjI1dVpXTjBMbkpsWkdoaGRDNWpiMjBpT25zaVlYVjBhQ0k2SW1aSVZtOVplVEYzWWpJNWMweFhWbXhhUkZWNVdtcGpNVXhVYTNsTlIxRjBUa1JvYWsxNU1XbE5NbFpvVEZST2EwNUhSbXhQVkUweVQwUkNhazE2Y0d4bFZYQnZXV3RrYW1GVk9YQlRiRTVXWld4V05GUlhiRXRQVXpWc1pWVndObHBHWkVwaFZUbHdVMWhrVUZJeFZqWlVXSEJIWVRGd2NWSlVUbUZTUm10M1ZGWlNjMkV4YkZWVGJYQk9UV3hyTVZSVlpFWmxSVEZ4VVcxc1QxSkdWWHBYVms1TFQxTTFZV1ZUTVZKWGF6Z3pWRlk1ZFZZelpHRlRTRkUwVTFSS2NHTnJOWFZOYTBadllqQmFlVlV4WnpCVGJrSnpZekZzVFdOV09USlVNazVFVEZkWmVVNHhWbk5qVkU0MlRtdG9lazR3ZUhkT00yUm1WMnhSTWxJd05XOWhTRnBXWXpOU01HVkdhelJoVkdRelpVWnNkMDV1V2tkalJVcHlaV3huZUU5R2JFWmpNREZOWXpOc05sZHViRFZVUjJ3d1dXMVpkRlV5UlRWV1NGbzJUVEZ3YlZsdVFsTldiVlpIVkZoc2VHTldRbkJTYm1oTVVqSXhaazVYTVRCYVZHUTJaR3hDU1dOSVVraFpiRGxHVVZSc1FtSlZOVmhOYm5CUlVUTm5kRlpGTVhKVVZHdzJZa2RvZDFveVRrZGpWRVl6VGxkb2NXUldiSEZTZWs0ellXeG9jV0V3VW05YWFsbzFWMjFrTldSVmN6Rk1WMFpMVG5wa2QxUkhkRzVOVmtaQ1VrYzBlRTB5VFhoWFNHaFNVVEI0YTFaclRrWlRWVEYwVkVjMU5WTlViSGxhYkU1WFdERkdkVk5yTVV4bGEzQXpUVWhrVW1KVVFreGtWR2hTVkRKT1NGZ3llRTFpTUd4bVlsY3hNazFXV21aVFJsRjVXREJPVWxSdWJ6QmFWbkF3Vm01Tk1WVkhPREJoYlRCNlZVVjBXV0pzVW05a2FsWkxZVzVTUWxFeWRFdGlWbVJJWkZoc1dsVnFWVFZaYlVwVVRVZDRNMkZzT1ZWV1NFVXdXakphUTFscmRERmlWM2cxVFVSR1lWcHVTbTVQV0ZwaFVraGtRMkpYVW1wYU1uZDZWREpHTkZFeVRuVllNMEpzWW14YU1sUnVTbFJVTTBweFQxaG9hR1ZIVGpKV1JYTXpaR3RuTWs5VlJtaGxibkJyWkVWNE5sVlVUbVpWTUd3MFVqRnNla3hYVm14TmEwMTVUV3c1UldSVVZYZFJXRUV5V1RGa2Exa3dPVmhUZWxwVVZVUnNjVk5GVWt0U2FsWTFVMWN4VUdWWVVrSlpNVTVLWlcwNWJsUkdhRWhhUmxKVFVUTkNiVnBWU2taWGJGcEhWbTVPUm1KVldqSllNamxFVmpOYVVWVkdaRWRsYXpWSVpGZFNiMUpVWkZkWk1rWm9XREpTUTFRd2J6QmpNakZOWVZSWk5WTnJVbWxsUlhSSlUxVjNNV0pJVWxGT2JFa3lZMGQ0VjFSSGNHMWhNVTR5VjJ0U1RVNTZSblpXYlc4MFltNW9jazFyZUZOV2FtTjRZbFpDZUZWR2FHOVNWRVpyWVVkbmRHUldRbFJOTVVaTFpWY3dNbUZYVVRWVFZXUnhUVWhhYm1ORVJrWlpia0p5VTFoS2RVOVVaSGhaTVVKVFRVWm9ZVmRHVVRWWGEyUnJVVEU1Y1dSSGJGWmlWelZ0WTBkV1VGRldaSGhQV0hCdFkyMXNjRmRyTlZWYU1sWktZbFUxTm1GV1pHdFdWMDVLVEZaQ2JHUlhXbUZOU0doT1RtdDRkMVJHVmxwV2JFbDNUa2N4TlZWc1FuRmFWRTV0VGtoc1dsVlljR1pNVkVJeFZqQmtlazFyU2xaa1JYUnhWMUU5UFNJc0ltVnRZV2xzSWpvaWFuVm1ZV1Z5YldGQWNtVmthR0YwTG1OdmJTSjlMQ0p5WldkcGMzUnllUzV5WldSb1lYUXVhVzhpT25zaVlYVjBhQ0k2SW1aSVZtOVplVEYzWWpJNWMweFhWbXhhUkZWNVdtcGpNVXhVYTNsTlIxRjBUa1JvYWsxNU1XbE5NbFpvVEZST2EwNUhSbXhQVkUweVQwUkNhazE2Y0d4bFZYQnZXV3RrYW1GVk9YQlRiRTVXWld4V05GUlhiRXRQVXpWc1pWVndObHBHWkVwaFZUbHdVMWhrVUZJeFZqWlVXSEJIWVRGd2NWSlVUbUZTUm10M1ZGWlNjMkV4YkZWVGJYQk9UV3hyTVZSVlpFWmxSVEZ4VVcxc1QxSkdWWHBYVms1TFQxTTFZV1ZUTVZKWGF6Z3pWRlk1ZFZZelpHRlRTRkUwVTFSS2NHTnJOWFZOYTBadllqQmFlVlV4WnpCVGJrSnpZekZzVFdOV09USlVNazVFVEZkWmVVNHhWbk5qVkU0MlRtdG9lazR3ZUhkT00yUm1WMnhSTWxJd05XOWhTRnBXWXpOU01HVkdhelJoVkdRelpVWnNkMDV1V2tkalJVcHlaV3huZUU5R2JFWmpNREZOWXpOc05sZHViRFZVUjJ3d1dXMVpkRlV5UlRWV1NGbzJUVEZ3YlZsdVFsTldiVlpIVkZoc2VHTldRbkJTYm1oTVVqSXhaazVYTVRCYVZHUTJaR3hDU1dOSVVraFpiRGxHVVZSc1FtSlZOVmhOYm5CUlVUTm5kRlpGTVhKVVZHdzJZa2RvZDFveVRrZGpWRVl6VGxkb2NXUldiSEZTZWs0ellXeG9jV0V3VW05YWFsbzFWMjFrTldSVmN6Rk1WMFpMVG5wa2QxUkhkRzVOVmtaQ1VrYzBlRTB5VFhoWFNHaFNVVEI0YTFaclRrWlRWVEYwVkVjMU5WTlViSGxhYkU1WFdERkdkVk5yTVV4bGEzQXpUVWhrVW1KVVFreGtWR2hTVkRKT1NGZ3llRTFpTUd4bVlsY3hNazFXV21aVFJsRjVXREJPVWxSdWJ6QmFWbkF3Vm01Tk1WVkhPREJoYlRCNlZVVjBXV0pzVW05a2FsWkxZVzVTUWxFeWRFdGlWbVJJWkZoc1dsVnFWVFZaYlVwVVRVZDRNMkZzT1ZWV1NFVXdXakphUTFscmRERmlWM2cxVFVSR1lWcHVTbTVQV0ZwaFVraGtRMkpYVW1wYU1uZDZWREpHTkZFeVRuVllNMEpzWW14YU1sUnVTbFJVTTBweFQxaG9hR1ZIVGpKV1JYTXpaR3RuTWs5VlJtaGxibkJyWkVWNE5sVlVUbVpWTUd3MFVqRnNla3hYVm14TmEwMTVUV3c1UldSVVZYZFJXRUV5V1RGa2Exa3dPVmhUZWxwVVZVUnNjVk5GVWt0U2FsWTFVMWN4VUdWWVVrSlpNVTVLWlcwNWJsUkdhRWhhUmxKVFVUTkNiVnBWU2taWGJGcEhWbTVPUm1KVldqSllNamxFVmpOYVVWVkdaRWRsYXpWSVpGZFNiMUpVWkZkWk1rWm9XREpTUTFRd2J6QmpNakZOWVZSWk5WTnJVbWxsUlhSSlUxVjNNV0pJVWxGT2JFa3lZMGQ0VjFSSGNHMWhNVTR5VjJ0U1RVNTZSblpXYlc4MFltNW9jazFyZUZOV2FtTjRZbFpDZUZWR2FHOVNWRVpyWVVkbmRHUldRbFJOTVVaTFpWY3dNbUZYVVRWVFZXUnhUVWhhYm1ORVJrWlpia0p5VTFoS2RVOVVaSGhaTVVKVFRVWm9ZVmRHVVRWWGEyUnJVVEU1Y1dSSGJGWmlWelZ0WTBkV1VGRldaSGhQV0hCdFkyMXNjRmRyTlZWYU1sWktZbFUxTm1GV1pHdFdWMDVLVEZaQ2JHUlhXbUZOU0doT1RtdDRkMVJHVmxwV2JFbDNUa2N4TlZWc1FuRmFWRTV0VGtoc1dsVlljR1pNVkVJeFZqQmtlazFyU2xaa1JYUnhWMUU5UFNJc0ltVnRZV2xzSWpvaWFuVm1ZV1Z5YldGQWNtVmthR0YwTG1OdmJTSjlmWDA9Cg==",
                            "verification": {}
                        },
                        "mode": 420
                    },
                    {
                        "group": {},
                        "overwrite": true,
                        "path": "/opt/openshift/openshift/99_cloud-creds-secret.yaml",
                        "user": {
                            "name": "root"
                        },
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,a2luZDogU2VjcmV0CmFwaVZlcnNpb246IHYxCm1ldGFkYXRhOgogIG5hbWVzcGFjZToga3ViZS1zeXN0ZW0KICBuYW1lOiBhd3MtY3JlZHMKZGF0YToKICBhd3NfYWNjZXNzX2tleV9pZDogUVV0SlFWUTFWRXMwV2s5T1JVY3lUMUZKTWtRPQogIGF3c19zZWNyZXRfYWNjZXNzX2tleTogV1ZRMmFuZG9SSEJCVW5CbGNrbG9NV3cxWkd4TmFtbE1lV3RyVUdWdkt6SmhjbTVyUzNaYUx3PT0K",
                            "verification": {}
                        },
                        "mode": 420
                    },
                    {
                        "group": {},
                        "overwrite": true,
                        "path": "/opt/openshift/openshift/99_kubeadmin-password-secret.yaml",
                        "user": {
                            "name": "root"
                        },
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,a2luZDogU2VjcmV0CmFwaVZlcnNpb246IHYxCm1ldGFkYXRhOgogIG5hbWVzcGFjZToga3ViZS1zeXN0ZW0KICBuYW1lOiBrdWJlYWRtaW4KZGF0YToKICBrdWJlYWRtaW46IEpESmhKREV3SkhWbldETTVibXhUZEhOU1FqRkxlVFpqY0VvM1VYVnZORkUzUmpKWEwxTjRUMDFrV0hWNVducEZhV2MwYXpZMWNFNXpZa3RUCg==",
                            "verification": {}
                        },
                        "mode": 420
                    },
                    {
                        "group": {},
                        "overwrite": true,
                        "path": "/opt/openshift/openshift/99_role-cloud-creds-secret-reader.yaml",
                        "user": {
                            "name": "root"
                        },
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,a2luZDogUm9sZQphcGlWZXJzaW9uOiByYmFjLmF1dGhvcml6YXRpb24uazhzLmlvL3YxCm1ldGFkYXRhOgogIG5hbWVzcGFjZToga3ViZS1zeXN0ZW0KICBuYW1lOiBhd3MtY3JlZHMtc2VjcmV0LXJlYWRlcgpydWxlczoKLSBhcGlHcm91cHM6IFsiIl0KICByZXNvdXJjZXM6IFsic2VjcmV0cyJdCiAgcmVzb3VyY2VOYW1lczogWyJhd3MtY3JlZHMiXQogIHZlcmJzOiBbImdldCJdCg==",
                            "verification": {}
                        },
                        "mode": 420
                    },
                    {
                        "group": {},
                        "overwrite": true,
                        "path": "/opt/openshift/openshift/openshift-install-manifests.yaml",
                        "user": {
                            "name": "root"
                        },
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,YXBpVmVyc2lvbjogdjEKZGF0YToKICBpbnZva2VyOiB1c2VyCiAgdmVyc2lvbjogdjQuMTIuMApraW5kOiBDb25maWdNYXAKbWV0YWRhdGE6CiAgY3JlYXRpb25UaW1lc3RhbXA6IG51bGwKICBuYW1lOiBvcGVuc2hpZnQtaW5zdGFsbC1tYW5pZmVzdHMKICBuYW1lc3BhY2U6IG9wZW5zaGlmdC1jb25maWcK",
                            "verification": {}
                        },
                        "mode": 420
                    },
                    {
                        "group": {},
                        "overwrite": true,
                        "path": "/opt/openshift/openshift/99_openshift-cluster-api_master-user-data-secret.yaml",
                        "user": {
                            "name": "root"
                        },
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,YXBpVmVyc2lvbjogdjEKa2luZDogU2VjcmV0Cm1ldGFkYXRhOgogIG5hbWU6IG1hc3Rlci11c2VyLWRhdGEKICBuYW1lc3BhY2U6IG9wZW5zaGlmdC1tYWNoaW5lLWFwaQp0eXBlOiBPcGFxdWUKZGF0YToKICBkaXNhYmxlVGVtcGxhdGluZzogImRISjFaUW89IgogIHVzZXJEYXRhOiBleUpwWjI1cGRHbHZiaUk2ZXlKamIyNW1hV2NpT25zaWJXVnlaMlVpT2x0N0luTnZkWEpqWlNJNkltaDBkSEJ6T2k4dllYQnBMV2x1ZEM1eVpXUndiMlF0WVhkekxYTnVieTVrWlhaamJIVnpkR1Z5TG05d1pXNXphR2xtZEM1amIyMDZNakkyTWpNdlkyOXVabWxuTDIxaGMzUmxjaUo5WFgwc0luTmxZM1Z5YVhSNUlqcDdJblJzY3lJNmV5SmpaWEowYVdacFkyRjBaVUYxZEdodmNtbDBhV1Z6SWpwYmV5SnpiM1Z5WTJVaU9pSmtZWFJoT25SbGVIUXZjR3hoYVc0N1kyaGhjbk5sZEQxMWRHWXRPRHRpWVhObE5qUXNURk13ZEV4VE1VTlNWV1JLVkdsQ1JGSldTbFZUVlZwS1VUQkdWVkpUTUhSTVV6QjBRMnN4U2xOVlVrWlNSVTVFVVZkYWNGb3dSak5UVlVwQ1dqQnNTbFpVVm5CVVYxcHNWRVZHZWsxR1ZqTlNSa1phVTJ0MGRsZHJiRzlrYlU1UFVWWkdSbFJGU2xKUldHUkxZV3RXVkZSVlNrSlNNRVY0VmxWVlMxRXphRTVUYlVsNlVXMTRhV0pyTlhaWlZtUmhUVVV4VTFGWVpFVmFNV3hGVm14R1VsSkZWak5hU0d4cFRXcHJkMVJHWkU5aFJURkRUa1pvUlZaRmJEWlVWVkpTWlVVNVJWSlljRTVTUjJRelZERmFkbGRCY0VWV1JURTJWRlZTVW1WRk5WVlNXSEJPVWtka00xUXhXblprTUhCeFVsWk9UbEZyUmtoUlZFWldVbFZPTkZSVmNHbE5NRXB6V1cwMVQySXlSbGhYYWtKT1ZXdEdNMUpIWkZwU1JscFNWVlZTUm1ReVVqVkRiVWw1VDFSQ1RWWXdOVzlVVld4S1VXdHNjVkZWTlVOYU1uUjRZVWQwY0ZKNmJETk5SVXBDVlZWV1IxRlZSbEJSTUVaU1QwVkdUbE5WYkVOUk1tUk1VVEJHVWxKVlJucFpWRll6V1hwU1UyUjZXbEpSVjBWTFZqQTVlVTFHV2xsUFZGWkhXVEIzY2xkRWJIaFhhbFowWWxNNGVVNTVPVlZrTW5SeVZsUmpNRmw2YURGU01Ea3pWRmhrYWxaSFRYcGpNRnBOVjFkNFVXRXpiREpYYW1SMFZsZE9VVlF4UW5WYWVsWnhZMmR2ZGs0eFNsQmxSelZNVFZWM2QxVkVSbGROYTFKYVVUQndNR0V6WXpGak1rMTRZbnBzTUdWRVVtOVdWV2hKVFZSS01XSXhZekJWYlRsdFRXdEplVkZXVWs5aVNGSXlVbFUxYzJKc1FrWmliR1JVWVd4U05VTnRaRVZhYWxKVVl6STFTR0ZZU2pWa01VNVpXa1V4VTFwSVFYcExNRTR5VWpKV2FsRlZSbTFhVjNjMVQwaFdVV1JGV1hwalYyUTFXbTVTVTJORlRUSlNhVGg2VTIxV1ZWUkZVVFJhTWpsRFVUQkpNV0ZYYTB0V1IzTXlUVVJLV1U1clJrMU9WVTF5VmpCc1VrMXViRVpTTTFaSlZEQjBSRTlHYkZsWGFsSjNUMWRPVW1SRE9VeFRSVTVJVTNrNWFWVlZWWGhqTVZKR1ZrVktNbGx1UmxOTk1IUlVWRzVLZDFVeFRYcFdRWEEwVFVaYVFsbFZlR3RPTURWNFVXeEdRMU5XUm1oaE0yUlZZWHBPTUV0NlpIcGhWWEJYV2taa2JHSkVXbFphYWtVeFpWZDBhV0o2U2tSVmEyUmhZMWhHUzAxWFRYWlpWbWhMVGxoa1ZGRlZhR0ZOTVVaMVEyMWFObU51U2twU1NGSTFVMnhHU2xKRlJsSlJWVXAyVFVWc00xVlZVa0pVTUVwdVZHeGFTVlZVYUVOUlYxazBVbFZLUWxSVlRrSmpWa1l6VWtoa1dsSkdXbE5OUmxKQ1ZWVm5kbEZyUmxaa01FWXpVbFZKUzB3emNFSmFSVXB1Vkd4YVNWVlVVa1pTYldSU1ZsZFZNR0V6YkZWbFJURkdUV3QwZUZaWVdtMU9NalF6VVRKVk5GTnRTVEZVTWtvellUTmtSVlZXYkV0VE1qbGhVMWRvTWxrd05VSlZWVlpOVVd4R1FsSkJjRzVhTUZaRFVWVm9lRlZYWkV4YVJ6bHNWbFYwUkdSSFZtMVVWRm93VlRKSmQxWkhPWGRrUTNST1ZWaE9URmt3WkhsTU1VcEdZbGRzUTFWcE9VMVNSVVpvV1RJeGEwOVlXbGRYVlUxNVZUQnNTMUZyTVZSRGJHUjNZMnBzVTFNeWJISmxSVTV4VFZSc1JsTkVaSE5NTVVaeVlrZEtObUV3VmxSalV6azJWRlZzV1ZSdGNHRlZNMDVJVlZSR1NscFhjRUpSTUZKVFpGWldSRnA2UmxSVE1qRnpXa2hzUW1WRGRFaGxiVmxMVFROT1lXVldVbGRWUjNnMlRrWk9NMUV3Y0VoTk0wSnVUVWMwZVVzeVZtcFJXRkY0VGtkU1VWWkZhSFZqUlZZMldXeE9NMVpGWkVsTE1XdzBZVzVPVlU0eldrUmhla1Y2VFZWU05rOUZOVU5pTW5SRFUzZHdlVkY2VmpCaFZVNUpWMGRLTUUxR2EzbGpTRUl4Wlcxa2FtRldVVFJQV0d4SldXeEtUMWRITVZWa1dHUjBXa2hvZFZaVlduUmhSMGwzWXpGQ1JWZEdTalJXTWpGU1V6QnJNR0pJYUhKU1IxWlVWa1pDVmtOdE9URmliRnAzWWxkME5GTnNRWHBYVnpsTFkxaEtRMXBHV2paVVZ6VkhXbTFLZEZJeVVuWk1NMDAwVGpOS05GcHVaekZqYmxKeVkxWldWRTlWVm5SaVJHZzFUakkxYTFJeGNFdFVXRWw1VjBSQ2MyUXdXVXRqYlZwd1RWUmplRkp0TkRKV01sSlJXa1ZLYTFKWFVrbFdSRkV3VTBoV1RGTlZVblpRVVc5MFRGTXdkRXhWVms5U1EwSkVVbFpLVlZOVldrcFJNRVpWVWxNd2RFeFRNSFJEWnowOUluMWRmWDBzSW5abGNuTnBiMjRpT2lJekxqSXVNQ0o5ZlE9PQo=",
                            "verification": {}
                        },
                        "mode": 420
                    },
                    {
                        "group": {},
                        "overwrite": true,
                        "path": "/opt/openshift/openshift/99_openshift-machineconfig_99-master-ssh.yaml",
                        "user": {
                            "name": "root"
                        },
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,YXBpVmVyc2lvbjogbWFjaGluZWNvbmZpZ3VyYXRpb24ub3BlbnNoaWZ0LmlvL3YxCmtpbmQ6IE1hY2hpbmVDb25maWcKbWV0YWRhdGE6CiAgY3JlYXRpb25UaW1lc3RhbXA6IG51bGwKICBsYWJlbHM6CiAgICBtYWNoaW5lY29uZmlndXJhdGlvbi5vcGVuc2hpZnQuaW8vcm9sZTogbWFzdGVyCiAgbmFtZTogOTktbWFzdGVyLXNzaApzcGVjOgogIGNvbmZpZzoKICAgIGlnbml0aW9uOgogICAgICB2ZXJzaW9uOiAzLjIuMAogICAgcGFzc3dkOgogICAgICB1c2VyczoKICAgICAgLSBuYW1lOiBjb3JlCiAgICAgICAgc3NoQXV0aG9yaXplZEtleXM6CiAgICAgICAgLSB8CiAgICAgICAgICBzc2gtcnNhIEFBQUFCM056YUMxeWMyRUFBQUFEQVFBQkFBQUJnUURVckR1NlUrNC9QeFBZSDBneVBUaTVvbnFleWVxbXdnS1hlaDhxVGVlNlhKM1piazB1SnRNYmIweDBWcmtacWFvOCs4cmF6K0ZPVCtBYmJFamp4TWIxK0M0UUxDNkVtRHJDTVRMc1dpSSt5SGx4SCtnOUZPNXYrZzVoVVFlNk10ekhkd2pEMjlrMHpDNUFEaDJ4V1djejBud1o5Ym9yaFlVRjNYYVJCQjZ5TjJEZUIrSGV4L3pON2dldWVWeEl0OHphZHF0YUVxdmdGcmpQUDljWGppano0K1F3T2psVStPR1lwOUlZc25NbUdDNTVBRlBlRWhLaUZXRzFEb0VmbHMzREJKYVdFM0U4ZW1DakVQNDlxOVpNd0pEQWYyUmdrS0pieWxxOGMyYi9SNEpRRUJQN1lxRFV6TWtZamYrQkg4dTlhZWdnTDVvR1RKVUtrSlZHb1FaUXlqQ1lnODk5bFZUeDVhUHd3cFpUdE1jMHRBWnBld01WYzJWcGFpR0xWWVJuTXFMd0JHVnZlRDVpTVU0aXJYRGRZV0dCMU0zQkxaSWZOR3hmV3JicEtQQ3RsMit0OERGNUZEUU1NdG9RZHpvcDlzVTJaM1RKc05JM2lQUDJqakE3NGp5OWFaSk13cXp6V095R29NR3RTc2VjZFd4WWFlTVNSeXNIZEJUR0Myaz0gZmFlcm1hbmpAZmVkb3JhCiAgZXh0ZW5zaW9uczogbnVsbAogIGZpcHM6IGZhbHNlCiAga2VybmVsQXJndW1lbnRzOiBudWxsCiAga2VybmVsVHlwZTogIiIKICBvc0ltYWdlVVJMOiAiIgo=",
                            "verification": {}
                        },
                        "mode": 420
                    },
                    {
                        "group": {},
                        "overwrite": true,
                        "path": "/opt/openshift/openshift/99_openshift-cluster-api_master-machines-0.yaml",
                        "user": {
                            "name": "root"
                        },
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,YXBpVmVyc2lvbjogbWFjaGluZS5vcGVuc2hpZnQuaW8vdjFiZXRhMQpraW5kOiBNYWNoaW5lCm1ldGFkYXRhOgogIGNyZWF0aW9uVGltZXN0YW1wOiBudWxsCiAgbGFiZWxzOgogICAgbWFjaGluZS5vcGVuc2hpZnQuaW8vY2x1c3Rlci1hcGktY2x1c3RlcjogcmVkcG9kLWF3cy1zbm8tbmc1c3IKICAgIG1hY2hpbmUub3BlbnNoaWZ0LmlvL2NsdXN0ZXItYXBpLW1hY2hpbmUtcm9sZTogbWFzdGVyCiAgICBtYWNoaW5lLm9wZW5zaGlmdC5pby9jbHVzdGVyLWFwaS1tYWNoaW5lLXR5cGU6IG1hc3RlcgogIG5hbWU6IHJlZHBvZC1hd3Mtc25vLW5nNXNyLW1hc3Rlci0wCiAgbmFtZXNwYWNlOiBvcGVuc2hpZnQtbWFjaGluZS1hcGkKc3BlYzoKICBsaWZlY3ljbGVIb29rczoge30KICBtZXRhZGF0YToge30KICBwcm92aWRlclNwZWM6CiAgICB2YWx1ZToKICAgICAgYW1pOgogICAgICAgIGlkOiBhbWktMDBmYjRkOTY4ODZmNTVhMzEKICAgICAgYXBpVmVyc2lvbjogbWFjaGluZS5vcGVuc2hpZnQuaW8vdjFiZXRhMQogICAgICBibG9ja0RldmljZXM6CiAgICAgIC0gZWJzOgogICAgICAgICAgZW5jcnlwdGVkOiB0cnVlCiAgICAgICAgICBpb3BzOiAwCiAgICAgICAgICBrbXNLZXk6CiAgICAgICAgICAgIGFybjogIiIKICAgICAgICAgIHZvbHVtZVNpemU6IDY0CiAgICAgICAgICB2b2x1bWVUeXBlOiBncDMKICAgICAgY3JlZGVudGlhbHNTZWNyZXQ6CiAgICAgICAgbmFtZTogYXdzLWNsb3VkLWNyZWRlbnRpYWxzCiAgICAgIGRldmljZUluZGV4OiAwCiAgICAgIGlhbUluc3RhbmNlUHJvZmlsZToKICAgICAgICBpZDogcmVkcG9kLWF3cy1zbm8tbmc1c3ItbWFzdGVyLXByb2ZpbGUKICAgICAgaW5zdGFuY2VUeXBlOiByNS4yeGxhcmdlCiAgICAgIGtpbmQ6IEFXU01hY2hpbmVQcm92aWRlckNvbmZpZwogICAgICBsb2FkQmFsYW5jZXJzOgogICAgICAtIG5hbWU6IHJlZHBvZC1hd3Mtc25vLW5nNXNyLWludAogICAgICAgIHR5cGU6IG5ldHdvcmsKICAgICAgLSBuYW1lOiByZWRwb2QtYXdzLXNuby1uZzVzci1leHQKICAgICAgICB0eXBlOiBuZXR3b3JrCiAgICAgIG1ldGFkYXRhOgogICAgICAgIGNyZWF0aW9uVGltZXN0YW1wOiBudWxsCiAgICAgIG1ldGFkYXRhU2VydmljZU9wdGlvbnM6IHt9CiAgICAgIHBsYWNlbWVudDoKICAgICAgICBhdmFpbGFiaWxpdHlab25lOiB1cy13ZXN0LTJhCiAgICAgICAgcmVnaW9uOiB1cy13ZXN0LTIKICAgICAgc2VjdXJpdHlHcm91cHM6CiAgICAgIC0gZmlsdGVyczoKICAgICAgICAtIG5hbWU6IHRhZzpOYW1lCiAgICAgICAgICB2YWx1ZXM6CiAgICAgICAgICAtIHJlZHBvZC1hd3Mtc25vLW5nNXNyLW1hc3Rlci1zZwogICAgICBzdWJuZXQ6CiAgICAgICAgZmlsdGVyczoKICAgICAgICAtIG5hbWU6IHRhZzpOYW1lCiAgICAgICAgICB2YWx1ZXM6CiAgICAgICAgICAtIHJlZHBvZC1hd3Mtc25vLW5nNXNyLXByaXZhdGUtdXMtd2VzdC0yYQogICAgICB0YWdzOgogICAgICAtIG5hbWU6IGt1YmVybmV0ZXMuaW8vY2x1c3Rlci9yZWRwb2QtYXdzLXNuby1uZzVzcgogICAgICAgIHZhbHVlOiBvd25lZAogICAgICB1c2VyRGF0YVNlY3JldDoKICAgICAgICBuYW1lOiBtYXN0ZXItdXNlci1kYXRhCnN0YXR1czoge30K",
                            "verification": {}
                        },
                        "mode": 420
                    },
                    {
                        "group": {},
                        "overwrite": true,
                        "path": "/opt/openshift/openshift/99_openshift-cluster-api_worker-user-data-secret.yaml",
                        "user": {
                            "name": "root"
                        },
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,YXBpVmVyc2lvbjogdjEKa2luZDogU2VjcmV0Cm1ldGFkYXRhOgogIG5hbWU6IHdvcmtlci11c2VyLWRhdGEKICBuYW1lc3BhY2U6IG9wZW5zaGlmdC1tYWNoaW5lLWFwaQp0eXBlOiBPcGFxdWUKZGF0YToKICBkaXNhYmxlVGVtcGxhdGluZzogImRISjFaUW89IgogIHVzZXJEYXRhOiBleUpwWjI1cGRHbHZiaUk2ZXlKamIyNW1hV2NpT25zaWJXVnlaMlVpT2x0N0luTnZkWEpqWlNJNkltaDBkSEJ6T2k4dllYQnBMV2x1ZEM1eVpXUndiMlF0WVhkekxYTnVieTVrWlhaamJIVnpkR1Z5TG05d1pXNXphR2xtZEM1amIyMDZNakkyTWpNdlkyOXVabWxuTDNkdmNtdGxjaUo5WFgwc0luTmxZM1Z5YVhSNUlqcDdJblJzY3lJNmV5SmpaWEowYVdacFkyRjBaVUYxZEdodmNtbDBhV1Z6SWpwYmV5SnpiM1Z5WTJVaU9pSmtZWFJoT25SbGVIUXZjR3hoYVc0N1kyaGhjbk5sZEQxMWRHWXRPRHRpWVhObE5qUXNURk13ZEV4VE1VTlNWV1JLVkdsQ1JGSldTbFZUVlZwS1VUQkdWVkpUTUhSTVV6QjBRMnN4U2xOVlVrWlNSVTVFVVZkYWNGb3dSak5UVlVwQ1dqQnNTbFpVVm5CVVYxcHNWRVZHZWsxR1ZqTlNSa1phVTJ0MGRsZHJiRzlrYlU1UFVWWkdSbFJGU2xKUldHUkxZV3RXVkZSVlNrSlNNRVY0VmxWVlMxRXphRTVUYlVsNlVXMTRhV0pyTlhaWlZtUmhUVVV4VTFGWVpFVmFNV3hGVm14R1VsSkZWak5hU0d4cFRXcHJkMVJHWkU5aFJURkRUa1pvUlZaRmJEWlVWVkpTWlVVNVJWSlljRTVTUjJRelZERmFkbGRCY0VWV1JURTJWRlZTVW1WRk5WVlNXSEJPVWtka00xUXhXblprTUhCeFVsWk9UbEZyUmtoUlZFWldVbFZPTkZSVmNHbE5NRXB6V1cwMVQySXlSbGhYYWtKT1ZXdEdNMUpIWkZwU1JscFNWVlZTUm1ReVVqVkRiVWw1VDFSQ1RWWXdOVzlVVld4S1VXdHNjVkZWTlVOYU1uUjRZVWQwY0ZKNmJETk5SVXBDVlZWV1IxRlZSbEJSTUVaU1QwVkdUbE5WYkVOUk1tUk1VVEJHVWxKVlJucFpWRll6V1hwU1UyUjZXbEpSVjBWTFZqQTVlVTFHV2xsUFZGWkhXVEIzY2xkRWJIaFhhbFowWWxNNGVVNTVPVlZrTW5SeVZsUmpNRmw2YURGU01Ea3pWRmhrYWxaSFRYcGpNRnBOVjFkNFVXRXpiREpYYW1SMFZsZE9VVlF4UW5WYWVsWnhZMmR2ZGs0eFNsQmxSelZNVFZWM2QxVkVSbGROYTFKYVVUQndNR0V6WXpGak1rMTRZbnBzTUdWRVVtOVdWV2hKVFZSS01XSXhZekJWYlRsdFRXdEplVkZXVWs5aVNGSXlVbFUxYzJKc1FrWmliR1JVWVd4U05VTnRaRVZhYWxKVVl6STFTR0ZZU2pWa01VNVpXa1V4VTFwSVFYcExNRTR5VWpKV2FsRlZSbTFhVjNjMVQwaFdVV1JGV1hwalYyUTFXbTVTVTJORlRUSlNhVGg2VTIxV1ZWUkZVVFJhTWpsRFVUQkpNV0ZYYTB0V1IzTXlUVVJLV1U1clJrMU9WVTF5VmpCc1VrMXViRVpTTTFaSlZEQjBSRTlHYkZsWGFsSjNUMWRPVW1SRE9VeFRSVTVJVTNrNWFWVlZWWGhqTVZKR1ZrVktNbGx1UmxOTk1IUlVWRzVLZDFVeFRYcFdRWEEwVFVaYVFsbFZlR3RPTURWNFVXeEdRMU5XUm1oaE0yUlZZWHBPTUV0NlpIcGhWWEJYV2taa2JHSkVXbFphYWtVeFpWZDBhV0o2U2tSVmEyUmhZMWhHUzAxWFRYWlpWbWhMVGxoa1ZGRlZhR0ZOTVVaMVEyMWFObU51U2twU1NGSTFVMnhHU2xKRlJsSlJWVXAyVFVWc00xVlZVa0pVTUVwdVZHeGFTVlZVYUVOUlYxazBVbFZLUWxSVlRrSmpWa1l6VWtoa1dsSkdXbE5OUmxKQ1ZWVm5kbEZyUmxaa01FWXpVbFZKUzB3emNFSmFSVXB1Vkd4YVNWVlVVa1pTYldSU1ZsZFZNR0V6YkZWbFJURkdUV3QwZUZaWVdtMU9NalF6VVRKVk5GTnRTVEZVTWtvellUTmtSVlZXYkV0VE1qbGhVMWRvTWxrd05VSlZWVlpOVVd4R1FsSkJjRzVhTUZaRFVWVm9lRlZYWkV4YVJ6bHNWbFYwUkdSSFZtMVVWRm93VlRKSmQxWkhPWGRrUTNST1ZWaE9URmt3WkhsTU1VcEdZbGRzUTFWcE9VMVNSVVpvV1RJeGEwOVlXbGRYVlUxNVZUQnNTMUZyTVZSRGJHUjNZMnBzVTFNeWJISmxSVTV4VFZSc1JsTkVaSE5NTVVaeVlrZEtObUV3VmxSalV6azJWRlZzV1ZSdGNHRlZNMDVJVlZSR1NscFhjRUpSTUZKVFpGWldSRnA2UmxSVE1qRnpXa2hzUW1WRGRFaGxiVmxMVFROT1lXVldVbGRWUjNnMlRrWk9NMUV3Y0VoTk0wSnVUVWMwZVVzeVZtcFJXRkY0VGtkU1VWWkZhSFZqUlZZMldXeE9NMVpGWkVsTE1XdzBZVzVPVlU0eldrUmhla1Y2VFZWU05rOUZOVU5pTW5SRFUzZHdlVkY2VmpCaFZVNUpWMGRLTUUxR2EzbGpTRUl4Wlcxa2FtRldVVFJQV0d4SldXeEtUMWRITVZWa1dHUjBXa2hvZFZaVlduUmhSMGwzWXpGQ1JWZEdTalJXTWpGU1V6QnJNR0pJYUhKU1IxWlVWa1pDVmtOdE9URmliRnAzWWxkME5GTnNRWHBYVnpsTFkxaEtRMXBHV2paVVZ6VkhXbTFLZEZJeVVuWk1NMDAwVGpOS05GcHVaekZqYmxKeVkxWldWRTlWVm5SaVJHZzFUakkxYTFJeGNFdFVXRWw1VjBSQ2MyUXdXVXRqYlZwd1RWUmplRkp0TkRKV01sSlJXa1ZLYTFKWFVrbFdSRkV3VTBoV1RGTlZVblpRVVc5MFRGTXdkRXhWVms5U1EwSkVVbFpLVlZOVldrcFJNRVpWVWxNd2RFeFRNSFJEWnowOUluMWRmWDBzSW5abGNuTnBiMjRpT2lJekxqSXVNQ0o5ZlE9PQo=",
                            "verification": {}
                        },
                        "mode": 420
                    },
                    {
                        "group": {},
                        "overwrite": true,
                        "path": "/opt/openshift/openshift/99_openshift-machineconfig_99-worker-ssh.yaml",
                        "user": {
                            "name": "root"
                        },
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,YXBpVmVyc2lvbjogbWFjaGluZWNvbmZpZ3VyYXRpb24ub3BlbnNoaWZ0LmlvL3YxCmtpbmQ6IE1hY2hpbmVDb25maWcKbWV0YWRhdGE6CiAgY3JlYXRpb25UaW1lc3RhbXA6IG51bGwKICBsYWJlbHM6CiAgICBtYWNoaW5lY29uZmlndXJhdGlvbi5vcGVuc2hpZnQuaW8vcm9sZTogd29ya2VyCiAgbmFtZTogOTktd29ya2VyLXNzaApzcGVjOgogIGNvbmZpZzoKICAgIGlnbml0aW9uOgogICAgICB2ZXJzaW9uOiAzLjIuMAogICAgcGFzc3dkOgogICAgICB1c2VyczoKICAgICAgLSBuYW1lOiBjb3JlCiAgICAgICAgc3NoQXV0aG9yaXplZEtleXM6CiAgICAgICAgLSB8CiAgICAgICAgICBzc2gtcnNhIEFBQUFCM056YUMxeWMyRUFBQUFEQVFBQkFBQUJnUURVckR1NlUrNC9QeFBZSDBneVBUaTVvbnFleWVxbXdnS1hlaDhxVGVlNlhKM1piazB1SnRNYmIweDBWcmtacWFvOCs4cmF6K0ZPVCtBYmJFamp4TWIxK0M0UUxDNkVtRHJDTVRMc1dpSSt5SGx4SCtnOUZPNXYrZzVoVVFlNk10ekhkd2pEMjlrMHpDNUFEaDJ4V1djejBud1o5Ym9yaFlVRjNYYVJCQjZ5TjJEZUIrSGV4L3pON2dldWVWeEl0OHphZHF0YUVxdmdGcmpQUDljWGppano0K1F3T2psVStPR1lwOUlZc25NbUdDNTVBRlBlRWhLaUZXRzFEb0VmbHMzREJKYVdFM0U4ZW1DakVQNDlxOVpNd0pEQWYyUmdrS0pieWxxOGMyYi9SNEpRRUJQN1lxRFV6TWtZamYrQkg4dTlhZWdnTDVvR1RKVUtrSlZHb1FaUXlqQ1lnODk5bFZUeDVhUHd3cFpUdE1jMHRBWnBld01WYzJWcGFpR0xWWVJuTXFMd0JHVnZlRDVpTVU0aXJYRGRZV0dCMU0zQkxaSWZOR3hmV3JicEtQQ3RsMit0OERGNUZEUU1NdG9RZHpvcDlzVTJaM1RKc05JM2lQUDJqakE3NGp5OWFaSk13cXp6V095R29NR3RTc2VjZFd4WWFlTVNSeXNIZEJUR0Myaz0gZmFlcm1hbmpAZmVkb3JhCiAgZXh0ZW5zaW9uczogbnVsbAogIGZpcHM6IGZhbHNlCiAga2VybmVsQXJndW1lbnRzOiBudWxsCiAga2VybmVsVHlwZTogIiIKICBvc0ltYWdlVVJMOiAiIgo=",
                            "verification": {}
                        },
                        "mode": 420
                    },
                    {
                        "group": {},
                        "overwrite": true,
                        "path": "/opt/openshift/openshift/99_openshift-cluster-api_worker-machineset-0.yaml",
                        "user": {
                            "name": "root"
                        },
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,YXBpVmVyc2lvbjogbWFjaGluZS5vcGVuc2hpZnQuaW8vdjFiZXRhMQpraW5kOiBNYWNoaW5lU2V0Cm1ldGFkYXRhOgogIGNyZWF0aW9uVGltZXN0YW1wOiBudWxsCiAgbGFiZWxzOgogICAgbWFjaGluZS5vcGVuc2hpZnQuaW8vY2x1c3Rlci1hcGktY2x1c3RlcjogcmVkcG9kLWF3cy1zbm8tbmc1c3IKICBuYW1lOiByZWRwb2QtYXdzLXNuby1uZzVzci13b3JrZXItdXMtd2VzdC0yYQogIG5hbWVzcGFjZTogb3BlbnNoaWZ0LW1hY2hpbmUtYXBpCnNwZWM6CiAgcmVwbGljYXM6IDAKICBzZWxlY3RvcjoKICAgIG1hdGNoTGFiZWxzOgogICAgICBtYWNoaW5lLm9wZW5zaGlmdC5pby9jbHVzdGVyLWFwaS1jbHVzdGVyOiByZWRwb2QtYXdzLXNuby1uZzVzcgogICAgICBtYWNoaW5lLm9wZW5zaGlmdC5pby9jbHVzdGVyLWFwaS1tYWNoaW5lc2V0OiByZWRwb2QtYXdzLXNuby1uZzVzci13b3JrZXItdXMtd2VzdC0yYQogIHRlbXBsYXRlOgogICAgbWV0YWRhdGE6CiAgICAgIGxhYmVsczoKICAgICAgICBtYWNoaW5lLm9wZW5zaGlmdC5pby9jbHVzdGVyLWFwaS1jbHVzdGVyOiByZWRwb2QtYXdzLXNuby1uZzVzcgogICAgICAgIG1hY2hpbmUub3BlbnNoaWZ0LmlvL2NsdXN0ZXItYXBpLW1hY2hpbmUtcm9sZTogd29ya2VyCiAgICAgICAgbWFjaGluZS5vcGVuc2hpZnQuaW8vY2x1c3Rlci1hcGktbWFjaGluZS10eXBlOiB3b3JrZXIKICAgICAgICBtYWNoaW5lLm9wZW5zaGlmdC5pby9jbHVzdGVyLWFwaS1tYWNoaW5lc2V0OiByZWRwb2QtYXdzLXNuby1uZzVzci13b3JrZXItdXMtd2VzdC0yYQogICAgc3BlYzoKICAgICAgbGlmZWN5Y2xlSG9va3M6IHt9CiAgICAgIG1ldGFkYXRhOiB7fQogICAgICBwcm92aWRlclNwZWM6CiAgICAgICAgdmFsdWU6CiAgICAgICAgICBhbWk6CiAgICAgICAgICAgIGlkOiBhbWktMDBmYjRkOTY4ODZmNTVhMzEKICAgICAgICAgIGFwaVZlcnNpb246IG1hY2hpbmUub3BlbnNoaWZ0LmlvL3YxYmV0YTEKICAgICAgICAgIGJsb2NrRGV2aWNlczoKICAgICAgICAgIC0gZWJzOgogICAgICAgICAgICAgIGVuY3J5cHRlZDogdHJ1ZQogICAgICAgICAgICAgIGlvcHM6IDAKICAgICAgICAgICAgICBrbXNLZXk6CiAgICAgICAgICAgICAgICBhcm46ICIiCiAgICAgICAgICAgICAgdm9sdW1lU2l6ZTogMTIwCiAgICAgICAgICAgICAgdm9sdW1lVHlwZTogZ3AzCiAgICAgICAgICBjcmVkZW50aWFsc1NlY3JldDoKICAgICAgICAgICAgbmFtZTogYXdzLWNsb3VkLWNyZWRlbnRpYWxzCiAgICAgICAgICBkZXZpY2VJbmRleDogMAogICAgICAgICAgaWFtSW5zdGFuY2VQcm9maWxlOgogICAgICAgICAgICBpZDogcmVkcG9kLWF3cy1zbm8tbmc1c3Itd29ya2VyLXByb2ZpbGUKICAgICAgICAgIGluc3RhbmNlVHlwZTogbTZpLnhsYXJnZQogICAgICAgICAga2luZDogQVdTTWFjaGluZVByb3ZpZGVyQ29uZmlnCiAgICAgICAgICBtZXRhZGF0YToKICAgICAgICAgICAgY3JlYXRpb25UaW1lc3RhbXA6IG51bGwKICAgICAgICAgIG1ldGFkYXRhU2VydmljZU9wdGlvbnM6IHt9CiAgICAgICAgICBwbGFjZW1lbnQ6CiAgICAgICAgICAgIGF2YWlsYWJpbGl0eVpvbmU6IHVzLXdlc3QtMmEKICAgICAgICAgICAgcmVnaW9uOiB1cy13ZXN0LTIKICAgICAgICAgIHNlY3VyaXR5R3JvdXBzOgogICAgICAgICAgLSBmaWx0ZXJzOgogICAgICAgICAgICAtIG5hbWU6IHRhZzpOYW1lCiAgICAgICAgICAgICAgdmFsdWVzOgogICAgICAgICAgICAgIC0gcmVkcG9kLWF3cy1zbm8tbmc1c3Itd29ya2VyLXNnCiAgICAgICAgICBzdWJuZXQ6CiAgICAgICAgICAgIGZpbHRlcnM6CiAgICAgICAgICAgIC0gbmFtZTogdGFnOk5hbWUKICAgICAgICAgICAgICB2YWx1ZXM6CiAgICAgICAgICAgICAgLSByZWRwb2QtYXdzLXNuby1uZzVzci1wcml2YXRlLXVzLXdlc3QtMmEKICAgICAgICAgIHRhZ3M6CiAgICAgICAgICAtIG5hbWU6IGt1YmVybmV0ZXMuaW8vY2x1c3Rlci9yZWRwb2QtYXdzLXNuby1uZzVzcgogICAgICAgICAgICB2YWx1ZTogb3duZWQKICAgICAgICAgIHVzZXJEYXRhU2VjcmV0OgogICAgICAgICAgICBuYW1lOiB3b3JrZXItdXNlci1kYXRhCnN0YXR1czoKICByZXBsaWNhczogMAo=",
                            "verification": {}
                        },
                        "mode": 420
                    },
                    {
                        "group": {},
                        "overwrite": true,
                        "path": "/opt/openshift/openshift/99_openshift-cluster-api_worker-machineset-1.yaml",
                        "user": {
                            "name": "root"
                        },
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,YXBpVmVyc2lvbjogbWFjaGluZS5vcGVuc2hpZnQuaW8vdjFiZXRhMQpraW5kOiBNYWNoaW5lU2V0Cm1ldGFkYXRhOgogIGNyZWF0aW9uVGltZXN0YW1wOiBudWxsCiAgbGFiZWxzOgogICAgbWFjaGluZS5vcGVuc2hpZnQuaW8vY2x1c3Rlci1hcGktY2x1c3RlcjogcmVkcG9kLWF3cy1zbm8tbmc1c3IKICBuYW1lOiByZWRwb2QtYXdzLXNuby1uZzVzci13b3JrZXItdXMtd2VzdC0yYgogIG5hbWVzcGFjZTogb3BlbnNoaWZ0LW1hY2hpbmUtYXBpCnNwZWM6CiAgcmVwbGljYXM6IDAKICBzZWxlY3RvcjoKICAgIG1hdGNoTGFiZWxzOgogICAgICBtYWNoaW5lLm9wZW5zaGlmdC5pby9jbHVzdGVyLWFwaS1jbHVzdGVyOiByZWRwb2QtYXdzLXNuby1uZzVzcgogICAgICBtYWNoaW5lLm9wZW5zaGlmdC5pby9jbHVzdGVyLWFwaS1tYWNoaW5lc2V0OiByZWRwb2QtYXdzLXNuby1uZzVzci13b3JrZXItdXMtd2VzdC0yYgogIHRlbXBsYXRlOgogICAgbWV0YWRhdGE6CiAgICAgIGxhYmVsczoKICAgICAgICBtYWNoaW5lLm9wZW5zaGlmdC5pby9jbHVzdGVyLWFwaS1jbHVzdGVyOiByZWRwb2QtYXdzLXNuby1uZzVzcgogICAgICAgIG1hY2hpbmUub3BlbnNoaWZ0LmlvL2NsdXN0ZXItYXBpLW1hY2hpbmUtcm9sZTogd29ya2VyCiAgICAgICAgbWFjaGluZS5vcGVuc2hpZnQuaW8vY2x1c3Rlci1hcGktbWFjaGluZS10eXBlOiB3b3JrZXIKICAgICAgICBtYWNoaW5lLm9wZW5zaGlmdC5pby9jbHVzdGVyLWFwaS1tYWNoaW5lc2V0OiByZWRwb2QtYXdzLXNuby1uZzVzci13b3JrZXItdXMtd2VzdC0yYgogICAgc3BlYzoKICAgICAgbGlmZWN5Y2xlSG9va3M6IHt9CiAgICAgIG1ldGFkYXRhOiB7fQogICAgICBwcm92aWRlclNwZWM6CiAgICAgICAgdmFsdWU6CiAgICAgICAgICBhbWk6CiAgICAgICAgICAgIGlkOiBhbWktMDBmYjRkOTY4ODZmNTVhMzEKICAgICAgICAgIGFwaVZlcnNpb246IG1hY2hpbmUub3BlbnNoaWZ0LmlvL3YxYmV0YTEKICAgICAgICAgIGJsb2NrRGV2aWNlczoKICAgICAgICAgIC0gZWJzOgogICAgICAgICAgICAgIGVuY3J5cHRlZDogdHJ1ZQogICAgICAgICAgICAgIGlvcHM6IDAKICAgICAgICAgICAgICBrbXNLZXk6CiAgICAgICAgICAgICAgICBhcm46ICIiCiAgICAgICAgICAgICAgdm9sdW1lU2l6ZTogMTIwCiAgICAgICAgICAgICAgdm9sdW1lVHlwZTogZ3AzCiAgICAgICAgICBjcmVkZW50aWFsc1NlY3JldDoKICAgICAgICAgICAgbmFtZTogYXdzLWNsb3VkLWNyZWRlbnRpYWxzCiAgICAgICAgICBkZXZpY2VJbmRleDogMAogICAgICAgICAgaWFtSW5zdGFuY2VQcm9maWxlOgogICAgICAgICAgICBpZDogcmVkcG9kLWF3cy1zbm8tbmc1c3Itd29ya2VyLXByb2ZpbGUKICAgICAgICAgIGluc3RhbmNlVHlwZTogbTZpLnhsYXJnZQogICAgICAgICAga2luZDogQVdTTWFjaGluZVByb3ZpZGVyQ29uZmlnCiAgICAgICAgICBtZXRhZGF0YToKICAgICAgICAgICAgY3JlYXRpb25UaW1lc3RhbXA6IG51bGwKICAgICAgICAgIG1ldGFkYXRhU2VydmljZU9wdGlvbnM6IHt9CiAgICAgICAgICBwbGFjZW1lbnQ6CiAgICAgICAgICAgIGF2YWlsYWJpbGl0eVpvbmU6IHVzLXdlc3QtMmIKICAgICAgICAgICAgcmVnaW9uOiB1cy13ZXN0LTIKICAgICAgICAgIHNlY3VyaXR5R3JvdXBzOgogICAgICAgICAgLSBmaWx0ZXJzOgogICAgICAgICAgICAtIG5hbWU6IHRhZzpOYW1lCiAgICAgICAgICAgICAgdmFsdWVzOgogICAgICAgICAgICAgIC0gcmVkcG9kLWF3cy1zbm8tbmc1c3Itd29ya2VyLXNnCiAgICAgICAgICBzdWJuZXQ6CiAgICAgICAgICAgIGZpbHRlcnM6CiAgICAgICAgICAgIC0gbmFtZTogdGFnOk5hbWUKICAgICAgICAgICAgICB2YWx1ZXM6CiAgICAgICAgICAgICAgLSByZWRwb2QtYXdzLXNuby1uZzVzci1wcml2YXRlLXVzLXdlc3QtMmIKICAgICAgICAgIHRhZ3M6CiAgICAgICAgICAtIG5hbWU6IGt1YmVybmV0ZXMuaW8vY2x1c3Rlci9yZWRwb2QtYXdzLXNuby1uZzVzcgogICAgICAgICAgICB2YWx1ZTogb3duZWQKICAgICAgICAgIHVzZXJEYXRhU2VjcmV0OgogICAgICAgICAgICBuYW1lOiB3b3JrZXItdXNlci1kYXRhCnN0YXR1czoKICByZXBsaWNhczogMAo=",
                            "verification": {}
                        },
                        "mode": 420
                    },
                    {
                        "group": {},
                        "overwrite": true,
                        "path": "/opt/openshift/openshift/99_openshift-cluster-api_worker-machineset-2.yaml",
                        "user": {
                            "name": "root"
                        },
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,YXBpVmVyc2lvbjogbWFjaGluZS5vcGVuc2hpZnQuaW8vdjFiZXRhMQpraW5kOiBNYWNoaW5lU2V0Cm1ldGFkYXRhOgogIGNyZWF0aW9uVGltZXN0YW1wOiBudWxsCiAgbGFiZWxzOgogICAgbWFjaGluZS5vcGVuc2hpZnQuaW8vY2x1c3Rlci1hcGktY2x1c3RlcjogcmVkcG9kLWF3cy1zbm8tbmc1c3IKICBuYW1lOiByZWRwb2QtYXdzLXNuby1uZzVzci13b3JrZXItdXMtd2VzdC0yYwogIG5hbWVzcGFjZTogb3BlbnNoaWZ0LW1hY2hpbmUtYXBpCnNwZWM6CiAgcmVwbGljYXM6IDAKICBzZWxlY3RvcjoKICAgIG1hdGNoTGFiZWxzOgogICAgICBtYWNoaW5lLm9wZW5zaGlmdC5pby9jbHVzdGVyLWFwaS1jbHVzdGVyOiByZWRwb2QtYXdzLXNuby1uZzVzcgogICAgICBtYWNoaW5lLm9wZW5zaGlmdC5pby9jbHVzdGVyLWFwaS1tYWNoaW5lc2V0OiByZWRwb2QtYXdzLXNuby1uZzVzci13b3JrZXItdXMtd2VzdC0yYwogIHRlbXBsYXRlOgogICAgbWV0YWRhdGE6CiAgICAgIGxhYmVsczoKICAgICAgICBtYWNoaW5lLm9wZW5zaGlmdC5pby9jbHVzdGVyLWFwaS1jbHVzdGVyOiByZWRwb2QtYXdzLXNuby1uZzVzcgogICAgICAgIG1hY2hpbmUub3BlbnNoaWZ0LmlvL2NsdXN0ZXItYXBpLW1hY2hpbmUtcm9sZTogd29ya2VyCiAgICAgICAgbWFjaGluZS5vcGVuc2hpZnQuaW8vY2x1c3Rlci1hcGktbWFjaGluZS10eXBlOiB3b3JrZXIKICAgICAgICBtYWNoaW5lLm9wZW5zaGlmdC5pby9jbHVzdGVyLWFwaS1tYWNoaW5lc2V0OiByZWRwb2QtYXdzLXNuby1uZzVzci13b3JrZXItdXMtd2VzdC0yYwogICAgc3BlYzoKICAgICAgbGlmZWN5Y2xlSG9va3M6IHt9CiAgICAgIG1ldGFkYXRhOiB7fQogICAgICBwcm92aWRlclNwZWM6CiAgICAgICAgdmFsdWU6CiAgICAgICAgICBhbWk6CiAgICAgICAgICAgIGlkOiBhbWktMDBmYjRkOTY4ODZmNTVhMzEKICAgICAgICAgIGFwaVZlcnNpb246IG1hY2hpbmUub3BlbnNoaWZ0LmlvL3YxYmV0YTEKICAgICAgICAgIGJsb2NrRGV2aWNlczoKICAgICAgICAgIC0gZWJzOgogICAgICAgICAgICAgIGVuY3J5cHRlZDogdHJ1ZQogICAgICAgICAgICAgIGlvcHM6IDAKICAgICAgICAgICAgICBrbXNLZXk6CiAgICAgICAgICAgICAgICBhcm46ICIiCiAgICAgICAgICAgICAgdm9sdW1lU2l6ZTogMTIwCiAgICAgICAgICAgICAgdm9sdW1lVHlwZTogZ3AzCiAgICAgICAgICBjcmVkZW50aWFsc1NlY3JldDoKICAgICAgICAgICAgbmFtZTogYXdzLWNsb3VkLWNyZWRlbnRpYWxzCiAgICAgICAgICBkZXZpY2VJbmRleDogMAogICAgICAgICAgaWFtSW5zdGFuY2VQcm9maWxlOgogICAgICAgICAgICBpZDogcmVkcG9kLWF3cy1zbm8tbmc1c3Itd29ya2VyLXByb2ZpbGUKICAgICAgICAgIGluc3RhbmNlVHlwZTogbTZpLnhsYXJnZQogICAgICAgICAga2luZDogQVdTTWFjaGluZVByb3ZpZGVyQ29uZmlnCiAgICAgICAgICBtZXRhZGF0YToKICAgICAgICAgICAgY3JlYXRpb25UaW1lc3RhbXA6IG51bGwKICAgICAgICAgIG1ldGFkYXRhU2VydmljZU9wdGlvbnM6IHt9CiAgICAgICAgICBwbGFjZW1lbnQ6CiAgICAgICAgICAgIGF2YWlsYWJpbGl0eVpvbmU6IHVzLXdlc3QtMmMKICAgICAgICAgICAgcmVnaW9uOiB1cy13ZXN0LTIKICAgICAgICAgIHNlY3VyaXR5R3JvdXBzOgogICAgICAgICAgLSBmaWx0ZXJzOgogICAgICAgICAgICAtIG5hbWU6IHRhZzpOYW1lCiAgICAgICAgICAgICAgdmFsdWVzOgogICAgICAgICAgICAgIC0gcmVkcG9kLWF3cy1zbm8tbmc1c3Itd29ya2VyLXNnCiAgICAgICAgICBzdWJuZXQ6CiAgICAgICAgICAgIGZpbHRlcnM6CiAgICAgICAgICAgIC0gbmFtZTogdGFnOk5hbWUKICAgICAgICAgICAgICB2YWx1ZXM6CiAgICAgICAgICAgICAgLSByZWRwb2QtYXdzLXNuby1uZzVzci1wcml2YXRlLXVzLXdlc3QtMmMKICAgICAgICAgIHRhZ3M6CiAgICAgICAgICAtIG5hbWU6IGt1YmVybmV0ZXMuaW8vY2x1c3Rlci9yZWRwb2QtYXdzLXNuby1uZzVzcgogICAgICAgICAgICB2YWx1ZTogb3duZWQKICAgICAgICAgIHVzZXJEYXRhU2VjcmV0OgogICAgICAgICAgICBuYW1lOiB3b3JrZXItdXNlci1kYXRhCnN0YXR1czoKICByZXBsaWNhczogMAo=",
                            "verification": {}
                        },
                        "mode": 420
                    },
                    {
                        "group": {},
                        "overwrite": true,
                        "path": "/opt/openshift/openshift/99_openshift-cluster-api_worker-machineset-3.yaml",
                        "user": {
                            "name": "root"
                        },
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,YXBpVmVyc2lvbjogbWFjaGluZS5vcGVuc2hpZnQuaW8vdjFiZXRhMQpraW5kOiBNYWNoaW5lU2V0Cm1ldGFkYXRhOgogIGNyZWF0aW9uVGltZXN0YW1wOiBudWxsCiAgbGFiZWxzOgogICAgbWFjaGluZS5vcGVuc2hpZnQuaW8vY2x1c3Rlci1hcGktY2x1c3RlcjogcmVkcG9kLWF3cy1zbm8tbmc1c3IKICBuYW1lOiByZWRwb2QtYXdzLXNuby1uZzVzci13b3JrZXItdXMtd2VzdC0yZAogIG5hbWVzcGFjZTogb3BlbnNoaWZ0LW1hY2hpbmUtYXBpCnNwZWM6CiAgcmVwbGljYXM6IDAKICBzZWxlY3RvcjoKICAgIG1hdGNoTGFiZWxzOgogICAgICBtYWNoaW5lLm9wZW5zaGlmdC5pby9jbHVzdGVyLWFwaS1jbHVzdGVyOiByZWRwb2QtYXdzLXNuby1uZzVzcgogICAgICBtYWNoaW5lLm9wZW5zaGlmdC5pby9jbHVzdGVyLWFwaS1tYWNoaW5lc2V0OiByZWRwb2QtYXdzLXNuby1uZzVzci13b3JrZXItdXMtd2VzdC0yZAogIHRlbXBsYXRlOgogICAgbWV0YWRhdGE6CiAgICAgIGxhYmVsczoKICAgICAgICBtYWNoaW5lLm9wZW5zaGlmdC5pby9jbHVzdGVyLWFwaS1jbHVzdGVyOiByZWRwb2QtYXdzLXNuby1uZzVzcgogICAgICAgIG1hY2hpbmUub3BlbnNoaWZ0LmlvL2NsdXN0ZXItYXBpLW1hY2hpbmUtcm9sZTogd29ya2VyCiAgICAgICAgbWFjaGluZS5vcGVuc2hpZnQuaW8vY2x1c3Rlci1hcGktbWFjaGluZS10eXBlOiB3b3JrZXIKICAgICAgICBtYWNoaW5lLm9wZW5zaGlmdC5pby9jbHVzdGVyLWFwaS1tYWNoaW5lc2V0OiByZWRwb2QtYXdzLXNuby1uZzVzci13b3JrZXItdXMtd2VzdC0yZAogICAgc3BlYzoKICAgICAgbGlmZWN5Y2xlSG9va3M6IHt9CiAgICAgIG1ldGFkYXRhOiB7fQogICAgICBwcm92aWRlclNwZWM6CiAgICAgICAgdmFsdWU6CiAgICAgICAgICBhbWk6CiAgICAgICAgICAgIGlkOiBhbWktMDBmYjRkOTY4ODZmNTVhMzEKICAgICAgICAgIGFwaVZlcnNpb246IG1hY2hpbmUub3BlbnNoaWZ0LmlvL3YxYmV0YTEKICAgICAgICAgIGJsb2NrRGV2aWNlczoKICAgICAgICAgIC0gZWJzOgogICAgICAgICAgICAgIGVuY3J5cHRlZDogdHJ1ZQogICAgICAgICAgICAgIGlvcHM6IDAKICAgICAgICAgICAgICBrbXNLZXk6CiAgICAgICAgICAgICAgICBhcm46ICIiCiAgICAgICAgICAgICAgdm9sdW1lU2l6ZTogMTIwCiAgICAgICAgICAgICAgdm9sdW1lVHlwZTogZ3AzCiAgICAgICAgICBjcmVkZW50aWFsc1NlY3JldDoKICAgICAgICAgICAgbmFtZTogYXdzLWNsb3VkLWNyZWRlbnRpYWxzCiAgICAgICAgICBkZXZpY2VJbmRleDogMAogICAgICAgICAgaWFtSW5zdGFuY2VQcm9maWxlOgogICAgICAgICAgICBpZDogcmVkcG9kLWF3cy1zbm8tbmc1c3Itd29ya2VyLXByb2ZpbGUKICAgICAgICAgIGluc3RhbmNlVHlwZTogbTZpLnhsYXJnZQogICAgICAgICAga2luZDogQVdTTWFjaGluZVByb3ZpZGVyQ29uZmlnCiAgICAgICAgICBtZXRhZGF0YToKICAgICAgICAgICAgY3JlYXRpb25UaW1lc3RhbXA6IG51bGwKICAgICAgICAgIG1ldGFkYXRhU2VydmljZU9wdGlvbnM6IHt9CiAgICAgICAgICBwbGFjZW1lbnQ6CiAgICAgICAgICAgIGF2YWlsYWJpbGl0eVpvbmU6IHVzLXdlc3QtMmQKICAgICAgICAgICAgcmVnaW9uOiB1cy13ZXN0LTIKICAgICAgICAgIHNlY3VyaXR5R3JvdXBzOgogICAgICAgICAgLSBmaWx0ZXJzOgogICAgICAgICAgICAtIG5hbWU6IHRhZzpOYW1lCiAgICAgICAgICAgICAgdmFsdWVzOgogICAgICAgICAgICAgIC0gcmVkcG9kLWF3cy1zbm8tbmc1c3Itd29ya2VyLXNnCiAgICAgICAgICBzdWJuZXQ6CiAgICAgICAgICAgIGZpbHRlcnM6CiAgICAgICAgICAgIC0gbmFtZTogdGFnOk5hbWUKICAgICAgICAgICAgICB2YWx1ZXM6CiAgICAgICAgICAgICAgLSByZWRwb2QtYXdzLXNuby1uZzVzci1wcml2YXRlLXVzLXdlc3QtMmQKICAgICAgICAgIHRhZ3M6CiAgICAgICAgICAtIG5hbWU6IGt1YmVybmV0ZXMuaW8vY2x1c3Rlci9yZWRwb2QtYXdzLXNuby1uZzVzcgogICAgICAgICAgICB2YWx1ZTogb3duZWQKICAgICAgICAgIHVzZXJEYXRhU2VjcmV0OgogICAgICAgICAgICBuYW1lOiB3b3JrZXItdXNlci1kYXRhCnN0YXR1czoKICByZXBsaWNhczogMAo=",
                            "verification": {}
                        },
                        "mode": 420
                    },
                    {
                        "group": {},
                        "overwrite": true,
                        "path": "/opt/openshift/original_cvo_overrides.patch",
                        "user": {
                            "name": "root"
                        },
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,eyJzcGVjIjp7Im92ZXJyaWRlcyI6bnVsbH19",
                            "verification": {}
                        },
                        "mode": 420
                    },
                    {
                        "group": {},
                        "overwrite": true,
                        "path": "/opt/openshift/auth/kubeconfig",
                        "user": {
                            "name": "root"
                        },
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,",
                            "verification": {}
                        },
                        "mode": 384
                    },
                    {
                        "group": {},
                        "overwrite": true,
                        "path": "/opt/openshift/auth/kubeconfig-kubelet",
                        "user": {
                            "name": "root"
                        },
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,",
                            "verification": {}
                        },
                        "mode": 384
                    },
                    {
                        "group": {},
                        "overwrite": true,
                        "path": "/opt/openshift/auth/kubeconfig-loopback",
                        "user": {
                            "name": "root"
                        },
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,Y2x1c3RlcnM6Ci0gY2x1c3RlcjoKICAgIGNlcnRpZmljYXRlLWF1dGhvcml0eS1kYXRhOiBMUzB0TFMxQ1JVZEpUaUJEUlZKVVNVWkpRMEZVUlMwdExTMHRDazFKU1VSUlJFTkRRV2xwWjBGM1NVSkJaMGxKVlhkTVRrSmphSE5aVDFsM1JGRlpTa3R2V2tsb2RtTk9RVkZGVEVKUlFYZFFha1ZUVFVKQlIwRXhWVVVLUTNoTlNtSXpRbXhpYms1dllWZGFNRTFUWjNkS1oxbEVWbEZSUkVWNE9YSmtWMHBzVEZkR2QyRllUbXhqYmxwc1kya3hjMkl5VG1oaVIyaDJZek5SZEFwak1teHVZbTFXZVUxQ05GaEVWRWw2VFVSUmVFOUVSWHBOUkdkNFRVWnZXRVJVVFhwTlJGRjRUbFJGZWsxRVozaE5SbTkzVUdwRlUwMUNRVWRCTVZWRkNrTjRUVXBpTTBKc1ltNU9iMkZYV2pCTlUyZDNTbWRaUkZaUlVVUkZlRGx5WkZkS2JFeFhSbmRoV0U1c1kyNWFiR05wTVhOaU1rNW9Za2RvZG1NelVYUUtZekpzYm1KdFZubE5TVWxDU1dwQlRrSm5hM0ZvYTJsSE9YY3dRa0ZSUlVaQlFVOURRVkU0UVUxSlNVSkRaMHREUVZGRlFYVnJRWEZ5Y213cldIUk9jd3BOUW0xSk1rUm5abWx3VW1Ndk5FbHVMeXRHWjJ0eFNXWm1hRU5UWXpVM2VYaEdhWFpCUlhSNVZUTTNXRVJsUW1Oa2VITkZNRFJMUTFSdVNERXJhbTVQQ201VlpreGxXRlZLTW1sSGNGRjZSMUZTWjJGalYzVmtlRVJCZFVjMVZtWm1Za04wUmtweFJHUXZLelJUVDNKNlNsUlFlbGx2ZGl0VVRHeFBjMjk2UWxNS1NIYzVXV040SzFKbVpVdzBSM05sYVhWaFFWZG1hRmNyZUhka1FWRkhXVmcwZUZKTmNWQmtjbWxDWTFKUVVrcHJkMlEySzIxeFozRnVNMHQ0VWpJM1ZncFdlVTg1Tm5ObFlXZGpNRTVJUjNoMGRVbEJVVEYyZVdnemVUaHZNMkUzYlVSVWRXSjZWRE5STVhoVGVEWlRVVWxqZDBJNUswUmFVa1JqTUd3d1VsQndDbGh6WVZCdU1WaE1NelZZY0hSME1Ia3hRVEJaS3psS1RYTTVTV3hUTmtwQ2J6Vk5ZekJFUm5OUVdWTkZabE5vZVhaNVRWQkRaRlo1YlhkUGNWUmtiRWNLZEVwYVpVeFdhekZLZDBsRVFWRkJRbTh3U1hkUlJFRlBRbWRPVmtoUk9FSkJaamhGUWtGTlEwRnhVWGRFZDFsRVZsSXdWRUZSU0M5Q1FWVjNRWGRGUWdvdmVrRmtRbWRPVmtoUk5FVkdaMUZWYTAxaVVITjVZVTVPYUdnMGJYbFpaM0ZPZWxKNVFtVXpjMjFSZDBSUldVcExiMXBKYUhaalRrRlJSVXhDVVVGRUNtZG5SVUpCUjFGRU1UWk5kVEF5YkVWYVkxQm9kVE54Y2pGSFJuVlZRVVpGV1doNVQwaFJTRlZGY2tsVU9VOXJRMmh2Y3pVNGVVWjBXVGhQUkZsd2VsWUtkUzgzTWxsTVZEQm9Ta2RyWTBkaVJFVkVOMmROVHpOR01YaHZXRWMyYkZoNFkyaHRiMEZoT0ZaaFdscHhUVUpCY2tkVlFYRTRhWHBwVVVkUFVVTXphd3BhWVZoNFNqY3JNR2hoTlRBMFEyeG5VREpKZDNoSU1UbEJPRmhSVmk4clMwaFBVMDVZYmpGR2FEbFNNWGROTTJ0SFJHOUpTRlEyYkZaNFIxUmxNVE5aQ2xkRU1FTjJOVFJ4WkN0TVdFbFNPQ3NyYlZGVlNYZE1kMWN3ZDNOS1VFVXliRzVNWVZodlN6UTVNSHA2V0RKdldXTXhVV0oxV0dOcWVVeFdZM3BWVUcwS1ZXRnhZMjlJZURWalMzcGFieXRqTTJJNVFWcHZhRFp6UmpSdk1HMUxPV2RKVDJSV1pYRnpUaXRrYldsS1NGSkllRWxoVDBoWVN6ZzJTRkpwY3pSV1dRcFBNMFZoVFRseFduVmlPUzl2UTNCU1JWY3JOMjVDV1dWRGVtTTlDaTB0TFMwdFJVNUVJRU5GVWxSSlJrbERRVlJGTFMwdExTMEsKICAgIHNlcnZlcjogaHR0cHM6Ly9sb2NhbGhvc3Q6NjQ0MwogIG5hbWU6IHJlZHBvZC1hd3Mtc25vCmNvbnRleHRzOgotIGNvbnRleHQ6CiAgICBjbHVzdGVyOiByZWRwb2QtYXdzLXNubwogICAgdXNlcjogbG9vcGJhY2sKICBuYW1lOiBsb29wYmFjawpjdXJyZW50LWNvbnRleHQ6IGxvb3BiYWNrCnByZWZlcmVuY2VzOiB7fQp1c2VyczoKLSBuYW1lOiBsb29wYmFjawogIHVzZXI6CiAgICBjbGllbnQtY2VydGlmaWNhdGUtZGF0YTogTFMwdExTMUNSVWRKVGlCRFJWSlVTVVpKUTBGVVJTMHRMUzB0Q2sxSlNVUmFla05EUVdzclowRjNTVUpCWjBsSlZFaFNZbUp4U0ZWSlZ6aDNSRkZaU2t0dldrbG9kbU5PUVZGRlRFSlJRWGRPYWtWVFRVSkJSMEV4VlVVS1EzaE5TbUl6UW14aWJrNXZZVmRhTUUxVFFYZElaMWxFVmxGUlJFVjRaR2hhUnpGd1lta3hjbVJYU214Wk1qbDFXbTFzYmt4WVRuQmFNalZzWTJwQlpRcEdkekI1VFhwQk1FMVVaM2hOZWtFMFRVUnNZVVozTUhwTmVrRXdUVlJWZUUxNlFUUk5WRUpoVFVSQmVFWjZRVlpDWjA1V1FrRnZWRVJ1VGpWak0xSnNDbUpVY0hSWldFNHdXbGhLZWsxU1ZYZEZkMWxFVmxGUlJFVjNlSHBsV0U0d1dsY3dObGxYVW5SaFZ6UjNaMmRGYVUxQk1FZERVM0ZIVTBsaU0wUlJSVUlLUVZGVlFVRTBTVUpFZDBGM1oyZEZTMEZ2U1VKQlVVTXZlalU0ZFdaa1RuZDVSMnhDTmpOMlZVTjJaMWRCUm0wNVEwaE5WbEpNVUdZeWFWaE1XblJzVndwdWJXVnlkR1V2VUZBeE9HSk5URzlpTXpOd2RDODJNMHByVkROTFZHZ3JNR3RLUjJSNGRXcFhWMmxRVUhaMlowRnJlbUZvUVZSdloycDVjRk5EV0N0a0NrcFZWUzlxU25BMmJGbzJVMlE1Y1ZOalUyZ3haaTlsVUhOclZUZ3dibmhNVGtSMlFpdFZLMlowY0VkQ1VGTlFkRWN5THpkQlJETlRjMGswTkdwaGVIQUtXREZ3U0dWcVkwUXlMek53Uml0aWRVWmFZMnRLYVVGdlEzRnViRGhVZVVSWVpHSlplbmN2WlVSdmNVbzFSa3hFVGs5elQwVjVZMkUzV0dsQk0zVklPUXA1YWtWMlQwUXZURTRyWWxwamREaE5hMDQ0ZVhFdk1XcG5ObEo1Y3pGdGFGWnROVUoyUkN0aE9HcHpjRkpQZDNZNVQwMU1kRmQzTkdOV1FXMUhObXRJQ25GUFVpc3pXWFF6VWxOa2FrRlVWelpDYzBSWVpYUkRReTl6VWpGV2FXMUxPVUZWVldKc1ZTOTBkM051UVdkTlFrRkJSMnBtZWtJNVRVRTBSMEV4VldRS1JIZEZRaTkzVVVWQmQwbEdiMFJCWkVKblRsWklVMVZGUm1wQlZVSm5aM0pDWjBWR1FsRmpSRUZSV1VsTGQxbENRbEZWU0VGM1NYZEVRVmxFVmxJd1ZBcEJVVWd2UWtGSmQwRkVRV1JDWjA1V1NGRTBSVVpuVVZWUGEzTkhkR2xHT0VORU0zZ3pTWFJpTHpoNmFuWlhVVWc1V0hOM1NIZFpSRlpTTUdwQ1FtZDNDa1p2UVZWbWFqWmhZbVJxVUhsMVVXMVBkbkEyVmxnME1HbGhlR1IwVTBWM1JGRlpTa3R2V2tsb2RtTk9RVkZGVEVKUlFVUm5aMFZDUVVKMk1YcDNkaThLUmxacFpXVnVZazFyVFZwcldERktjR2xYV25wMFMycHZVa05VWWxsTE5XaFRWVGhyTW5aMFJXTlZWREZLT1ZONlUxSlRNaTlLTTB0bE0wcHJMMDFVU1FvMllWRllOVXN5YWpoRWN6QlJSa3hIVTBsMlRIRnViMjh5TVM5RE9WaHVTRzFtUm5oc01tUjBVVE5JV2tSWU9IQlVUbGM1WkZsSU9FUTJOMHBvV1cweENrbEdURmw1UlhwU1F6Rk1OMVZWWWtJelpGTk1jVEJHWjBwMlJqVnJTa0ZLZVVOeFJuZGxZVFJNZFZsQmVHRm1OR3hUZVZwNU1WWnRPWEJ6V1hjd2ExQUtRMDFyZEVOWGMycHZVMFowVjNSaGFWQnFTeTkwVDJaVWVFZHFSRGxTUmxCTWMxRmFPVWxWY2tzM2VTOXBVVEJwVm5VMGNqZ3dhMFZMVlROSmJGSXhNd3BXZGtOSWVYcDVjVVpTYUhabVdXOXpSM1EyTjJOTk5VRlFSbGx6ZEM4M1dYSkVkV2RaWlRSaVIydGxlVXd5VDB4WWMwVlZaRVJUZDFoVGN5czBlRzFEQ2xCUEt5OW1UbGdyTW00NU9VczNjejBLTFMwdExTMUZUa1FnUTBWU1ZFbEdTVU5CVkVVdExTMHRMUW89CiAgICBjbGllbnQta2V5LWRhdGE6IExTMHRMUzFDUlVkSlRpQlNVMEVnVUZKSlZrRlVSU0JMUlZrdExTMHRMUXBOU1VsRmIzZEpRa0ZCUzBOQlVVVkJkamdyWmt4dU0xUmpUV2h3VVdWME56RkJjalJHWjBKYWRsRm9la1pWVTNvek9XOXNlVEppV2xad05XNXhOMWgyQ25wNk9XWkhla00yUnprNU5tSm1LM1I1V2tVNWVXczBablJLUTFKdVkySnZNV3h2YW5vM056UkJTazB5YjFGRk5rbEpPSEZWWjJ3dmJsTldSbEEwZVdFS1pYQlhaV3R1Wm1GcmJrVnZaRmd2TTJvM1NrWlFUa280VTNwUk4zZG1iRkJ1TjJGU1oxUXdhamRTZEhZcmQwRTVNSEpEVDA5Sk1uTmhWamxoVWpOdk13cEJPWFk1TmxKbWJUZG9WMWhLUTFsblMwRnhjRFZtUlRobk1UTlhNazA0VURObk5rdHBaVkpUZDNwVWNrUm9UVzVIZFRFMFowNDNhQzlqYjNoTWVtY3ZDbmw2Wm0weVdFeG1SRXBFWmsxeGRqbFpORTlyWTNKT1dtOVdXblZSWW5jdmJYWkpOMHRWVkhOTUwxUnFRemRXYzA5SVJsRkthSFZ3UWpacWEyWjBNa3dLWkRCVmJsbDNSVEYxWjJKQk1UTnlVV2QyTjBWa1ZsbHdhWFpSUmtaSE5WWlFOMk5NU25kSlJFRlJRVUpCYjBsQ1FVaHlhMUpwVDJWWlJYTkNWRVppT0FwNlprSXdUM0pETVRsemFtcFZaME5PWWxGV0swZG1jbmMwVlhwaE0zRmpiMUZSV1hsdWRtVnVlRFJYTWsxQ1YzSXlObVZ4VlRoR04xQnNjMDE1VVRocENtTjFiSEpDVldwRlNFNWpXbVZ6VnpkTFNXWldNR2hMVUc1WFEwMXJXWEFyZUdwaVIwSTNkbXcyU0dOek5IWlJkRlZsY1ZOSFJWRTBkelJRV0dGdVdVVUtRM1I2VlU1MlRuSjJZMjVpWVRKeFVYQkJkVXRNVVZSVk1rZE5SbkJoU21SVFNTOVVZMWQ2Y0hadGEzUnhWWFpYYW1Rd1MwWkNNRnB0Y0VwRVdESkNiZ3BaWTBGU1dXOXhUamQ1V1VkdVZUVlpRMlZoTW1KVlQyOUVWalpzTTFwSVZrRnZjMXBCV25WS1MyZHdMMjFuY1U1c04yaERVbk5QUWtVMVNEVjNOSE4wQ2tOTU1IUkNOR3B3YXpodFNISnVUSEJTVm1vd1JVOVRhM1EzYkhnd1NIWkpRbmhJVEZoMkswczFOMlkxVWxOamQwNDROVkI0U2t4UWJqSm1aMmxhVDNrS1RYZEliM015UlVObldVVkJNa0UzV1VrdmExa3llR2hKZEVwRWNXeHhTbU5vVkhWcU5VTjJWVmM0UjJzNVJuQm5jM2xGTVdaUUx6ZzFWMDFHV1hKbGR3cE9LMmRRWmxSUE5tVlFLM0J1WTFNdk5FSjVOemhoV0cxUGFVTjJVMWxIWW5kUFVqUllhVXRWUVZWVGRrcExOMkpYWVVoc2RrRlJRbGhRVlZaTWNsTktDazFMTW14R1VIZHJWMjh6Vmk5eFQyVTFTWHAzTlhac2FESlZSM281ZVhGTGNXaEtUelJ5Wnk5RmNpdHVURzVITmprMk5ucHZTR05EWjFsRlFUUXdWa1VLUzAxRFVWVlVNbkV4VlRjd2MwVkNWazE2YzJaNE5tTk1TM2w2ZERWb09YcE5hbEZVY0ZaaFMydzNSM2RwYVVaVE1TdFNZa3hwWlZCT1ZUUTBWR0YxUWdvclZtSnRWM2RFUmt4emFqaE1jRTEyV1VwWFdFWk1PQ3RxUmpSaWVUTlNOVFZvS3psdlZHbGllRlJTWjNVeE0xZHVVR1psU0ZSTmFsWXplSEU1UWtORkNrTlBPWE5aYkdWT1ZrMDJXbWx1UmtaeWMxTjBMMGxOY3pFeGNVRjNXbmszY3paRWVuaDBSVU5uV1VKdFNYUmFVVmw1UVRVMmIyWnpVRUpzTlhKcVZUUUthM0JKVDJWb00wRmFjRVphU21sU1UyRmtLMFZSVDNSSVkxRkZTbmR5V1dWS05tbDVNR3BLVkc5MVEwaEJXWGxJU1VjMVJXUk9NbUZIZG5ScFREQXZNZ28xYzNBd1JHSnhWSGQxYkdNeVVVRXJjR2RqV2xVelpHeG1NRXBPVDNaRmFuWjFTM05SWlc1YWJWQldVbXN2TWpSSk1YZzJaeXRsWVhOaVIyMXdWV2sxQ25wNkwxWmpOak14WVdZMVdrOVdRbVZoUVhKdlZIZExRbWREWjNsRVVEaEZTamhKYlc1UWRFUkVjVmhLYVhkbldHdGxVbGN4TDFCWU5qSXJRelp1V0dJS2JtZHViRUl6WjFNeGFqRnVOMWRZTDI1c2VrbGFSbmw1U3l0VldYa3hSVlpJU1V4R00xSnZUVTVCV0hONFJHeGFNamRIZDNKV2FGbEpTMUpaVVcxTlFRcENRMHh4YUhsd1YzWkVSVWhTVEdwWldXWkdZVXBSYzBwR01GWTFWV3hFWlZBMVdWcEdRV05IZWpCTlkwTTBORUZtVTBWdE9XaDRWV2h0WXpNeVJEZEtDak5pVDNoQmIwZENRVTVJZEZremRHUnlVRVJqU1M5MGJVZDVUakpvVUVWcGFHVnhXR1ZVYVdOR1NFODVXbGsxYm1KV09WZG1helEyVUdwblRVMUdTMllLU0hWSk5EbDZTMUZHU2pWM1VrbzFUVXcwZFhFNVRrVnBUMnhqVFVoYVkxRnFjRmRWYm5sQ1RpOTRlbmxWZDBobGNtSkJVa05TV1ZwRmRXTnBUWEpYU2dwUFNYQkxPRmw1UWtSV1YydDBZMDVNVDBSVEwxWXdUbEJ3UjBwbE1taHhNVWR2U3psa1pHeGpNbnByTm14ck1VTnpjMUJMQ2kwdExTMHRSVTVFSUZKVFFTQlFVa2xXUVZSRklFdEZXUzB0TFMwdENnPT0K",
                            "verification": {}
                        },
                        "mode": 384
                    },
                    {
                        "group": {},
                        "overwrite": true,
                        "path": "/opt/openshift/tls/admin-kubeconfig-ca-bundle.crt",
                        "user": {
                            "name": "root"
                        },
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURNRENDQWhpZ0F3SUJBZ0lJWXhvRDk1bWk0YlV3RFFZSktvWklodmNOQVFFTEJRQXdOakVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1TQXdIZ1lEVlFRREV4ZGhaRzFwYmkxcmRXSmxZMjl1Wm1sbkxYTnBaMjVsY2pBZQpGdzB5TXpBME1UZ3hNekE0TURsYUZ3MHpNekEwTVRVeE16QTRNRGxhTURZeEVqQVFCZ05WQkFzVENXOXdaVzV6CmFHbG1kREVnTUI0R0ExVUVBeE1YWVdSdGFXNHRhM1ZpWldOdmJtWnBaeTF6YVdkdVpYSXdnZ0VpTUEwR0NTcUcKU0liM0RRRUJBUVVBQTRJQkR3QXdnZ0VLQW9JQkFRRE9Kb0FzTUN6WUFUZXZta0pUQ28rK3UvL3Y3QkFFTU9LUwp5bmhFM2RaTTMvVlViUnlBUnppU01iTDVpSXdGSGJzZHN6V2VVa1l6UElSRzliWDJzSXh6d2Q5OURMRzM4YkU3ClpTYUYySE91WFIwMFdCajI3ZEJjcFlyTmVzNFA0ODBublZ0WmsxWlQrVlUyMHhEaFVQWGpyakFoM2E2Y3dkYmQKWkduKzJBZVlveEplU2wvKzJUZzBXcEdnUm5PdVI3azV4WmpGVDJVNnhnNEt3c0d2eWRyZHVoVVFDVkxBT1hVZQpVcW5XMnJxY3gzeTVSYWd3cVVsMVZKZWxFQzBVbXJVeFRlQWlnelhGOVVHRmpFOXkvY29maEh1QmtXTGs0cCs5CmRPVXJ3cXQ2VE9Nd2d4Mk1pQXN6WS9IQ0FGcjc1ek9Ua1BaQTFCeEpyTHpEYUVHT0ZsVVZBZ01CQUFHalFqQkEKTUE0R0ExVWREd0VCL3dRRUF3SUNwREFQQmdOVkhSTUJBZjhFQlRBREFRSC9NQjBHQTFVZERnUVdCQlIrUHBwdAoyTS9LNUNZNitucFZmalNKckYyMUlUQU5CZ2txaGtpRzl3MEJBUXNGQUFPQ0FRRUFVTWFoc1pLcFpJVUh4MWI1Cm9CQnI1b0RsckdKUFZvSEh6M1pWL0M0K0NTMjNlaVFiTDhQc2Z4OU5DQ0VHLzV2akxSekVtL2ZCL1ZnZFVlaUMKdUxuUWdtQmUwWDBQNDIzdndmTzJKZGV3d0ZLSTdRZVRTWmw0VHoxK3FKOGt1YmlUYjBUcnhTd2FyQ3ZHbk5kYwpkYTBsTzBsbUpyNDA0Y091MUtqM1hWZXNDM2RnQnJpTXpiWmxCaDlyNzdLaytJYmNXY0ZIY1lxWFB1MDB5eVM4CmVoRHpNelRoZVI4ekVtZUNQdkxNa2toSzBpYXpLVmNDNVJlY3BvbDI3Uk80SmhkMDFjUUpXKy9xRUdKb0M3VlgKTlFwbVNhaTNOQkpwU0o2NWlPaGVmOVZSblVyamRxVVZDeEplMEpOVWJjSGtTZHpyWlBGK0NuYlRqOW9QcGROLwpxdjc3ZkE9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==",
                            "verification": {}
                        },
                        "mode": 384
                    },
                    {
                        "group": {},
                        "overwrite": true,
                        "path": "/opt/openshift/tls/aggregator-ca.key",
                        "user": {
                            "name": "root"
                        },
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBbXM3Q296MmxDcmV1MEw3djRULzlrRG85OTFRMnNLbmE0aWRkcGhzdVlYalFjRHkxCm5zV0lmTjB1SXJ0RlJ6Wm9SMDh2REVTdXZncVhTeHRZNExKekowNE5iQ251RHR5MjZKOWpicDRwN0E0RmdRZDIKRmM5RDUvbXJwZjFUTFFWWG5halZwQWZpeVF3NGQ5TVBEUWY4Y2NzZmpJTUFMR3dqdzZLOUY0VHZ4YkVxdDQ3YQpDdDZHSnp6MG5sWWl6S3hLejZqSDRHdzR3bUlVQ0VCWURXN0hVNVdFNUcwTDFoWlhZUDlaSkFTbGxlQ2YvZ082CkRYTHJhRHZXWHlGMXUxOTZzMXRRUTErRTVLT2IzS05OYVAzaGkvSHpHa0Joenc3Uk9ZRFlOYWVWRkdjMUxJQjYKR2kwZlhmSlozQXRBbjR1Z0NzS3JwOFJwZ0FvOXVKWEoyVXNoRHdJREFRQUJBb0lCQVFDVHVuTXE3QXl2S1pIOQpTZmdINzlTODZaZHdpa0NXWGNDdXgvb3FKUTRobmZUcTVrUTYreTNBV2lGSXE0VDA3QXFlNGdWM282Tk5Yelg1ClNtT0tLVUNTWlgyUmxvSENWUVdHLzNNWGdIOW84QWg0bFBJdTVkZGJhM3BOc0d6TExhbnFuYzhoOVJTSjNzdVUKTFNqVHVxZEF3Q0dmS1BQbGNGekF1Ry9TSGQzaHZDOW1nTjE5c0VnQjhLWTk4QzlMYmFuU2dIZ04wdUUwOGM2Mgo4bVJaT1lRMTFQdFZyZHMvSnRQK3NFbzEzZEd3U0hjWDMyQURHRFdNSW9mRnQrQzZ2SEF5ZWxSaERCNGZ6Ym04CnYzcWx0NGwzMlFsMVlFTXZneEJLdkJGR1JvSHFNQmJHWXJDUUsvbjZSSlJFdll5ZVdLWTg0KzVIUEhhYXI1Z2oKSC9NYlNuNWhBb0dCQU1CTmRGM1VHY0I3NlhxQmFYYnVVTm9UWXcza29UTUtVU281VFlrOWZIcUN3WjR4Zno2eAp4WEtlbTBkbndmSU1GUTZrMjVUQjJJZ1l1RCtoK1llNzhIRmtXNXQ5MURPekdBdmRQZlE1VHNIcWNNZnNhV3Z6CnVsMVl2LzZOQUY0ZWNXanZIWGZHeVJrZW1vOFB3WFZvajZKOVRiYi9nTXN2WVJaVkZ2eHNENEdGQW9HQkFNNFYKNElHd1NTRDFlcVJIMUY0MTV3a3dTU2VMdUgzUnl2dkFMTTVHQmxHcU93QWR1bi9TYkd2RTZVZlRIaXgvU250QwpUajlSc1hCdzFYVHhZNUdDYXNpYTJOY1BjOGFDbUQ3anRBckFrSDMyRkhXaXpobVo0QzloVVJXa1RIakx2Yks4CmNIUy9va1NLSEQ5bm9mNE9FLzNiZS9OWnpyQUVzZXNqcThWNDVwS0RBb0dBQW8vRmtnNW1QV3NwSkFtZlJ3ZEwKcW13QnNNaXY0UWN0SjV2VnpaTTFHa2l0blpiWk5CT1lKcnU0STg1ZEJnVmxMbW5CeHd5Qi91WWRaak9aS0ZhMwprRHNmQVVZKzBtVjdWNFVkOHlma1JhOEN5NWI1bkllRm53SzBwQVpxejlZbCtwamMwcUNpUXlSbU9LdWtEeFZTCmZINmd6MlE5NmZiNm14cU5FTlc3cXlVQ2dZQlUvcGJTUmZkVEhZc1FPQU94T3ovbS9VQWVqRFJ4eDlXVWtNU3AKNmgxdkR1czRlQXBUNzJBQjdudGJ3UWwveHB2Y1RCTmpiL2pqYTlYTlhrVDNYVGRYTnUzWmZLaitKUnhQUzdBVQpneWpVbW1vRHZqcU1PbmRJY3pWeTNJa2hoTDNlK25MUzQ3b3oxRllrSEVTbU4vNHN3NW5TV3FhdzE2N2RVSi9tCldKK1hxd0tCZ1FDZHc1ci8yd1RPdDZjejZJRjhDWlVMTGwzcHBWN0ZXL2tweTZtdXdsMkpSOUxQRnJKVCtrdEUKdmVWT0txL3VCVWtkUzlGVkREMzhmN1h4emxhcU9sZlVpNURBY1RHRVdTVnNtSlJyT2cydFBhenBqMkxlU1lDRwp2TE05am5nUmhDQlVqMFphck90a0ZOTVVkby8zQzBIbm9WbCt3dmZ4dEZpazI5OSs0Snh6TXc9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=",
                            "verification": {}
                        },
                        "mode": 384
                    },
                    {
                        "group": {},
                        "overwrite": true,
                        "path": "/opt/openshift/tls/aggregator-ca.crt",
                        "user": {
                            "name": "root"
                        },
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lJQ2g2dTJPakFIRGN3RFFZSktvWklodmNOQVFFTEJRQXdLREVSTUE4R0ExVUUKQ3hNSVltOXZkR3QxWW1VeEV6QVJCZ05WQkFNVENtRm5aM0psWjJGMGIzSXdIaGNOTWpNd05ERTRNVE13T0RFeApXaGNOTWpNd05ERTVNVE13T0RFeFdqQW9NUkV3RHdZRFZRUUxFd2hpYjI5MGEzVmlaVEVUTUJFR0ExVUVBeE1LCllXZG5jbVZuWVhSdmNqQ0NBU0l3RFFZSktvWklodmNOQVFFQkJRQURnZ0VQQURDQ0FRb0NnZ0VCQUpyT3dxTTkKcFFxM3J0Qys3K0UvL1pBNlBmZFVOckNwMnVJblhhWWJMbUY0MEhBOHRaN0ZpSHpkTGlLN1JVYzJhRWRQTHd4RQpycjRLbDBzYldPQ3ljeWRPRFd3cDdnN2N0dWlmWTI2ZUtld09CWUVIZGhYUFErZjVxNlg5VXkwRlY1Mm8xYVFICjRza01PSGZURHcwSC9ISExINHlEQUN4c0k4T2l2UmVFNzhXeEtyZU8yZ3JlaGljODlKNVdJc3lzU3Mrb3grQnMKT01KaUZBaEFXQTF1eDFPVmhPUnRDOVlXVjJEL1dTUUVwWlhnbi80RHVnMXk2Mmc3MWw4aGRidGZlck5iVUVOZgpoT1NqbTl5alRXajk0WXZ4OHhwQVljOE8wVG1BMkRXbmxSUm5OU3lBZWhvdEgxM3lXZHdMUUorTG9BckNxNmZFCmFZQUtQYmlWeWRsTElROENBd0VBQWFOQ01FQXdEZ1lEVlIwUEFRSC9CQVFEQWdLa01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGQll4NkVpSmJnMFEwNlYzU1FLZVVzRWtIQXpITUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQ2FyaWFHU2gwT0pBZTd3clVEanlrbjIzRmtoaXFWcXg1NFY5Q0Z3OVJIYlBKdk5EbUxPcHZ0CjZvaUFhMjJDWjUxZTUrWHR6QlZXVnV0NWszNDBlTWVHM3RSSTlFb0l6Qnp5OTRtQUV6b2hld1k2cm5SQnFjb0oKeGlBQTFPUkpKK05YSGtwb3p3OUtvY1ZNYnRHcWxmdmZxNDgxUlVmeWtYVFFFcDFsV0tOZFJqZlJoa1hzblh5LwpuaW5jQUZDcytwaEFlZTJ2N2NiVkM1RlB5OXVPMldUNFVqbjBRZEU5RjU0NThVRXBzVTQ2bTVuODZMSWJPR3RtCm4zR1h6Y0huVmdiVUVUTm9wbjdGTTE3MFFGaVdlK2Q1NUtPVXVHckw5ak9DL3lSR2tYUzUxekliRjlWekFpTU4KVWhPYXlKZnA5WGx0UFViR2kxMHM5SHEvZGRTWGpLMjYKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=",
                            "verification": {}
                        },
                        "mode": 384
                    },
                    {
                        "group": {},
                        "overwrite": true,
                        "path": "/opt/openshift/tls/aggregator-ca-bundle.crt",
                        "user": {
                            "name": "root"
                        },
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURKRENDQWd5Z0F3SUJBZ0lJVXV1NFpiOGh2dDB3RFFZSktvWklodmNOQVFFTEJRQXdNREVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1Sb3dHQVlEVlFRREV4RmhaMmR5WldkaGRHOXlMWE5wWjI1bGNqQWVGdzB5TXpBMApNVGd4TXpBNE1URmFGdzB5TXpBME1Ua3hNekE0TVRGYU1EQXhFakFRQmdOVkJBc1RDVzl3Wlc1emFHbG1kREVhCk1CZ0dBMVVFQXhNUllXZG5jbVZuWVhSdmNpMXphV2R1WlhJd2dnRWlNQTBHQ1NxR1NJYjNEUUVCQVFVQUE0SUIKRHdBd2dnRUtBb0lCQVFERmVJbENpVndwM1hDak1CdHJabTZZTzg0bmUwN3cyenV6N2Y5UXdLMDRFWlBNNkdScwpkK1ZRYmxJMmluNHNhOVgrS041a3EwZnZBUEk3OVpzVkdJNi8rL3RnanNQQlBIQjFMRVRPRnZjcDlmRFdWUGpFCkkzajM4VXYyT09MUzlDVnJaYkZSdGZodnh1SENFTDllZlpNS09heXZoQlViaitQL1BvQnVkYXpvanRQWWN6SjcKNm1ZVmxYZGdzL1M3MmdTbkNxR28vNWd1eGJRL1VMbXBlcXZUNWpET0FHdU5TelZRMmlMQ1lacGVBcGI4aTY0aQptekxmZEpOZVVXTllXQ0NtdW9PeUFvTnluQUtaZDFvMXhxc2Mya0djeUZtWXd6WXUrVXY1QkhaTC8yRSt0dXBGCmNJdkFGbm9iWUNMNDM4SFYrSzVlNjhRaWNoMzlRUDd1TnhJaEFnTUJBQUdqUWpCQU1BNEdBMVVkRHdFQi93UUUKQXdJQ3BEQVBCZ05WSFJNQkFmOEVCVEFEQVFIL01CMEdBMVVkRGdRV0JCUlFaOWdvN2pXOEtTRjlldXg3dFJ1egpSckMwZnpBTkJna3Foa2lHOXcwQkFRc0ZBQU9DQVFFQWZEQXZRNUc0aUxTK0N6ZXQ1TS9zMXdzaEhZdENsdlRPCk44N1RxMzRlWGhHalE3allVNjdhbGV0aThkWDdkU083T3hGNnRHTSthcHQxZ2VnelRac003OHFieDByQXlyK1UKOVlLd1pOSUp3c2RYbjJYMzhnRW9GQXV2M2V1dWxpM0tPR3BjT2Z3K1hTS09NVUhZZWsySWxKcndBa3B2NTNaWApBTk1PRHpEVFRIbnRkSzc0czZSV2VvTnNWeHJEU1IzL3JlOXViWG9taDE2NVhmdStLRXlzNXorSlFZbVU5YXZPCk92Qm05Tks3WUhlaW5mY3FnZ0wwaU5UOWkzTDY3N25EQ0JmYnNhVVJiVGg5dDVDLzQ1eVdqRUVmWnc4SmlzcXgKVEJOT1k2S2VmZnNsZTQ3STJTdlFJTGpneFhMcS9ZVTZSMUZha0VrMDkwMnZCd2FNZ3RET1N3PT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=",
                            "verification": {}
                        },
                        "mode": 384
                    },
                    {
                        "group": {},
                        "overwrite": true,
                        "path": "/opt/openshift/tls/aggregator-client.key",
                        "user": {
                            "name": "root"
                        },
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcGdJQkFBS0NBUUVBejRWVURCSjVtY3VDMjNoSURpUzBjMC9DNjRpb04waStISTRvODJ0RlRHRGJibU9tClEvQUtSQTVnelF3UWZFNHZjQkQ0WkVsc3djQm94a2o5cUovR3NMVkNuelZQd2hrSUYyQnFWTHJZMW5yd1BwU2kKQW9VNGhqTFR2VExzOEszTDNpNTBmNUdsalFSMHdtY25HQk9lVUdFamZSN0lCVG15Z3psQmpSaHgzakpQcVpGVQpEOU9kTncxT1ZUb1VDU2hsbkNZeWFsTTJKSTRXWWExTjRoZS8vVWUrTFdza3ErV3lON1ZQV0QvR29aM2pMRDJ5Clo5ZHhxMFp4MXpoejRTKzhtZ1dpTXVYaXNWeFdmMFhONWlBYUNjS3VycExhU211Nk1NWi83ZEtBc2dLaEpMSXgKc3BweGNXR1lkV3drZHdZWllJVFdRaXlKUWtaZXRHWDJVczhxV1FJREFRQUJBb0lCQVFDY29Fem5MNnFINFlwSwppMllYQnEwTHUwK3E1ZUhRbUI2ay9zYjVzaVVEbUxjRmdrQ2pWakRwWE5EQzhqQWZJZ083MlpNZ1hpcXZzY0ZpCnB3U01tTXNsNUNqOGNRaFp2dnJVYWZqWEtvOHVrbXR4VUUxWENhVzM0L1RiLyt2RlcrZGJNa1RMWStwSG5PMWoKTE9mY3pESFpDUGY0SDV0b0Zqd2R2c0V5OVJnOFV2RE1XU00vMGltMkZzYlk5TUhBUkpCRmhRRWdabVd3NXFUZApOamViWWNaQVV3UFRxeGk4K3hmY3lkU3VyNnpRMXNoMGNueWFJaS9MVTZPaXZ5N1FxUlhYWlZta25tREdyM29LCktYcFFrS2tROTFYR2lnallmUC9ZdnJGMXlWZytVdFRRRjZmNm4wUHl6eW5Yd1NwY0pKcU5YK1MzcFpSQ2ErRVMKd20vc0lZZ0JBb0dCQU9TR3grMVBVeXdhK200Rm5BRndjcWlhNk9hTHRHYWlyK3lKcVZEN3hFL1h5OG5NV3BrSwp3SVNvbC94UktVUzdPRXQ3ZXpPRnRTTEMxWm41UDdvbTVFck1YSTEyY1Q0NVFkRXJ1UHFlN29JckZ0TVIvM29XCm9rKzRDVFh6MXFHOE1rWFd4UmJlbm84NXVsT2VrRzNkbTlhZFBveFdQdzFTaWJGTlZndERucDg1QW9HQkFPaDQKRVpJRGx0L3lTM01oWkdJUTMyTkZuSDJtaFVZM1BGUE9yd3NzL3NJOVNPeHZ1aWQ1SVJobS9FYkUvQjF6bTFQNgpmQnFKczZBeVZESjNrTFlBanJ2S0grZVloRmtXZzI4MVRwMFI1RDRPY3dSU2xvYVNFeEpWb3ZIWWpuTmxETlRaCjJSczY5WTVudjZHMnRwcS9tRVJvb1A1blFnSzB2RjZUb3M0Z0hjUWhBb0dCQU9LM2ZIMUlwMkVvV3E3d1RiZDMKMGFqSUZxc3lpb1VRZmF3VFhyRUROZDFvWDdzU1RBZHREVllPMU1uejB4ZG5EaENFcnRPTW9RbWRkY0JOOFJWRApKRlc0clZHQzRoSXpSOEsydDh1Y0JVK0taQmgrMEpCVkNDNUNqSkRFR25sV2RpR25VdHkvZTFyb2tKd0l3WXpkCndJK0liTmRaY1RCTVpHSk1NVUwza05TeEFvR0JBT051bkpvQ292Z0QvMmJxMDEvUjdBc2VUb1RyaGxYMHNqTzMKOEs3NVhXREJQbmY2c3QvdGRNQi8rTzV2eDh3MGoxRndyVHYxWG1RcStRN0t4U3dhallvUnJIY1RVdUFwMDNyWQpaMG5wK0NmeVVQcDRwa1dQNGRLOUw0WjJmSjlPekdmdG5hY3pYb3ZzMnFHbXRTM2VwbVMvREVyNDBLNy9EWTlsCjF4RGNnT0toQW9HQkFOQzZFaG9kOVU4anhubEsyRTF1c3pQMXBjNTJTbWxLZ0EvOTVxOTRIN0NVTlFhaEhYY3MKTTJjS3R2UW1XMExDbVlvRVk3WEo4YnhhY0E3aTdRRU9GTnMrTzZkRTNzVGJ3ZVBGT0VvcHZNcTV3Yy9Lck9LdQp1bmRBTlhxWUJuU3VQSkhkR3pHS1VYM0UyTXJNdS9NUUJoclh2RVJVak1PSEdVYU81WVhQejYyUQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=",
                            "verification": {}
                        },
                        "mode": 384
                    },
                    {
                        "group": {},
                        "overwrite": true,
                        "path": "/opt/openshift/tls/aggregator-client.crt",
                        "user": {
                            "name": "root"
                        },
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURZekNDQWt1Z0F3SUJBZ0lJSUxQTWxJYnpVZW93RFFZSktvWklodmNOQVFFTEJRQXdNREVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1Sb3dHQVlEVlFRREV4RmhaMmR5WldkaGRHOXlMWE5wWjI1bGNqQWVGdzB5TXpBMApNVGd4TXpBNE1URmFGdzB5TXpBME1Ua3hNekE0TVRKYU1Ed3hGREFTQmdOVkJBb1RDMnQxWW1VdGJXRnpkR1Z5Ck1TUXdJZ1lEVlFRREV4dHplWE4wWlcwNmEzVmlaUzFoY0dselpYSjJaWEl0Y0hKdmVIa3dnZ0VpTUEwR0NTcUcKU0liM0RRRUJBUVVBQTRJQkR3QXdnZ0VLQW9JQkFRRFBoVlFNRW5tWnk0TGJlRWdPSkxSelQ4THJpS2czU0w0YwpqaWp6YTBWTVlOdHVZNlpEOEFwRURtRE5EQkI4VGk5d0VQaGtTV3pCd0dqR1NQMm9uOGF3dFVLZk5VL0NHUWdYCllHcFV1dGpXZXZBK2xLSUNoVGlHTXRPOU11endyY3ZlTG5SL2thV05CSFRDWnljWUU1NVFZU045SHNnRk9iS0QKT1VHTkdISGVNaytwa1ZRUDA1MDNEVTVWT2hRSktHV2NKakpxVXpZa2poWmhyVTNpRjcvOVI3NHRheVNyNWJJMwp0VTlZUDhhaG5lTXNQYkpuMTNHclJuSFhPSFBoTDd5YUJhSXk1ZUt4WEZaL1JjM21JQm9Kd3E2dWt0cEthN293CnhuL3Qwb0N5QXFFa3NqR3ltbkZ4WVpoMWJDUjNCaGxnaE5aQ0xJbENSbDYwWmZaU3p5cFpBZ01CQUFHamRUQnoKTUE0R0ExVWREd0VCL3dRRUF3SUZvREFUQmdOVkhTVUVEREFLQmdnckJnRUZCUWNEQWpBTUJnTlZIUk1CQWY4RQpBakFBTUIwR0ExVWREZ1FXQkJUZlUvMWxHRXUvekl5aUVmdDluNkt3ZWtaQUd6QWZCZ05WSFNNRUdEQVdnQlJRClo5Z283alc4S1NGOWV1eDd0UnV6UnJDMGZ6QU5CZ2txaGtpRzl3MEJBUXNGQUFPQ0FRRUFjL1FkdDFpVzNFM3gKNnBRY3BKS09IblpVbmw4bFhqZmxwS0lBQ2hjRnVPSlVIMmVKZjFEdlZrbW4zdU0vcVFxVHUza3BkQWJ2WXIwNQpSWDk0QkRwZzNTZUN6MzJyQlZnbHF4VHh5QVIvRTU2TWt6L2x6RGZNMlVvazNGRGlobWlQYXJwb3Z5S21yZzF0CjBvZDJIYjI3cVVWUHhSTjk5QXR3YVQyazIvRHQ1VEVodUY5MldTZlVjemk3Rk9vaEVNV0NHYk9mRXlUeWMzUCsKSkdoRlRDSWI4SjcrVlE4NU1EeHpVMktzdisxRHRWNWpmTzNYenV2Y2VxeWk3UFJISjZxRWIrbE5yVWpiZlRlSgowV25ySkFEaW1DZThSdG9aSmFYaEJMZE1sUEdPWHB5TDJScUVvSFZuL1pibUdjQUhmdWF0SlNYaUxENG5UNXVYCnNGRDliTnFnZ3c9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==",
                            "verification": {}
                        },
                        "mode": 384
                    },
                    {
                        "group": {},
                        "overwrite": true,
                        "path": "/opt/openshift/tls/aggregator-signer.key",
                        "user": {
                            "name": "root"
                        },
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBeFhpSlFvbGNLZDF3b3pBYmEyWnVtRHZPSjN0TzhOczdzKzMvVU1DdE9CR1R6T2hrCmJIZmxVRzVTTm9wK0xHdlYvaWplWkt0SDd3RHlPL1diRlJpT3YvdjdZSTdEd1R4d2RTeEV6aGIzS2ZYdzFsVDQKeENONDkvRkw5amppMHZRbGEyV3hVYlg0YjhiaHdoQy9YbjJUQ2ptc3I0UVZHNC9qL3o2QWJuV3M2STdUMkhNeQplK3BtRlpWM1lMUDB1OW9FcHdxaHFQK1lMc1cwUDFDNXFYcXIwK1l3emdCcmpVczFVTm9pd21HYVhnS1cvSXV1Cklwc3kzM1NUWGxGaldGZ2dwcnFEc2dLRGNwd0NtWGRhTmNhckhOcEJuTWhabU1NMkx2bEwrUVIyUy85aFByYnEKUlhDTHdCWjZHMkFpK04vQjFmaXVYdXZFSW5JZC9VRCs3amNTSVFJREFRQUJBb0lCQUhjbDFuUCtHMHpyWHNZbwpCYk5VMTlBazdhdW0zQ2U1c0JsTnRlcU1oemU0YTF5TXIrTStxRzlTVVdxMVA1SWY4cnRxLzF6d2QvTyt0Mm4wCk5JR1RFcmJHSEpQVE1Fd000ckhnWnhlT2hjMmNwcGM4SitsNG1jbklueFBPbVJXOTJFSW4xc2k5cWt3UFRUSmkKRm9XMThSMlBWU0dGNlpKNnpJKzZyNVYyalVDM3ROaVIzMGRjM1FnTVUvTCtBelBLcEdqT3NLN2hiQVUzUWw1dApqRlkyM21CNVYwS1dmZXZjQjlMTXZkdjVHMVpBOUtmSW9hbUVxU1ArWHJkU2t6ZXovSVBtWG9NeTVQdWkvRWRVClpIa25EV3dmczJ1M0g0Mm53TnBYbzI4c3A5M0R2QloxS3NQYmtvVEdvb0FoMU5hcEFvTXFRVGdKRWdXU2JFZ0EKU05uKzV3RUNnWUVBOUYxVkZaa1Zuc2o1MlU1SFhlaVVSV1RCdzRxZk1XeDhHUWFqT2NuYnBUTGxBVHpvQjBZaAprenZIQmJvK0pvVzBuNFkxeXpGS3F4cDNhcjViTFJQMTByZGhMY3RrN2JlWlluNXk3dFhMaGxGMGtrQW1sVGUyCkE4ampsSlhVcWIrWHhKNmhJSCtvVmlhZCtFZWNvandsK3J0a2RWbk4vVFVPS1lVUjNqOEFoaEVDZ1lFQXp0K1kKYTRMR3FhZlJOeWM4L0I1QzZxdWcyODNERjFhempJcGNPN3lRTjFMcE9JMllMenBnZWVTZXJtMEt1NkE4OWNzcwp5WERTM2MzakplOEZHdVplSlpCbFpOVWxhNklqTWt4dlp5blBXYUNkejQzZWprOWJNU0VXcnJOYWJnaEdFSTlTCmhvVllNY1BBVHQ5RUNZUVdBVGFIVXZqa1A4RFR4OXh4Vm42RWV4RUNnWUJ5bGMxTyttQzcrMHZGVFVLRDA0cXIKVzRyTWNaVWliTmRvT01lVFVvZFBXS1V2eG1xYTlwVEo0STc3clpCMUtkOC9xb1JSQ29VVDVLNDRmSmh1Yzl5aQplV0QxUTFuSmFuMWZSU0lKd25EVVJCL2djSHBuSUIrV2VMM1dyOGR2N2FweUJWeFN5K21ZdERVQTlqdUppNkRYCmlNV2JqWWZkQXVMb0wwRG9zU3hDc1FLQmdRQ21LMUJoTzJDY01pS0piTWs5c29rSnV1YXc2Q3lHK0t1c2ZnN3MKSk9DcXI3eUtJcUpWZlV5MVhJQmhsMUVCdVFwK1hMOFM1NzlaVHVIZ1BJZ2JQV1B1UkhoTmNEQm9yb29iQXU2UgpMVEpTeWdNNURybndFYW9zWW1tMzFuVVM0UzUyYXNsZEtJclpIbVhBZFBKUHVudDZhZlIxSDFzb0lwbDZkb1hMCmRrQ3dJUUtCZ1FETzJ0ZkxYdUZ1YUlKSU8zY2E3d2VGK29WTTQwTmNYMWpzYzI5RjdQUzlFZEVlN0h5eDFKN1YKSDM2S0JQc3UxQXppay9oQ0N3UjljZjlHakhkbXpKc01peDdaUXR4dEk1WkFJQXdweG9XUS9LMzJma0lLUFl3TApNcXBEN1luS3R5VXpLWS9MMDNldGVjWjQ3Z3ZEU3dxTmhjSnA2OEc2dWJCbHliazdOcWdackE9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=",
                            "verification": {}
                        },
                        "mode": 384
                    },
                    {
                        "group": {},
                        "overwrite": true,
                        "path": "/opt/openshift/tls/aggregator-signer.crt",
                        "user": {
                            "name": "root"
                        },
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURKRENDQWd5Z0F3SUJBZ0lJVXV1NFpiOGh2dDB3RFFZSktvWklodmNOQVFFTEJRQXdNREVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1Sb3dHQVlEVlFRREV4RmhaMmR5WldkaGRHOXlMWE5wWjI1bGNqQWVGdzB5TXpBMApNVGd4TXpBNE1URmFGdzB5TXpBME1Ua3hNekE0TVRGYU1EQXhFakFRQmdOVkJBc1RDVzl3Wlc1emFHbG1kREVhCk1CZ0dBMVVFQXhNUllXZG5jbVZuWVhSdmNpMXphV2R1WlhJd2dnRWlNQTBHQ1NxR1NJYjNEUUVCQVFVQUE0SUIKRHdBd2dnRUtBb0lCQVFERmVJbENpVndwM1hDak1CdHJabTZZTzg0bmUwN3cyenV6N2Y5UXdLMDRFWlBNNkdScwpkK1ZRYmxJMmluNHNhOVgrS041a3EwZnZBUEk3OVpzVkdJNi8rL3RnanNQQlBIQjFMRVRPRnZjcDlmRFdWUGpFCkkzajM4VXYyT09MUzlDVnJaYkZSdGZodnh1SENFTDllZlpNS09heXZoQlViaitQL1BvQnVkYXpvanRQWWN6SjcKNm1ZVmxYZGdzL1M3MmdTbkNxR28vNWd1eGJRL1VMbXBlcXZUNWpET0FHdU5TelZRMmlMQ1lacGVBcGI4aTY0aQptekxmZEpOZVVXTllXQ0NtdW9PeUFvTnluQUtaZDFvMXhxc2Mya0djeUZtWXd6WXUrVXY1QkhaTC8yRSt0dXBGCmNJdkFGbm9iWUNMNDM4SFYrSzVlNjhRaWNoMzlRUDd1TnhJaEFnTUJBQUdqUWpCQU1BNEdBMVVkRHdFQi93UUUKQXdJQ3BEQVBCZ05WSFJNQkFmOEVCVEFEQVFIL01CMEdBMVVkRGdRV0JCUlFaOWdvN2pXOEtTRjlldXg3dFJ1egpSckMwZnpBTkJna3Foa2lHOXcwQkFRc0ZBQU9DQVFFQWZEQXZRNUc0aUxTK0N6ZXQ1TS9zMXdzaEhZdENsdlRPCk44N1RxMzRlWGhHalE3allVNjdhbGV0aThkWDdkU083T3hGNnRHTSthcHQxZ2VnelRac003OHFieDByQXlyK1UKOVlLd1pOSUp3c2RYbjJYMzhnRW9GQXV2M2V1dWxpM0tPR3BjT2Z3K1hTS09NVUhZZWsySWxKcndBa3B2NTNaWApBTk1PRHpEVFRIbnRkSzc0czZSV2VvTnNWeHJEU1IzL3JlOXViWG9taDE2NVhmdStLRXlzNXorSlFZbVU5YXZPCk92Qm05Tks3WUhlaW5mY3FnZ0wwaU5UOWkzTDY3N25EQ0JmYnNhVVJiVGg5dDVDLzQ1eVdqRUVmWnc4SmlzcXgKVEJOT1k2S2VmZnNsZTQ3STJTdlFJTGpneFhMcS9ZVTZSMUZha0VrMDkwMnZCd2FNZ3RET1N3PT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=",
                            "verification": {}
                        },
                        "mode": 384
                    },
                    {
                        "group": {},
                        "overwrite": true,
                        "path": "/opt/openshift/tls/apiserver-proxy.key",
                        "user": {
                            "name": "root"
                        },
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb2dJQkFBS0NBUUVBdmxHQ3VZK2pPWDI5diszZFRWK2FITmFDQjhzeUNOWElBUFJweTNwSnFZWng1YXFPCkJMUFFvbUtiSGRMVUZUc25IM3hpeGsrYUY5aVlGbEJ4OVlzTWtwa2Uzd0liVVBjVzhBbXpWVDdSaXNjajVmLzEKeGZ5VGQzaFYxZzJ4ZVpUYStHdkx1U0Z2b1ZUMS84dTc4WjJPY1Y1bllhbnF5RXJMMWZLQ1I3N0c5U1dnREd6QQo5a0hKZytJd0dhc3V0N1pKSGIrTDhTSUZQYUhNUU40bXhZMHE1N0hRUEZNam9CSjJ3cXRjRWdMYldYN3lpamJUCnpuTFFXckFjTkl4Y1lpZi8waE1BZTNRaXV6WHhuQ2ZnYUwzR2lSUlVlUXEzdWpLZFFmeVdoUFNLWEFVQ2lFVTMKYlBORDdvTVZ1L0EzMmc3RC9yOXVuZUxpcUxvSC82L2JnTVd6dXdJREFRQUJBb0lCQUczUkt0VllCSjlQNXdXdwpnMW42S0RzcnE2eERtNE50bUJLMDliYnJ3VVdJeG4vM2dpdEVkc2E4anpVT1NrSlY5NlU3YU9OMVd6MFhSZXJhClVHZVc3SkpLdUgyR0FhMGVacVhyY3dkbFVCUDhCTUxhaHo3UEYyaUFqMGNNYjdQd0tNbmZxWllSclJBeXJpQUQKdDFjYnl1MnZ3NGVmUEZLR2xrZkZ2MWNXeGtiOWhlL2hla3ViQVR2YkloTGNsNlozRm9IYnN3cGowbFhDd29SSgo3RFNwM3hpRUl4d29rTlV2a2FobHRwbWJyN005Z1FFZEFuSHdGSGo0ZmlnMEcwT2o3UjFOQitJY0orSFBCQkJUCkNEWTdSUVhmTVNORDc2TmFaeUpUU294ZiswaWZSWXo3Z1Q3L1Q2NlEvMEg1MmFhakQrUGk4ckxsSVFMU0pvOUYKNmg1MHlVRUNnWUVBL0ZkdlBBdnNCUjFoM3lVQzRvVkNtQUZtTktNWHNTZE1uNjNFMkowejlPYUF0cmxXNHNOUQp5eDNZUVdxaUlERDJrcEl4enJpYTMrT2FiaVZ6S2FrWlc1L1lpR0Q4RmdUL2xwcmRzTnplSCs1cEFqZktvNVB2CjhsTlJ2VXBMWXpqVmVreStUeENEd29oNlczSnJNdzRNM3J6ZzRJbHZ3dnNLYlo4QWlNUi8rZzhDZ1lFQXdSUGcKbGF0c1E0TzNhR3RUQ1o0U0ExNW4wbXFrbHZYYnNycFZKVGw1b0NMYkJRblBzOXBSRmdJa0x4Tlo4OTR4c2VydApWRVVhL3hTWC9NeHFkdHFqMXJkaXgrL0VFcE1TYU4rcUdCWjk3Zm12cVJza3c1R1Y4YnpUbUlPSjlmVjF1MkhQCkRvWlpheG1yRFFUWFVCSmhLdWtJWDY2VTVDa0l2RzdLSHhnaFI1VUNnWUJ2b3pjQTk3MUpYZ0JvdW5VV1JpSjYKSVZSWVFUZEFGc1RkZUFFNFhBUWFlc2ZERHlnVFZwbXQ0dHhEeEt0SlZxQWZwRElJNUw4UUFoL1dUeGN0L1RQTQp4MkVDcFBXaHdFQmJIdFNwWkcyWTd0N2lMbENtSWRMc0FGU1BUQWtpTW9pdmZMaE5QbDhzZHppNnNGb2cwang3ClpsQ094Zjc5NGhady9RRTlnTUdsblFLQmdEM2ZxdGNMNmxQd2YvUWNnSzNTVkI5MFAzMDA0NjNrK0JUY2xiQ3EKTEluZTRhVkpzYUFIVkhqakVzbHJRQ1pnakRoaCt0QkluUkFsZjFkcUFxdzRBTTBzVTZHUytwaWhQUU1TdWlXaAovNVVsc045V2JYK214aENEM0tOQmRCSzRLSlIyRWE2cjZ6ZmhMK21xSlgzcGhlNEVZOFNWNCswQ0lXU1JkSUJtCmNUUEpBb0dBSy9QUWJUQzlYczUxM1VRMk9WeVhRU1h6Z0hXY0l4ZWVyZHYvMWREYzgyalM4aFd2TEZIZVhDbGEKWkludEFNL0tKK2VIZmlGTWMrcEQ5WHBCQ0UrT0Q1VmJrTk1Ia000RCtWSnBWSnpkcXorOXg0VDZsTi9TWDVuUgpqZkwrRXdjVVFJVUhFMmo5TUhVOFE0ejdmYXdXWlhjUWhBektJRmE2QUVyOEJwbWx5cUU9Ci0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==",
                            "verification": {}
                        },
                        "mode": 384
                    },
                    {
                        "group": {},
                        "overwrite": true,
                        "path": "/opt/openshift/tls/apiserver-proxy.crt",
                        "user": {
                            "name": "root"
                        },
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURXekNDQWtPZ0F3SUJBZ0lJZFM3OVJlYkp2c013RFFZSktvWklodmNOQVFFTEJRQXdLREVSTUE4R0ExVUUKQ3hNSVltOXZkR3QxWW1VeEV6QVJCZ05WQkFNVENtRm5aM0psWjJGMGIzSXdIaGNOTWpNd05ERTRNVE13T0RFeApXaGNOTWpNd05ERTVNVE13T0RFeVdqQThNUlF3RWdZRFZRUUtFd3RyZFdKbExXMWhjM1JsY2pFa01DSUdBMVVFCkF4TWJjM2x6ZEdWdE9tdDFZbVV0WVhCcGMyVnlkbVZ5TFhCeWIzaDVNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUYKQUFPQ0FROEFNSUlCQ2dLQ0FRRUF2bEdDdVkrak9YMjl2KzNkVFYrYUhOYUNCOHN5Q05YSUFQUnB5M3BKcVlaeAo1YXFPQkxQUW9tS2JIZExVRlRzbkgzeGl4aythRjlpWUZsQng5WXNNa3BrZTN3SWJVUGNXOEFtelZUN1Jpc2NqCjVmLzF4ZnlUZDNoVjFnMnhlWlRhK0d2THVTRnZvVlQxLzh1NzhaMk9jVjVuWWFucXlFckwxZktDUjc3RzlTV2cKREd6QTlrSEpnK0l3R2FzdXQ3WkpIYitMOFNJRlBhSE1RTjRteFkwcTU3SFFQRk1qb0JKMndxdGNFZ0xiV1g3eQppamJUem5MUVdyQWNOSXhjWWlmLzBoTUFlM1FpdXpYeG5DZmdhTDNHaVJSVWVRcTN1aktkUWZ5V2hQU0tYQVVDCmlFVTNiUE5EN29NVnUvQTMyZzdEL3I5dW5lTGlxTG9ILzYvYmdNV3p1d0lEQVFBQm8zVXdjekFPQmdOVkhROEIKQWY4RUJBTUNCYUF3RXdZRFZSMGxCQXd3Q2dZSUt3WUJCUVVIQXdJd0RBWURWUjBUQVFIL0JBSXdBREFkQmdOVgpIUTRFRmdRVVJwNU92L1QzVjNyc0pBOEtxM2hQVFpwOXBNc3dId1lEVlIwakJCZ3dGb0FVRmpIb1NJbHVEUkRUCnBYZEpBcDVTd1NRY0RNY3dEUVlKS29aSWh2Y05BUUVMQlFBRGdnRUJBRjRoTy9BY04yb25pQ0djRnNzUFEzWkYKaUZWbldGaXZyQlprNHloY0tBN1paUllhQkZXZDVGc21Uc3VGYy9tRWVQdEdKaEpDNUhCZFNvOVEzWXBISzEvawpZSU5aN1B0OEhsNmhva2p6RTlyWFlWTlFmNGFUSmpiZ3FQblU2OU9TNHAyR3dLb3dTMU00SkRJWjRqeUViRHlMCmg3UW93YWlYQXE4WlJoeGtUYTViSERIZ2krRlZpSEVxVVUyeUZTOVB6emlKT0RsKzhYTitoaFZhcWRUOUdSbHcKQzg0anRBRUJUQ2Z5VlkwVEYxaU8yTnByc3hSYjRkOFlsZTcvRTFzbnluaC8rWTU1MnRPcUVVQlc0N0ZZYkFoMgpCczBGRElBYUExdExPeW9zbFhMSmhuT2RyMWZyYVpNajhIY3F3dHVvb2w3KytqRmFtT2l1bW95OUZ2R1RGRVU9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K",
                            "verification": {}
                        },
                        "mode": 384
                    },
                    {
                        "group": {},
                        "overwrite": true,
                        "path": "/opt/openshift/tls/kube-apiserver-lb-ca-bundle.crt",
                        "user": {
                            "name": "root"
                        },
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURNakNDQWhxZ0F3SUJBZ0lJVmRRYXBmejA3V1l3RFFZSktvWklodmNOQVFFTEJRQXdOekVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1TRXdId1lEVlFRREV4aHJkV0psTFdGd2FYTmxjblpsY2kxc1lpMXphV2R1WlhJdwpIaGNOTWpNd05ERTRNVE13T0RFd1doY05Nek13TkRFMU1UTXdPREV3V2pBM01SSXdFQVlEVlFRTEV3bHZjR1Z1CmMyaHBablF4SVRBZkJnTlZCQU1UR0d0MVltVXRZWEJwYzJWeWRtVnlMV3hpTFhOcFoyNWxjakNDQVNJd0RRWUoKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBT2plM2dzZTgzYzAyd29VVk9hUXFwNFZVUzIwcE8xeApJbEhKZHJ0Yk1ObHZDWjVrZkIzWnFWUkxFSkNSM3YvZ0JDNzJSdjEwQlVRTE9GN3A0ZTZMTENJM214T2dSWU1sCkVzbS9tcnFseXBiL1c2OXc3NXVhWFdEVk00Y2dJN3EvOGtLemlPdGtMYkdabXZZU0VHWFArb256VTlQUEhQWkEKRWdRVlZFRER0UU1pa3h5aXFkZ0I3cE1sVXZqWGZnWjR2Qjc0ZnN5V3VEVmlDL0ZidUVKbFBGTS90MUd6eEpCbQpEOHk1OXUxdGhtbzFjVk5qNEFxZFpZWUtoSHF2RlA1SFBiKy90QW9TR01NMnN5dzBzdWtzMC9FalVKbHkzei92CkRwSUJ6bGFGMW42dVVLcEJDeXJ6K21ucCtJbG9aMUx3bmF3OS9OWHAxbmR2VkhXL05uN3hIM2tDQXdFQUFhTkMKTUVBd0RnWURWUjBQQVFIL0JBUURBZ0trTUE4R0ExVWRFd0VCL3dRRk1BTUJBZjh3SFFZRFZSME9CQllFRk9ibgpHT3FGdFAzdHJQbVBqQW1PQTI3WTV1MDNNQTBHQ1NxR1NJYjNEUUVCQ3dVQUE0SUJBUUNMUm1uZkp3bUsyK24vCnZRSnJVS0hWTTVJbVg4UlRaTk9uWWw1RVhYVXhFcklyckJIRklyelVNMDhTZUtXcEJodERqWDNnMlpVWGdSNEIKRDNZd0o5eGRLWEd4OEFaa1RBcThTeDJHT2lvRDdqaEhTc1RXWlE4NkVVWGFJSmttb2dqMVFxeHlFUUlGZ0JkVQpuekp6RFZvVHA3ODNhU0JQL0Uvcmlad0tMdUhIKzBSOHA5Q2YzWTZ2UTVoT3hEM05yOThWZm9pUldYQVV3aGVICmVNUzBOSVR0OE1qSHBWN0JEODBqYk1hcW13cmhTZVBnYWppcEN0WXV3SUJCT3hwd2Y2VDVYZlhkOHZFNms1SEYKbWxkQ3I5N0lhMXZURmlvaG1IaG9yMjlxeFZvZjFuejdWUzAvK3hwRE83RldxWEpZM0FrdUVmbWtxVzJITVBScApHZkJJVFI4TwotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==",
                            "verification": {}
                        },
                        "mode": 384
                    },
                    {
                        "group": {},
                        "overwrite": true,
                        "path": "/opt/openshift/tls/kube-apiserver-lb-server.key",
                        "user": {
                            "name": "root"
                        },
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb2dJQkFBS0NBUUVBenZXWWtNcWJXZVF0bXNaRU1HWDJEMmluakdGMWdDSWVwUEI2VjBSUVZLUERubm43CnB6Z1lxVHhPRG1KNDJwSmdHZjZud1ZNY0JvZ3lMQ1pmVTZod09PRzhmdkdEU1lNMVFKT2NWTGZqU3BsWTVlQVkKd1dNOWhlcVBHTnU2am8rR1F4QzNwdkxrcTE2aVpqczNudHVTMkVqd3FZOHBNc04vSHZvUEtvMm96TzU0dGZ2bQpzdVd0QTVXS2xTQXRMelRvaEpQRWNGWnZ2VUV1VDlPUHlOQ1JMNzVMdmtNM3RuNXlqYzBPY2FEYXFRQ2I3RkdtClZiRVc3UWRSMnVsMi8wVUYrdWt2MUNYTkFQRi9qeDM3cW5CZ2F1R1ZLdGxxNkpvYUYweEI3dFRaQU01ZS9FbjgKWDNWV29OZDRXTDFKSzZsb29jQ3U0cW9tOUFEWnBoSFQ4VGovQXdJREFRQUJBb0lCQUhqNFB6UXE2VUZTeVlGVgpjSmdsa1AwU3ZCU25Cc3BkcHpIYnluYmwzRnFNMnBQd1V6TTc2OVpJQkl3TjdQdzlZT1R3MzlkMW44VUZxT1g3CmkrN1hYcmt3NFVBR0pTbzhBazE3dW40ZWVrR3BmcmZuRkRFOXM4RnFDRGlNZnZCRFhrUW5LbUh3U2M4TllybUUKMVk4S1l6dis3b1Q5eENRQzkzUUEwQXFjZ05VL1pjTmxxTEZKbDM4WEYzSnBNZEcxS2o2Mzl1eE84RmNGbmZsKwprT0NZS0NvZXVhNXI2YVU4TS9NVXBsTmNwU01PRDlUV2lwSEZhWEhFRmQ5eFFVU0FFN3laYWpyM2lBTC96a3RCCmYydlNUY0MwOG4rT2lMdk5jQ3doeVNnKzhVOGlnMFM2WHM1cEE3NU9FeDh2bUV4ZFZpdVJlTXI5SHdKbC9BTW8KWUV4Mkhta0NnWUVBNWZlOVJ2K2s1clp3WjNPUmJoRGJ2T1NyUjZjd0ZjQUZmbDJUeXMvTUdkR1Y3YVMwcmhDQworTlBVT05iZkNUN3ZRQkdxMU9WZXVmNGcyYnZ4YmFWNXhCV1JrRDFjcFdpS1Vab2U2a2YzTWdrVEhLa3ZLck5qCjNwNFBOaDA4d0JSNHNWTVVRNDdkVXBnUURIM3dOcnBMd1pXazFIZ1NoUUlIRVdUbHY1RVZNZGNDZ1lFQTVtTVkKS2RYSndTVHhtOTNuSG5vUVdyZ3ZnSGRXMmZCNEhSaTMrbU0vY2EzSTI0cnJzKys4UEFQZDhsSVdoUlAvZncybwp5eVEwUk1sd2VQZFd0dVNIRllSb0VIa2lzc2FKTnB4ankwUWJ1eVNVaXRxdjVWaDJkaHlmQUdDaUdzUml3cnl4CldlTHBwd2Jqa3NSbTYrSVBxckNwdmJlV0JhU3BibnVlS05VMURyVUNnWUJMejdrSlA5dTM1eXIxSDhjd3RzUUoKNklTQ2taNHJmV3NTTm4welhmK1YvMTdpd2VxQ2U1VUJ2S3Q0dFhVL2tnekRYVStvOFppaHppSThSVllZNUhWWQo3QmRacXJEeElwNSt1a1U0ek5LMEh3TzY3aGRMaDJvRUNLMVJGS0JqWGh4UHNPaThRTXU3bjcraXJwM1RIT1UrCmd6dWNnNXp2VmpUSVNpL25VRWZoYndLQmdBa3MxUitGWmgyTkRSbzZBaVJTbENnb3dhdUtGU2xrekVQTVlqZFUKa0loRWRZVll5UDVIZytXWCtkVFd0Qkxrc3Y0cVd4aUwvcERtdk5YMGM3Mmc2RWhSRjV2Z1Z5TnJpTGRtRHd0ZgpVUU5vOTRsNElCMHdJcmVkZUMrWnFac0xTeXVhUEMzcVBZZnJYRkRTQlk5TFYzaGl4TC9MZWV3TG5MdkxySWJQCnh1Y3BBb0dBTWhyQ0dyNGpycDBRdmFyLzdwb1B5SytERjJkd1I0VEw4UTNYVkY0QkxqNlQvVFN2aDB1bmRPd2cKVWtpRkhEVlUxV204cnduWFRTZjJ5RFdKa3U3SVB2UDY4dTRHMHJZV0lFbW0xT2M0Uk9hWHBJemtxNi95WjFWdgpGdXpJckx5MnVPcDdyUUloQ3pRVExNZHVBWjdqOW5FeFFEVmR0QlNwVGR2QmFkU2k4elU9Ci0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==",
                            "verification": {}
                        },
                        "mode": 384
                    },
                    {
                        "group": {},
                        "overwrite": true,
                        "path": "/opt/openshift/tls/kube-apiserver-lb-server.crt",
                        "user": {
                            "name": "root"
                        },
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURuakNDQW9hZ0F3SUJBZ0lJZGFnQUZSaVB0SDh3RFFZSktvWklodmNOQVFFTEJRQXdOekVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1TRXdId1lEVlFRREV4aHJkV0psTFdGd2FYTmxjblpsY2kxc1lpMXphV2R1WlhJdwpIaGNOTWpNd05ERTRNVE13T0RFd1doY05Nak13TkRFNU1UTXdPREV6V2pBMk1SUXdFZ1lEVlFRS0V3dHJkV0psCkxXMWhjM1JsY2pFZU1Cd0dBMVVFQXhNVmMzbHpkR1Z0T210MVltVXRZWEJwYzJWeWRtVnlNSUlCSWpBTkJna3EKaGtpRzl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQ0FRRUF6dldZa01xYldlUXRtc1pFTUdYMkQyaW5qR0YxZ0NJZQpwUEI2VjBSUVZLUERubm43cHpnWXFUeE9EbUo0MnBKZ0dmNm53Vk1jQm9neUxDWmZVNmh3T09HOGZ2R0RTWU0xClFKT2NWTGZqU3BsWTVlQVl3V005aGVxUEdOdTZqbytHUXhDM3B2TGtxMTZpWmpzM250dVMyRWp3cVk4cE1zTi8KSHZvUEtvMm96TzU0dGZ2bXN1V3RBNVdLbFNBdEx6VG9oSlBFY0ZadnZVRXVUOU9QeU5DUkw3NUx2a00zdG41eQpqYzBPY2FEYXFRQ2I3RkdtVmJFVzdRZFIydWwyLzBVRit1a3YxQ1hOQVBGL2p4MzdxbkJnYXVHVkt0bHE2Sm9hCkYweEI3dFRaQU01ZS9FbjhYM1ZXb05kNFdMMUpLNmxvb2NDdTRxb205QURacGhIVDhUai9Bd0lEQVFBQm80R3UKTUlHck1BNEdBMVVkRHdFQi93UUVBd0lGb0RBVEJnTlZIU1VFRERBS0JnZ3JCZ0VGQlFjREFUQU1CZ05WSFJNQgpBZjhFQWpBQU1CMEdBMVVkRGdRV0JCUlpyR3JQNlRMdHRiaWIyVzRwdWRqbjM3ai9kekFmQmdOVkhTTUVHREFXCmdCVG01eGpxaGJUOTdhejVqNHdKamdOdTJPYnROekEyQmdOVkhSRUVMekF0Z2l0aGNHa3VjbVZrY0c5a0xXRjMKY3kxemJtOHVaR1YyWTJ4MWMzUmxjaTV2Y0dWdWMyaHBablF1WTI5dE1BMEdDU3FHU0liM0RRRUJDd1VBQTRJQgpBUUIycmpDbjlibTFCeHRJU0dmd09wTTk0ZUZERXcxNnBRdUxNZzBFeGx4YUZwNEFGY1VobU0vbG85QUZCNmozCjVINWZHUkFlVm1JbkxJZHEwZWxhYThXekQ2ZnYrLzFaM2xBaHFxZmtxRnpzcytjTzJ1M1RzSXBZV3Y0b0UzeXoKVkczbGhCMldwVGh5Vnc0cmkzYnNoTnJDbmF4VTdvQzNRSCtQUUpERitCZEk5UVBHVHBzMlRDOFlCRGZNbVVYVwpLRzRUdmVldlp2SWhjVXVQZmxoazY2alNpK0pML2xSV2RhREQvaU16c3l3MGw4M3FkZUtjcEg1MFdwOFZJWW5yCmJIV3EzbEVRREFvLzBHcE9uTGtFQTVEOU1YNFVxQnpZV3oyUzQ0NVoxc2ZtdzF3eVE0NVJwN3dBbmd0ckc4eDEKRi9FTGQ2QzRoSXJiNlFBZmVjWHd6b1N3Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0KCi0tLS0tQkVHSU4gQ0VSVElGSUNBVEUtLS0tLQpNSUlETWpDQ0FocWdBd0lCQWdJSVZkUWFwZnowN1dZd0RRWUpLb1pJaHZjTkFRRUxCUUF3TnpFU01CQUdBMVVFCkN4TUpiM0JsYm5Ob2FXWjBNU0V3SHdZRFZRUURFeGhyZFdKbExXRndhWE5sY25abGNpMXNZaTF6YVdkdVpYSXcKSGhjTk1qTXdOREU0TVRNd09ERXdXaGNOTXpNd05ERTFNVE13T0RFd1dqQTNNUkl3RUFZRFZRUUxFd2x2Y0dWdQpjMmhwWm5ReElUQWZCZ05WQkFNVEdHdDFZbVV0WVhCcGMyVnlkbVZ5TFd4aUxYTnBaMjVsY2pDQ0FTSXdEUVlKCktvWklodmNOQVFFQkJRQURnZ0VQQURDQ0FRb0NnZ0VCQU9qZTNnc2U4M2MwMndvVVZPYVFxcDRWVVMyMHBPMXgKSWxISmRydGJNTmx2Q1o1a2ZCM1pxVlJMRUpDUjN2L2dCQzcyUnYxMEJVUUxPRjdwNGU2TExDSTNteE9nUllNbApFc20vbXJxbHlwYi9XNjl3NzV1YVhXRFZNNGNnSTdxLzhrS3ppT3RrTGJHWm12WVNFR1hQK29uelU5UFBIUFpBCkVnUVZWRUREdFFNaWt4eWlxZGdCN3BNbFV2alhmZ1o0dkI3NGZzeVd1RFZpQy9GYnVFSmxQRk0vdDFHenhKQm0KRDh5NTl1MXRobW8xY1ZOajRBcWRaWVlLaEhxdkZQNUhQYisvdEFvU0dNTTJzeXcwc3VrczAvRWpVSmx5M3ovdgpEcElCemxhRjFuNnVVS3BCQ3lyeittbnArSWxvWjFMd25hdzkvTlhwMW5kdlZIVy9Objd4SDNrQ0F3RUFBYU5DCk1FQXdEZ1lEVlIwUEFRSC9CQVFEQWdLa01BOEdBMVVkRXdFQi93UUZNQU1CQWY4d0hRWURWUjBPQkJZRUZPYm4KR09xRnRQM3RyUG1QakFtT0EyN1k1dTAzTUEwR0NTcUdTSWIzRFFFQkN3VUFBNElCQVFDTFJtbmZKd21LMituLwp2UUpyVUtIVk01SW1YOFJUWk5PbllsNUVYWFV4RXJJcnJCSEZJcnpVTTA4U2VLV3BCaHREalgzZzJaVVhnUjRCCkQzWXdKOXhkS1hHeDhBWmtUQXE4U3gyR09pb0Q3amhIU3NUV1pRODZFVVhhSUprbW9najFRcXh5RVFJRmdCZFUKbnpKekRWb1RwNzgzYVNCUC9FL3JpWndLTHVISCswUjhwOUNmM1k2dlE1aE94RDNOcjk4VmZvaVJXWEFVd2hlSAplTVMwTklUdDhNakhwVjdCRDgwamJNYXFtd3JoU2VQZ2FqaXBDdFl1d0lCQk94cHdmNlQ1WGZYZDh2RTZrNUhGCm1sZENyOTdJYTF2VEZpb2htSGhvcjI5cXhWb2Yxbno3VlMwLyt4cERPN0ZXcVhKWTNBa3VFZm1rcVcySE1QUnAKR2ZCSVRSOE8KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=",
                            "verification": {}
                        },
                        "mode": 384
                    },
                    {
                        "group": {},
                        "overwrite": true,
                        "path": "/opt/openshift/tls/kube-apiserver-internal-lb-server.key",
                        "user": {
                            "name": "root"
                        },
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcFFJQkFBS0NBUUVBd3lMZEdISklRY1RyNXpaeUhzdHJzTUFaWnQyMGV6WlB2ZkNYbEMvK2U1VU1HNGxuCm1HZDZXMFZlREgzSTg2M0xVTTc0enNWRkllKzdFUDZmbk1yTXY3anJxelZDMGptSUFxY3Nac1FjTGRCdUxTRFIKT2xGVGFiVUpHZU5yU3J2VlhacGsyTmtubnl6NWM2Mzc3Y0tQL1RFRno2cXAraUZIUHM2bnV0Rk0wSTcyenA4eQpQekxmTmhERE9CdkZDcEZFWjZYcVFBNmI1aWhYSWNlNzFaU0N3eHVwbWh3T1NsdzQ3M0ZqZ0pwQVVPSkxzVTY4CnliaUR0ZnVtKy9JMXY2SjdhUEl5dzNtSTRmQ1J2OXI3NHA1Mnc2SmhuZHk3elU3NGVUOG5TK0xUVnZ2L0Nmb3cKb0l6bndPdTNzaWY4MmRPc2FBcmU3cEtoWW1WcktFelR1Tlg5andJREFRQUJBb0lCQVFDSzgybHl2ZlliOXlodwpWUUhBVWVQV1VZUUZEcncwdklEZDVOTmE3eTRNUEI4S0FMYm0vRkJSYTd6RHNsSUV5dTJyRmladnZtTXkvaTA3CnRjUmNkc0NEaVI4dm85WjRNZ1ZhdGtYVXk3S3hJT2xEYzBucGQvMm9tUVBwRGxyWk5aV0NlSzExQ0hUQlVObzAKZUdDYmRsN24wUit0TjM2Z0lWQkZOZ3lUNS9RRjBYWjk5TGluaHd2ZmM4K1ZIMktla3ZBelhhWGdVWkV0aHBlRAplR0RBa0wzVk5jZWJkcVQremMxVUVZc2M4UElsNmJkZ1JMOUdaWkh6dlNoRW9JR0RDbmo2RTVkTGZrUHkvZ3NSClRlU1RYUGFsREFaM3BtUzdSN1BiMkM4S0JYSUxVYVZWTEMyTllGQUltTTdQQlBXRWZnQytHTXhSVU05V2VXTDYKQ3JEenhXMlJBb0dCQVA3QTdERlE4VlVmUTh1eFBkNzh1YUtDMkdieitKZFd0aU9GcytaRmdpRFBocmlWSFMweApmdHoxSGE4MDNSVW9uakNzOTI4cVJVTU1WbVhWa2xGb0tFVE5jVUdRTkN2L1plbG1vODJ4cUNNZDlUSWNOc1FpCjQzVjg1NHJ2WWVDSGJadTYweXJMMi9ObzVLdUZvVDU5cUdKUWFlT3pLbmpodnlSUkNibVdvcHJYQW9HQkFNUVgKUlVQTXVVWG1Qa0hDWkZ3RXJEV0MrTnFYUi8xVnp6TTFlVmh0NmxBbEwzYUY1dkZaUmVwZ0xpSEQ3SjBiUkFiegpVQlRCN3hzekJjN05YQm5Bc3I0N2RSWHFXaThjYlRBd09LZ2dITjBUQWdDVUNYeUpPVWk0SjdHdGRBSGx6V1NQCm1HaGZXUStNUGJYSDdtb1hsQzlxTjl0cmhXSGV3MlhQaGc0R01GUUpBb0dCQUlEeC9adG9zUDY0K0lQZGpzZVQKZkJLNXovY3NmaU44REcwbWU4eU9Xak5wVjNPT1psbzl0MHozOUxKK08zaytPZlBCV095M3BKOHZXM3ZvQWt1YQpRT2V5WlNVZWJJbm9tQmp2anZIS2ZxUm53WGcvdDZqSFVBSmoybjhFYzdKR1drQjg2KzI1aWZkR25KZ0U1M3pOCjliRHRxdXRLQUxGMjhsemJkK1NzVGxtNUFvR0JBSTVKb0g0aEdMT0s3ZFFEdlpVejRzMzFtcVByTUZhNHBHQXgKUmpzUGp2M1c3Y2pnUXdNUVYzWkpray8zL2tMR0hTZTUrSHNIZW54UEdzREVMVGVXcDF6NGdlNkVIaXFmUXUrNwpuZkVKVkVocTJZSVg2WVpQZ0p5dTNFYkdhUzVUVlNYS09McExyYkZsZndYZjdMVlpKTEwvTFVidmoxckVMUjg4ClpiYlpjTW9aQW9HQVQ5WmdKdlptWFVyR1YzZDh4R3dXYU9jU1RTK1NSR3F4NHNZd3grZE5FTzBEMXoxcmZZbjAKYXpNQXFpbzVZQ3ZPcEZBb3JrTkQ0QjNrY3BhRWZSUTFmQklXMGp4aXMwckkvbnFCaEs0SXd1bWdlVUgwTVQyVApBUnRaWEt0cWxXMnQvSXVpaTNJcVFzTlI0VTFjSFNCR25salJZUW5uNUFycGJKZDVMa0xoamRRPQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=",
                            "verification": {}
                        },
                        "mode": 384
                    },
                    {
                        "group": {},
                        "overwrite": true,
                        "path": "/opt/openshift/tls/kube-apiserver-internal-lb-server.crt",
                        "user": {
                            "name": "root"
                        },
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURvakNDQW9xZ0F3SUJBZ0lJWDR4TWZrL2FmYlF3RFFZSktvWklodmNOQVFFTEJRQXdOekVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1TRXdId1lEVlFRREV4aHJkV0psTFdGd2FYTmxjblpsY2kxc1lpMXphV2R1WlhJdwpIaGNOTWpNd05ERTRNVE13T0RFd1doY05Nak13TkRFNU1UTXdPREV6V2pBMk1SUXdFZ1lEVlFRS0V3dHJkV0psCkxXMWhjM1JsY2pFZU1Cd0dBMVVFQXhNVmMzbHpkR1Z0T210MVltVXRZWEJwYzJWeWRtVnlNSUlCSWpBTkJna3EKaGtpRzl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQ0FRRUF3eUxkR0hKSVFjVHI1elp5SHN0cnNNQVpadDIwZXpaUAp2ZkNYbEMvK2U1VU1HNGxubUdkNlcwVmVESDNJODYzTFVNNzR6c1ZGSWUrN0VQNmZuTXJNdjdqcnF6VkMwam1JCkFxY3Nac1FjTGRCdUxTRFJPbEZUYWJVSkdlTnJTcnZWWFpwazJOa25ueXo1YzYzNzdjS1AvVEVGejZxcCtpRkgKUHM2bnV0Rk0wSTcyenA4eVB6TGZOaERET0J2RkNwRkVaNlhxUUE2YjVpaFhJY2U3MVpTQ3d4dXBtaHdPU2x3NAo3M0ZqZ0pwQVVPSkxzVTY4eWJpRHRmdW0rL0kxdjZKN2FQSXl3M21JNGZDUnY5cjc0cDUydzZKaG5keTd6VTc0CmVUOG5TK0xUVnZ2L0Nmb3dvSXpud091M3NpZjgyZE9zYUFyZTdwS2hZbVZyS0V6VHVOWDlqd0lEQVFBQm80R3kKTUlHdk1BNEdBMVVkRHdFQi93UUVBd0lGb0RBVEJnTlZIU1VFRERBS0JnZ3JCZ0VGQlFjREFUQU1CZ05WSFJNQgpBZjhFQWpBQU1CMEdBMVVkRGdRV0JCUkJLVEJuWXRWYU5MbEdEaEpJM3dlLzN1N2lzekFmQmdOVkhTTUVHREFXCmdCVG01eGpxaGJUOTdhejVqNHdKamdOdTJPYnROekE2QmdOVkhSRUVNekF4Z2k5aGNHa3RhVzUwTG5KbFpIQnYKWkMxaGQzTXRjMjV2TG1SbGRtTnNkWE4wWlhJdWIzQmxibk5vYVdaMExtTnZiVEFOQmdrcWhraUc5dzBCQVFzRgpBQU9DQVFFQUJvVmtuZmRFQTRzT1RjWHVKWHZhTVArOXFwdWY0RERwb3JaUDVIaHJ6N21USXZubVcrYmVyb1czCjNxYTBuT3RJNDFlQnIrV0l4QlEvaDVIVS93M210czJSRSs1bUFWempUbGZUTTRONHlDdGFRbVJubE9wbVNvSngKMkk2NTcvc0YxRHZ2cm9XbWtRWkpWNzA4TFFrVmRJUlRHTm9oeEdtZEJCTnpFeGtuaCtKY2hOYk1vRHpCcXRHRwptdWZIQTF3UGMycWF0ODJWK3JIYTBadHMxdDloaEZ1SkxxRytVbFdpb01KWlZmZHdaSUZtRC85QnZDZVdaMURLCklJU1poOHdUb0kvV01heXZRM1ZZWkNabDRyME5WQWhMTlRpU3pPWlNIclZVU2N0M01aa2JObURNK0ZsL3V0bFAKdGJUb2E5cGVYWnlBL1BoaFg5ZWF4Nmhxc0dFa3JBPT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQoKLS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURNakNDQWhxZ0F3SUJBZ0lJVmRRYXBmejA3V1l3RFFZSktvWklodmNOQVFFTEJRQXdOekVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1TRXdId1lEVlFRREV4aHJkV0psTFdGd2FYTmxjblpsY2kxc1lpMXphV2R1WlhJdwpIaGNOTWpNd05ERTRNVE13T0RFd1doY05Nek13TkRFMU1UTXdPREV3V2pBM01SSXdFQVlEVlFRTEV3bHZjR1Z1CmMyaHBablF4SVRBZkJnTlZCQU1UR0d0MVltVXRZWEJwYzJWeWRtVnlMV3hpTFhOcFoyNWxjakNDQVNJd0RRWUoKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBT2plM2dzZTgzYzAyd29VVk9hUXFwNFZVUzIwcE8xeApJbEhKZHJ0Yk1ObHZDWjVrZkIzWnFWUkxFSkNSM3YvZ0JDNzJSdjEwQlVRTE9GN3A0ZTZMTENJM214T2dSWU1sCkVzbS9tcnFseXBiL1c2OXc3NXVhWFdEVk00Y2dJN3EvOGtLemlPdGtMYkdabXZZU0VHWFArb256VTlQUEhQWkEKRWdRVlZFRER0UU1pa3h5aXFkZ0I3cE1sVXZqWGZnWjR2Qjc0ZnN5V3VEVmlDL0ZidUVKbFBGTS90MUd6eEpCbQpEOHk1OXUxdGhtbzFjVk5qNEFxZFpZWUtoSHF2RlA1SFBiKy90QW9TR01NMnN5dzBzdWtzMC9FalVKbHkzei92CkRwSUJ6bGFGMW42dVVLcEJDeXJ6K21ucCtJbG9aMUx3bmF3OS9OWHAxbmR2VkhXL05uN3hIM2tDQXdFQUFhTkMKTUVBd0RnWURWUjBQQVFIL0JBUURBZ0trTUE4R0ExVWRFd0VCL3dRRk1BTUJBZjh3SFFZRFZSME9CQllFRk9ibgpHT3FGdFAzdHJQbVBqQW1PQTI3WTV1MDNNQTBHQ1NxR1NJYjNEUUVCQ3dVQUE0SUJBUUNMUm1uZkp3bUsyK24vCnZRSnJVS0hWTTVJbVg4UlRaTk9uWWw1RVhYVXhFcklyckJIRklyelVNMDhTZUtXcEJodERqWDNnMlpVWGdSNEIKRDNZd0o5eGRLWEd4OEFaa1RBcThTeDJHT2lvRDdqaEhTc1RXWlE4NkVVWGFJSmttb2dqMVFxeHlFUUlGZ0JkVQpuekp6RFZvVHA3ODNhU0JQL0Uvcmlad0tMdUhIKzBSOHA5Q2YzWTZ2UTVoT3hEM05yOThWZm9pUldYQVV3aGVICmVNUzBOSVR0OE1qSHBWN0JEODBqYk1hcW13cmhTZVBnYWppcEN0WXV3SUJCT3hwd2Y2VDVYZlhkOHZFNms1SEYKbWxkQ3I5N0lhMXZURmlvaG1IaG9yMjlxeFZvZjFuejdWUzAvK3hwRE83RldxWEpZM0FrdUVmbWtxVzJITVBScApHZkJJVFI4TwotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==",
                            "verification": {}
                        },
                        "mode": 384
                    },
                    {
                        "group": {},
                        "overwrite": true,
                        "path": "/opt/openshift/tls/kube-apiserver-lb-signer.key",
                        "user": {
                            "name": "root"
                        },
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBNk43ZUN4N3pkelRiQ2hSVTVwQ3FuaFZSTGJTazdYRWlVY2wydTFzdzJXOEpubVI4CkhkbXBWRXNRa0pIZS8rQUVMdlpHL1hRRlJBczRYdW5oN29zc0lqZWJFNkJGZ3lVU3liK2F1cVhLbHY5YnIzRHYKbTVwZFlOVXpoeUFqdXIveVFyT0k2MlF0c1ptYTloSVFaYy82aWZOVDA4OGM5a0FTQkJWVVFNTzFBeUtUSEtLcAoyQUh1a3lWUytOZCtCbmk4SHZoK3pKYTROV0lMOFZ1NFFtVThVeiszVWJQRWtHWVB6TG4yN1cyR2FqVnhVMlBnCkNwMWxoZ3FFZXE4VS9rYzl2NyswQ2hJWXd6YXpMRFN5NlN6VDhTTlFtWExmUCs4T2tnSE9Wb1hXZnE1UXFrRUwKS3ZQNmFlbjRpV2huVXZDZHJEMzgxZW5XZDI5VWRiODJmdkVmZVFJREFRQUJBb0lCQUUvSEttSzg4OE8vQTl0cwpJN25wamNvaW0zRUJGZytTVnFPV1ZXclNUdVh1dUdqZkcvWk4vMGkxZnJOSWhoRTYrYlB0QTEwSlJsU05VMzZRCnVhb3pXNmROVFg5bnhPaXM1c2JmTVc4SUpXT2RrQmVHcFUrMWpwQUIrbWtzaFpFUStUb0lyN3VVMG1LcHNRRGsKSjJINTRtY29TV3VpNU5Vb0ZnUDRHcWtsWXZuelV3NVVEWFpveW1uN1NXb09pelV4TDVvU2V1dm1tVnI2aDQ1bwoxZWVYL0pHcisrc2pVVUtFWDhpMGJrV3MrZ05wQjBIS0t1bGhBWFZQSkxoTDAvRE5BbEZ5WGJVb3p5TjZ3anY3ClROUkV5eWNMNkh3UUY2ZkxlNHJvcEo0ZnhyanZvZ3NpRnhTaXhVVEtRZ0xnZU5ZalUvejMvbUpMRjNpRC9naDcKVGE0M2g1RUNnWUVBOWVGQTdNcTNpTGdoaEZFdm41ZklMMkpuS2ZiemFRayt2TVFLZU9FR2hzMXlXdzRZZzI2NwpBWGcvOS9qbU5LNS9rbHdNaVNJMkhsR2pZTjBNL0dBcHlnWTJCTSthaUtsdjUrcTJzTThXckdBSEpwQTNrTHVzCjJHUkpaVjBoSGo2TXZYMGVhOEtEaGZoTlgza2paVkFPYlBKMW5CZHBzRThZYXltb1dsOVRZRDhDZ1lFQThuU0sKRHdjYm1DRkhMWUZNcnVsVGYrSXJ3QWhoKzlQdXZVK0U2eGRUY1NNQ0VNck1hbTZMbXdVR05UU0dsOVEyakNlZgp6YUcyR2t5MGp4OEVtNDFkcmNHYVM2dXZIRXd5bzJpUHBrQmhETmVWOGFvV0FKSzU4UGFmanhJKzJ1ZWZ2VWwwCjRBRUdIclI2b2lCdXBzOXZkZ0JpZndDR1ZPa2g0cUlMd0pxekVrY0NnWUEvb3pjc2tpTUNiYld2QzF3cUVCeXQKdHVoQWdqdnBtWXoxU2ovem5Ub1ZOYU05VWQ2aVZjeHN5dlN6ZDJZTmlJUllHeDdiZDFGT2M0NjNpVDdOS3c1bAp6VW01NFFsOENXNS9OYzVtNEpKYnR0Ymk4anlQWnlPTE5obVE5Sk9Yd2xTbXpuVkxLcUxqejZvbTViRjFqVXpPCmdjcFN4ZlNDdjFYd2xtMk9SbEhML1FLQmdRRE1pdWJDQU5RVnh0VmVuWHVOQUlrU0ZVT2xrU3pnb0E0RUplYlQKMG16eHdJQUluSjVSbUFzczc5TXA1Yk02dWF4L0Z4cXBCeWt6RE0wekJROEZFQUVkQ256YUkrL3FKcHA5NDBOMQpGVkVLM1lIQlRDV2R2Q3NrRDF2Uy9xaUtVdWdmYjY0cklKSUNLMjVlQXBCM0ovODNoT0dUbFdTK2s2T2pwK1BVClRHNlFGd0tCZ0FockU3NVExNk9qdFBiWU0xSktZQ3FBc1BjZW1FNTdSV3dtN1J1Si9MblNpand3SWVvdlFFM2sKTzA0MklSZW9IUVJOaTJESis0VVNaaFk2MnJkZWpRaVpRbEtPWktJcDFsdEl4eDBzQ2tTNkwzODVrdUdYOElaRApESER4UXd4TS83QXhjdTdLY1BMWnRvRnlNVUx0Y3l3czkvcEt1NWpyVExtalR2ZlVsSEYrCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==",
                            "verification": {}
                        },
                        "mode": 384
                    },
                    {
                        "group": {},
                        "overwrite": true,
                        "path": "/opt/openshift/tls/kube-apiserver-lb-signer.crt",
                        "user": {
                            "name": "root"
                        },
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURNakNDQWhxZ0F3SUJBZ0lJVmRRYXBmejA3V1l3RFFZSktvWklodmNOQVFFTEJRQXdOekVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1TRXdId1lEVlFRREV4aHJkV0psTFdGd2FYTmxjblpsY2kxc1lpMXphV2R1WlhJdwpIaGNOTWpNd05ERTRNVE13T0RFd1doY05Nek13TkRFMU1UTXdPREV3V2pBM01SSXdFQVlEVlFRTEV3bHZjR1Z1CmMyaHBablF4SVRBZkJnTlZCQU1UR0d0MVltVXRZWEJwYzJWeWRtVnlMV3hpTFhOcFoyNWxjakNDQVNJd0RRWUoKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBT2plM2dzZTgzYzAyd29VVk9hUXFwNFZVUzIwcE8xeApJbEhKZHJ0Yk1ObHZDWjVrZkIzWnFWUkxFSkNSM3YvZ0JDNzJSdjEwQlVRTE9GN3A0ZTZMTENJM214T2dSWU1sCkVzbS9tcnFseXBiL1c2OXc3NXVhWFdEVk00Y2dJN3EvOGtLemlPdGtMYkdabXZZU0VHWFArb256VTlQUEhQWkEKRWdRVlZFRER0UU1pa3h5aXFkZ0I3cE1sVXZqWGZnWjR2Qjc0ZnN5V3VEVmlDL0ZidUVKbFBGTS90MUd6eEpCbQpEOHk1OXUxdGhtbzFjVk5qNEFxZFpZWUtoSHF2RlA1SFBiKy90QW9TR01NMnN5dzBzdWtzMC9FalVKbHkzei92CkRwSUJ6bGFGMW42dVVLcEJDeXJ6K21ucCtJbG9aMUx3bmF3OS9OWHAxbmR2VkhXL05uN3hIM2tDQXdFQUFhTkMKTUVBd0RnWURWUjBQQVFIL0JBUURBZ0trTUE4R0ExVWRFd0VCL3dRRk1BTUJBZjh3SFFZRFZSME9CQllFRk9ibgpHT3FGdFAzdHJQbVBqQW1PQTI3WTV1MDNNQTBHQ1NxR1NJYjNEUUVCQ3dVQUE0SUJBUUNMUm1uZkp3bUsyK24vCnZRSnJVS0hWTTVJbVg4UlRaTk9uWWw1RVhYVXhFcklyckJIRklyelVNMDhTZUtXcEJodERqWDNnMlpVWGdSNEIKRDNZd0o5eGRLWEd4OEFaa1RBcThTeDJHT2lvRDdqaEhTc1RXWlE4NkVVWGFJSmttb2dqMVFxeHlFUUlGZ0JkVQpuekp6RFZvVHA3ODNhU0JQL0Uvcmlad0tMdUhIKzBSOHA5Q2YzWTZ2UTVoT3hEM05yOThWZm9pUldYQVV3aGVICmVNUzBOSVR0OE1qSHBWN0JEODBqYk1hcW13cmhTZVBnYWppcEN0WXV3SUJCT3hwd2Y2VDVYZlhkOHZFNms1SEYKbWxkQ3I5N0lhMXZURmlvaG1IaG9yMjlxeFZvZjFuejdWUzAvK3hwRE83RldxWEpZM0FrdUVmbWtxVzJITVBScApHZkJJVFI4TwotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==",
                            "verification": {}
                        },
                        "mode": 384
                    },
                    {
                        "group": {},
                        "overwrite": true,
                        "path": "/opt/openshift/tls/kube-apiserver-localhost-ca-bundle.crt",
                        "user": {
                            "name": "root"
                        },
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURRRENDQWlpZ0F3SUJBZ0lJVXdMTkJjaHNZT1l3RFFZSktvWklodmNOQVFFTEJRQXdQakVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1TZ3dKZ1lEVlFRREV4OXJkV0psTFdGd2FYTmxjblpsY2kxc2IyTmhiR2h2YzNRdApjMmxuYm1WeU1CNFhEVEl6TURReE9ERXpNRGd4TUZvWERUTXpNRFF4TlRFek1EZ3hNRm93UGpFU01CQUdBMVVFCkN4TUpiM0JsYm5Ob2FXWjBNU2d3SmdZRFZRUURFeDlyZFdKbExXRndhWE5sY25abGNpMXNiMk5oYkdodmMzUXQKYzJsbmJtVnlNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DQVE4QU1JSUJDZ0tDQVFFQXVrQXFycmwrWHROcwpNQm1JMkRnZmlwUmMvNEluLytGZ2txSWZmaENTYzU3eXhGaXZBRXR5VTM3WERlQmNkeHNFMDRLQ1RuSDEram5PCm5VZkxlWFVKMmlHcFF6R1FSZ2FjV3VkeERBdUc1VmZmYkN0RkpxRGQvKzRTT3J6SlRQellvditUTGxPc296QlMKSHc5WWN4K1JmZUw0R3NlaXVhQVdmaFcreHdkQVFHWVg0eFJNcVBkcmlCY1JQUkprd2Q2K21xZ3FuM0t4UjI3VgpWeU85NnNlYWdjME5IR3h0dUlBUTF2eWgzeThvM2E3bURUdWJ6VDNRMXhTeDZTUUljd0I5K0RaUkRjMGwwUlBwClhzYVBuMVhMMzVYcHR0MHkxQTBZKzlKTXM5SWxTNkpCbzVNYzBERnNQWVNFZlNoeXZ5TVBDZFZ5bXdPcVRkbEcKdEpaZUxWazFKd0lEQVFBQm8wSXdRREFPQmdOVkhROEJBZjhFQkFNQ0FxUXdEd1lEVlIwVEFRSC9CQVV3QXdFQgovekFkQmdOVkhRNEVGZ1FVa01iUHN5YU5OaGg0bXlZZ3FOelJ5QmUzc21Rd0RRWUpLb1pJaHZjTkFRRUxCUUFECmdnRUJBR1FEMTZNdTAybEVaY1BodTNxcjFHRnVVQUZFWWh5T0hRSFVFcklUOU9rQ2hvczU4eUZ0WThPRFlwelYKdS83MllMVDBoSkdrY0diREVEN2dNTzNGMXhvWEc2bFh4Y2htb0FhOFZhWlpxTUJBckdVQXE4aXppUUdPUUMzawpaYVh4SjcrMGhhNTA0Q2xnUDJJd3hIMTlBOFhRVi8rS0hPU05YbjFGaDlSMXdNM2tHRG9JSFQ2bFZ4R1RlMTNZCldEMEN2NTRxZCtMWElSOCsrbVFVSXdMd1cwd3NKUEUybG5MYVhvSzQ5MHp6WDJvWWMxUWJ1WGNqeUxWY3pVUG0KVWFxY29IeDVjS3pabytjM2I5QVpvaDZzRjRvMG1LOWdJT2RWZXFzTitkbWlKSFJIeElhT0hYSzg2SFJpczRWWQpPM0VhTTlxWnViOS9vQ3BSRVcrN25CWWVDemM9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K",
                            "verification": {}
                        },
                        "mode": 384
                    },
                    {
                        "group": {},
                        "overwrite": true,
                        "path": "/opt/openshift/tls/kube-apiserver-localhost-server.key",
                        "user": {
                            "name": "root"
                        },
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb2dJQkFBS0NBUUVBcThGM1hGWHp6a2tlK1VWNzlKUmw2djA1L3kzcDJDc3hsT2o2NCtZSXdnZHd1YmZyCjlwV3hTb2dOMFE4QVF2K215K2Y4Q0NHaUlscEZiUFZSUFdoOHI0L3lNclBOR2t4ZkwwQUJSRzRFMkdORUphUzIKNm4xbFNjZXRIam1LSGNDWXkwVGpxSG81aHdlNStlVStwNmxzYStEeFNGMXhtMlhxUzZ6b2FqemJGL05Db1BCSgpWMlBZOFBZKy9DTzNVTnY4NzE3dUVsUUU0R0ZKczlyUDUxc2wyZURjYzVaQkIzU0ZYZHV2Q0dMNjVKdkpMbS83CnFwSG9LbWVzMUZXOGtrbThJY2MycFF5NGNsM2swVENabkhaWXZxMmJYOVRqTGxVUEN4MjdVS29aeGlJM3ZjY2oKL0s3TUlGN2VWeHV5N3ZUaVg0eUJZSG9NVHVkRlp3aDY2TlREUndJREFRQUJBb0lCQUFycHErL045a094R2FxMAo0MzlTdm5jRHg5K1N4enpZNGJtWVkvaCs4U2VDMllLelVPYkY5QkhNT3pTQlEzNytSMWJGVXBvaHFPK04xTU5yCmd0SG9CYVFSL1UyRFp4QzRzWU9MQ1ltVGcvTkx1MVM0OW5aSHFWdmF1QUVubnNMdExjZ2NoR3A3K1pPK3hlNCsKeHBCWWoyNzdSOWxWTnBhdER3bm4zb3lCZVZvNEcrTk9mYkxDMFR5a3RZSG1RR1BseTRiWGQwTzl1MXduMEV5UgpJTVZHMjl2WWR3VXJZSnFBMzZDYjhzYWVmekxLMlhsYjc4MkJEcEVJQWd6bWNjL2YvZVhPaU5XazJaRkk4QUZKCm9vWGliNm4xVVE2SzhrekgwbzdPU3QreXltNG56VlRseTJzM3NMOWF6R3ErSEM3YlEwZGdIYWRSclBHVk1hbWUKdjFNRUpJRUNnWUVBeUhna2llbFdpeDA3eGtpMjBmMHRPbjI4VWh0YW1nTmd0TEFub2ROUVRac1F3d1QzYXhabgp4RlppdSt6VGJtVkJGbk52aWphYUpFMDgvTHp4MG1QbXVUbUVCTHJ3NHVEMExXMGJkaVdLOXdUOVJWNXhBL0E2CnhkSmVUbW40VHhwczhOVGx3MFpKdWpsQlVYd2FBeTJwaE10ejMxYURmL21qTys3ZzVLY2VTYkVDZ1lFQTIxVXAKSW5VbTRTb3I4LzIxRGdSYzU0bk1DaTg2WlJkVjR6RmFVbE9EQjB1VXFEV3FoOTdDMlFtMk9JdGYrWnNFWFdKaQpmaWJ4WGV6K083ZHp1NDlweWI1dUVYRkNmZVBqSHNrTnhjeXZoMU9Tby9oS2ZhRlNwRXVoa08yNVNNU25pWUtoCjZXRmN0ZjBIclhlL0crWTNVS0RyMEE5cUhQcGtEWG9ZeGhvbkluY0NnWUF5QS8raHhPekpzcFo2UnlRTnlpdmgKbndOQVBRRGkwaHJybWRPWmhWNVFybktGSlpVUlM3ckIrb2VSdVdtYTducEp2cTFDZjVML29hR29zUDlvYlhKZwpIaUI1Q2FjV0ErZ0grV1BUbTFSTGd4d3BsWUYrNlEzUTAwYWlLOEEvQkNuUUFGMysxV2VKcGNWTkxqaFRPSzVGCnFua1RiTU5NUjUxWlU2VWFoek9BVVFLQmdGc2UzeThFa3JsNnhyWGdFa2NYZ3UxaWJ4VlFGNmVGOFZXbzNFaFYKajVzSlNHSTFvWG8vRHA0U2pkU2grcVo5UTJ2MGdzeThLd3lGZC8yaE1vQ2FqUzJXWXEzMmF0UllSN1F6ZlBoUApHQ0ZWbEJkeEFLbCt5eEdjcGl2S3gyNDIzUStnNk5sSGJMZml2anpRQWVKNlcwS3hDQ2J4TUhtSGdPZWtjUVJrCk94dnpBb0dBVStUUVZWNXZhNVRZbEU5Y2VGWGNtM1lqNUpFeUVtWnVuR2Q2SzVuNUFKUGNCZDdYanZYM1ZRaHAKRm55OW5hWGZlOTFHQ0hOZUcwdDZwMWdHdHhUSkhyRFowenlqSXNvZjVvcCtSREg4Tm1CWGdRNEhYNFB3NFRmTgo2cnlsaVJEWFJBOWl6WWdacGJDSkt3OEJNNDQ2c2tabUJOL1BSWEpDdHRhalFRSVJLTE09Ci0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==",
                            "verification": {}
                        },
                        "mode": 384
                    },
                    {
                        "group": {},
                        "overwrite": true,
                        "path": "/opt/openshift/tls/kube-apiserver-localhost-server.crt",
                        "user": {
                            "name": "root"
                        },
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURtekNDQW9PZ0F3SUJBZ0lJQTg1OVozWGxSOVV3RFFZSktvWklodmNOQVFFTEJRQXdQakVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1TZ3dKZ1lEVlFRREV4OXJkV0psTFdGd2FYTmxjblpsY2kxc2IyTmhiR2h2YzNRdApjMmxuYm1WeU1CNFhEVEl6TURReE9ERXpNRGd4TUZvWERUSXpNRFF4T1RFek1EZ3hNMW93TmpFVU1CSUdBMVVFCkNoTUxhM1ZpWlMxdFlYTjBaWEl4SGpBY0JnTlZCQU1URlhONWMzUmxiVHByZFdKbExXRndhWE5sY25abGNqQ0MKQVNJd0RRWUpLb1pJaHZjTkFRRUJCUUFEZ2dFUEFEQ0NBUW9DZ2dFQkFLdkJkMXhWODg1Skh2bEZlL1NVWmVyOQpPZjh0NmRnck1aVG8rdVBtQ01JSGNMbTM2L2FWc1VxSURkRVBBRUwvcHN2bi9BZ2hvaUphUld6MVVUMW9mSytQCjhqS3p6UnBNWHk5QUFVUnVCTmhqUkNXa3R1cDlaVW5IclI0NWloM0FtTXRFNDZoNk9ZY0h1Zm5sUHFlcGJHdmcKOFVoZGNadGw2a3VzNkdvODJ4ZnpRcUR3U1ZkajJQRDJQdndqdDFEYi9POWU3aEpVQk9CaFNiUGF6K2RiSmRuZwozSE9XUVFkMGhWM2Jyd2hpK3VTYnlTNXYrNnFSNkNwbnJOUlZ2SkpKdkNISE5xVU11SEpkNU5Fd21aeDJXTDZ0Cm0xL1U0eTVWRHdzZHUxQ3FHY1lpTjczSEkveXV6Q0JlM2xjYnN1NzA0bCtNZ1dCNkRFN25SV2NJZXVqVXcwY0MKQXdFQUFhT0JwRENCb1RBT0JnTlZIUThCQWY4RUJBTUNCYUF3RXdZRFZSMGxCQXd3Q2dZSUt3WUJCUVVIQXdFdwpEQVlEVlIwVEFRSC9CQUl3QURBZEJnTlZIUTRFRmdRVWFQdE9tNDNibkpSSWp5RFp4aXpPUThQQ2phZ3dId1lEClZSMGpCQmd3Rm9BVWtNYlBzeWFOTmhoNG15WWdxTnpSeUJlM3NtUXdMQVlEVlIwUkJDVXdJNElKYkc5allXeG8KYjNOMGh3Ui9BQUFCaHhBQUFBQUFBQUFBQUFBQUFBQUFBQUFCTUEwR0NTcUdTSWIzRFFFQkN3VUFBNElCQVFDMgpMSHVjaXdXK1ZmRFFOVkZlT2RtNTJkY1QrUjJINFpxSFJUZGY2S0luWkFldk50LzRvRVdicTU3MnNBK0hQRlFiCnNXY3d0V1FYcVVWelc1aFFSYjdvWkR4NUZKKzRtdm9nSzZrWHdiQnRqQStXT1lyWjR0NEVDL3NoSzd4cUQ2QWEKMXN0Qjh4WUxWdzIyaDViU1Fyc0N6b3gyTEJ6UmxZNXkzY2lIR2pDc1ZyajgxQURCVVJGQjNmVkFMU0dnR3NwcwpLUFRlWjZod2MxZEdTNm10OUdSNjREQjd5ci9tZXRwZXM5ZUh5WHpQVTRHV3dJMll6TnpBQlFkZ0tWdjJXa0luCksyVnFXSjk2VStwWVhycFFsR0ptMmdnRmhjblpTK3c3ZVJ1Nm4vMFFjOU9KdzQyeHVNQllaalF2OENJcVc1TDYKUXNhRFRwYlJlOFVmamhZOFo1cXMKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQoKLS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURRRENDQWlpZ0F3SUJBZ0lJVXdMTkJjaHNZT1l3RFFZSktvWklodmNOQVFFTEJRQXdQakVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1TZ3dKZ1lEVlFRREV4OXJkV0psTFdGd2FYTmxjblpsY2kxc2IyTmhiR2h2YzNRdApjMmxuYm1WeU1CNFhEVEl6TURReE9ERXpNRGd4TUZvWERUTXpNRFF4TlRFek1EZ3hNRm93UGpFU01CQUdBMVVFCkN4TUpiM0JsYm5Ob2FXWjBNU2d3SmdZRFZRUURFeDlyZFdKbExXRndhWE5sY25abGNpMXNiMk5oYkdodmMzUXQKYzJsbmJtVnlNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DQVE4QU1JSUJDZ0tDQVFFQXVrQXFycmwrWHROcwpNQm1JMkRnZmlwUmMvNEluLytGZ2txSWZmaENTYzU3eXhGaXZBRXR5VTM3WERlQmNkeHNFMDRLQ1RuSDEram5PCm5VZkxlWFVKMmlHcFF6R1FSZ2FjV3VkeERBdUc1VmZmYkN0RkpxRGQvKzRTT3J6SlRQellvditUTGxPc296QlMKSHc5WWN4K1JmZUw0R3NlaXVhQVdmaFcreHdkQVFHWVg0eFJNcVBkcmlCY1JQUkprd2Q2K21xZ3FuM0t4UjI3VgpWeU85NnNlYWdjME5IR3h0dUlBUTF2eWgzeThvM2E3bURUdWJ6VDNRMXhTeDZTUUljd0I5K0RaUkRjMGwwUlBwClhzYVBuMVhMMzVYcHR0MHkxQTBZKzlKTXM5SWxTNkpCbzVNYzBERnNQWVNFZlNoeXZ5TVBDZFZ5bXdPcVRkbEcKdEpaZUxWazFKd0lEQVFBQm8wSXdRREFPQmdOVkhROEJBZjhFQkFNQ0FxUXdEd1lEVlIwVEFRSC9CQVV3QXdFQgovekFkQmdOVkhRNEVGZ1FVa01iUHN5YU5OaGg0bXlZZ3FOelJ5QmUzc21Rd0RRWUpLb1pJaHZjTkFRRUxCUUFECmdnRUJBR1FEMTZNdTAybEVaY1BodTNxcjFHRnVVQUZFWWh5T0hRSFVFcklUOU9rQ2hvczU4eUZ0WThPRFlwelYKdS83MllMVDBoSkdrY0diREVEN2dNTzNGMXhvWEc2bFh4Y2htb0FhOFZhWlpxTUJBckdVQXE4aXppUUdPUUMzawpaYVh4SjcrMGhhNTA0Q2xnUDJJd3hIMTlBOFhRVi8rS0hPU05YbjFGaDlSMXdNM2tHRG9JSFQ2bFZ4R1RlMTNZCldEMEN2NTRxZCtMWElSOCsrbVFVSXdMd1cwd3NKUEUybG5MYVhvSzQ5MHp6WDJvWWMxUWJ1WGNqeUxWY3pVUG0KVWFxY29IeDVjS3pabytjM2I5QVpvaDZzRjRvMG1LOWdJT2RWZXFzTitkbWlKSFJIeElhT0hYSzg2SFJpczRWWQpPM0VhTTlxWnViOS9vQ3BSRVcrN25CWWVDemM9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K",
                            "verification": {}
                        },
                        "mode": 384
                    },
                    {
                        "group": {},
                        "overwrite": true,
                        "path": "/opt/openshift/tls/kube-apiserver-localhost-signer.key",
                        "user": {
                            "name": "root"
                        },
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb2dJQkFBS0NBUUVBdWtBcXJybCtYdE5zTUJtSTJEZ2ZpcFJjLzRJbi8rRmdrcUlmZmhDU2M1N3l4Rml2CkFFdHlVMzdYRGVCY2R4c0UwNEtDVG5IMStqbk9uVWZMZVhVSjJpR3BRekdRUmdhY1d1ZHhEQXVHNVZmZmJDdEYKSnFEZC8rNFNPcnpKVFB6WW92K1RMbE9zb3pCU0h3OVljeCtSZmVMNEdzZWl1YUFXZmhXK3h3ZEFRR1lYNHhSTQpxUGRyaUJjUlBSSmt3ZDYrbXFncW4zS3hSMjdWVnlPOTZzZWFnYzBOSEd4dHVJQVExdnloM3k4bzNhN21EVHViCnpUM1ExeFN4NlNRSWN3QjkrRFpSRGMwbDBSUHBYc2FQbjFYTDM1WHB0dDB5MUEwWSs5Sk1zOUlsUzZKQm81TWMKMERGc1BZU0VmU2h5dnlNUENkVnltd09xVGRsR3RKWmVMVmsxSndJREFRQUJBb0lCQUNYNnQ3bHhjZWQ4VFc5eApoWW94eDV6R3JFQWVGbklEVDJJWFZUeXJ2SEYvVkJuZHk3SFBzTHg5L1BTRGI5ZUoxdTRhaXQvY05VQ1ZVU0NaCloxQ1pJUzB0K0FvUHJVL2FRVC80T2dFdXlJOHo0QWQ2dTFzcEtwdnB2Q1htSVZabHFQZDBEbHRBRE5BcUpsVFgKR0Q1QmpiV1I5dTNmRDd1eWZXT3dvM3FLYS91MWZEWXB4N3o1TDRDSGxPTGxEUGRBK2M3VDRTRFFwOFM4WWlITApHdUNwZUY0SUxqQ2t4dmVJOERCVW80YjBCcHhCV091aHJXQ1dWb0xsYXZWUGpUVTByVkdnL0xkMzlnOWJjQmNzCktVNkM4eDNvU2lBYXpra2NuMTd4NUZGNGMxdnVpSHp1djVUYlZwKzlUR1l6Mit2V0Q1SEJETDBwNkU1SE9tSzEKZGFEL0cwRUNnWUVBd2ltR1RVSUZGbU81cDkvR1BHMFJZeFEvTzJiTDNGc3lqWkFjZ3BEcnJWSGpIWmpDdllQcApXY3pJWlE4T2pLVGNuUXZiT2Z1by9PZ3lBMmVYZnJUVXBIVzVwMDFHV0ttcmd6UXkraG9BYjRqNnBsdWIxSXZWCkd1cFpMdGVxNVRSWXFydVR6enplQTNCbmNmOHpJcXJjbEViSkhRZ3B4WVhBb2lQeE5WVnlpSjhDZ1lFQTlaR1kKZFcwMlNld1FZS2lVNEV5UTlTalI2T3pDanZCTEtzV2dGVm1mWDcvTmdRSE9LeTQ3RkFsc0JicHprRmNERW00MQpoN1E5YXR1N0c3Z2lObkExZExTT0F3S1FNbU1ScSt1cDMxVyt3NGk2MU51QmRPTS80QjNjcWo4Mmp5ak1UVFJVClJOa1MrbzZxcTVpS3NEOTBBV1MyWkNxWGxnSkRPNkZHaGRGTUhua0NnWUJVQWl0OTJnYmhmUnlqS2d0WHNjbEkKR1VhU3FST2pzRUhiUm5OUGV1eTkvU1JMZGdFc2hwcThwQUpBMTVidis1VUl6a3g0ZGc3VC9wTkZMZGs2bFhzNwovVVBxdzJDZ2xDa0ZoOXhXb2xGMThNcWltQmlBaWxBV2FUZFZNVE5jSUo0TW9VUis4bE1OSWVGZ1RZOE9mT2NiCnNOVHJudENVQ2g4akNISWhKV3Q4K1FLQmdIVU1yd1RaeDVTNHBwM0wvUnBrcEh1V3QyYzA0dy9LemFsWGhaUm4Kb2FXOEFMSkxNQUE1Q3dQajhjOVJMaUJRdVRBaHcvWXBIVlUvNHhHMVZPbHAxckVJRnVDc2FocjZTY1FPa212WApyUlA2cWtNblZhOW5XbHp6SHVrdk5FeE1nQVVVdWs0T3doTVh5Wlg5SWE0Y3NLaXhYcGFrRHBqNy94di9KV1JICmZPYlJBb0dBRHZjL3NMUW40eU5yMjh2d1RpZWZPeUpoRWN6NXQ3ZEE1amJVZk5oMm4zSUp2SVN1c083c3F0dEkKMDk0dWdsZDREazNLUTR0Q3F0cjBqSEJyOHQ3dkc4NHcrbU1aTlFqQVYyQWREN1RRY2sxdDFsMVlrc2Nyc0o5QgpYQ1NpMVF5N2ROWGtOTXNIUzNWSXVJblkxb294YjVvVDBMWGhDc0dpeU10ZkNPS2Q1UXc9Ci0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==",
                            "verification": {}
                        },
                        "mode": 384
                    },
                    {
                        "group": {},
                        "overwrite": true,
                        "path": "/opt/openshift/tls/kube-apiserver-localhost-signer.crt",
                        "user": {
                            "name": "root"
                        },
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURRRENDQWlpZ0F3SUJBZ0lJVXdMTkJjaHNZT1l3RFFZSktvWklodmNOQVFFTEJRQXdQakVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1TZ3dKZ1lEVlFRREV4OXJkV0psTFdGd2FYTmxjblpsY2kxc2IyTmhiR2h2YzNRdApjMmxuYm1WeU1CNFhEVEl6TURReE9ERXpNRGd4TUZvWERUTXpNRFF4TlRFek1EZ3hNRm93UGpFU01CQUdBMVVFCkN4TUpiM0JsYm5Ob2FXWjBNU2d3SmdZRFZRUURFeDlyZFdKbExXRndhWE5sY25abGNpMXNiMk5oYkdodmMzUXQKYzJsbmJtVnlNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DQVE4QU1JSUJDZ0tDQVFFQXVrQXFycmwrWHROcwpNQm1JMkRnZmlwUmMvNEluLytGZ2txSWZmaENTYzU3eXhGaXZBRXR5VTM3WERlQmNkeHNFMDRLQ1RuSDEram5PCm5VZkxlWFVKMmlHcFF6R1FSZ2FjV3VkeERBdUc1VmZmYkN0RkpxRGQvKzRTT3J6SlRQellvditUTGxPc296QlMKSHc5WWN4K1JmZUw0R3NlaXVhQVdmaFcreHdkQVFHWVg0eFJNcVBkcmlCY1JQUkprd2Q2K21xZ3FuM0t4UjI3VgpWeU85NnNlYWdjME5IR3h0dUlBUTF2eWgzeThvM2E3bURUdWJ6VDNRMXhTeDZTUUljd0I5K0RaUkRjMGwwUlBwClhzYVBuMVhMMzVYcHR0MHkxQTBZKzlKTXM5SWxTNkpCbzVNYzBERnNQWVNFZlNoeXZ5TVBDZFZ5bXdPcVRkbEcKdEpaZUxWazFKd0lEQVFBQm8wSXdRREFPQmdOVkhROEJBZjhFQkFNQ0FxUXdEd1lEVlIwVEFRSC9CQVV3QXdFQgovekFkQmdOVkhRNEVGZ1FVa01iUHN5YU5OaGg0bXlZZ3FOelJ5QmUzc21Rd0RRWUpLb1pJaHZjTkFRRUxCUUFECmdnRUJBR1FEMTZNdTAybEVaY1BodTNxcjFHRnVVQUZFWWh5T0hRSFVFcklUOU9rQ2hvczU4eUZ0WThPRFlwelYKdS83MllMVDBoSkdrY0diREVEN2dNTzNGMXhvWEc2bFh4Y2htb0FhOFZhWlpxTUJBckdVQXE4aXppUUdPUUMzawpaYVh4SjcrMGhhNTA0Q2xnUDJJd3hIMTlBOFhRVi8rS0hPU05YbjFGaDlSMXdNM2tHRG9JSFQ2bFZ4R1RlMTNZCldEMEN2NTRxZCtMWElSOCsrbVFVSXdMd1cwd3NKUEUybG5MYVhvSzQ5MHp6WDJvWWMxUWJ1WGNqeUxWY3pVUG0KVWFxY29IeDVjS3pabytjM2I5QVpvaDZzRjRvMG1LOWdJT2RWZXFzTitkbWlKSFJIeElhT0hYSzg2SFJpczRWWQpPM0VhTTlxWnViOS9vQ3BSRVcrN25CWWVDemM9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K",
                            "verification": {}
                        },
                        "mode": 384
                    },
                    {
                        "group": {},
                        "overwrite": true,
                        "path": "/opt/openshift/tls/kube-apiserver-service-network-ca-bundle.crt",
                        "user": {
                            "name": "root"
                        },
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURURENDQWpTZ0F3SUJBZ0lJUjhMVUtrdnFZdFF3RFFZSktvWklodmNOQVFFTEJRQXdSREVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1TNHdMQVlEVlFRREV5VnJkV0psTFdGd2FYTmxjblpsY2kxelpYSjJhV05sTFc1bApkSGR2Y21zdGMybG5ibVZ5TUI0WERUSXpNRFF4T0RFek1EZ3hNRm9YRFRNek1EUXhOVEV6TURneE1Gb3dSREVTCk1CQUdBMVVFQ3hNSmIzQmxibk5vYVdaME1TNHdMQVlEVlFRREV5VnJkV0psTFdGd2FYTmxjblpsY2kxelpYSjIKYVdObExXNWxkSGR2Y21zdGMybG5ibVZ5TUlJQklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQwpBUUVBNW9wNGpiL25wMW5OZURMSEp5K3EvcVByY1Z5bmNDLzg0ZDFiemp6dDlPTUpicnJ0TkEyTHlvNTBPblZaCmRIMTk5MklIbERTYnJLZFJacE9OR2Q1ZVRNT2hjZUNudVp3MWJ5K0ZBL0FJSHZ6alR4eXV5ZUNqajdQS0xQYm0KSlRsQm5nSjNSVnozV0dRai9MMEdJRWZYV0QwMndkdHJaYmY3dFBtUHEwQWYxYlY5MlM5U21XTWovcWoyTnVYaApLeWZ5aFU0ckI2b0NPQjlDY0M1VENtQW9DdzFJQjBFUEo3UmpxbFFnUVpCTTlwT1BYYTFDWFlleFZ6TFV4ZUZMClFTcHRiUW1UWnp6Yms0cUZrdkVRUlA1VFZEK3VKUXdkNlIvbUhseTZ6ZWRTUEh4SWpzYXVOYzE3bG8xamg5dkgKZkptUUQ5RElpSnU0dW9aaEErejQxQW9sZVFJREFRQUJvMEl3UURBT0JnTlZIUThCQWY4RUJBTUNBcVF3RHdZRApWUjBUQVFIL0JBVXdBd0VCL3pBZEJnTlZIUTRFRmdRVUFpU251cjQ0bVBvT1NsbUlrbE13aWhnMHFnd3dEUVlKCktvWklodmNOQVFFTEJRQURnZ0VCQUxKY2xtaVVKRnhHR0V2TWFwcGNKUXp0UTY0MFhvS0dxeXZVY2xnR0NKK3UKb0MzZmVIdTRKNzJqM1hoZ0VPMEVrbngySWt2ME5JZFplazZyUDk2Rk0ranVHZGZya3RSNmJkbXFpZHJHWXdMWgpLQnVLa0N3b1h0bDVtNWg5eURTRzVuYWRBcWg4VzhEdUhuUFhpZ25HLzk0UmcwRWxVUEw2ZTV4MHNHVUpVVEVXCkYrNzNiajE3RFV0b0RDd0JEY20yK1kxMTVsYzMySEhGTnRYaTFvTUYvRVpaL3F1bGQ3NDJzYUQ4Uk5ta0p5N1EKT3BIK1ZFSnNOUktpZHcyQVdTUW9idEYzbVIvbWFpTktMNExGUldISFNjNTduUkVlOGFUNEQvUFBmcVJKYndxOApLNEZ4TzNmQzRlbFpZaTFHVm5UbnR5RUVLM2JBS2pOblcyOGNBcTNIbkJZPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==",
                            "verification": {}
                        },
                        "mode": 384
                    },
                    {
                        "group": {},
                        "overwrite": true,
                        "path": "/opt/openshift/tls/kube-apiserver-service-network-server.key",
                        "user": {
                            "name": "root"
                        },
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBdFUwSGtuVDZPVEVlOHlIL2NzM3JhS3FEUG0rSXZKUFVUTmVFRzRFRXFZdncwV3ppCjVybDNjeWM4UHVOakd6dVdWaEdvRXFtT3lDeGhTKy9zM2J2dFpMWlU2RTU2clcxVDNZSnZuTlppa0lUbTh5OE0Ka1RxTlVGQVB6UEYycmFrLy9IQzdQSGtwZlVsK3pzYUN6MUF4aERQV1NBcDY5Z1ZMUnNYMmR6M0VwRUxNbStpVApXV1E1T1BPekl2MFcwOWZ6ejFxTVpSMjRvTzhrU3kxR05KNjZYMUx2aEVzZm9ySjJXQ0RIV0RLaUY4NGovUUtsClFndllNcGNGc0w3a1VkN3p5Nm04S2l2WkdmMzM5WXZUV254OGl1TC9aU2RmSXZmc0RqQWc4REhOOE02MVhjSXkKYUg0cmNua2ZXSzhmOElFTHBSKzJpNkdGbzVxUlBSNTdvOFJuelFJREFRQUJBb0lCQUVSMzJMbzRyeDdXTENnSgoyTnpVWTJqZHJEN3lCQ09qZUhPa21HR0NzZTROeVY1dHpxcnZzK3FyRUpkM2JFQW1tcm5hWlN6WEYvTUV2NkhiCjlBb3hKSS82UThxUGlNamlGdC82bUlnVWRwaTVlRGF5dC81SXJJRitHdGw4L3lMS1hqM0puUXhUZlpXeElkQ1oKSzJGN21aZWhzL1QwOEViazdPN0hhRExVQXVVOUtpdGg4SnRZTXVBK1BLQi9GNWNhVzU0Z2FGRFpzRC9xQTJIcApCMk03Zy9jQ2R5cGlQTTBNbk5rT2FFVWFueWxmZDI5YmtBdUZCMjhsSTNPdTVOK29QUFYwL29jVXBudUtZY0FICmlWdkxIeWNSYmJ6d0xLTStJODNRUkhrZkNNeHNYUWxSZG4rc0Y2ZHNhMm1Xd3hRTXlGYkJQTnBJcFVtVlNpN1MKZXZ3VFVRa0NnWUVBMXE1MTR3bEZzUXc2VzNYZUYzOFVaTkQwbUl5UmFvSHdseWpJYm1CODNMTnRKZENKbmpFTQpuSHdlSlZ1dklIYVlCeVN0Nm5RbDVSc3d6WVNPeXF5YkJMcXI2dkF4NEdFbVRMZ1hwRzNka3NpWU9uM0V6R2prClNqcnBpVkZiQmFpSWxCREIrMXc4NVNlMDJueU5MY2hUZjJsc0NSaVlJdmUvbTVqS0JGWkJhWk1DZ1lFQTJESGgKQ0ZmT2MyYUlRNlRPMEc2VTV2aFE2TTZKRzZZemRIU3BUWjN4ckg1TW50blRiY3g5YmhCRjVJcUZFMmovcUE4awpEMGM4ZmxxRnN0dWhNSVVBeHlUVXBveDJwK1YvR0ZhZHo4V0p6WCtzb1dGMWpDSS9hbGYxNlJkNEhyMEV3K0hXCmN6d2prMENST2RBaDVjeHBrN29GTUJlRjdNRDRlMnc0WlZ5TVJSOENnWUVBb2UzYis5RXRvUnJoRmNXMUxMSHQKRnhKSnZKc2l3RnljdGRmTVB2MUdrVTVCZ09sb05FczVBUHZaM1VIbnVhdmFobURUVWVvai8wamdLZFRYdytZbgowNHhlU29xOGhFdWpFUEUyM0E4R3QwWFpGUjF5aU9DQmVjQXdFU1N0YkhvdjhzY2xHa3o3bmJteWY2Njg2cENVCjhxRDVIVzlRcWVlSHZueWp2RnUzWVVNQ2dZRUF6blFUYVZ3d2twTS9YUmx0UmkzVGxCMWRablNWQ2dwVTZNamYKUkhlbjZnbFNNZi9obitDL2h2T1RTd1Bjd1FScjM1bFYzaUV3NjVpV1JJN29CdVY4TUxCRFFpaXd4dlNwd2h3MAo1OHpFSTdIZ3NOdlkzTkYzclo0Qi8yMmlEL2lCTEczbDFIV0JvNFR0S2tCUG5wcnQxMXkweDVBdkhEL0xDbEgyCktSV1AvaEVDZ1lBZVNraDU4dm4rLzE3MnBnWXNqU05NVXNZUzA1dTkwRVJZU0p1QU4xaW1VSzBTNW51ZHhzYlAKdzFXUFlUdFVWS2ZBY29IN3ZKZnZiVnBQcnpCemxpR0tINjhRcmJQK0VzeTZDK1krQjZiTUxVcGFra1ZWb2VpWgo0UUZiOEpWSVBBaXFMM0VFVVFlU1BERTZCT1R3R0UxTmlYc3FLSTF0RTJsaFVIVEJUdnQvekE9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=",
                            "verification": {}
                        },
                        "mode": 384
                    },
                    {
                        "group": {},
                        "overwrite": true,
                        "path": "/opt/openshift/tls/kube-apiserver-service-network-server.crt",
                        "user": {
                            "name": "root"
                        },
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUVRVENDQXltZ0F3SUJBZ0lJQmJoelVpZ2YrcG93RFFZSktvWklodmNOQVFFTEJRQXdSREVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1TNHdMQVlEVlFRREV5VnJkV0psTFdGd2FYTmxjblpsY2kxelpYSjJhV05sTFc1bApkSGR2Y21zdGMybG5ibVZ5TUI0WERUSXpNRFF4T0RFek1EZ3hNRm9YRFRJek1EUXhPVEV6TURneE0xb3dOakVVCk1CSUdBMVVFQ2hNTGEzVmlaUzF0WVhOMFpYSXhIakFjQmdOVkJBTVRGWE41YzNSbGJUcHJkV0psTFdGd2FYTmwKY25abGNqQ0NBU0l3RFFZSktvWklodmNOQVFFQkJRQURnZ0VQQURDQ0FRb0NnZ0VCQUxWTkI1SjAramt4SHZNaAovM0xONjJpcWd6NXZpTHlUMUV6WGhCdUJCS21MOE5GczR1YTVkM01uUEQ3all4czdsbFlScUJLcGpzZ3NZVXZ2CjdOMjc3V1MyVk9oT2VxMXRVOTJDYjV6V1lwQ0U1dk12REpFNmpWQlFEOHp4ZHEycFAveHd1eng1S1gxSmZzN0cKZ3M5UU1ZUXoxa2dLZXZZRlMwYkY5bmM5eEtSQ3pKdm9rMWxrT1RqenN5TDlGdFBYODg5YWpHVWR1S0R2SkVzdApSalNldWw5Uzc0UkxINkt5ZGxnZ3gxZ3lvaGZPSS8wQ3BVSUwyREtYQmJDKzVGSGU4OHVwdkNvcjJSbjk5L1dMCjAxcDhmSXJpLzJVblh5TDM3QTR3SVBBeHpmRE90VjNDTW1oK0szSjVIMWl2SC9DQkM2VWZ0b3VoaGFPYWtUMGUKZTZQRVo4MENBd0VBQWFPQ0FVTXdnZ0UvTUE0R0ExVWREd0VCL3dRRUF3SUZvREFUQmdOVkhTVUVEREFLQmdncgpCZ0VGQlFjREFUQU1CZ05WSFJNQkFmOEVBakFBTUIwR0ExVWREZ1FXQkJSN0FnVlQvN2xGUTRlUWtrbEFQblJDCmRJcjFXakFmQmdOVkhTTUVHREFXZ0JRQ0pLZTZ2amlZK2c1S1dZaVNVekNLR0RTcUREQ0J5UVlEVlIwUkJJSEIKTUlHK2dncHJkV0psY201bGRHVnpnaEpyZFdKbGNtNWxkR1Z6TG1SbFptRjFiSFNDRm10MVltVnlibVYwWlhNdQpaR1ZtWVhWc2RDNXpkbU9DSkd0MVltVnlibVYwWlhNdVpHVm1ZWFZzZEM1emRtTXVZMngxYzNSbGNpNXNiMk5oCmJJSUpiM0JsYm5Ob2FXWjBnaEZ2Y0dWdWMyaHBablF1WkdWbVlYVnNkSUlWYjNCbGJuTm9hV1owTG1SbFptRjEKYkhRdWMzWmpnaU52Y0dWdWMyaHBablF1WkdWbVlYVnNkQzV6ZG1NdVkyeDFjM1JsY2k1c2IyTmhiSWNFckI0QQpBVEFOQmdrcWhraUc5dzBCQVFzRkFBT0NBUUVBNFJ5K3AyVmlHY25UNlIvc015NS83VEs0emsydEhzaUVwVTV0ClVzblJEei9DRzM4WHlXRytMYlVBYWlCV012RTdSSDh4b3hDemQydmp2OUF6WnFyTDBJam9iNks5MFRic3VtYkkKM1hBVmRnMU0wQUx5cWJBKzB1NklsWWRXTTdXUWRWK25GVFpkN1g5MTlBUVNlK0tMNmswUEh1ZzVoNFdadHpEMQp2ZWROZHRvQ0FhclZOTjI0QStpMUhXbnBaejhndFhSRlBNbS9zZ1h5QzhaMW1Ob003K2tMM2xQUnJoOEVHNUNHCmg2b0RucXVyNkJFQWxYRmRlMDc5Z2ZnS1kwcGtDNGpjTFpGdWNCaklvODAzOWloU2hPa3RGN2VUUmN5NzNGMlMKRktRUm1iSnRWVnYrWnZZNlFZaVRWc2crSlpYc0Y4Q0F4NWIxc2k0VS8zSm5Kckx6Mmc9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCgotLS0tLUJFR0lOIENFUlRJRklDQVRFLS0tLS0KTUlJRFREQ0NBalNnQXdJQkFnSUlSOExVS2t2cVl0UXdEUVlKS29aSWh2Y05BUUVMQlFBd1JERVNNQkFHQTFVRQpDeE1KYjNCbGJuTm9hV1owTVM0d0xBWURWUVFERXlWcmRXSmxMV0Z3YVhObGNuWmxjaTF6WlhKMmFXTmxMVzVsCmRIZHZjbXN0YzJsbmJtVnlNQjRYRFRJek1EUXhPREV6TURneE1Gb1hEVE16TURReE5URXpNRGd4TUZvd1JERVMKTUJBR0ExVUVDeE1KYjNCbGJuTm9hV1owTVM0d0xBWURWUVFERXlWcmRXSmxMV0Z3YVhObGNuWmxjaTF6WlhKMgphV05sTFc1bGRIZHZjbXN0YzJsbmJtVnlNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DQVE4QU1JSUJDZ0tDCkFRRUE1b3A0amIvbnAxbk5lRExISnkrcS9xUHJjVnluY0MvODRkMWJ6anp0OU9NSmJycnROQTJMeW81ME9uVloKZEgxOTkySUhsRFNicktkUlpwT05HZDVlVE1PaGNlQ251WncxYnkrRkEvQUlIdnpqVHh5dXllQ2pqN1BLTFBibQpKVGxCbmdKM1JWejNXR1FqL0wwR0lFZlhXRDAyd2R0clpiZjd0UG1QcTBBZjFiVjkyUzlTbVdNai9xajJOdVhoCkt5ZnloVTRyQjZvQ09COUNjQzVUQ21Bb0N3MUlCMEVQSjdSanFsUWdRWkJNOXBPUFhhMUNYWWV4VnpMVXhlRkwKUVNwdGJRbVRaenpiazRxRmt2RVFSUDVUVkQrdUpRd2Q2Ui9tSGx5NnplZFNQSHhJanNhdU5jMTdsbzFqaDl2SApmSm1RRDlESWlKdTR1b1poQSt6NDFBb2xlUUlEQVFBQm8wSXdRREFPQmdOVkhROEJBZjhFQkFNQ0FxUXdEd1lEClZSMFRBUUgvQkFVd0F3RUIvekFkQmdOVkhRNEVGZ1FVQWlTbnVyNDRtUG9PU2xtSWtsTXdpaGcwcWd3d0RRWUoKS29aSWh2Y05BUUVMQlFBRGdnRUJBTEpjbG1pVUpGeEdHRXZNYXBwY0pRenRRNjQwWG9LR3F5dlVjbGdHQ0ordQpvQzNmZUh1NEo3MmozWGhnRU8wRWtueDJJa3YwTklkWmVrNnJQOTZGTStqdUdkZnJrdFI2YmRtcWlkckdZd0xaCktCdUtrQ3dvWHRsNW01aDl5RFNHNW5hZEFxaDhXOER1SG5QWGlnbkcvOTRSZzBFbFVQTDZlNXgwc0dVSlVURVcKRis3M2JqMTdEVXRvREN3QkRjbTIrWTExNWxjMzJISEZOdFhpMW9NRi9FWlovcXVsZDc0MnNhRDhSTm1rSnk3UQpPcEgrVkVKc05SS2lkdzJBV1NRb2J0RjNtUi9tYWlOS0w0TEZSV0hIU2M1N25SRWU4YVQ0RC9QUGZxUkpid3E4Cks0RnhPM2ZDNGVsWllpMUdWblRudHlFRUszYkFLak5uVzI4Y0FxM0huQlk9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K",
                            "verification": {}
                        },
                        "mode": 384
                    },
                    {
                        "group": {},
                        "overwrite": true,
                        "path": "/opt/openshift/tls/kube-apiserver-service-network-signer.key",
                        "user": {
                            "name": "root"
                        },
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBNW9wNGpiL25wMW5OZURMSEp5K3EvcVByY1Z5bmNDLzg0ZDFiemp6dDlPTUpicnJ0Ck5BMkx5bzUwT25WWmRIMTk5MklIbERTYnJLZFJacE9OR2Q1ZVRNT2hjZUNudVp3MWJ5K0ZBL0FJSHZ6alR4eXUKeWVDamo3UEtMUGJtSlRsQm5nSjNSVnozV0dRai9MMEdJRWZYV0QwMndkdHJaYmY3dFBtUHEwQWYxYlY5MlM5UwptV01qL3FqMk51WGhLeWZ5aFU0ckI2b0NPQjlDY0M1VENtQW9DdzFJQjBFUEo3UmpxbFFnUVpCTTlwT1BYYTFDClhZZXhWekxVeGVGTFFTcHRiUW1UWnp6Yms0cUZrdkVRUlA1VFZEK3VKUXdkNlIvbUhseTZ6ZWRTUEh4SWpzYXUKTmMxN2xvMWpoOXZIZkptUUQ5RElpSnU0dW9aaEErejQxQW9sZVFJREFRQUJBb0lCQUgzU1pTazM2MzV5aktsbApUVHdkei8xYUNVMjllOFRHN0FWNWdubDAxNG9udnlZbjd2M1J4dEd1SGRFcDZzQ2hIUGEvRWRQWlFuMWdkQlMvCnd1cXphbFFMRVRuTm1yeTZmSTlLS0JhV0VsaVhQSmdZMTJ4bXBkM3dDZyt3VUx0UUhIZlljSy95cFN3Z3UyTmMKNXRNSFlvaE9JR3g5REloZmVZaTBDNjB6T2l5djc1bkI0OUd3OTlkVTRxVkFLdm9TQnM2dTBaZnZiUndOcEdYZApjaExHbWdMcXNLRTlSTWlaazFKNWdqQ1RkbVU0UE9wR1ZKTXd6M1FTa2VkRUI3TW5lenR6OGVUOFc1SzczdU4yCmVMSER5RnVRQWFLL2FhSW4valYxTDd0eS9RVzlZQk1yOXBOUUlwbXZwcm5adm1pcUpZc3FaWENUM04wOHRRMmsKUGQ4dFg0RUNnWUVBNTI1U3hEUGNUZjBWSy90ZnUxa3puZDlLOHdHcVhsRUpqcEJNNXFWWkl1Q25LSnJFU3N6SApMVVU0dGlUWjBmRFV1MUFnTXlTU3NtRHJVbnE0b1hJdWRwbjRDOEdudlpaR3c4bjVyeW9xQ21ITDFESnBJYWJmCm1udHBqVi82OEluRm9iaGo0UGhDR1JYRjRhMUVFSHQ3cnZnRk00YUNCdDJDejNEa0plUTVHQ1VDZ1lFQS93UDEKWGNKT3RsY2szZ2RJNFZMZEJUb0tpNzVON3RRT010andiT2lMUUdxcWRwbHpLVzQ3K0tSWHJIV0pYbU44Z2lmNwpIZ3FZeXJVNFN2Z21Vcm1pQmdpNW1jcDRGVm1SZ0dhN0RwZ3hKRjB0dXdKQ3RCcEdCTVQrZWpVcFRQY3RQNWo2CkFkMlc2SmFGYmI3Z1g0M283YlY3MysvL1g5eTNaamFjYU43bS9jVUNnWUJ4QXlPeG9lMkx1L0dSeDYvbzZkZFYKMll0Yy9VdzN3SFRkUkVQNVFYYzBtK1drNDJiRmJCZzdXQmtvZ1BoSkY4U2FMN2Q1b2Z0czFmMDBDcStNVHhpMwpXOXFQeXlKaFp6ZnBOZ0VTYzVHUi9rMnRzbXc2UGFYbFp5eVZGL0NQYzRlcHdFUXR3SzF1V0g2SUJMYy9JVDIxCnBISE54bnBLWmZNUjMzdlpzUWZjYlFLQmdRREFFV3NzUXJ5bCtOeDduV0QyMUVKRFBZUFQzSEUxLytEeHl4TEoKOUJ0dFdPa3Fpa2lDVzlRdllSZm5mRjhLQ0VRdWc0NVBBZ3d5SUd0Vmk3RFJmWjdhakplOWpSRUVnNEZqQS95Kwo4VUdSOGR3UGpaUlBzYm9xdlhRczl2MDBTclo1dis0TW1haWZaVDc1ZVZua25pMWhXOThBdXZITWNhQndDNUdpCktzQXZRUUtCZ1FDWmtxcVJJNlNRVmp6eHk0ZmZwaUFiWTJaZXRhcFI2Y1hHSTF3YTU1VkFQMlp6UE9YclRiSlAKT2ZzSGp5UjBmSHRtbituWHBadXQ4bG9NQnVBNVlPTTlTaTduSXpzRENsdXFzdXNPd0M1UzVrN2xuckd4UmFRZwpIZG5IcEhUSjgzNEg5am8yVkhwU09DS1JFcFRnS1BDTVZtUFQ5ZFVkZHFseDdDdnpRQ25DQkE9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=",
                            "verification": {}
                        },
                        "mode": 384
                    },
                    {
                        "group": {},
                        "overwrite": true,
                        "path": "/opt/openshift/tls/kube-apiserver-service-network-signer.crt",
                        "user": {
                            "name": "root"
                        },
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURURENDQWpTZ0F3SUJBZ0lJUjhMVUtrdnFZdFF3RFFZSktvWklodmNOQVFFTEJRQXdSREVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1TNHdMQVlEVlFRREV5VnJkV0psTFdGd2FYTmxjblpsY2kxelpYSjJhV05sTFc1bApkSGR2Y21zdGMybG5ibVZ5TUI0WERUSXpNRFF4T0RFek1EZ3hNRm9YRFRNek1EUXhOVEV6TURneE1Gb3dSREVTCk1CQUdBMVVFQ3hNSmIzQmxibk5vYVdaME1TNHdMQVlEVlFRREV5VnJkV0psTFdGd2FYTmxjblpsY2kxelpYSjIKYVdObExXNWxkSGR2Y21zdGMybG5ibVZ5TUlJQklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQwpBUUVBNW9wNGpiL25wMW5OZURMSEp5K3EvcVByY1Z5bmNDLzg0ZDFiemp6dDlPTUpicnJ0TkEyTHlvNTBPblZaCmRIMTk5MklIbERTYnJLZFJacE9OR2Q1ZVRNT2hjZUNudVp3MWJ5K0ZBL0FJSHZ6alR4eXV5ZUNqajdQS0xQYm0KSlRsQm5nSjNSVnozV0dRai9MMEdJRWZYV0QwMndkdHJaYmY3dFBtUHEwQWYxYlY5MlM5U21XTWovcWoyTnVYaApLeWZ5aFU0ckI2b0NPQjlDY0M1VENtQW9DdzFJQjBFUEo3UmpxbFFnUVpCTTlwT1BYYTFDWFlleFZ6TFV4ZUZMClFTcHRiUW1UWnp6Yms0cUZrdkVRUlA1VFZEK3VKUXdkNlIvbUhseTZ6ZWRTUEh4SWpzYXVOYzE3bG8xamg5dkgKZkptUUQ5RElpSnU0dW9aaEErejQxQW9sZVFJREFRQUJvMEl3UURBT0JnTlZIUThCQWY4RUJBTUNBcVF3RHdZRApWUjBUQVFIL0JBVXdBd0VCL3pBZEJnTlZIUTRFRmdRVUFpU251cjQ0bVBvT1NsbUlrbE13aWhnMHFnd3dEUVlKCktvWklodmNOQVFFTEJRQURnZ0VCQUxKY2xtaVVKRnhHR0V2TWFwcGNKUXp0UTY0MFhvS0dxeXZVY2xnR0NKK3UKb0MzZmVIdTRKNzJqM1hoZ0VPMEVrbngySWt2ME5JZFplazZyUDk2Rk0ranVHZGZya3RSNmJkbXFpZHJHWXdMWgpLQnVLa0N3b1h0bDVtNWg5eURTRzVuYWRBcWg4VzhEdUhuUFhpZ25HLzk0UmcwRWxVUEw2ZTV4MHNHVUpVVEVXCkYrNzNiajE3RFV0b0RDd0JEY20yK1kxMTVsYzMySEhGTnRYaTFvTUYvRVpaL3F1bGQ3NDJzYUQ4Uk5ta0p5N1EKT3BIK1ZFSnNOUktpZHcyQVdTUW9idEYzbVIvbWFpTktMNExGUldISFNjNTduUkVlOGFUNEQvUFBmcVJKYndxOApLNEZ4TzNmQzRlbFpZaTFHVm5UbnR5RUVLM2JBS2pOblcyOGNBcTNIbkJZPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==",
                            "verification": {}
                        },
                        "mode": 384
                    },
                    {
                        "group": {},
                        "overwrite": true,
                        "path": "/opt/openshift/tls/kube-apiserver-complete-server-ca-bundle.crt",
                        "user": {
                            "name": "root"
                        },
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURRRENDQWlpZ0F3SUJBZ0lJVXdMTkJjaHNZT1l3RFFZSktvWklodmNOQVFFTEJRQXdQakVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1TZ3dKZ1lEVlFRREV4OXJkV0psTFdGd2FYTmxjblpsY2kxc2IyTmhiR2h2YzNRdApjMmxuYm1WeU1CNFhEVEl6TURReE9ERXpNRGd4TUZvWERUTXpNRFF4TlRFek1EZ3hNRm93UGpFU01CQUdBMVVFCkN4TUpiM0JsYm5Ob2FXWjBNU2d3SmdZRFZRUURFeDlyZFdKbExXRndhWE5sY25abGNpMXNiMk5oYkdodmMzUXQKYzJsbmJtVnlNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DQVE4QU1JSUJDZ0tDQVFFQXVrQXFycmwrWHROcwpNQm1JMkRnZmlwUmMvNEluLytGZ2txSWZmaENTYzU3eXhGaXZBRXR5VTM3WERlQmNkeHNFMDRLQ1RuSDEram5PCm5VZkxlWFVKMmlHcFF6R1FSZ2FjV3VkeERBdUc1VmZmYkN0RkpxRGQvKzRTT3J6SlRQellvditUTGxPc296QlMKSHc5WWN4K1JmZUw0R3NlaXVhQVdmaFcreHdkQVFHWVg0eFJNcVBkcmlCY1JQUkprd2Q2K21xZ3FuM0t4UjI3VgpWeU85NnNlYWdjME5IR3h0dUlBUTF2eWgzeThvM2E3bURUdWJ6VDNRMXhTeDZTUUljd0I5K0RaUkRjMGwwUlBwClhzYVBuMVhMMzVYcHR0MHkxQTBZKzlKTXM5SWxTNkpCbzVNYzBERnNQWVNFZlNoeXZ5TVBDZFZ5bXdPcVRkbEcKdEpaZUxWazFKd0lEQVFBQm8wSXdRREFPQmdOVkhROEJBZjhFQkFNQ0FxUXdEd1lEVlIwVEFRSC9CQVV3QXdFQgovekFkQmdOVkhRNEVGZ1FVa01iUHN5YU5OaGg0bXlZZ3FOelJ5QmUzc21Rd0RRWUpLb1pJaHZjTkFRRUxCUUFECmdnRUJBR1FEMTZNdTAybEVaY1BodTNxcjFHRnVVQUZFWWh5T0hRSFVFcklUOU9rQ2hvczU4eUZ0WThPRFlwelYKdS83MllMVDBoSkdrY0diREVEN2dNTzNGMXhvWEc2bFh4Y2htb0FhOFZhWlpxTUJBckdVQXE4aXppUUdPUUMzawpaYVh4SjcrMGhhNTA0Q2xnUDJJd3hIMTlBOFhRVi8rS0hPU05YbjFGaDlSMXdNM2tHRG9JSFQ2bFZ4R1RlMTNZCldEMEN2NTRxZCtMWElSOCsrbVFVSXdMd1cwd3NKUEUybG5MYVhvSzQ5MHp6WDJvWWMxUWJ1WGNqeUxWY3pVUG0KVWFxY29IeDVjS3pabytjM2I5QVpvaDZzRjRvMG1LOWdJT2RWZXFzTitkbWlKSFJIeElhT0hYSzg2SFJpczRWWQpPM0VhTTlxWnViOS9vQ3BSRVcrN25CWWVDemM9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0KLS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURURENDQWpTZ0F3SUJBZ0lJUjhMVUtrdnFZdFF3RFFZSktvWklodmNOQVFFTEJRQXdSREVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1TNHdMQVlEVlFRREV5VnJkV0psTFdGd2FYTmxjblpsY2kxelpYSjJhV05sTFc1bApkSGR2Y21zdGMybG5ibVZ5TUI0WERUSXpNRFF4T0RFek1EZ3hNRm9YRFRNek1EUXhOVEV6TURneE1Gb3dSREVTCk1CQUdBMVVFQ3hNSmIzQmxibk5vYVdaME1TNHdMQVlEVlFRREV5VnJkV0psTFdGd2FYTmxjblpsY2kxelpYSjIKYVdObExXNWxkSGR2Y21zdGMybG5ibVZ5TUlJQklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQwpBUUVBNW9wNGpiL25wMW5OZURMSEp5K3EvcVByY1Z5bmNDLzg0ZDFiemp6dDlPTUpicnJ0TkEyTHlvNTBPblZaCmRIMTk5MklIbERTYnJLZFJacE9OR2Q1ZVRNT2hjZUNudVp3MWJ5K0ZBL0FJSHZ6alR4eXV5ZUNqajdQS0xQYm0KSlRsQm5nSjNSVnozV0dRai9MMEdJRWZYV0QwMndkdHJaYmY3dFBtUHEwQWYxYlY5MlM5U21XTWovcWoyTnVYaApLeWZ5aFU0ckI2b0NPQjlDY0M1VENtQW9DdzFJQjBFUEo3UmpxbFFnUVpCTTlwT1BYYTFDWFlleFZ6TFV4ZUZMClFTcHRiUW1UWnp6Yms0cUZrdkVRUlA1VFZEK3VKUXdkNlIvbUhseTZ6ZWRTUEh4SWpzYXVOYzE3bG8xamg5dkgKZkptUUQ5RElpSnU0dW9aaEErejQxQW9sZVFJREFRQUJvMEl3UURBT0JnTlZIUThCQWY4RUJBTUNBcVF3RHdZRApWUjBUQVFIL0JBVXdBd0VCL3pBZEJnTlZIUTRFRmdRVUFpU251cjQ0bVBvT1NsbUlrbE13aWhnMHFnd3dEUVlKCktvWklodmNOQVFFTEJRQURnZ0VCQUxKY2xtaVVKRnhHR0V2TWFwcGNKUXp0UTY0MFhvS0dxeXZVY2xnR0NKK3UKb0MzZmVIdTRKNzJqM1hoZ0VPMEVrbngySWt2ME5JZFplazZyUDk2Rk0ranVHZGZya3RSNmJkbXFpZHJHWXdMWgpLQnVLa0N3b1h0bDVtNWg5eURTRzVuYWRBcWg4VzhEdUhuUFhpZ25HLzk0UmcwRWxVUEw2ZTV4MHNHVUpVVEVXCkYrNzNiajE3RFV0b0RDd0JEY20yK1kxMTVsYzMySEhGTnRYaTFvTUYvRVpaL3F1bGQ3NDJzYUQ4Uk5ta0p5N1EKT3BIK1ZFSnNOUktpZHcyQVdTUW9idEYzbVIvbWFpTktMNExGUldISFNjNTduUkVlOGFUNEQvUFBmcVJKYndxOApLNEZ4TzNmQzRlbFpZaTFHVm5UbnR5RUVLM2JBS2pOblcyOGNBcTNIbkJZPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCi0tLS0tQkVHSU4gQ0VSVElGSUNBVEUtLS0tLQpNSUlETWpDQ0FocWdBd0lCQWdJSVZkUWFwZnowN1dZd0RRWUpLb1pJaHZjTkFRRUxCUUF3TnpFU01CQUdBMVVFCkN4TUpiM0JsYm5Ob2FXWjBNU0V3SHdZRFZRUURFeGhyZFdKbExXRndhWE5sY25abGNpMXNZaTF6YVdkdVpYSXcKSGhjTk1qTXdOREU0TVRNd09ERXdXaGNOTXpNd05ERTFNVE13T0RFd1dqQTNNUkl3RUFZRFZRUUxFd2x2Y0dWdQpjMmhwWm5ReElUQWZCZ05WQkFNVEdHdDFZbVV0WVhCcGMyVnlkbVZ5TFd4aUxYTnBaMjVsY2pDQ0FTSXdEUVlKCktvWklodmNOQVFFQkJRQURnZ0VQQURDQ0FRb0NnZ0VCQU9qZTNnc2U4M2MwMndvVVZPYVFxcDRWVVMyMHBPMXgKSWxISmRydGJNTmx2Q1o1a2ZCM1pxVlJMRUpDUjN2L2dCQzcyUnYxMEJVUUxPRjdwNGU2TExDSTNteE9nUllNbApFc20vbXJxbHlwYi9XNjl3NzV1YVhXRFZNNGNnSTdxLzhrS3ppT3RrTGJHWm12WVNFR1hQK29uelU5UFBIUFpBCkVnUVZWRUREdFFNaWt4eWlxZGdCN3BNbFV2alhmZ1o0dkI3NGZzeVd1RFZpQy9GYnVFSmxQRk0vdDFHenhKQm0KRDh5NTl1MXRobW8xY1ZOajRBcWRaWVlLaEhxdkZQNUhQYisvdEFvU0dNTTJzeXcwc3VrczAvRWpVSmx5M3ovdgpEcElCemxhRjFuNnVVS3BCQ3lyeittbnArSWxvWjFMd25hdzkvTlhwMW5kdlZIVy9Objd4SDNrQ0F3RUFBYU5DCk1FQXdEZ1lEVlIwUEFRSC9CQVFEQWdLa01BOEdBMVVkRXdFQi93UUZNQU1CQWY4d0hRWURWUjBPQkJZRUZPYm4KR09xRnRQM3RyUG1QakFtT0EyN1k1dTAzTUEwR0NTcUdTSWIzRFFFQkN3VUFBNElCQVFDTFJtbmZKd21LMituLwp2UUpyVUtIVk01SW1YOFJUWk5PbllsNUVYWFV4RXJJcnJCSEZJcnpVTTA4U2VLV3BCaHREalgzZzJaVVhnUjRCCkQzWXdKOXhkS1hHeDhBWmtUQXE4U3gyR09pb0Q3amhIU3NUV1pRODZFVVhhSUprbW9najFRcXh5RVFJRmdCZFUKbnpKekRWb1RwNzgzYVNCUC9FL3JpWndLTHVISCswUjhwOUNmM1k2dlE1aE94RDNOcjk4VmZvaVJXWEFVd2hlSAplTVMwTklUdDhNakhwVjdCRDgwamJNYXFtd3JoU2VQZ2FqaXBDdFl1d0lCQk94cHdmNlQ1WGZYZDh2RTZrNUhGCm1sZENyOTdJYTF2VEZpb2htSGhvcjI5cXhWb2Yxbno3VlMwLyt4cERPN0ZXcVhKWTNBa3VFZm1rcVcySE1QUnAKR2ZCSVRSOE8KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=",
                            "verification": {}
                        },
                        "mode": 384
                    },
                    {
                        "group": {},
                        "overwrite": true,
                        "path": "/opt/openshift/tls/kube-apiserver-complete-client-ca-bundle.crt",
                        "user": {
                            "name": "root"
                        },
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURNRENDQWhpZ0F3SUJBZ0lJWXhvRDk1bWk0YlV3RFFZSktvWklodmNOQVFFTEJRQXdOakVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1TQXdIZ1lEVlFRREV4ZGhaRzFwYmkxcmRXSmxZMjl1Wm1sbkxYTnBaMjVsY2pBZQpGdzB5TXpBME1UZ3hNekE0TURsYUZ3MHpNekEwTVRVeE16QTRNRGxhTURZeEVqQVFCZ05WQkFzVENXOXdaVzV6CmFHbG1kREVnTUI0R0ExVUVBeE1YWVdSdGFXNHRhM1ZpWldOdmJtWnBaeTF6YVdkdVpYSXdnZ0VpTUEwR0NTcUcKU0liM0RRRUJBUVVBQTRJQkR3QXdnZ0VLQW9JQkFRRE9Kb0FzTUN6WUFUZXZta0pUQ28rK3UvL3Y3QkFFTU9LUwp5bmhFM2RaTTMvVlViUnlBUnppU01iTDVpSXdGSGJzZHN6V2VVa1l6UElSRzliWDJzSXh6d2Q5OURMRzM4YkU3ClpTYUYySE91WFIwMFdCajI3ZEJjcFlyTmVzNFA0ODBublZ0WmsxWlQrVlUyMHhEaFVQWGpyakFoM2E2Y3dkYmQKWkduKzJBZVlveEplU2wvKzJUZzBXcEdnUm5PdVI3azV4WmpGVDJVNnhnNEt3c0d2eWRyZHVoVVFDVkxBT1hVZQpVcW5XMnJxY3gzeTVSYWd3cVVsMVZKZWxFQzBVbXJVeFRlQWlnelhGOVVHRmpFOXkvY29maEh1QmtXTGs0cCs5CmRPVXJ3cXQ2VE9Nd2d4Mk1pQXN6WS9IQ0FGcjc1ek9Ua1BaQTFCeEpyTHpEYUVHT0ZsVVZBZ01CQUFHalFqQkEKTUE0R0ExVWREd0VCL3dRRUF3SUNwREFQQmdOVkhSTUJBZjhFQlRBREFRSC9NQjBHQTFVZERnUVdCQlIrUHBwdAoyTS9LNUNZNitucFZmalNKckYyMUlUQU5CZ2txaGtpRzl3MEJBUXNGQUFPQ0FRRUFVTWFoc1pLcFpJVUh4MWI1Cm9CQnI1b0RsckdKUFZvSEh6M1pWL0M0K0NTMjNlaVFiTDhQc2Z4OU5DQ0VHLzV2akxSekVtL2ZCL1ZnZFVlaUMKdUxuUWdtQmUwWDBQNDIzdndmTzJKZGV3d0ZLSTdRZVRTWmw0VHoxK3FKOGt1YmlUYjBUcnhTd2FyQ3ZHbk5kYwpkYTBsTzBsbUpyNDA0Y091MUtqM1hWZXNDM2RnQnJpTXpiWmxCaDlyNzdLaytJYmNXY0ZIY1lxWFB1MDB5eVM4CmVoRHpNelRoZVI4ekVtZUNQdkxNa2toSzBpYXpLVmNDNVJlY3BvbDI3Uk80SmhkMDFjUUpXKy9xRUdKb0M3VlgKTlFwbVNhaTNOQkpwU0o2NWlPaGVmOVZSblVyamRxVVZDeEplMEpOVWJjSGtTZHpyWlBGK0NuYlRqOW9QcGROLwpxdjc3ZkE9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCi0tLS0tQkVHSU4gQ0VSVElGSUNBVEUtLS0tLQpNSUlESGpDQ0FnYWdBd0lCQWdJSUlTRmFZZUNGK3pFd0RRWUpLb1pJaHZjTkFRRUxCUUF3TFRFU01CQUdBMVVFCkN4TUpiM0JsYm5Ob2FXWjBNUmN3RlFZRFZRUURFdzVyZFdKbGJHVjBMWE5wWjI1bGNqQWVGdzB5TXpBME1UZ3gKTXpBNE1UUmFGdzB5TXpBME1Ua3hNekE0TVRSYU1DMHhFakFRQmdOVkJBc1RDVzl3Wlc1emFHbG1kREVYTUJVRwpBMVVFQXhNT2EzVmlaV3hsZEMxemFXZHVaWEl3Z2dFaU1BMEdDU3FHU0liM0RRRUJBUVVBQTRJQkR3QXdnZ0VLCkFvSUJBUUNZbVRTRElYdXlTTWw4VThJZHpsTlRTU2hYL1h0Z1U4V08xWmF4NDRLRC9LbW51Um1qZ0hFQ1ltNW0Kc0JhRDRTVGdxemtQT0ZpbWdVZ1dJcEkyd3orYVZWcVFOOU1LeVRYMVZ5YmhjbzdWajdSSUg0bkYxWTByMkZBZgovZC85WGI2ZUZhUjl2SklRVGIzMC9uU056Zk81dU02MkJwMCsxb1Z5b2lMdGRpYzJaSjgzQzZxbHlSNWI2SHdSClJ5djgzU3hjTFlpYXpDb0tCTWF3UEE3NWFsVTRoTUFSb0Zza1ZMRDI3VllvMi9KcnlISDdkMTc3RzVuUUtja1AKSk42ZG1EVmVzdUlrQ3czaUZKc0srdDZXejVucU50bVUvbGhNYVlTcStJVzB5VkRUVnB2TGp0SmI2cGdyWWdycQpGQjNJcFdpLy92TkJ6bDIxeUJPYkgvaW5oQ29aQWdNQkFBR2pRakJBTUE0R0ExVWREd0VCL3dRRUF3SUNwREFQCkJnTlZIUk1CQWY4RUJUQURBUUgvTUIwR0ExVWREZ1FXQkJTNmphd3FqU29NcjRMS21JMzFYU1doU1ZZSnRqQU4KQmdrcWhraUc5dzBCQVFzRkFBT0NBUUVBaGFVdEJHY0YyYnIzb1hjTjlHRUNHMDFrZWd2d3NNb3RFL2ZKQ1R4VworLzdMc2dSSWN2SWJ2ak5NRlRWVjNSRlcvWmF6YnY0RG1ibXUzSXRtRVNEYllybXVNWDVTWWQyUzZ4MjRjQnVDCk5iTlVRNkJGemUxekNkS0ZsVUx3R3hOTWEvc3p3QWtwZkVHek85K1owVEFGOXlPcjNrUS9tOEdqc2U5RUZDbFgKSy9uQVU4WHpKN1NVa2VxNUtGdG94eTRxb0dYTVlqYTZLQ1hjbmFKanJSU3Fnb2NDQi9XcHp5TC83NlRXK2J2dAozQnQxM3lLNmNsdHEyZlVnTHVMYmwyeVl1OTF0ZmpMd2FINWZSNlBNcG92NGEwQnlLdysrVWtlQWx6dnJjTE1zCmN4aVVmUVVVdWpPb3RiQ0c5cUhrQTZpODRMQkdmNkZwS0l5VlFidnkycUljL3c9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCi0tLS0tQkVHSU4gQ0VSVElGSUNBVEUtLS0tLQpNSUlETkRDQ0FoeWdBd0lCQWdJSVZlY01VSmFRcVZNd0RRWUpLb1pJaHZjTkFRRUxCUUF3T0RFU01CQUdBMVVFCkN4TUpiM0JsYm5Ob2FXWjBNU0l3SUFZRFZRUURFeGxyZFdKbExXTnZiblJ5YjJ3dGNHeGhibVV0YzJsbmJtVnkKTUI0WERUSXpNRFF4T0RFek1EZ3hORm9YRFRJME1EUXhOekV6TURneE5Gb3dPREVTTUJBR0ExVUVDeE1KYjNCbApibk5vYVdaME1TSXdJQVlEVlFRREV4bHJkV0psTFdOdmJuUnliMnd0Y0d4aGJtVXRjMmxuYm1WeU1JSUJJakFOCkJna3Foa2lHOXcwQkFRRUZBQU9DQVE4QU1JSUJDZ0tDQVFFQTJkNWl2N3R5Z2YzbEFWdkRKaVRTTkhkTEp0SG4KZWJNVkpEdjQ3U2Vid2hMckZveGkzSFZFYVhzb1BhZzA4bTA5UnJHT2NSNERkZ3hwUW9iakxnTng4VkF1MkpRUApLVEpyQXpRTzdoT2dFc3JIa0JjQ1o1bDVuTzBVUWcyTFg4bDM3akNyTEFhTHYrRkFMdi9mc2hPRjlGSzBMc3gzClhNeHgwMTJza1YwZnMwaThydnVBNGprbTBLMXBGak83TGx2OHNFUC8wS3FsckFBNjN4Wmx0dEZ6N0JGelhneVkKek5vZ2tGeVdGVThma29NNjJSM0RvMlB4VHBvVFBqeW5seWVyeVMvSk5pQlBXWVhva0RZUHVna3JjMmhxd2VtNAp5aUs0QjFybzNEcHJQWjFsbjFoR2xrQUlYaUJIbmJiZ1V3QW9TQyszalpRc0FKSG9kZE5wa3E3MWNRSURBUUFCCm8wSXdRREFPQmdOVkhROEJBZjhFQkFNQ0FxUXdEd1lEVlIwVEFRSC9CQVV3QXdFQi96QWRCZ05WSFE0RUZnUVUKWWRDWkZBb2tySlA5ZFg3SnZoTmtpeEFqNmIwd0RRWUpLb1pJaHZjTkFRRUxCUUFEZ2dFQkFIMmdOZ1JDb3Ywcwp2Nng5QXk0MHcxUnIyY0NaelF2cE9oVzUyRStNVnpVTEl5WlpFYnQ5cHFaN1VLamZsajE0bHJSWHdCYnpTSDFsCjNuSUMzTWdVT2RUWjRBNUZOcithU3ViVmkxdmczOFl3a2xVWjJGalp5YXVoOG5Tb1RLc1FqL3U3d1lWcmd4d3QKYll3NlpQQkh2eWtQVEhJU1JibXB6RDczYmF2ZVYvWHE2eW9Ta0JVNzk2RUF4ak9wOXVBUklqbXZINDBSeEsycwpTRW5NZUZNSWVpZzB1OFU1bzdCNkdDMWN5M2xwV2p2Yk1xZ1U0MzF3K3N3UnZyV05mbCtZZGE0c3JVNkxDZnJHCjY1bHFRTXFJMHB2Yks2QjlFZHdTNGwvN2l0WVd3OFM1eXlQNXNzTGdaK3JzNTFvS2xRUnRIS0IvV3lWTDQxQnkKVEsrWFZPRGZFLzQ9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0KLS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURRakNDQWlxZ0F3SUJBZ0lJT1lBbEJMd25EWUV3RFFZSktvWklodmNOQVFFTEJRQXdQekVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1Ta3dKd1lEVlFRREV5QnJkV0psTFdGd2FYTmxjblpsY2kxMGJ5MXJkV0psYkdWMApMWE5wWjI1bGNqQWVGdzB5TXpBME1UZ3hNekE0TVRSYUZ3MHlOREEwTVRjeE16QTRNVFJhTUQ4eEVqQVFCZ05WCkJBc1RDVzl3Wlc1emFHbG1kREVwTUNjR0ExVUVBeE1nYTNWaVpTMWhjR2x6WlhKMlpYSXRkRzh0YTNWaVpXeGwKZEMxemFXZHVaWEl3Z2dFaU1BMEdDU3FHU0liM0RRRUJBUVVBQTRJQkR3QXdnZ0VLQW9JQkFRRG1tcW1XVS9uUAp5azk5RkRnRjNmYmRTZTNwd1dCYW0zejRrdVhwbmJmN2FGVFZPWE1JYU4zdlUxQWhMMGt4U0FtR0dzblppekpWClFKNTdNMG42ckJFajdRNDMyUzNENUU4ajVPQnRweThRLytXMXFXWmJsRFNxeVRjQm4vWTZIcjUzbFZIdjNEWTEKczJqRXBxWnJ2NnBaY3dtQldqTCthTlQybTVxSS9pSkFVN0tlaU0zQlM4Y1lmWjlUYVc1OE4weUxqWlRNQnJzeApxRXVWOC9teXJMRmlKa05RRGtvcERUSFExWTVFSWZVVG9yR3BNQXR6aHVIczRkd3J2ZWNmMlhxUFQ3NHRaU1p0ClZsY0t1R1J5bmJONUIyV0ZHL0NpaGZ6a1V2STFONGsvak1YNU9ZN2x0YThnbHNGN00wSWdEVkVSNCtvZk9GS1YKZFBIWFhYMjJ0SldMQWdNQkFBR2pRakJBTUE0R0ExVWREd0VCL3dRRUF3SUNwREFQQmdOVkhSTUJBZjhFQlRBRApBUUgvTUIwR0ExVWREZ1FXQkJURmEwckEwWHcvV3QzSC9rNTVRKy9GeW9YbEN6QU5CZ2txaGtpRzl3MEJBUXNGCkFBT0NBUUVBM1pRM0RLR2NIOWJ6N3VpTytXYWFOQkswUk1nTmJBb0MxVEJaUjhUNklVMUZ3Y25WM0NtOGltZ0YKMVRPdzZ2UytBclFiVHcyOVgvZTgzalBrL05xSDlGVURqVkFEcSthWjVLRVMzY1Q1TlpsZzEzV25mSktNenBGbApCZWRnMW4vZ1RVSitmVnlEZE5SaXVncTFGV3RzWGw2M2Y0OVdPQ2REQk5IcVVtK3VMNFpRSEh3a09kaWg3YTdVCnQ3T2lDNU9xSDh1YklDaUUzV3MrbTgrdndRM0MzZVdLVHJXOEg3YTV1NVJJMmJpT2dYZndNbFhqVGFRNWRsTHgKaGlYMXI0dW5mTHp5cUxxTEpvVTRvRmhMUVduZS83NDJOeTUrbENNSzVBQzhSZHI4aXpuTWhKbC9TekdYcDhhaAo3U2F1bTRMZ1JyenJ0NSthNTd2V3NMd0h1bW9vdGc9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCi0tLS0tQkVHSU4gQ0VSVElGSUNBVEUtLS0tLQpNSUlEU0RDQ0FqQ2dBd0lCQWdJSUhKL3RVQ2YxS3o4d0RRWUpLb1pJaHZjTkFRRUxCUUF3UWpFU01CQUdBMVVFCkN4TUpiM0JsYm5Ob2FXWjBNU3d3S2dZRFZRUURFeU5yZFdKbGJHVjBMV0p2YjNSemRISmhjQzFyZFdKbFkyOXUKWm1sbkxYTnBaMjVsY2pBZUZ3MHlNekEwTVRneE16QTRNVEJhRncwek16QTBNVFV4TXpBNE1UQmFNRUl4RWpBUQpCZ05WQkFzVENXOXdaVzV6YUdsbWRERXNNQ29HQTFVRUF4TWphM1ZpWld4bGRDMWliMjkwYzNSeVlYQXRhM1ZpClpXTnZibVpwWnkxemFXZHVaWEl3Z2dFaU1BMEdDU3FHU0liM0RRRUJBUVVBQTRJQkR3QXdnZ0VLQW9JQkFRQ20KWTYrKzhmbjA5dGZpd3BRY2RkTElQblVjOWMyS2I2V1hvcHNLNnRLQVplMTNjS1hXN2hwQ1Y1UW5FcE1UVDNzRApXb3N1QzdyRTJVTUF1c2pCV25EeDl3RHFTZVlCUi9jVzFGSlI0bnlvZ1B3MkJZbEdvTERHeXF2UXpBRVFEUXIrCjJENEpjYUFBL1JsTHZwc1F0RGR5cEdEY3Jya2xKdXJmb1BrTXh4UEVlODdEc0tpUU52dmxPWlVubGppakhObHkKU0RuQmJtenVQUktQb0VZU1RwWGkyeTdKWmw5WTZwQW9RdEJHWktQSHVlcS9xRVMvUVp2eW5jZ3krTEt6QmNXbgpOcWpJT0FTZERxdXptY2NJa1BhaXRTZHdnR0JWQy9McVZadWtsNzRSZS8rZjFQYW9WNC9aN3dpZDFqaDRBMGd4CkJoRWduQkRDbFh0MVdxSVhXS1AzQWdNQkFBR2pRakJBTUE0R0ExVWREd0VCL3dRRUF3SUNwREFQQmdOVkhSTUIKQWY4RUJUQURBUUgvTUIwR0ExVWREZ1FXQkJSRll1dlUrbTNzM2FqV2U2cnhiK3oyUjVlSGxUQU5CZ2txaGtpRwo5dzBCQVFzRkFBT0NBUUVBSkYwcm9mWmxjelFkV2ppSGEwYlZPY0F3ZHNUckI4QWo5akdwRndldFRheE5aanpMCjN0c3FLV3dpNVRGRHJzaXRrd2tVb2cvY1pMVmgwRWEzZm15Rm9qWTNKbFZYVGtVQzlsNnpFMUhvOVNBNW4yNUcKdmJuTjNGbHN1KzBxQ3FLdVcyc0t0M0x6U3VNNHRkSjRGTlBvZ285c2dMU2V5S2NUanFXVlV0ZnUrNUViWDdZUwpxbXdPaE9OVUM0OEZNRnpxUXc4MnNHcUxHV0RUVlJaK0g4ZFJzdjBJYjd4N1lPSXpjaUFxMndCRmZ3ZW1ENmRmClkwbkl5S1FnS1FOTGhCdzZoaXYzRHo2RGdsdU02RUtKVDQxRWF3MjMrZDlya1h4ZFYvVExNK3pxUDlHbHNwT3EKNVhMcmlkQVYzVGw1TGZyRS9ROU1zT3NWdDdhbXRLMGZ3WlcwMUE9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==",
                            "verification": {}
                        },
                        "mode": 384
                    },
                    {
                        "group": {},
                        "overwrite": true,
                        "path": "/opt/openshift/tls/kube-apiserver-to-kubelet-ca-bundle.crt",
                        "user": {
                            "name": "root"
                        },
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURRakNDQWlxZ0F3SUJBZ0lJT1lBbEJMd25EWUV3RFFZSktvWklodmNOQVFFTEJRQXdQekVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1Ta3dKd1lEVlFRREV5QnJkV0psTFdGd2FYTmxjblpsY2kxMGJ5MXJkV0psYkdWMApMWE5wWjI1bGNqQWVGdzB5TXpBME1UZ3hNekE0TVRSYUZ3MHlOREEwTVRjeE16QTRNVFJhTUQ4eEVqQVFCZ05WCkJBc1RDVzl3Wlc1emFHbG1kREVwTUNjR0ExVUVBeE1nYTNWaVpTMWhjR2x6WlhKMlpYSXRkRzh0YTNWaVpXeGwKZEMxemFXZHVaWEl3Z2dFaU1BMEdDU3FHU0liM0RRRUJBUVVBQTRJQkR3QXdnZ0VLQW9JQkFRRG1tcW1XVS9uUAp5azk5RkRnRjNmYmRTZTNwd1dCYW0zejRrdVhwbmJmN2FGVFZPWE1JYU4zdlUxQWhMMGt4U0FtR0dzblppekpWClFKNTdNMG42ckJFajdRNDMyUzNENUU4ajVPQnRweThRLytXMXFXWmJsRFNxeVRjQm4vWTZIcjUzbFZIdjNEWTEKczJqRXBxWnJ2NnBaY3dtQldqTCthTlQybTVxSS9pSkFVN0tlaU0zQlM4Y1lmWjlUYVc1OE4weUxqWlRNQnJzeApxRXVWOC9teXJMRmlKa05RRGtvcERUSFExWTVFSWZVVG9yR3BNQXR6aHVIczRkd3J2ZWNmMlhxUFQ3NHRaU1p0ClZsY0t1R1J5bmJONUIyV0ZHL0NpaGZ6a1V2STFONGsvak1YNU9ZN2x0YThnbHNGN00wSWdEVkVSNCtvZk9GS1YKZFBIWFhYMjJ0SldMQWdNQkFBR2pRakJBTUE0R0ExVWREd0VCL3dRRUF3SUNwREFQQmdOVkhSTUJBZjhFQlRBRApBUUgvTUIwR0ExVWREZ1FXQkJURmEwckEwWHcvV3QzSC9rNTVRKy9GeW9YbEN6QU5CZ2txaGtpRzl3MEJBUXNGCkFBT0NBUUVBM1pRM0RLR2NIOWJ6N3VpTytXYWFOQkswUk1nTmJBb0MxVEJaUjhUNklVMUZ3Y25WM0NtOGltZ0YKMVRPdzZ2UytBclFiVHcyOVgvZTgzalBrL05xSDlGVURqVkFEcSthWjVLRVMzY1Q1TlpsZzEzV25mSktNenBGbApCZWRnMW4vZ1RVSitmVnlEZE5SaXVncTFGV3RzWGw2M2Y0OVdPQ2REQk5IcVVtK3VMNFpRSEh3a09kaWg3YTdVCnQ3T2lDNU9xSDh1YklDaUUzV3MrbTgrdndRM0MzZVdLVHJXOEg3YTV1NVJJMmJpT2dYZndNbFhqVGFRNWRsTHgKaGlYMXI0dW5mTHp5cUxxTEpvVTRvRmhMUVduZS83NDJOeTUrbENNSzVBQzhSZHI4aXpuTWhKbC9TekdYcDhhaAo3U2F1bTRMZ1JyenJ0NSthNTd2V3NMd0h1bW9vdGc9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==",
                            "verification": {}
                        },
                        "mode": 384
                    },
                    {
                        "group": {},
                        "overwrite": true,
                        "path": "/opt/openshift/tls/kube-apiserver-to-kubelet-client.key",
                        "user": {
                            "name": "root"
                        },
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBOHE1bDgwY3BJZTAzWXpaaG9Xa3dHTGR2SDI3VmdXM1lFK1BLemI5QzRmRDZjVjdiCmcvNVdwcDh6dk1qVTlpRjNBZVZOTzB0ZzVCM1FwU3QzaUlzdzRTZFk2WWRaK283MTdPbFovbWQ4YVZmcEpQcnoKaHp0aWpBSm5zbjBYRVBCeUdtWEVBVnFPbUlJWmo5MEdBN1h5cENCWHdVOGp4amtWY1pOY0ppTUdibkhSbTV5QQoyaG9SRTRnZk9FWlM3TEtlcWt4YWd5NXRMdGxlNU10UjRTUUNzQk5WeWtlZlAyTG93Z0J0bUFhMzF1Y3k4YW5KClBzYm9neVYxbzhYT1Q5U0J0NW9ZQTFkQ2dZNmVFMVJTNUVLd1pobjIzcytkZmg5RDRVVmZNVHhCNGVQRmNpVEIKeisyT0hqdm4wSHdiR2dYeFFtb2MyMzlWWjE1RzBzLzgweWNXVHdJREFRQUJBb0lCQUFnUHRRRkV6dC82b2tsZwphQlBWaTZ4MmczRjIzQTdGbUZUb3p6YlFjS2RTdXU4REtLV1UwRW9PcGNoU240aGhpak44NjNqWnd5a3d1RnFVClBBOUVHR2FTU1FqUTN6Tk1obXpOUDVrTTFQd20yRzdMQzBYbHVodE9oU1ZQdEhGeW0wZTNNN0NiMG5yTWI0N3cKMTU5Tjd2WjJ3Sk9DVG56cUxvVXNVUFpQV1lwWG13Q2wxMlgxazBDUTQ0ejdJRlpvV3NOM2IxdUt0dDB1RnFubQpLMy81VTRUVVB6ZXJxSzYxMXg2cDhyNUVzNHRHVWNWdUUrRUtKbm0xZ21NTEZJWDBjc3R2N05PaWk5YXZHU1lzCm5kYWRzOVlZeEhqeG9VVlFLbysyaDc2aVI5V3lwaDViRHBqQ2VyTTRsTUNDQlVXbk0va1cwVUI5VEQ1Y1JFVVEKVndFd045RUNnWUVBK05EbEY4S0xCZ0Jtb2xCYlNTMWlZOWxJZ1JVYnlWRXg0S3NXY3llZXcrKytxY3VuRmIrRwpLUWNBMlhuSUM5cEZ3Wjd1TXVrZjhOSkpncEFWNmxjMU5OQ1ozY2pOVHgrYU5PNk8xRjd5M3k5THJ5MDk1VkdWCjgyREhoelE3cW1rRTdlMHRJTXFGd3lIVWdQQThUYXRZWjNCcUFVWCtJS21QYUFYMmtXc0liZmtDZ1lFQStiQW8KcGEwRnlZOE9xTWlQQ3ZwaG5RY1ZvR1pydWxhcHZ1Y3RBTTlMcnlibVB4ejdDczd3NEpqamJRMUNWdG94SXN6dAovNUVJZ2xsOVJwN2N2cEtPQ3k1cHJXZHFZVTRXeEhzNjJiN2VaNFdGcUlHeVlwS3NYemNhVG1LWmhteDNZYkRQCkVLTnhCMWl1Ym1RM0lGK3dEVUZFbjljT2xZK0l0ZlRnZDVNRDJJY0NnWUJuRkt3RWx1MWZ0Q1RSRS9kdHJxYTMKZFJwTG1BSWwra1J1cnBLamJJT2k2eDBUWFRMQW1OTXRCaUM4K0czL014TjVMcTNDVzhDRzFhZnN0bUxON2drMQo4MEg3bHlndm9va1Jhcyt6Zmc2aWxnYUY4WGxXR3VIRHJaR2NHdkNwSGM4VC94R1dKekVaY1ZlSGYzK01NZk56CkR5aHJsS0sreDJDSkdRZFlvWDRoaVFLQmdHNU13bmdGeWhPekxaK2tFWVNnL1BRWVNCWjJpRXBsdEZEUDROS0YKd0lKY1pjUWxza1NoREVtN1lHUXhRa2dKMVVEeFZJWGNkT3pZU1g0aitaSDZQZU4wbWx4dTNkQ2taV3hnbjZ2SApKSXFJc25XdzdiT2I1YWVlT1BHOW51S0NFZTdHNDRJUElZUkVTYkljZFRuSTY0Vy9lbWc5NFlSeVJzdFNwTUpOCjRKb0xBb0dCQUxyNWZWa0hDelBJWkhLZ2xRb1Z0cUM0LzFuQlJGdTBmUlNYY2JYTGdldE5Cc3dVL0VHV3F5Y3kKeldtMnBQV1JyWU5Od2RTL2RDdk5jR21rKzMwckgwOTVFSWEyUEJLTDdrSTlvVWNtREdZVHRzdUJaL0wvN094SQpxa0Nkc2k5ZkxRWElxcTZiTDNjVmhOcy95TXZjUGlpUXZyb0RLRW9OSlcrVE5ONG1nOXovCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==",
                            "verification": {}
                        },
                        "mode": 384
                    },
                    {
                        "group": {},
                        "overwrite": true,
                        "path": "/opt/openshift/tls/kube-apiserver-to-kubelet-client.crt",
                        "user": {
                            "name": "root"
                        },
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURiRENDQWxTZ0F3SUJBZ0lJRGh3RHRYemF4UWt3RFFZSktvWklodmNOQVFFTEJRQXdQekVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1Ta3dKd1lEVlFRREV5QnJkV0psTFdGd2FYTmxjblpsY2kxMGJ5MXJkV0psYkdWMApMWE5wWjI1bGNqQWVGdzB5TXpBME1UZ3hNekE0TVRSYUZ3MHlOREEwTVRjeE16QTRNVFJhTURZeEZEQVNCZ05WCkJBb1RDMnQxWW1VdGJXRnpkR1Z5TVI0d0hBWURWUVFERXhWemVYTjBaVzA2YTNWaVpTMWhjR2x6WlhKMlpYSXcKZ2dFaU1BMEdDU3FHU0liM0RRRUJBUVVBQTRJQkR3QXdnZ0VLQW9JQkFRRHlybVh6UnlraDdUZGpObUdoYVRBWQp0MjhmYnRXQmJkZ1Q0OHJOdjBMaDhQcHhYdHVEL2xhbW56Tzh5TlQySVhjQjVVMDdTMkRrSGRDbEszZUlpekRoCkoxanBoMW42anZYczZWbitaM3hwVitrayt2T0hPMktNQW1leWZSY1E4SElhWmNRQldvNllnaG1QM1FZRHRmS2sKSUZmQlR5UEdPUlZ4azF3bUl3WnVjZEdibklEYUdoRVRpQjg0UmxMc3NwNnFURnFETG0wdTJWN2t5MUhoSkFLdwpFMVhLUjU4L1l1akNBRzJZQnJmVzV6THhxY2sreHVpREpYV2p4YzVQMUlHM21oZ0RWMEtCanA0VFZGTGtRckJtCkdmYmV6NTErSDBQaFJWOHhQRUhoNDhWeUpNSFA3WTRlTytmUWZCc2FCZkZDYWh6YmYxVm5Ya2JTei96VEp4WlAKQWdNQkFBR2pkVEJ6TUE0R0ExVWREd0VCL3dRRUF3SUZvREFUQmdOVkhTVUVEREFLQmdnckJnRUZCUWNEQWpBTQpCZ05WSFJNQkFmOEVBakFBTUIwR0ExVWREZ1FXQkJUNFIzQzA3TWlaYW9WQkpNdDhReFJJOUNlSllEQWZCZ05WCkhTTUVHREFXZ0JURmEwckEwWHcvV3QzSC9rNTVRKy9GeW9YbEN6QU5CZ2txaGtpRzl3MEJBUXNGQUFPQ0FRRUEKdVQxTmdQTGVmMi9JdTViaWNhL3h0RklUeThqSE92Vk1aaUZDTmwwZDZZN2p4blpWUlo2dDY0cXQxWFFEZW42RwpkNkFKRTNuVnNSQkRtVlJLQWJFRnJESkNWUFRBTG41UzVQcVdhOVcxTjhtU0RndWhuNklCUzY2b1p6QWlMV0JPClpaaHpya0wyM3FVS0xNeThaMXUySzdpcE9vQ3ZTSzFLenM4WW1hWVJaaG1QUHpZU05jck8waDE2ajkwQTNxU0MKTC83a3o5bkpDTTRONm9RMVIvSkJ5Wlo5QnczakVwbStCQ3NjRlVxL3hhTE1UUnV1ZDd4MlM5RzQxNXFSeERlMAp4V0xYdlNxeXY3YlJPOXZXelFDRWp5YndJYUs2T1hjRlp0bE5UaW1FY2RxeEhBbU1LVHJiSFQ1Sy9kMEJZMUtyCnJGb09Gc1ZQTDB3RnAxaVFFNnVyeXc9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==",
                            "verification": {}
                        },
                        "mode": 384
                    },
                    {
                        "group": {},
                        "overwrite": true,
                        "path": "/opt/openshift/tls/kube-apiserver-to-kubelet-signer.key",
                        "user": {
                            "name": "root"
                        },
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBNXBxcGxsUDV6OHBQZlJRNEJkMzIzVW50NmNGZ1dwdDgrSkxsNloyMysyaFUxVGx6CkNHamQ3MU5RSVM5Sk1VZ0poaHJKMllzeVZVQ2Vlek5KK3F3UkkrME9OOWt0dytSUEkrVGdiYWN2RVAvbHRhbG0KVzVRMHFzazNBWi8yT2g2K2Q1VlI3OXcyTmJOb3hLYW1hNytxV1hNSmdWb3kvbWpVOXB1YWlQNGlRRk95bm9qTgp3VXZIR0gyZlUybHVmRGRNaTQyVXpBYTdNYWhMbGZQNXNxeXhZaVpEVUE1S0tRMHgwTldPUkNIMUU2S3hxVEFMCmM0Ymg3T0hjSzczbkg5bDZqMCsrTFdVbWJWWlhDcmhrY3AyemVRZGxoUnZ3b29YODVGTHlOVGVKUDR6RitUbU8KNWJXdklKYkJlek5DSUExUkVlUHFIemhTbFhUeDExMTl0clNWaXdJREFRQUJBb0lCQVFDbE04dW1QRWJNeTV5aQplS2VoM0dBTUsvaGE3QVFCSlQ4a1BPaWtzaTZwMXhaZklxYjhNVlE5TGF4TCtib3ZxZkhZdHJ4QU11NCtFT3I0ClM4Z0Y0dHJzcDlqMXZZcUJ1Yi9RY1JrdXRRU000eVpIUERKdURRQ21FVHhzMTVIb0ZUcFNKUkRzQ3hCeTdESjAKSHdjK1RiTFdIZ21ETjRFc3JTRlVBaWwxVnNwbTFiTUp1NXByenNvRGUyVHFzcTRZUm9RUnQrK0ZIU2E0b3lncgpydmJ0Rm9PTnpHWW5zRDArYWpvUXYvZGdtR2Q3YlhncmEyNmlwN2FkMWI4QXNaRnJ4M2hRK21WMDc2RlpRbm5ICllKVGYwN3hCL1hlVStIQ2FFRkl6SUNHdGNKK2IwUFM5ektXejBYZk5YUTlsNFlxeFBLT3pmV3Q1eW1PMm83UzEKL0Q2SWl2VHhBb0dCQU8rd0hLbm1FWjk3T3doVisyUW0venh5bE4xYlkvb1BQY0pDQ3Mxalp2ZXJxR2VDRGhZWAppWHpDMURVNTRIdUNGNVkweWlpMDhUWjQ5N1R1L0VVSGtwMjIrc3BMZzEyRXhoaUpEbEZJOStURDB5V0EvSFlZClRGalpybEpoMUxnVHhHcUx2SHpSelE4d0xocUFmZmxzcFJjclk3STFFMU9TbGVOa2ZBRXBYTk1kQW9HQkFQWk0KU29IdGtDcEkyMkZ4NE1KSnJZM0hab1o5M0RGd0FlaEpMSVU0T01jR3crUmx4RDNObnhrNWh4OFdML0JaWFl3awo5S1ZJUFVQZDJKSEtNYWFsVjRPeFEvWEFNMk1TRjJ0cVBPeFR0SzZFWWdoU0hmR0FrYXFRMzZPVVYxOHRKMVBnCmpZZUFxOFBLZWNxR2RCRlI0cW96bmM5V2Y5ODlHN3lTOVhDMGEwTEhBb0dBS21SRWZZd1NXOW1JdEUyNHU1cm0KRTRQVWJsNEdqYWg2Yk13UGF3b0VvUk04SXFwdTRWdGlWcTJDcUxOR3o3RlBpS0puaXRHTncrdWJLK1lFdWhTLwp5cU1kTWdBdkNMQTk5UUx3aEZIYWZoeGdVTWJDWUFTbUpDVEQzeEFzZGk0UTFDTkl2KzYvVE10aHJCQkR0NFNPCm9rMXJRWTUvajQxaWN5aEhnbEVWZU1VQ2dZQkpWaW9SU2VWVlVlQlF3WkhGQ0I4dlNpSlRCWUxkRFpianpYWCsKTE9GckVhNmVnVmJQZUR4WlRISFpaY2ZjYngrVnJTTlRXNUV5ZGdvWVR2WTl3cG11VXNnRGtyazZWSmE0bXllTQp6dGZMNXdzeG94SGJhUWIybkxDYWluOEJqZlpaMlZFSytkc3JMMHpZYXZTQWU3dGNKb1preUVMRysvRVlVMEhWCnowTG8zUUtCZ0E5SVB5bThvdUtHaTFEOU8yWXlCSkxMczVNdkh4ZXpaM2s1cjhzNHFrZHFPbkNhdStrNzd3MDgKK2V4ZzZFa0R4VUliRGxCUHZMYkNQSkVldk1Jenp5cmNLRGxDcnhNeFBKdmg1OFczWTZBTFRJV2Frd3ZESmp6MApWZ2szT0RZT2duRTNxZGNxTnVyVno0Rm1KeG5zRUtPN1cvNGNCdXpOTCtqSmlhSFlqWkVRCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==",
                            "verification": {}
                        },
                        "mode": 384
                    },
                    {
                        "group": {},
                        "overwrite": true,
                        "path": "/opt/openshift/tls/kube-apiserver-to-kubelet-signer.crt",
                        "user": {
                            "name": "root"
                        },
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURRakNDQWlxZ0F3SUJBZ0lJT1lBbEJMd25EWUV3RFFZSktvWklodmNOQVFFTEJRQXdQekVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1Ta3dKd1lEVlFRREV5QnJkV0psTFdGd2FYTmxjblpsY2kxMGJ5MXJkV0psYkdWMApMWE5wWjI1bGNqQWVGdzB5TXpBME1UZ3hNekE0TVRSYUZ3MHlOREEwTVRjeE16QTRNVFJhTUQ4eEVqQVFCZ05WCkJBc1RDVzl3Wlc1emFHbG1kREVwTUNjR0ExVUVBeE1nYTNWaVpTMWhjR2x6WlhKMlpYSXRkRzh0YTNWaVpXeGwKZEMxemFXZHVaWEl3Z2dFaU1BMEdDU3FHU0liM0RRRUJBUVVBQTRJQkR3QXdnZ0VLQW9JQkFRRG1tcW1XVS9uUAp5azk5RkRnRjNmYmRTZTNwd1dCYW0zejRrdVhwbmJmN2FGVFZPWE1JYU4zdlUxQWhMMGt4U0FtR0dzblppekpWClFKNTdNMG42ckJFajdRNDMyUzNENUU4ajVPQnRweThRLytXMXFXWmJsRFNxeVRjQm4vWTZIcjUzbFZIdjNEWTEKczJqRXBxWnJ2NnBaY3dtQldqTCthTlQybTVxSS9pSkFVN0tlaU0zQlM4Y1lmWjlUYVc1OE4weUxqWlRNQnJzeApxRXVWOC9teXJMRmlKa05RRGtvcERUSFExWTVFSWZVVG9yR3BNQXR6aHVIczRkd3J2ZWNmMlhxUFQ3NHRaU1p0ClZsY0t1R1J5bmJONUIyV0ZHL0NpaGZ6a1V2STFONGsvak1YNU9ZN2x0YThnbHNGN00wSWdEVkVSNCtvZk9GS1YKZFBIWFhYMjJ0SldMQWdNQkFBR2pRakJBTUE0R0ExVWREd0VCL3dRRUF3SUNwREFQQmdOVkhSTUJBZjhFQlRBRApBUUgvTUIwR0ExVWREZ1FXQkJURmEwckEwWHcvV3QzSC9rNTVRKy9GeW9YbEN6QU5CZ2txaGtpRzl3MEJBUXNGCkFBT0NBUUVBM1pRM0RLR2NIOWJ6N3VpTytXYWFOQkswUk1nTmJBb0MxVEJaUjhUNklVMUZ3Y25WM0NtOGltZ0YKMVRPdzZ2UytBclFiVHcyOVgvZTgzalBrL05xSDlGVURqVkFEcSthWjVLRVMzY1Q1TlpsZzEzV25mSktNenBGbApCZWRnMW4vZ1RVSitmVnlEZE5SaXVncTFGV3RzWGw2M2Y0OVdPQ2REQk5IcVVtK3VMNFpRSEh3a09kaWg3YTdVCnQ3T2lDNU9xSDh1YklDaUUzV3MrbTgrdndRM0MzZVdLVHJXOEg3YTV1NVJJMmJpT2dYZndNbFhqVGFRNWRsTHgKaGlYMXI0dW5mTHp5cUxxTEpvVTRvRmhMUVduZS83NDJOeTUrbENNSzVBQzhSZHI4aXpuTWhKbC9TekdYcDhhaAo3U2F1bTRMZ1JyenJ0NSthNTd2V3NMd0h1bW9vdGc9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==",
                            "verification": {}
                        },
                        "mode": 384
                    },
                    {
                        "group": {},
                        "overwrite": true,
                        "path": "/opt/openshift/tls/kube-control-plane-ca-bundle.crt",
                        "user": {
                            "name": "root"
                        },
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURORENDQWh5Z0F3SUJBZ0lJVmVjTVVKYVFxVk13RFFZSktvWklodmNOQVFFTEJRQXdPREVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1TSXdJQVlEVlFRREV4bHJkV0psTFdOdmJuUnliMnd0Y0d4aGJtVXRjMmxuYm1WeQpNQjRYRFRJek1EUXhPREV6TURneE5Gb1hEVEkwTURReE56RXpNRGd4TkZvd09ERVNNQkFHQTFVRUN4TUpiM0JsCmJuTm9hV1owTVNJd0lBWURWUVFERXhscmRXSmxMV052Ym5SeWIyd3RjR3hoYm1VdGMybG5ibVZ5TUlJQklqQU4KQmdrcWhraUc5dzBCQVFFRkFBT0NBUThBTUlJQkNnS0NBUUVBMmQ1aXY3dHlnZjNsQVZ2REppVFNOSGRMSnRIbgplYk1WSkR2NDdTZWJ3aExyRm94aTNIVkVhWHNvUGFnMDhtMDlSckdPY1I0RGRneHBRb2JqTGdOeDhWQXUySlFQCktUSnJBelFPN2hPZ0VzckhrQmNDWjVsNW5PMFVRZzJMWDhsMzdqQ3JMQWFMditGQUx2L2ZzaE9GOUZLMExzeDMKWE14eDAxMnNrVjBmczBpOHJ2dUE0amttMEsxcEZqTzdMbHY4c0VQLzBLcWxyQUE2M3habHR0Rno3QkZ6WGd5WQp6Tm9na0Z5V0ZVOGZrb002MlIzRG8yUHhUcG9UUGp5bmx5ZXJ5Uy9KTmlCUFdZWG9rRFlQdWdrcmMyaHF3ZW00CnlpSzRCMXJvM0RwclBaMWxuMWhHbGtBSVhpQkhuYmJnVXdBb1NDKzNqWlFzQUpIb2RkTnBrcTcxY1FJREFRQUIKbzBJd1FEQU9CZ05WSFE4QkFmOEVCQU1DQXFRd0R3WURWUjBUQVFIL0JBVXdBd0VCL3pBZEJnTlZIUTRFRmdRVQpZZENaRkFva3JKUDlkWDdKdmhOa2l4QWo2YjB3RFFZSktvWklodmNOQVFFTEJRQURnZ0VCQUgyZ05nUkNvdjBzCnY2eDlBeTQwdzFScjJjQ1p6UXZwT2hXNTJFK01WelVMSXlaWkVidDlwcVo3VUtqZmxqMTRsclJYd0JielNIMWwKM25JQzNNZ1VPZFRaNEE1Rk5yK2FTdWJWaTF2ZzM4WXdrbFVaMkZqWnlhdWg4blNvVEtzUWovdTd3WVZyZ3h3dApiWXc2WlBCSHZ5a1BUSElTUmJtcHpENzNiYXZlVi9YcTZ5b1NrQlU3OTZFQXhqT3A5dUFSSWptdkg0MFJ4SzJzClNFbk1lRk1JZWlnMHU4VTVvN0I2R0MxY3kzbHBXanZiTXFnVTQzMXcrc3dSdnJXTmZsK1lkYTRzclU2TENmckcKNjVscVFNcUkwcHZiSzZCOUVkd1M0bC83aXRZV3c4UzV5eVA1c3NMZ1orcnM1MW9LbFFSdEhLQi9XeVZMNDFCeQpUSytYVk9EZkUvND0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQotLS0tLUJFR0lOIENFUlRJRklDQVRFLS0tLS0KTUlJRE1qQ0NBaHFnQXdJQkFnSUlWZFFhcGZ6MDdXWXdEUVlKS29aSWh2Y05BUUVMQlFBd056RVNNQkFHQTFVRQpDeE1KYjNCbGJuTm9hV1owTVNFd0h3WURWUVFERXhocmRXSmxMV0Z3YVhObGNuWmxjaTFzWWkxemFXZHVaWEl3CkhoY05Nak13TkRFNE1UTXdPREV3V2hjTk16TXdOREUxTVRNd09ERXdXakEzTVJJd0VBWURWUVFMRXdsdmNHVnUKYzJocFpuUXhJVEFmQmdOVkJBTVRHR3QxWW1VdFlYQnBjMlZ5ZG1WeUxXeGlMWE5wWjI1bGNqQ0NBU0l3RFFZSgpLb1pJaHZjTkFRRUJCUUFEZ2dFUEFEQ0NBUW9DZ2dFQkFPamUzZ3NlODNjMDJ3b1VWT2FRcXA0VlVTMjBwTzF4CklsSEpkcnRiTU5sdkNaNWtmQjNacVZSTEVKQ1Izdi9nQkM3MlJ2MTBCVVFMT0Y3cDRlNkxMQ0kzbXhPZ1JZTWwKRXNtL21ycWx5cGIvVzY5dzc1dWFYV0RWTTRjZ0k3cS84a0t6aU90a0xiR1ptdllTRUdYUCtvbnpVOVBQSFBaQQpFZ1FWVkVERHRRTWlreHlpcWRnQjdwTWxVdmpYZmdaNHZCNzRmc3lXdURWaUMvRmJ1RUpsUEZNL3QxR3p4SkJtCkQ4eTU5dTF0aG1vMWNWTmo0QXFkWllZS2hIcXZGUDVIUGIrL3RBb1NHTU0yc3l3MHN1a3MwL0VqVUpseTN6L3YKRHBJQnpsYUYxbjZ1VUtwQkN5cnorbW5wK0lsb1oxTHduYXc5L05YcDFuZHZWSFcvTm43eEgza0NBd0VBQWFOQwpNRUF3RGdZRFZSMFBBUUgvQkFRREFnS2tNQThHQTFVZEV3RUIvd1FGTUFNQkFmOHdIUVlEVlIwT0JCWUVGT2JuCkdPcUZ0UDN0clBtUGpBbU9BMjdZNXUwM01BMEdDU3FHU0liM0RRRUJDd1VBQTRJQkFRQ0xSbW5mSndtSzIrbi8KdlFKclVLSFZNNUltWDhSVFpOT25ZbDVFWFhVeEVySXJyQkhGSXJ6VU0wOFNlS1dwQmh0RGpYM2cyWlVYZ1I0QgpEM1l3Sjl4ZEtYR3g4QVprVEFxOFN4MkdPaW9EN2poSFNzVFdaUTg2RVVYYUlKa21vZ2oxUXF4eUVRSUZnQmRVCm56SnpEVm9UcDc4M2FTQlAvRS9yaVp3S0x1SEgrMFI4cDlDZjNZNnZRNWhPeEQzTnI5OFZmb2lSV1hBVXdoZUgKZU1TME5JVHQ4TWpIcFY3QkQ4MGpiTWFxbXdyaFNlUGdhamlwQ3RZdXdJQkJPeHB3ZjZUNVhmWGQ4dkU2azVIRgptbGRDcjk3SWExdlRGaW9obUhob3IyOXF4Vm9mMW56N1ZTMC8reHBETzdGV3FYSlkzQWt1RWZta3FXMkhNUFJwCkdmQklUUjhPCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0KLS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURRRENDQWlpZ0F3SUJBZ0lJVXdMTkJjaHNZT1l3RFFZSktvWklodmNOQVFFTEJRQXdQakVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1TZ3dKZ1lEVlFRREV4OXJkV0psTFdGd2FYTmxjblpsY2kxc2IyTmhiR2h2YzNRdApjMmxuYm1WeU1CNFhEVEl6TURReE9ERXpNRGd4TUZvWERUTXpNRFF4TlRFek1EZ3hNRm93UGpFU01CQUdBMVVFCkN4TUpiM0JsYm5Ob2FXWjBNU2d3SmdZRFZRUURFeDlyZFdKbExXRndhWE5sY25abGNpMXNiMk5oYkdodmMzUXQKYzJsbmJtVnlNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DQVE4QU1JSUJDZ0tDQVFFQXVrQXFycmwrWHROcwpNQm1JMkRnZmlwUmMvNEluLytGZ2txSWZmaENTYzU3eXhGaXZBRXR5VTM3WERlQmNkeHNFMDRLQ1RuSDEram5PCm5VZkxlWFVKMmlHcFF6R1FSZ2FjV3VkeERBdUc1VmZmYkN0RkpxRGQvKzRTT3J6SlRQellvditUTGxPc296QlMKSHc5WWN4K1JmZUw0R3NlaXVhQVdmaFcreHdkQVFHWVg0eFJNcVBkcmlCY1JQUkprd2Q2K21xZ3FuM0t4UjI3VgpWeU85NnNlYWdjME5IR3h0dUlBUTF2eWgzeThvM2E3bURUdWJ6VDNRMXhTeDZTUUljd0I5K0RaUkRjMGwwUlBwClhzYVBuMVhMMzVYcHR0MHkxQTBZKzlKTXM5SWxTNkpCbzVNYzBERnNQWVNFZlNoeXZ5TVBDZFZ5bXdPcVRkbEcKdEpaZUxWazFKd0lEQVFBQm8wSXdRREFPQmdOVkhROEJBZjhFQkFNQ0FxUXdEd1lEVlIwVEFRSC9CQVV3QXdFQgovekFkQmdOVkhRNEVGZ1FVa01iUHN5YU5OaGg0bXlZZ3FOelJ5QmUzc21Rd0RRWUpLb1pJaHZjTkFRRUxCUUFECmdnRUJBR1FEMTZNdTAybEVaY1BodTNxcjFHRnVVQUZFWWh5T0hRSFVFcklUOU9rQ2hvczU4eUZ0WThPRFlwelYKdS83MllMVDBoSkdrY0diREVEN2dNTzNGMXhvWEc2bFh4Y2htb0FhOFZhWlpxTUJBckdVQXE4aXppUUdPUUMzawpaYVh4SjcrMGhhNTA0Q2xnUDJJd3hIMTlBOFhRVi8rS0hPU05YbjFGaDlSMXdNM2tHRG9JSFQ2bFZ4R1RlMTNZCldEMEN2NTRxZCtMWElSOCsrbVFVSXdMd1cwd3NKUEUybG5MYVhvSzQ5MHp6WDJvWWMxUWJ1WGNqeUxWY3pVUG0KVWFxY29IeDVjS3pabytjM2I5QVpvaDZzRjRvMG1LOWdJT2RWZXFzTitkbWlKSFJIeElhT0hYSzg2SFJpczRWWQpPM0VhTTlxWnViOS9vQ3BSRVcrN25CWWVDemM9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0KLS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURURENDQWpTZ0F3SUJBZ0lJUjhMVUtrdnFZdFF3RFFZSktvWklodmNOQVFFTEJRQXdSREVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1TNHdMQVlEVlFRREV5VnJkV0psTFdGd2FYTmxjblpsY2kxelpYSjJhV05sTFc1bApkSGR2Y21zdGMybG5ibVZ5TUI0WERUSXpNRFF4T0RFek1EZ3hNRm9YRFRNek1EUXhOVEV6TURneE1Gb3dSREVTCk1CQUdBMVVFQ3hNSmIzQmxibk5vYVdaME1TNHdMQVlEVlFRREV5VnJkV0psTFdGd2FYTmxjblpsY2kxelpYSjIKYVdObExXNWxkSGR2Y21zdGMybG5ibVZ5TUlJQklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQwpBUUVBNW9wNGpiL25wMW5OZURMSEp5K3EvcVByY1Z5bmNDLzg0ZDFiemp6dDlPTUpicnJ0TkEyTHlvNTBPblZaCmRIMTk5MklIbERTYnJLZFJacE9OR2Q1ZVRNT2hjZUNudVp3MWJ5K0ZBL0FJSHZ6alR4eXV5ZUNqajdQS0xQYm0KSlRsQm5nSjNSVnozV0dRai9MMEdJRWZYV0QwMndkdHJaYmY3dFBtUHEwQWYxYlY5MlM5U21XTWovcWoyTnVYaApLeWZ5aFU0ckI2b0NPQjlDY0M1VENtQW9DdzFJQjBFUEo3UmpxbFFnUVpCTTlwT1BYYTFDWFlleFZ6TFV4ZUZMClFTcHRiUW1UWnp6Yms0cUZrdkVRUlA1VFZEK3VKUXdkNlIvbUhseTZ6ZWRTUEh4SWpzYXVOYzE3bG8xamg5dkgKZkptUUQ5RElpSnU0dW9aaEErejQxQW9sZVFJREFRQUJvMEl3UURBT0JnTlZIUThCQWY4RUJBTUNBcVF3RHdZRApWUjBUQVFIL0JBVXdBd0VCL3pBZEJnTlZIUTRFRmdRVUFpU251cjQ0bVBvT1NsbUlrbE13aWhnMHFnd3dEUVlKCktvWklodmNOQVFFTEJRQURnZ0VCQUxKY2xtaVVKRnhHR0V2TWFwcGNKUXp0UTY0MFhvS0dxeXZVY2xnR0NKK3UKb0MzZmVIdTRKNzJqM1hoZ0VPMEVrbngySWt2ME5JZFplazZyUDk2Rk0ranVHZGZya3RSNmJkbXFpZHJHWXdMWgpLQnVLa0N3b1h0bDVtNWg5eURTRzVuYWRBcWg4VzhEdUhuUFhpZ25HLzk0UmcwRWxVUEw2ZTV4MHNHVUpVVEVXCkYrNzNiajE3RFV0b0RDd0JEY20yK1kxMTVsYzMySEhGTnRYaTFvTUYvRVpaL3F1bGQ3NDJzYUQ4Uk5ta0p5N1EKT3BIK1ZFSnNOUktpZHcyQVdTUW9idEYzbVIvbWFpTktMNExGUldISFNjNTduUkVlOGFUNEQvUFBmcVJKYndxOApLNEZ4TzNmQzRlbFpZaTFHVm5UbnR5RUVLM2JBS2pOblcyOGNBcTNIbkJZPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==",
                            "verification": {}
                        },
                        "mode": 384
                    },
                    {
                        "group": {},
                        "overwrite": true,
                        "path": "/opt/openshift/tls/kube-control-plane-kube-controller-manager-client.key",
                        "user": {
                            "name": "root"
                        },
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBdWdMTUlRNW1KaTZxVmtGaFlIcWtzZTN1aGdHbUVDbFM4VThzRTNVK0VIcmIzcTBiCmF2NC94YUJETGZhWnZveGo5TnVWdmEyN2tvWitnc3FsMWdwdDRKblFubHpPMGlCQXFWK2E4aTBDSGY4TTJINVoKdkNWZjl3eXpVZERtRzZ4eXZENWlTUm53RUQ2UEthSlpoUlpOZmMwR2tvd3h3MmYrdUx6bk1YYzRYMW5pWUxhUgozYWdZYjU5dHZLemNaNSs4d05aZWY3eHNEMVppdUt6NU5xc2VReE1ORVhqRzdvTU45VWp6M2kzdDgwMUVSTTRtClBkSS9BOXFWRytQckkvQmRVOVlUVmFkaHI1T0JNMlRsVWdSVHVTOVltckVmUnRBekpTSXhLVVZRamdrQWNTRG4KdjhBZjhQMXNIVVcyZlJjMUJMVVZRaDEzaVRZQWhNT3p4RDZUM1FJREFRQUJBb0lCQUJzS1F4QmZIbnhZZGt5Wgpyb1V1N3ZncXBXejNtbU5wRG5TajFMMXpZclZVbHRmVkJGSldhWURhSGtuMU9qNVgvRVBoRS9DQjYrMk4vYUFYCncybk5GRkg5S2pXTE9rbVRoTExhZ2hUSWRERldIVkR2ZFM0RHBPS3VCdmRTemRDaURmL05kYzQ0cGd4R2U5dEsKallicVNoT0tsWFVDU2sya3RZTzNla2hYazJ0UXpzczJva1dsVldaQkJHL0VkNDUxc2JDaUluKzJUMXZaTUxaeAp5aWRPYUQ0MWE0bUprL3BPNS9CTWpvd2tXaDVKa2NtMFRRUmlnM2h2OTQwTlBndkhSNyttVDl0OUVVNTZJK21RClh2ZU5vZm15aTlBNFFsNVd5c3pseVNqeThnR0VKelhDdDdMOXoyRTcxM1lrRnpDcHArVTJkdkdkNFoxUUt0SXkKTHFNYnlFVUNnWUVBd1JXYlJLWktpTFJ4OEQyeDArYTlUMFJkUlNuRkFENkpGZW1odmNpckJwUUlnK0k0ckdTNgpsV1lBeEIrdVg0MUhSTHAxVExESzQrWXRkbzMzWXhENGRyRmt1RFFXU3NTeTdNOUg3YmRBMnBhUTRZaU95NXVIClBVNklVZEV1UnZCdWhVZHh1ekNRRnFHSWpIVFFFcjVSNG1lYVFLRUU1V24zbHhXM0J5L3hxUHNDZ1lFQTlwOGwKeTQ1aVphS28vMlZ0eW1FeVpFbWNaMlp4akVXRHl2TjNxdHh6dENNVVJSOFpDOWZFRHJXV01uZFl1SHo2eW4xZApzYTdLazk1cEFHNTJyRGNNSHVDZTQ0RzlkWVFBeVpxRThaWms5Q1JNUU1WVnR4cENCaHFENC9JNEhmSFFHSm94CjhWN09ZSTh3UjdyWjhLNzVpNERNeXdIYzl2YXppZmI5WTVjQXp3Y0NnWUVBb3E0Q3FQOTJrdUY5a2cxWTg1RlgKOVI1RGUwOXJCUDZyWDRQOTJ6bmtKdUc0bnUyT0ZHbTE3c1FIWnpiT0l3R1VoMnFXQSt4OHRURXRJdE1RR1M2bQpPTkxUYW9Pd09JU3J2K3dRelU5MTIvVzUwZHZOZSt6cE1CVW5zOCtMcndkS0J3OGYycmhhM2taeEZ1NGdsWG8yCjRZdXFva05JTGNadmJhTkZGMUFreXRzQ2dZRUE4d1JCMXdLWUhUU2F1UWYybHYwT0RkcW5YeENJaFVPZXFhY2QKM1dUY01yNTZZOTVQN09hUmtEa0pKdk9KbmtteFMwVWJ4VkhLMXNqTHlSd1Fub1NqMGUxZlJDbjlTa1pvREVEUwpEY2szODRldENBb3IrNERKWElCV1JKRFRFVmJOeXVCdXBEemF1alYreXIvcHNBeUxaQmJvTm9iQWVTOENIY29mClNEcHRGcE1DZ1lBdko4N1E5VmMwZDNWUmY2WHA3VW9BVVEybzNiYkNsNWRwUHRmQWdqQnVENnNzbFJkNDVYTFoKYVROajNSNE5LVDRCb1VOTVFVdmh0N3JQT3U4Yk04c3U4aDh4djBzdDhBclpxNDVTQXJCVGg0aS93RStrZkxETgpaQ0RrUlZDdzBINC9NZFh3MFpzdGZObjlKdGV0YklaVmF0SVVNL0l3cExEbVlFWXBsZkFQeXc9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=",
                            "verification": {}
                        },
                        "mode": 384
                    },
                    {
                        "group": {},
                        "overwrite": true,
                        "path": "/opt/openshift/tls/kube-control-plane-kube-controller-manager-client.crt",
                        "user": {
                            "name": "root"
                        },
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURYekNDQWtlZ0F3SUJBZ0lJTFJHWHExT2pnYmN3RFFZSktvWklodmNOQVFFTEJRQXdPREVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1TSXdJQVlEVlFRREV4bHJkV0psTFdOdmJuUnliMnd0Y0d4aGJtVXRjMmxuYm1WeQpNQjRYRFRJek1EUXhPREV6TURneE5Gb1hEVEkwTURReE56RXpNRGd4TlZvd01ERVhNQlVHQTFVRUNoTU9jM2x6CmRHVnRPbTFoYzNSbGNuTXhGVEFUQmdOVkJBTVRESE41YzNSbGJUcGhaRzFwYmpDQ0FTSXdEUVlKS29aSWh2Y04KQVFFQkJRQURnZ0VQQURDQ0FRb0NnZ0VCQUxvQ3pDRU9aaVl1cWxaQllXQjZwTEh0N29ZQnBoQXBVdkZQTEJOMQpQaEI2Mjk2dEcycitQOFdnUXkzMm1iNk1ZL1RibGIydHU1S0dmb0xLcGRZS2JlQ1owSjVjenRJZ1FLbGZtdkl0CkFoMy9ETmgrV2J3bFgvY01zMUhRNWh1c2NydytZa2taOEJBK2p5bWlXWVVXVFgzTkJwS01NY05uL3JpODV6RjMKT0Y5WjRtQzJrZDJvR0crZmJieXMzR2Vmdk1EV1huKzhiQTlXWXJpcytUYXJIa01URFJGNHh1NkREZlZJODk0dAo3Zk5OUkVUT0pqM1NQd1BhbFJ2ajZ5UHdYVlBXRTFXbllhK1RnVE5rNVZJRVU3a3ZXSnF4SDBiUU15VWlNU2xGClVJNEpBSEVnNTcvQUgvRDliQjFGdG4wWE5RUzFGVUlkZDRrMkFJVERzOFErazkwQ0F3RUFBYU4xTUhNd0RnWUQKVlIwUEFRSC9CQVFEQWdXZ01CTUdBMVVkSlFRTU1Bb0dDQ3NHQVFVRkJ3TUNNQXdHQTFVZEV3RUIvd1FDTUFBdwpIUVlEVlIwT0JCWUVGTXQ3ODVoK0krZWVlRXF0cWNJVFVEeHVEbzRWTUI4R0ExVWRJd1FZTUJhQUZHSFFtUlFLCkpLeVQvWFYreWI0VFpJc1FJK205TUEwR0NTcUdTSWIzRFFFQkN3VUFBNElCQVFBV3BqazZkYVYzNjlvK01vMDQKckM3QTJPdGxkNnJYblpENFM2cmlUcWNORjRZL01IaXNsRTFONE9OYytGUFRzaUxSNFhETzBKaWo0aGNrNlJuRgpJRlRYeVNKYS9aM3lIOVF3RVFEOWUzZTlSUWFFMm8vTnBWR0NYRlNWU05rUHc4Y3NNMXhBRU85YnNHcmdNTlFaCnpEWkZ0UnZpQm1ZcENzWDcxU0YvZkdKTU85OXVwakhVeHN6SFBvRC9kWkd3b05ORVU2T01Cb0pZNjlmRVBLTWYKUEJ5U1F1L2tVNTNydW1vOHNGUlpKOGc4L0xVMWhiUnlTWTRORE1XRVhGY1RxUjdmZnlxd0owL29YR1RCYkorZgora2o2U3NUdmh6cklzcVUydk9SUEJSL1lKb2Y4UmR4YkR6U2RvY1Q2WmtjSWJPVnVJd3JoUmx4RVUrbkRxeEF4CjFRdFUKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=",
                            "verification": {}
                        },
                        "mode": 384
                    },
                    {
                        "group": {},
                        "overwrite": true,
                        "path": "/opt/openshift/tls/kube-control-plane-kube-scheduler-client.key",
                        "user": {
                            "name": "root"
                        },
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBc1BjZndBd1UxTHJKZ3ZMWEdteTJzOVUvT3Iwb1dOOTFoRkszaVJuVHVMcFFMQ1lLCkQ4alh2YkxxUlI3K1FkWGlCcmprd3MybjNsNVI0emVrenlaZndXVzV1YkkwdHk1UFY0SkU2dVhRN2lIRXB5RnUKVnlraFVmbjRxMVl2VXdRSGRNcnJEZEwzalUyR1RtUVRuaTliMWRFKzNwcEdnTDBXcFl1OGFseW1Ick5IQnd5NQpzdndnWDI1U1JKaVE2NkNUMXZlck82dWhpSk5XbndtSDJsYTFtZUN4TFVjNmRaak9vSmFwU1Qyb25EMVJvc01iCldKdkwwT2RsaS9WOGVmWlMzUW9CT05LZVhzTktmaXllREFhQTd1YXBlMXlPcjU2TWdYVXg4YUNvUktxR3NLZXEKTFZRNGQ1aGtNU1JWc3ZBTWNEakYySzE3ZTJMMGQ2V1VJc3BSandJREFRQUJBb0lCQUZaT0Q0UC80R0RuUDhQSApYelNaOUhpNzlYeFdLRWsvb2ZhSXlNM3FkS0ZRN0N5NzJJaGVNU2xwQ212dmM1ejBES211bnBLSzdlVzdKa0NrCk1KSithcEROWmNpMHFwVHoxdW9jdERQREpTUWQvK1JxbjMrT3BadHZSK0YzeE5pOXpFMGZjWWRxYmlUUnZFQ2EKK2g1WmhuWSsrR1JqNVNLQUZYMWpLdDdNbEkrL213Z3hST3ZQR3NLU0VabnFhVWM5eXZxcCs5ZTVISjBnYk5lKwo2Qjgza1lEMytmNW5nbDM3YjQxS1BvckdUS2NpSmh5RHZmVTdaSFREMVBmMGQ1c0czVm5nWlhIcHlycVhIL0RsCkt0ZGxENEpkbmg2NHNVeVlTa1JKT045dFlWVFdkV3NuTFhJWUlrRTVMZUlFdGl1VkhHRWVLOEVhdEJJVXU4QkQKNHpFNjJNRUNnWUVBeEU2REo0dkRLcXhXNzY4VWVNcWlQNE83TEZmM3M0VVE4blNBNjBDV3pTcjdTVzNHdlg0cAp1R3RCT3ZMYVA4cG9aS3BQQUxGUXB2S2h4K2YyOVVJWXhXM0NXUTJHa0gxa1BRWGpHbVJjak1PMENOdlU1d2xGCmZ0VDdESUNkMVZjZzdRZVl2b01LUE1BZ2lOYTFsRlY0aDNJQ2ZGcTVxcnhZcEJxT2tOSndRNThDZ1lFQTVzYjcKOEJTREYxdXZWeFVmbU95eTVPQ01aUDB5anJMWVliS21OMGQrazV1d2dMUGdScFlHR2hBbnV1WjA2Q1MxTHBoYgpTVy92M3NCeE5LZFVxbjhFcHVJS3psc2kwT3pITEFpMHJ3T1EyRUNPNElsT0ZSVFpzZjRFbnhXdlB5SjNUZkVMCkFkTkkrS1ZyVms1QTRCWlZCK1lOREJDYVZ2cTRnWkRxRVdLNXJCRUNnWUVBbzBiaVU4d3R3cHFobks0MUN0c1AKNUdBL0dIejZhL2lyeGQ0ZE5JNytYeHYyOG5ZNkxYWjRZUW5rc1pFNDhvSDZIbkNCVVlRcUh4SUVlZTk0T3pxRQp2QUcwK3JrRFNiN2gxdGZFc3pqeXVhbzFYb0RxTGxoSjAxcDJqVW1VL2RPQWNXWTJKNDk2dmxqWE5yblBRZGR0CmJzcm5RbU43dG9UOS9WQ1JiK2Q0dE9VQ2dZQlI4ZUF0M0txNzFaT0tRWGJwejBxcW1NMWhZc0xjQnNkczBZblIKNFRJaDZjdWZ0Nzl3Y1A4VHJCN2ZiOHVkVHNPREd4aDNHQ2M5bW1uWVAzNkIxLzVuMzZYa3BsblRnL0FwUTZJYwo3eEEwcVovU1BROGJ6ejZKeEdBUnVScDBPYUhSYkVEelVmbjhTSWkzcWF2QnBreGxOSnYzWjhIV0Zzc0RQdGpPCmVaYmljUUtCZ1FDNStndGt5Q0QxWFM4QTM0bEhPMFRDSFNPT3NLd244cFYwbmxuRDJHaE9ndGRtbmZwVzByaEoKSE0yMElBd2VtN21xeUZJSFMxR1RRWG0xSk5JWlpOSEswdnNwZW0vVldIa2RraENHL1p0V3JZa0djZnhKSTU3UwpxOUpoL0M2WXM2V0c1K0Z5b0xzYThYL1Z6bHNucHZGNzMxNjZkZ0xJdi93RUx6OVlaNWgzcFE9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=",
                            "verification": {}
                        },
                        "mode": 384
                    },
                    {
                        "group": {},
                        "overwrite": true,
                        "path": "/opt/openshift/tls/kube-control-plane-kube-scheduler-client.crt",
                        "user": {
                            "name": "root"
                        },
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURYekNDQWtlZ0F3SUJBZ0lJUm1VNTZnTkFjc2d3RFFZSktvWklodmNOQVFFTEJRQXdPREVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1TSXdJQVlEVlFRREV4bHJkV0psTFdOdmJuUnliMnd0Y0d4aGJtVXRjMmxuYm1WeQpNQjRYRFRJek1EUXhPREV6TURneE5Gb1hEVEkwTURReE56RXpNRGd4TlZvd01ERVhNQlVHQTFVRUNoTU9jM2x6CmRHVnRPbTFoYzNSbGNuTXhGVEFUQmdOVkJBTVRESE41YzNSbGJUcGhaRzFwYmpDQ0FTSXdEUVlKS29aSWh2Y04KQVFFQkJRQURnZ0VQQURDQ0FRb0NnZ0VCQUxEM0g4QU1GTlM2eVlMeTF4cHN0clBWUHpxOUtGamZkWVJTdDRrWgowN2k2VUN3bUNnL0kxNzJ5NmtVZS9rSFY0Z2E0NU1MTnA5NWVVZU0zcE04bVg4Rmx1Ym15TkxjdVQxZUNST3JsCjBPNGh4S2NoYmxjcElWSDUrS3RXTDFNRUIzVEs2dzNTOTQxTmhrNWtFNTR2VzlYUlB0NmFSb0M5RnFXTHZHcGMKcGg2elJ3Y011Ykw4SUY5dVVrU1lrT3VnazliM3F6dXJvWWlUVnA4Smg5cFd0Wm5nc1MxSE9uV1l6cUNXcVVrOQpxSnc5VWFMREcxaWJ5OURuWll2MWZIbjJVdDBLQVRqU25sN0RTbjRzbmd3R2dPN21xWHRjanErZWpJRjFNZkdnCnFFU3FockNucWkxVU9IZVlaREVrVmJMd0RIQTR4ZGl0ZTN0aTlIZWxsQ0xLVVk4Q0F3RUFBYU4xTUhNd0RnWUQKVlIwUEFRSC9CQVFEQWdXZ01CTUdBMVVkSlFRTU1Bb0dDQ3NHQVFVRkJ3TUNNQXdHQTFVZEV3RUIvd1FDTUFBdwpIUVlEVlIwT0JCWUVGTWdQVHdHR1pzWklid25KQmRzVS83blFwQm9ZTUI4R0ExVWRJd1FZTUJhQUZHSFFtUlFLCkpLeVQvWFYreWI0VFpJc1FJK205TUEwR0NTcUdTSWIzRFFFQkN3VUFBNElCQVFCOVZEL2NqdVpFWlY1dU5aRjAKQWNEYkUrYnVYbFRMUmdTVjlJZ0U0RVlFanhNZTFsWmt4d1VxemErcm1aYlFOazZtK2xrZkJlc0dIVlFUdkYwYwpYZVVRYWhJZ2ZpMmlPTk1TQUkzTmRKY1RRM0x3LzF5elp1MjJIeitQcVlBR25lbkxyTmUzSzJteHdNL2JLQW9pCm1Fem1wbW5kdGhvZVNRS2htWm1VeUZyaVFKN2NyNXlDSnRvQzAxemUvMnFWNWVNZ1R4M0s1RTF6b01IdlArMGIKdWVmRkZiV1kwTDBrQkFJWWNsWWJpajJMTFhRWUNRMzdKMnRRSkdKOC8yZDZwV2dWNGZ6dyt6UEZPc2dvS1VzSgp5UFBTYWtNOEplcmVZTkRxSkdGS015S1B6d3ZNMFNrSnRick1uY25zTithL01OYnJDU3JHZXpQUFpUNGsrRmRTCmgxRmYKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=",
                            "verification": {}
                        },
                        "mode": 384
                    },
                    {
                        "group": {},
                        "overwrite": true,
                        "path": "/opt/openshift/tls/kube-control-plane-signer.key",
                        "user": {
                            "name": "root"
                        },
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcFFJQkFBS0NBUUVBMmQ1aXY3dHlnZjNsQVZ2REppVFNOSGRMSnRIbmViTVZKRHY0N1NlYndoTHJGb3hpCjNIVkVhWHNvUGFnMDhtMDlSckdPY1I0RGRneHBRb2JqTGdOeDhWQXUySlFQS1RKckF6UU83aE9nRXNySGtCY0MKWjVsNW5PMFVRZzJMWDhsMzdqQ3JMQWFMditGQUx2L2ZzaE9GOUZLMExzeDNYTXh4MDEyc2tWMGZzMGk4cnZ1QQo0amttMEsxcEZqTzdMbHY4c0VQLzBLcWxyQUE2M3habHR0Rno3QkZ6WGd5WXpOb2drRnlXRlU4ZmtvTTYyUjNECm8yUHhUcG9UUGp5bmx5ZXJ5Uy9KTmlCUFdZWG9rRFlQdWdrcmMyaHF3ZW00eWlLNEIxcm8zRHByUFoxbG4xaEcKbGtBSVhpQkhuYmJnVXdBb1NDKzNqWlFzQUpIb2RkTnBrcTcxY1FJREFRQUJBb0lCQVFDb0xzcnVGV1owd0trcQpua3FNUkhwY2RBWjRoaXI1UUd3K2wyazJzWS9FaGxRaUNPYzhKZTVVdXZTNmZBRzdidWFSanZsVml3VEMrUnU4CmRtSWpJQmV5WCtKNTMvbkFKS0tGUzRlRzgzRnJjRXdUaUIrY0Y5YlFkQmRpVWhCWU5pODFtUzVhQXdlWWJPcmUKSFRueXZxMTJpTzE4L3V2Wm9CenlQR3E5b0RTYmNVc3Mxb1NTaTdFMDdqOXI4eDk1cmZBTUpnZHlMR2FzOGU3awpzOFN4R3JkYVNJd0V3b2lVc2dBT1FWazhzSzVVYjdoTUdoVlZrQlVQelZuUkdaMHNZRndMT0xxWFNoc3VmeGgwCjd3cTUwU1RyL3k2SElFcUxtNlRCWTUzYXVGZkRaWkN5MlB4cEVCMWhKenVrbk1wNGdBMHpaeVBjclVINWRIYXYKR3hWeGoxWVJBb0dCQU9YS3VSZFh6WmZPTGY5NWQ5b3VkcVdkUlJaaEdwS3h1ZlNzcHhlOCt0WlVRR05ITFlYUgo4eVNBT0llbEtDWjk0dDZteE9CODVUY1BCSm9vT1M0K21NaCs0dkprVFVrYkRGQUt1c1RaeGJFdHhqZUcyQWhQCi9LT2xkQjZ3RWVFWnkvM0orNTBxa081d25BVjB3WHBENXhUTWczOHBhVVlvMWwrNmdvRTNuaHJGQW9HQkFQSzMKaWYzYXdSNFg4MXJZZWc4UzJCdnZjcEhRQXNFQ3pZdENvNlBmandnbjBldnE1VUxTc09yeXZUWHNMRDJUSHVsbwpQY21za3A3OEV1V1JyLzFZbDBQeEpBb3ZmV3lCNVVHd1BOaXU5OGROYzNqQVNOZU90NnRtQmhER2pjZ0s0b0RrCisvN204OXlvWGJZQThMOTRsY2FkMVJSNFRTd1lRZ05TYjBmNjI0cTlBb0dBVGNiTjJ3N0c4WWpCbk9UYUlpanoKMDU1bGtldVArUExhdyt2a0ttNjJYL0RvVWpIM1FJSU5UOTl1UXNzdHljbDJEbkpYMUx1eFFXOTkyVWVnQXYwQQo3V3UxR09IR0h1WmV4b0M3TW9HYkhoc21LZ2tqK2J4SkFJS3h5T2xEUS9OZFRpc2RWTmJoY3pMK1BBS0dzZ0ZsCnAyNkpXM01DeE5KeHJMa09EdnBxTXhrQ2dZRUF3b2ZUOHovV3MvWGlONWQxREl1LzVYUGVVWHQwR1puVGY1L2oKWTc0VDl5ZGpHa0JqaTFFdU5zQmlZY3R1RWRQT1hLZ05qWXZnMzhlTXBhNUViVHNKMFl4OXBDUTMxRFd2dHh3MwpTRHZEbjFzMkJ6dWxwZzVlcXVMVVRiRzFoUFVrWU1ZbUtrQ1VodS95VzZNWlVYeW1Iay8xcmJoVnNkZW5ZTjQ3CkRtZkNlY2tDZ1lFQTNZUXhWbGpOTm5sMi95TkhGcmlZUUdWV2xzZVNpVHVNMUx1S1pCUC9kLzYycUxOTk1QWDQKZjJlenh1d1FsUllma0t2dkRiTEErVFdyT09BTG94MDF3a1NtZW9iUUtCdmh3VStPazdRZzZGVk94cHFJMWgvTQpLd1FoVDVHM0UwYmlBLzJyMkY0ZFM5NU5icFVIYjVUb1c2WEhnTXVpV2h0WmlDeGRUSFJLV3VVPQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=",
                            "verification": {}
                        },
                        "mode": 384
                    },
                    {
                        "group": {},
                        "overwrite": true,
                        "path": "/opt/openshift/tls/kube-control-plane-signer.crt",
                        "user": {
                            "name": "root"
                        },
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURORENDQWh5Z0F3SUJBZ0lJVmVjTVVKYVFxVk13RFFZSktvWklodmNOQVFFTEJRQXdPREVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1TSXdJQVlEVlFRREV4bHJkV0psTFdOdmJuUnliMnd0Y0d4aGJtVXRjMmxuYm1WeQpNQjRYRFRJek1EUXhPREV6TURneE5Gb1hEVEkwTURReE56RXpNRGd4TkZvd09ERVNNQkFHQTFVRUN4TUpiM0JsCmJuTm9hV1owTVNJd0lBWURWUVFERXhscmRXSmxMV052Ym5SeWIyd3RjR3hoYm1VdGMybG5ibVZ5TUlJQklqQU4KQmdrcWhraUc5dzBCQVFFRkFBT0NBUThBTUlJQkNnS0NBUUVBMmQ1aXY3dHlnZjNsQVZ2REppVFNOSGRMSnRIbgplYk1WSkR2NDdTZWJ3aExyRm94aTNIVkVhWHNvUGFnMDhtMDlSckdPY1I0RGRneHBRb2JqTGdOeDhWQXUySlFQCktUSnJBelFPN2hPZ0VzckhrQmNDWjVsNW5PMFVRZzJMWDhsMzdqQ3JMQWFMditGQUx2L2ZzaE9GOUZLMExzeDMKWE14eDAxMnNrVjBmczBpOHJ2dUE0amttMEsxcEZqTzdMbHY4c0VQLzBLcWxyQUE2M3habHR0Rno3QkZ6WGd5WQp6Tm9na0Z5V0ZVOGZrb002MlIzRG8yUHhUcG9UUGp5bmx5ZXJ5Uy9KTmlCUFdZWG9rRFlQdWdrcmMyaHF3ZW00CnlpSzRCMXJvM0RwclBaMWxuMWhHbGtBSVhpQkhuYmJnVXdBb1NDKzNqWlFzQUpIb2RkTnBrcTcxY1FJREFRQUIKbzBJd1FEQU9CZ05WSFE4QkFmOEVCQU1DQXFRd0R3WURWUjBUQVFIL0JBVXdBd0VCL3pBZEJnTlZIUTRFRmdRVQpZZENaRkFva3JKUDlkWDdKdmhOa2l4QWo2YjB3RFFZSktvWklodmNOQVFFTEJRQURnZ0VCQUgyZ05nUkNvdjBzCnY2eDlBeTQwdzFScjJjQ1p6UXZwT2hXNTJFK01WelVMSXlaWkVidDlwcVo3VUtqZmxqMTRsclJYd0JielNIMWwKM25JQzNNZ1VPZFRaNEE1Rk5yK2FTdWJWaTF2ZzM4WXdrbFVaMkZqWnlhdWg4blNvVEtzUWovdTd3WVZyZ3h3dApiWXc2WlBCSHZ5a1BUSElTUmJtcHpENzNiYXZlVi9YcTZ5b1NrQlU3OTZFQXhqT3A5dUFSSWptdkg0MFJ4SzJzClNFbk1lRk1JZWlnMHU4VTVvN0I2R0MxY3kzbHBXanZiTXFnVTQzMXcrc3dSdnJXTmZsK1lkYTRzclU2TENmckcKNjVscVFNcUkwcHZiSzZCOUVkd1M0bC83aXRZV3c4UzV5eVA1c3NMZ1orcnM1MW9LbFFSdEhLQi9XeVZMNDFCeQpUSytYVk9EZkUvND0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=",
                            "verification": {}
                        },
                        "mode": 384
                    },
                    {
                        "group": {},
                        "overwrite": true,
                        "path": "/opt/openshift/tls/kubelet-bootstrap-kubeconfig-ca-bundle.crt",
                        "user": {
                            "name": "root"
                        },
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURTRENDQWpDZ0F3SUJBZ0lJSEovdFVDZjFLejh3RFFZSktvWklodmNOQVFFTEJRQXdRakVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1Td3dLZ1lEVlFRREV5TnJkV0psYkdWMExXSnZiM1J6ZEhKaGNDMXJkV0psWTI5dQpabWxuTFhOcFoyNWxjakFlRncweU16QTBNVGd4TXpBNE1UQmFGdzB6TXpBME1UVXhNekE0TVRCYU1FSXhFakFRCkJnTlZCQXNUQ1c5d1pXNXphR2xtZERFc01Db0dBMVVFQXhNamEzVmlaV3hsZEMxaWIyOTBjM1J5WVhBdGEzVmkKWldOdmJtWnBaeTF6YVdkdVpYSXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCRHdBd2dnRUtBb0lCQVFDbQpZNisrOGZuMDl0Zml3cFFjZGRMSVBuVWM5YzJLYjZXWG9wc0s2dEtBWmUxM2NLWFc3aHBDVjVRbkVwTVRUM3NECldvc3VDN3JFMlVNQXVzakJXbkR4OXdEcVNlWUJSL2NXMUZKUjRueW9nUHcyQllsR29MREd5cXZRekFFUURRcisKMkQ0SmNhQUEvUmxMdnBzUXREZHlwR0RjcnJrbEp1cmZvUGtNeHhQRWU4N0RzS2lRTnZ2bE9aVW5samlqSE5seQpTRG5CYm16dVBSS1BvRVlTVHBYaTJ5N0pabDlZNnBBb1F0QkdaS1BIdWVxL3FFUy9RWnZ5bmNneStMS3pCY1duCk5xaklPQVNkRHF1em1jY0lrUGFpdFNkd2dHQlZDL0xxVlp1a2w3NFJlLytmMVBhb1Y0L1o3d2lkMWpoNEEwZ3gKQmhFZ25CRENsWHQxV3FJWFdLUDNBZ01CQUFHalFqQkFNQTRHQTFVZER3RUIvd1FFQXdJQ3BEQVBCZ05WSFJNQgpBZjhFQlRBREFRSC9NQjBHQTFVZERnUVdCQlJGWXV2VSttM3MzYWpXZTZyeGIrejJSNWVIbFRBTkJna3Foa2lHCjl3MEJBUXNGQUFPQ0FRRUFKRjByb2ZabGN6UWRXamlIYTBiVk9jQXdkc1RyQjhBajlqR3BGd2V0VGF4TlpqekwKM3RzcUtXd2k1VEZEcnNpdGt3a1VvZy9jWkxWaDBFYTNmbXlGb2pZM0psVlhUa1VDOWw2ekUxSG85U0E1bjI1Rwp2Ym5OM0Zsc3UrMHFDcUt1VzJzS3QzTHpTdU00dGRKNEZOUG9nbzlzZ0xTZXlLY1RqcVdWVXRmdSs1RWJYN1lTCnFtd09oT05VQzQ4Rk1GenFRdzgyc0dxTEdXRFRWUlorSDhkUnN2MEliN3g3WU9JemNpQXEyd0JGZndlbUQ2ZGYKWTBuSXlLUWdLUU5MaEJ3NmhpdjNEejZEZ2x1TTZFS0pUNDFFYXcyMytkOXJrWHhkVi9UTE0renFQOUdsc3BPcQo1WExyaWRBVjNUbDVMZnJFL1E5TXNPc1Z0N2FtdEswZndaVzAxQT09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K",
                            "verification": {}
                        },
                        "mode": 384
                    },
                    {
                        "group": {},
                        "overwrite": true,
                        "path": "/opt/openshift/tls/kubelet-client-ca-bundle.crt",
                        "user": {
                            "name": "root"
                        },
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURIakNDQWdhZ0F3SUJBZ0lJSVNGYVllQ0YrekV3RFFZSktvWklodmNOQVFFTEJRQXdMVEVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1SY3dGUVlEVlFRREV3NXJkV0psYkdWMExYTnBaMjVsY2pBZUZ3MHlNekEwTVRneApNekE0TVRSYUZ3MHlNekEwTVRreE16QTRNVFJhTUMweEVqQVFCZ05WQkFzVENXOXdaVzV6YUdsbWRERVhNQlVHCkExVUVBeE1PYTNWaVpXeGxkQzF6YVdkdVpYSXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCRHdBd2dnRUsKQW9JQkFRQ1ltVFNESVh1eVNNbDhVOElkemxOVFNTaFgvWHRnVThXTzFaYXg0NEtEL0ttbnVSbWpnSEVDWW01bQpzQmFENFNUZ3F6a1BPRmltZ1VnV0lwSTJ3eithVlZxUU45TUt5VFgxVnliaGNvN1ZqN1JJSDRuRjFZMHIyRkFmCi9kLzlYYjZlRmFSOXZKSVFUYjMwL25TTnpmTzV1TTYyQnAwKzFvVnlvaUx0ZGljMlpKODNDNnFseVI1YjZId1IKUnl2ODNTeGNMWWlhekNvS0JNYXdQQTc1YWxVNGhNQVJvRnNrVkxEMjdWWW8yL0pyeUhIN2QxNzdHNW5RS2NrUApKTjZkbURWZXN1SWtDdzNpRkpzSyt0Nld6NW5xTnRtVS9saE1hWVNxK0lXMHlWRFRWcHZManRKYjZwZ3JZZ3JxCkZCM0lwV2kvL3ZOQnpsMjF5Qk9iSC9pbmhDb1pBZ01CQUFHalFqQkFNQTRHQTFVZER3RUIvd1FFQXdJQ3BEQVAKQmdOVkhSTUJBZjhFQlRBREFRSC9NQjBHQTFVZERnUVdCQlM2amF3cWpTb01yNExLbUkzMVhTV2hTVllKdGpBTgpCZ2txaGtpRzl3MEJBUXNGQUFPQ0FRRUFoYVV0QkdjRjJicjNvWGNOOUdFQ0cwMWtlZ3Z3c01vdEUvZkpDVHhXCisvN0xzZ1JJY3ZJYnZqTk1GVFZWM1JGVy9aYXpidjREbWJtdTNJdG1FU0RiWXJtdU1YNVNZZDJTNngyNGNCdUMKTmJOVVE2QkZ6ZTF6Q2RLRmxVTHdHeE5NYS9zendBa3BmRUd6TzkrWjBUQUY5eU9yM2tRL204R2pzZTlFRkNsWApLL25BVThYeko3U1VrZXE1S0Z0b3h5NHFvR1hNWWphNktDWGNuYUpqclJTcWdvY0NCL1dwenlMLzc2VFcrYnZ0CjNCdDEzeUs2Y2x0cTJmVWdMdUxibDJ5WXU5MXRmakx3YUg1ZlI2UE1wb3Y0YTBCeUt3KytVa2VBbHp2cmNMTXMKY3hpVWZRVVV1ak9vdGJDRzlxSGtBNmk4NExCR2Y2RnBLSXlWUWJ2eTJxSWMvdz09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K",
                            "verification": {}
                        },
                        "mode": 384
                    },
                    {
                        "group": {},
                        "overwrite": true,
                        "path": "/opt/openshift/tls/kubelet-client.key",
                        "user": {
                            "name": "root"
                        },
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBc2ZmZHlJeVBpbDFZdUM1WTlJQ3ZTY2g0S2pkVWVGOXN6MExvaXkzdzQ0ZGJJbytjCnk3d3JwdG1rTzZBN0VrdkZDZDhwajR3dHdTMDJQNEVGQVIzREIxWG1mTjVQRmpGMkhyZFFVYVdoSmhMMFZLUWoKeDZLUnh5eVVTYmJzTm5yUTd6VmovWmJTRU1mRDFQaDZRRDBRa2lIYkszRUsrMVp0SWwrZnBQMTVTbWJ6dEdTcgoyQzQwYjNuU1daNXhuSHhDQ0lLTkFQQUVBRUxyamhFdWlVM1l4NnI0SU1LTjQwcS82c0NYZ1lOVVBUa3lHaUVKCkJIQjJGUDl0cjhiSXBzb1VXVlRsR2JNdUZTcmlqeVljN1FQZU5BOVlQb2FlS2x4QmtSS2hQd1BEM1dEZHlXWE8KTGU4Q0JHODlBMEhnUzlJTHhCTFZ5K2F1Y2tFaHR2a3kyUFpxN1FJREFRQUJBb0lCQVFDYnlsbHhwK28zdTROZwpwK0hqRjR0YTBZeXZtQVB2NDhrQ25wV20wSzZnM3VxZWxJMHpwQ09xU2JlRklyelRSVlRWVVcrMlk0WGlKMHZuCngyKzBESE9meGtpZ1lwTms0Q09BdkFRcGxRNCtvRFVXcXlGUEx6YmgzbHBwTlNJT2h2RERsajlUekdWVG55d0YKRVFjam1ORWF1MXg2Nk5ndU1QZ1VNUlUxZjFaZ0U4Mnd3MVpCOWdGaEtwSDZ3ei92a0RlM0lOcEl5NGc2M0hDTgpCaTZKNndWb2ttekZ2OVJ6Uy9OdG52T05jbHRnSTd2U3pmS2xzWmFLWWRwZTZVRG1aQzBEV3k1bTBGdTdWS2pFCjNMWmJuMVAxdXBycm45VGFaYW1ONHFGYy94SGEvVjhCYXBwN2U5aUpSU05saXRIc3U5cC9wS2RCWWtlRzFodnUKakpUc0dyT0JBb0dCQU4wRmJ6SlZMc0h3aStZd0dvamx6ZEgvNTRkbTh1dlhLZEltNzc3ZTJWbEErbGczcnJ3NAp0T2hCcER0WW0xVEh0Mk9NSHp4OUxDckF0Z1I2MVowWHFNa3ZLL0Z0NE91T2pMT2ZNQ09PRlZiaVZzSnRQY2pkClFWTHIrSUhJV2lIekR3NXZhYXlZRXlHamJRcGk0d1YxMXk3Y1JMUi91YW8vR0ZnNEFObjZvU1RkQW9HQkFNNGkKS1RicFByVU11UE5KYzE1b0YySmtGRk9mRExkMktJaElsbTREck81Ukp3ZDgyeDdnVmdDSEpIQzg2MzRkR0lQMgpETmROU0hoS2g4N1JhdDJtU3hiK2R2SEFudm9qOGxVT1huZEd5dFVWTTRrWEVpalEzVlhabzlCWElWNTQ3OXE2CkROc3dOMHlhQjJGRFVvemZpZ0c5UDNldjBmdHduWCtrZ1I0ck9EVlJBb0dBUG8xdkx4dVVwQ2JrTVQya0JPS2wKSWEzL1pQN3ArWDFueEtab2EraStNdGlGQWJxZ3BYeVhGclNkT242VlY2VStiZG9XYlJRd0Q5bUNxam5wZ3hCVApJTDFNL29OT2lOeExUZnJic1BSaGJibVpQR1dXZXViRHVpZzJxT1IvUGVTQWVtRmwwd2NuUXZueHZtTEdSYUZZClNWYmx5di9yR0JmTFdBeGhrVSt4azdFQ2dZQS9vRkhDYmtwNXpmeUVzK1pWZktIRE1Bc0tLS3pmTUN5Z3JHOHEKZEIzN3piYlRXOW15OVNIMnRjQXN3Rk9jTU5UeFhwQm1JS2UrNFpwNzN5NHlUbk1kSE55UUVKbkJzampKd2s2cwpXSUNoTnhNYVBMSFJRVzhnWWJacng0azRSUEljUEpOZFVNdXc3RlpjMGsvM3hjUXVkMERRNjhkUDZsbmpIVjd4CmRmdTZrUUtCZ0NyS1Vzb0xUR2VJVUo3MFpQcER3ZHdZT1MvZkJ2YVFGcHIyajFSZW45blZWVzhVQnV4dnFJTFIKU1pQZ0lYQjRQZnNuVEZjNzhxSkFmc1dxUTBLT2I1c21QVVZCOEkzeitJMmgzbDZIVDBjcXFucjMxUy9NOVljagp5eFA3a1oxdVZOWmZhQXQ5dXhQMFFQbHFvSlVqWHFkcE9Na1ljSWFOc1BRcHV3bVlValRCCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==",
                            "verification": {}
                        },
                        "mode": 384
                    },
                    {
                        "group": {},
                        "overwrite": true,
                        "path": "/opt/openshift/tls/kubelet-client.crt",
                        "user": {
                            "name": "root"
                        },
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUQ4RENDQXRpZ0F3SUJBZ0lJUmtxWC91T1JCOHN3RFFZSktvWklodmNOQVFFTEJRQXdRakVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1Td3dLZ1lEVlFRREV5TnJkV0psYkdWMExXSnZiM1J6ZEhKaGNDMXJkV0psWTI5dQpabWxuTFhOcFoyNWxjakFlRncweU16QTBNVGd4TXpBNE1UQmFGdzB6TXpBME1UVXhNekE0TVRCYU1JRzJNV0F3CkhRWURWUVFLRXhaemVYTjBaVzA2YzJWeWRtbGpaV0ZqWTI5MWJuUnpNRDhHQTFVRUNoTTRjM2x6ZEdWdE9uTmwKY25acFkyVmhZMk52ZFc1MGN6cHZjR1Z1YzJocFpuUXRiV0ZqYUdsdVpTMWpiMjVtYVdjdGIzQmxjbUYwYjNJeApVakJRQmdOVkJBTVRTWE41YzNSbGJUcHpaWEoyYVdObFlXTmpiM1Z1ZERwdmNHVnVjMmhwWm5RdGJXRmphR2x1ClpTMWpiMjVtYVdjdGIzQmxjbUYwYjNJNmJtOWtaUzFpYjI5MGMzUnlZWEJ3WlhJd2dnRWlNQTBHQ1NxR1NJYjMKRFFFQkFRVUFBNElCRHdBd2dnRUtBb0lCQVFDeDk5M0lqSStLWFZpNExsajBnSzlKeUhncU4xUjRYMnpQUXVpTApMZkRqaDFzaWo1ekx2Q3VtMmFRN29Ec1NTOFVKM3ltUGpDM0JMVFkvZ1FVQkhjTUhWZVo4M2s4V01YWWV0MUJSCnBhRW1FdlJVcENQSG9wSEhMSlJKdHV3MmV0RHZOV1A5bHRJUXg4UFUrSHBBUFJDU0lkc3JjUXI3Vm0waVg1K2sKL1hsS1p2TzBaS3ZZTGpSdmVkSlpubkdjZkVJSWdvMEE4QVFBUXV1T0VTNkpUZGpIcXZnZ3dvM2pTci9xd0plQgpnMVE5T1RJYUlRa0VjSFlVLzIydnhzaW15aFJaVk9VWnN5NFZLdUtQSmh6dEE5NDBEMWcraHA0cVhFR1JFcUUvCkE4UGRZTjNKWmM0dDd3SUViejBEUWVCTDBndkVFdFhMNXE1eVFTRzIrVExZOW1ydEFnTUJBQUdqZFRCek1BNEcKQTFVZER3RUIvd1FFQXdJRm9EQVRCZ05WSFNVRUREQUtCZ2dyQmdFRkJRY0RBakFNQmdOVkhSTUJBZjhFQWpBQQpNQjBHQTFVZERnUVdCQlQzcnhSaS9KSndKK3kvSW5wbSsyeHV4dUpoTURBZkJnTlZIU01FR0RBV2dCUkZZdXZVCittM3MzYWpXZTZyeGIrejJSNWVIbFRBTkJna3Foa2lHOXcwQkFRc0ZBQU9DQVFFQWZHMS96QmlvenNwREtSTHkKSHRTWXdOWHFqT2pNWkZUbVZvRktqVEpJTktwYXpFeFFzQkZJTlEzYU13bmoxcTFmM2tta01hR1c5Y2hzbWlZMgp2WjN3cXB2S0UwUXdqUXgvcDJaUmpRSXVlWlAvT0ZVbzkzQ2VZcXVQWmt1bHhlTjErTnRqc0hobDBOS2FFMU8xCkFzMHlGWEh4VzVQWEhDNlkranEwd3cwZU9EVGFOV2EveHhCMnM2UUlMb3FpVXdkQWFqdWc5N0ptb0c5YTJ6RGIKd0ZHRk5YbEV6VXcxZHVRSjhXR0R3Rld2MWJmN0xYdEhIdUdNa2g4VkgvVHRoR20yVzA5QVVMTE9LQXRLcXFSZgpydlZoOGkxeVBCanI2cjRLSHFteHlCZXRndEF6VTNsVUl5VWNBWGlwd2V3ZUZiTEdZQzRmcFBMRjhsMkt6NGZiCjR3QUVUdz09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K",
                            "verification": {}
                        },
                        "mode": 384
                    },
                    {
                        "group": {},
                        "overwrite": true,
                        "path": "/opt/openshift/tls/kubelet-signer.key",
                        "user": {
                            "name": "root"
                        },
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBbUprMGd5Rjdza2pKZkZQQ0hjNVRVMGtvVi8xN1lGUEZqdFdXc2VPQ2cveXBwN2taCm80QnhBbUp1WnJBV2crRWs0S3M1RHpoWXBvRklGaUtTTnNNL21sVmFrRGZUQ3NrMTlWY200WEtPMVkrMFNCK0oKeGRXTks5aFFILzNmL1YyK25oV2tmYnlTRUUyOTlQNTBqYzN6dWJqT3RnYWRQdGFGY3FJaTdYWW5ObVNmTnd1cQpwY2tlVytoOEVVY3IvTjBzWEMySW1zd3FDZ1RHc0R3TytXcFZPSVRBRWFCYkpGU3c5dTFXS052eWE4aHgrM2RlCit4dVowQ25KRHlUZW5aZzFYckxpSkFzTjRoU2JDdnJlbHMrWjZqYlpsUDVZVEdtRXF2aUZ0TWxRMDFhYnk0N1MKVytxWUsySUs2aFFkeUtWb3YvN3pRYzVkdGNnVG14LzRwNFFxR1FJREFRQUJBb0lCQUVzYzVvZEJmUVMxNVUrbwpYdDJUQ05ydklNZW5Bd3JZVVY5TWJWL2tzQUxONUtpbGFTUmMvY09CdGZ3ZjR3VkpWb0NzWjJyQmZvbC9DMyt4CnhxemtFTE9rSGU3dE81bU1qMTNUWjFVRHNhRVhtbE1DQ3l2eFFRcjY3LzIvVm5qOW91MW5rODg4ZWQxQ2x5VTMKOXlFeDVpMWQ5WW9OMldycjUwWVUzd0pwN1VWTklaOStlUUsxY3o3Q0RoQUszUGJiOVhHcDdXOWxDVUhtN3V6cQpJUjlRc3J3NHNIbldvUC91enY5Szl6bkkxa1lDQmVaODNTT2x0MkpFOUxxYUk4UGlGVHZuOXFJUnMvTTNRM2hJCndwV29WUzBtdmNJejFUaHdyNGR6UDJCZHJIRDdwdXNYNTg3aDZhY3IzSHNGMHlhOUdkWDVHMmRhMGJZeitHTWcKY1E1SlEyMENnWUVBeWF1WE5iZ0VjcC9FWHJrRHdDL2hBTy9KUnVzdjR2b1J1Sll4VG9sVGZSdWFvcitjbFBmeApvVzZiMUVhbXFETDRtbUY5VmozVFdLeHRQYUVPM29YSGZiZExRdVJsNUxMNlR6MXhlY2ozM3FlcjgxWFJ1YWJ0CmEzQVMyTUxmNVljSHlUTmg4NWgvVWJUd2tCVER3UDU0WTNSNkxNWDc5RmNxZDF4NDF3WTlMR3NDZ1lFQXdiVlMKd2VtSTZqUWlyZjlKd1BnNFA3bmhxQ1pyeXZTTnU0Zi81VEZid0FWRlBrNGdHU0VrdTlNL2kycWRtT1B6ek1YbApKbkJjcWoyMUkvMmpHbmFpRWV4amkvYmxNY2R4cWRwd1BRamNsdWtIR2xSbDFWQlRwbkl0OUxnWmJKUVdFUms4CmNPRGcrM1lHeTBsNXJMam4xd3QwSVlzQVU5TGtvWHRJazBHcUpJc0NnWUFadGNGeVBNSjhabmZmWjVEZDJIekQKNU0zeE41eUVRRU13R0IyekdIakhVMVNVZVA4YVVyM0FTZHlkNUYvc3c0ckVDN2V4M2ZIcXRSaThLYU0rcFNsNAprbnlLeTVsZDNaOWhxTUNsdVFRNG80R2RaUXgyc1p4RS9TVzU4cVllbWVkWk5DN0JvbWhnMzBObjZ1M0YxZXM5CktxVkV2ZnpQK3FqVVRMcXZGd0dIZndLQmdRQytKazJIdHNURkNzcWtQUDdjWTQxcjJQOVB2ZStBZWxJTExiU2YKK3JUVEtSbFEwUVluUk9hM1RlYUo1KzJ1WU00NVRHWG1OdFJ2OVVVMGdFMjBzNUhpd0ViejVUZ1ZobS9vU1ZwMgpQNVd5dWl0VHlGZHliM2k5NGtXRWZaZlBnd3FxWERoOW9mS1lSY0xqbVV2TXBuSkhJYUl0THpMeUZncUREZTh2ClJuMUxnd0tCZ1FDMlNuUitDclhQZnNtaU85R2JHTjc5L2xuNEVEQ1k4VHlBU21TOUZDMWZ3WFlDMHV0LzhZbmYKSUEvTWxEQVB0OWdwYmxhbHVrdWxlai9yRnoyZVlxUEtZRVhIMTdnZVUwbVByNVVQVEpJZ3ZQVDN0bXdhWFgyRQo0c3Y2cnp4YUo3aERwZlNjT2toUFg1V085dEFPM01SUUlldi9IRHB0TXZhN25sTmZQNTZmT1E9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=",
                            "verification": {}
                        },
                        "mode": 384
                    },
                    {
                        "group": {},
                        "overwrite": true,
                        "path": "/opt/openshift/tls/kubelet-signer.crt",
                        "user": {
                            "name": "root"
                        },
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURIakNDQWdhZ0F3SUJBZ0lJSVNGYVllQ0YrekV3RFFZSktvWklodmNOQVFFTEJRQXdMVEVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1SY3dGUVlEVlFRREV3NXJkV0psYkdWMExYTnBaMjVsY2pBZUZ3MHlNekEwTVRneApNekE0TVRSYUZ3MHlNekEwTVRreE16QTRNVFJhTUMweEVqQVFCZ05WQkFzVENXOXdaVzV6YUdsbWRERVhNQlVHCkExVUVBeE1PYTNWaVpXeGxkQzF6YVdkdVpYSXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCRHdBd2dnRUsKQW9JQkFRQ1ltVFNESVh1eVNNbDhVOElkemxOVFNTaFgvWHRnVThXTzFaYXg0NEtEL0ttbnVSbWpnSEVDWW01bQpzQmFENFNUZ3F6a1BPRmltZ1VnV0lwSTJ3eithVlZxUU45TUt5VFgxVnliaGNvN1ZqN1JJSDRuRjFZMHIyRkFmCi9kLzlYYjZlRmFSOXZKSVFUYjMwL25TTnpmTzV1TTYyQnAwKzFvVnlvaUx0ZGljMlpKODNDNnFseVI1YjZId1IKUnl2ODNTeGNMWWlhekNvS0JNYXdQQTc1YWxVNGhNQVJvRnNrVkxEMjdWWW8yL0pyeUhIN2QxNzdHNW5RS2NrUApKTjZkbURWZXN1SWtDdzNpRkpzSyt0Nld6NW5xTnRtVS9saE1hWVNxK0lXMHlWRFRWcHZManRKYjZwZ3JZZ3JxCkZCM0lwV2kvL3ZOQnpsMjF5Qk9iSC9pbmhDb1pBZ01CQUFHalFqQkFNQTRHQTFVZER3RUIvd1FFQXdJQ3BEQVAKQmdOVkhSTUJBZjhFQlRBREFRSC9NQjBHQTFVZERnUVdCQlM2amF3cWpTb01yNExLbUkzMVhTV2hTVllKdGpBTgpCZ2txaGtpRzl3MEJBUXNGQUFPQ0FRRUFoYVV0QkdjRjJicjNvWGNOOUdFQ0cwMWtlZ3Z3c01vdEUvZkpDVHhXCisvN0xzZ1JJY3ZJYnZqTk1GVFZWM1JGVy9aYXpidjREbWJtdTNJdG1FU0RiWXJtdU1YNVNZZDJTNngyNGNCdUMKTmJOVVE2QkZ6ZTF6Q2RLRmxVTHdHeE5NYS9zendBa3BmRUd6TzkrWjBUQUY5eU9yM2tRL204R2pzZTlFRkNsWApLL25BVThYeko3U1VrZXE1S0Z0b3h5NHFvR1hNWWphNktDWGNuYUpqclJTcWdvY0NCL1dwenlMLzc2VFcrYnZ0CjNCdDEzeUs2Y2x0cTJmVWdMdUxibDJ5WXU5MXRmakx3YUg1ZlI2UE1wb3Y0YTBCeUt3KytVa2VBbHp2cmNMTXMKY3hpVWZRVVV1ak9vdGJDRzlxSGtBNmk4NExCR2Y2RnBLSXlWUWJ2eTJxSWMvdz09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K",
                            "verification": {}
                        },
                        "mode": 384
                    },
                    {
                        "group": {},
                        "overwrite": true,
                        "path": "/opt/openshift/tls/kubelet-serving-ca-bundle.crt",
                        "user": {
                            "name": "root"
                        },
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURIakNDQWdhZ0F3SUJBZ0lJSVNGYVllQ0YrekV3RFFZSktvWklodmNOQVFFTEJRQXdMVEVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1SY3dGUVlEVlFRREV3NXJkV0psYkdWMExYTnBaMjVsY2pBZUZ3MHlNekEwTVRneApNekE0TVRSYUZ3MHlNekEwTVRreE16QTRNVFJhTUMweEVqQVFCZ05WQkFzVENXOXdaVzV6YUdsbWRERVhNQlVHCkExVUVBeE1PYTNWaVpXeGxkQzF6YVdkdVpYSXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCRHdBd2dnRUsKQW9JQkFRQ1ltVFNESVh1eVNNbDhVOElkemxOVFNTaFgvWHRnVThXTzFaYXg0NEtEL0ttbnVSbWpnSEVDWW01bQpzQmFENFNUZ3F6a1BPRmltZ1VnV0lwSTJ3eithVlZxUU45TUt5VFgxVnliaGNvN1ZqN1JJSDRuRjFZMHIyRkFmCi9kLzlYYjZlRmFSOXZKSVFUYjMwL25TTnpmTzV1TTYyQnAwKzFvVnlvaUx0ZGljMlpKODNDNnFseVI1YjZId1IKUnl2ODNTeGNMWWlhekNvS0JNYXdQQTc1YWxVNGhNQVJvRnNrVkxEMjdWWW8yL0pyeUhIN2QxNzdHNW5RS2NrUApKTjZkbURWZXN1SWtDdzNpRkpzSyt0Nld6NW5xTnRtVS9saE1hWVNxK0lXMHlWRFRWcHZManRKYjZwZ3JZZ3JxCkZCM0lwV2kvL3ZOQnpsMjF5Qk9iSC9pbmhDb1pBZ01CQUFHalFqQkFNQTRHQTFVZER3RUIvd1FFQXdJQ3BEQVAKQmdOVkhSTUJBZjhFQlRBREFRSC9NQjBHQTFVZERnUVdCQlM2amF3cWpTb01yNExLbUkzMVhTV2hTVllKdGpBTgpCZ2txaGtpRzl3MEJBUXNGQUFPQ0FRRUFoYVV0QkdjRjJicjNvWGNOOUdFQ0cwMWtlZ3Z3c01vdEUvZkpDVHhXCisvN0xzZ1JJY3ZJYnZqTk1GVFZWM1JGVy9aYXpidjREbWJtdTNJdG1FU0RiWXJtdU1YNVNZZDJTNngyNGNCdUMKTmJOVVE2QkZ6ZTF6Q2RLRmxVTHdHeE5NYS9zendBa3BmRUd6TzkrWjBUQUY5eU9yM2tRL204R2pzZTlFRkNsWApLL25BVThYeko3U1VrZXE1S0Z0b3h5NHFvR1hNWWphNktDWGNuYUpqclJTcWdvY0NCL1dwenlMLzc2VFcrYnZ0CjNCdDEzeUs2Y2x0cTJmVWdMdUxibDJ5WXU5MXRmakx3YUg1ZlI2UE1wb3Y0YTBCeUt3KytVa2VBbHp2cmNMTXMKY3hpVWZRVVV1ak9vdGJDRzlxSGtBNmk4NExCR2Y2RnBLSXlWUWJ2eTJxSWMvdz09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K",
                            "verification": {}
                        },
                        "mode": 384
                    },
                    {
                        "group": {},
                        "overwrite": true,
                        "path": "/opt/openshift/tls/machine-config-server.key",
                        "user": {
                            "name": "root"
                        },
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcGdJQkFBS0NBUUVBOTZWcnlKUmFGbUcyNktUSHN4RTlYejJTKzVFeVBxWE9lTGRvSENObEJpMytubXhKCjE4ODFxTmtkdUF6VEJFMjBGZU1TVzhWOGtvZU54WVVxZzBxa1FDVnhUZkdTU1NqaWE5K2hjYUdFOGRycitzcC8KSytCZXNQdm1hWlZuUGhqa3ZDTTRJS3dzSS84SlZ5T0c1dVViVlZEMHliOXd1RFIwTGdkMk1BS1JSbXU3UHpxOQpWVHZBaDJuVngvd3QzVUk1QlBvTERBTGF0U0lObUNHaTJGUzI1VlpnUmwwTGw1cFpaa3lydWVsU0szK25La2tRCmpYTlJNLzB3cVJpd01rWVYzd1I4WXpERm9TZ3JHRFlGQWlsOExDN3VHWUYycElDZXJyK2pHYXprQVhwZWIxd3cKMnRBR05mMXExQUZzUkhjb2h3bUJsUjhhbGIwZ3FOZEgrWU9GcndJREFRQUJBb0lCQVFETTU3Q2hEQzdtS2YrLwp5dWY1Z0NBNXQ2YndSQmxBd014d0VjRXcxeEIxNW9TdzdJVEU3Z3hHSXk5MTVCYU5qd1djdm4rb00yVjVrSE43CnBVMmh5SmJUQktnVmgvWTBWb0hTSS8xZkdmZjRiZDJuYXZtQ2dtbVhJelpvMGxmVWg2QnJFdkVVQjZHV1B5V3AKVmhuKzNqNlpmeHlyK1p6NHJWNGIzOHlvdU5jZlhjK2xLOGo4ZE8wYXNveEtVUndzOUliaml5cnVkY3FxOHdubQo3VDJJcW01ZHNWbkRpQ3QzT1krT2tQN0QzclFOMUsxYnFSNDdweGExdHQwdDRCaDR1Zk04SjlQL0lnR09KaGRWClZUTGxlYTNMQnUwckdGTmJUUnMycmJ3b2tpaGlBRHRVZVNsR1hRcEo0VjlvYXErUGp6UXVXejFFTFJwaHVEbkkKVEFqMWNDdVJBb0dCQVBrbVZNQkE4L0lOdGx5SXhKaWFPVWIyMFZ5em8zdHpwS3V6aW1uRzhRZGIvVUpPSFdBcwpIcWREMERnZ2hBTEVWaGFiMVBJVHdZS2UrWDlMQWhrcjBXdEhIUW5teUk4VGw4S1EwenhOYWM0K3lXS3VxSEdwCnVkRi9xSmxlR0hUb3VGV0FPdWs5dzN3TlFOaXZWZkpqcnNhODZkV2pZVUI1aHVRaGdhTTUyTzRqQW9HQkFQNTAKZ2N5VmlwbmdRSHdWdTJHUkdRa09PL01vOWdYVDFRbWV3eEc1UklnaWRkbitLMHh2d1d2S25kblhsNnlKTjFEbApxckd3MjVPVnUra3FncDBqeFdMTDBnZzR0N1lRNU9EcXAvdXJyQndTN3p4ZzZzdnFBOUFqNm1sTmlEL1VXUmN5CmxNR1QzRWRhVmp1VytVdi9scGlCLzlEMXBocFNOU1M5NjE1SktoVUZBb0dCQUp3UDZZaGZaeTZZYmtFNkhrTWsKWDNwWEFqOVorcTVLZXJ4ZWd2WE0rbzlNaksvcXREWFlqUDdpMkZzLzZ0Qzg0TnZha3FGcnhJdW9Qc29BVnZragpYRk1oUVV4QmRpRkErWStUSGUybzQveWZrWSt4cmFzODBEc3RCcFBDdi9rRENPdnRuWGthQ2dmN1dVSWhXZW14CmpQbkp2WUxuaXZSUzZ5NmMybEkrMnVZWEFvR0JBTlJiR3pCSDVRSUNXdzZ6ZkV3eXNiZ1Mvd2t4dUJDbzl2UXUKWVJIYmtrd2lwa1Fsa0xFYjIwcEFNSGhyS3BPOWVFSzFTVDArSWlJTEptV3pLb3BHSGljVGZ0ZUpyaGZ1QlhXSApvR1d5b2RKVUl3QTZ5ZmtmOWNxeERxS1BLQlJNL1lVVW0zenFEejRsTUM1UEV3TFA3VGlkMVlib1c1VS80a1lsCmtkYUFMUFNaQW9HQkFNRXpkc2ZjNXB6dk5mVk1mQjd4NnZ0dFR5dXcvb1RNeTdBWnBTRmh2K2Z4aTdNQ1NhUGwKNWdHQWdaWHBvNExJUUV6VU41VEhWZ2pjcFZIMzF2ZnhqU1JhTTR1eFdSdXk3RXJ1K1hjZGNJS0FxdDN3UWcvbQpjdld1WURkemJiNStldTFTbzZocXcvVXBVS0ZrdkttQ20rTytFS1hRcW9pRnRvUlcyOVlqaFFHMQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=",
                            "verification": {}
                        },
                        "mode": 384
                    },
                    {
                        "group": {},
                        "overwrite": true,
                        "path": "/opt/openshift/tls/machine-config-server.crt",
                        "user": {
                            "name": "root"
                        },
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURjakNDQWxxZ0F3SUJBZ0lJQXhqOHk0bWRjakl3RFFZSktvWklodmNOQVFFTEJRQXdKakVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1SQXdEZ1lEVlFRREV3ZHliMjkwTFdOaE1CNFhEVEl6TURReE9ERXpNRGd3T1ZvWApEVE16TURReE5URXpNRGd3T1Zvd0p6RWxNQ01HQTFVRUF4TWNjM2x6ZEdWdE9tMWhZMmhwYm1VdFkyOXVabWxuCkxYTmxjblpsY2pDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBUGVsYThpVVdoWmgKdHVpa3g3TVJQVjg5a3Z1Uk1qNmx6bmkzYUJ3alpRWXQvcDVzU2RmUE5halpIYmdNMHdSTnRCWGpFbHZGZkpLSApqY1dGS29OS3BFQWxjVTN4a2trbzRtdmZvWEdoaFBIYTYvcktmeXZnWHJENzVtbVZaejRZNUx3ak9DQ3NMQ1AvCkNWY2podWJsRzFWUTlNbS9jTGcwZEM0SGRqQUNrVVpydXo4NnZWVTd3SWRwMWNmOExkMUNPUVQ2Q3d3QzJyVWkKRFpnaG90aFV0dVZXWUVaZEM1ZWFXV1pNcTducFVpdC9weXBKRUkxelVUUDlNS2tZc0RKR0ZkOEVmR013eGFFbwpLeGcyQlFJcGZDd3U3aG1CZHFTQW5xNi9veG1zNUFGNlhtOWNNTnJRQmpYOWF0UUJiRVIzS0ljSmdaVWZHcFc5CklLalhSL21EaGE4Q0F3RUFBYU9Cb2pDQm56QVRCZ05WSFNVRUREQUtCZ2dyQmdFRkJRY0RBVEFNQmdOVkhSTUIKQWY4RUFqQUFNQjBHQTFVZERnUVdCQlE4TW5YaTJKUVVreUpYOHRxN2lCZjNsK2V2OERBZkJnTlZIU01FR0RBVwpnQlI3aVRKUEV3VFlxcFM5L3Vmc0o3d2x2azV2Q1RBNkJnTlZIUkVFTXpBeGdpOWhjR2t0YVc1MExuSmxaSEJ2ClpDMWhkM010YzI1dkxtUmxkbU5zZFhOMFpYSXViM0JsYm5Ob2FXWjBMbU52YlRBTkJna3Foa2lHOXcwQkFRc0YKQUFPQ0FRRUFXNWJwaGpBdUg4YW1pLy9oeWJhWnlVVzZqTXI3OXlvZDg5b0hJRGRRd2dEV2dUekEraENydUJvcQo3cmdlN3ViOWlFMzZzb2xSMHRpcTJyWWpxaE1ucFRjcGtOQnRkU2hHNEJyMGRCRG50VFYrbDI1ZGhCRmN1L0F0CmxGK0p0aEk2ZzN0bW5TZnkrN092bU16MXlIWFZrTDltVGV0WmU0UDNmVGFjUCtyNDQ0aGE0aFNIU2xCOHdzc3QKOHNGYWNFSzcvNmc3dlhaTldWUUQwbCt6UjdFc1pVZkVpOEVoOWJLWGhjOGl4Z3NleWZXN2hiQkpBK1BVZ0VvVAovSmNVWm9pZFkvbGRpWG0wREJkbUlSRVBNV0pKcGlGVmpkcHBzb0lpZ3JUeDQrYmJMbUE3clhkMnloN3ZZNitWCmdmMzZEbDJzTnFocXFhazhKcnQ3U3FwMlB0T2xMQT09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K",
                            "verification": {}
                        },
                        "mode": 384
                    },
                    {
                        "group": {},
                        "overwrite": true,
                        "path": "/opt/openshift/tls/service-account.key",
                        "user": {
                            "name": "root"
                        },
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBdUlEV081OVJYbytKVnc5UnVZN3BPN215MUprU2owS1FrS1J5K1h3dFp2TVpla2ZTCk9vNXdjZlVTTFpySW1SQi9pOG5hdGxaY29leDlqaVBsNmJXVVhaTnlFcmhYanlTbThOc3NrNkcwNXBleVFZZU0KYkNxclNrY0JGeUhIZ0NBbXFTcmtjb0VkN1FtcVVDdktLOUFuanRNZ0xWNGZzZlB0OFNJeDFGd1AwclEyWWpQdwowemFwRFNyRzErUHV3OVFPQUtMaXRyYVBsK1BpcW5Sd2l1Q3hNR1Q4ektKV3k2NzFOa29US0h5TVhCRmM2KzlGCnlFMkpQZGMrQU41UXNSNGlLYW1Lenh1RlR3ZW9sa0tBUS9Wcm1MaEozZ05ENjRkcmtWRGJoTU5tdG55dWtHelQKN092azdVTENkZFcxdS90NDc1U1BQTVFMaGpTUVVhYlV1Q3VxeXdJREFRQUJBb0lCQUhqOXUvOXpWYWZlRnVGcApvVjArODRJQUg5NjgxdWZ0YmVIOGhZMUh1bnBWbHZLU1lMR1hzUE42RThhbVJ6L2hDdE0vdHRaMXdkOUp0M2hiCjRDeW5yN2pCdFQvRGRWL2dXRDJBYlRZUENCTmpqVGpkeTk4dkNBNzRpeVdCT0ZPMFFjWVQ0NldYT0dtMk9lTEQKSkp3Z3I2QkFvVXcrK2lmM1g2VU9tSUM3TW9Fb0g1dmtqWVo5NEZmb0lsVUdLNUlEdlJ5QUZOTm1EYVZQZXlZego0bkRHZFN0am9hSjc2S2kybXhPMmtuSXc3YXFhdEFmZHN1YldWc2QxZWtXNzRTWnN1cmF0Qjh5ZzhKdUJBSHBXCjdxSlNDYk5Tb0IzaHdPc2h0Z2NqRW5ycUtSbVl4WnViU3p4Z3NHZWkvVCtZYWUrM1pudm1TbzZBMWpsbWFZQzAKejNieldPa0NnWUVBd0xxNm5wSE5aVXdiNVNEWTJsTGhBd2tIY3FtTDZHYWZ3eU5kM0FTeGk4YmJmNXJkdnJadAoxL1FnMFpwOFhUTGVhTEZyQzl2V1RsV1JHd05aNFE0TDlxSUp4dnJvcFJkcFBXTTlnQ1EycUtiOUpqRTFTL1plCmhoYTlqVS83Ujl0TTBxQktxWE9sVTlxbG1xZjVsTFUxVW80VjZmeitlQjFpaGQvVUJIZnRFYjBDZ1lFQTlSTEYKUVNkVW1oandwL2JQL0hEUGY2VW5XNmlzR25DazlVUlg3VkQ5M2UxWGNtWjFHM3ZLZlFXaHExYzNCelpaWTM3eApRN3NzUG1yQTNwNUxBN0c4cmRSaUlOL0t2dTNBbjBDcy9hTjVGNVNidnJ4MEdmY0p6cnkwc0dEU1VYbzdIYlFTCnFXQnVTWDdRaFVSUGMvanR2NnNKZ3IvUWFhSkdWdWpsUXFIbnd5Y0NnWUI3djJuVUp3b2E0S09JbTI2aHdGVjUKL1hJcXpYSm41bnp1YnViMVBvNUJrWTJlZ1hHZjRzTGt4bnZNR2NXQWtnajhiKzZyenB2cjhFVWJjeXRpdGdJNAplaEtORU00UU10Zi84cGlxanBZSjlDN1hOd0ZocE85TWFZMk1EcTdwbElYZk44eTR3T2lHenYxR01GU3doeW1WCnVHV1p1RGdzSjdIN0E1eSt3Y0lXZ1FLQmdCK3ZPcE51MjFCRTh6QTBCN1hTZS9FN3ovZll1Yzk5U3NadS9KTXgKQ25GYjB4ZDJTYU94QUgvamI0QndlU3ZVaWdBRUZIczJRc1ViRmk1eDlxN1dsdGMrZ3lWTzZhNS9uSXk2VnVNLwo5RkxwSXEycFBiVnhxL0h2a2NqUDY4RWU5VytrclZqNm42ZWUzcVNzTFQySUxHekFWeTF4VVNlbkZFTCtQMDI3CkV2UzNBb0dCQUpHdnpsS2dpQkc0SnlPTUVQZVlkcHFwb3YvYnlLNFhlVTkvaWs1RjgrOFcrcDFEOE9UZVVtTVYKbXUvRnF0c0xCcitVbUE0cFV4MWFBS2NmSXpBdlRnNy8rdHBSTmNER3pBRnNuWTNsS2M0LzFJVVY2UTY4K3VsTwo1TnVhV2p5RStxNER3VEh2U3FpZzZSS1IzZGd1MFllWENqOVhTT1BTbUY5emhUam03YkRlCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==",
                            "verification": {}
                        },
                        "mode": 384
                    },
                    {
                        "group": {},
                        "overwrite": true,
                        "path": "/opt/openshift/tls/service-account.pub",
                        "user": {
                            "name": "root"
                        },
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,LS0tLS1CRUdJTiBSU0EgUFVCTElDIEtFWS0tLS0tCk1JSUJJakFOQmdrcWhraUc5dzBCQVFFRkFBT0NBUThBTUlJQkNnS0NBUUVBdUlEV081OVJYbytKVnc5UnVZN3AKTzdteTFKa1NqMEtRa0tSeStYd3Radk1aZWtmU09vNXdjZlVTTFpySW1SQi9pOG5hdGxaY29leDlqaVBsNmJXVQpYWk55RXJoWGp5U204TnNzazZHMDVwZXlRWWVNYkNxclNrY0JGeUhIZ0NBbXFTcmtjb0VkN1FtcVVDdktLOUFuCmp0TWdMVjRmc2ZQdDhTSXgxRndQMHJRMllqUHcwemFwRFNyRzErUHV3OVFPQUtMaXRyYVBsK1BpcW5Sd2l1Q3gKTUdUOHpLSld5NjcxTmtvVEtIeU1YQkZjNis5RnlFMkpQZGMrQU41UXNSNGlLYW1Lenh1RlR3ZW9sa0tBUS9WcgptTGhKM2dORDY0ZHJrVkRiaE1ObXRueXVrR3pUN092azdVTENkZFcxdS90NDc1U1BQTVFMaGpTUVVhYlV1Q3VxCnl3SURBUUFCCi0tLS0tRU5EIFJTQSBQVUJMSUMgS0VZLS0tLS0K",
                            "verification": {}
                        },
                        "mode": 384
                    },
                    {
                        "group": {},
                        "overwrite": true,
                        "path": "/opt/openshift/tls/journal-gatewayd.key",
                        "user": {
                            "name": "root"
                        },
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBM3RVRFBTSnlITVJKcUVVei91M2ZwNlFkNEo1a0RYUHI2YVZJU21SNDhmVEIxelQyClpTeEp0UzdaYnA1RnFldXkwMThFYXc4RW5EU1VtQU15ZFRTazJhbHFXNGJpMUk5R1REQnF1d0xnOUxjTlRKZ2MKZWhlc3NDRmZZS21Hc2dFSk82ejlZR2ErUFpwcWpZS3RLTVZkckVnanpzbFZEVm1MNUowU0xYcThsZzB6WVliTwpmajg1eStiY2hkZ296VnVsVE12QmFQTDR6TzNHMUpJckZIMHFmQ002RWdyaVR6Q2wweGYzVjRkd0dOdkdiVXpICldITlN0NGVGcCszZkVNY0FrN0xzS2IrL2w1WVRkSVNESzdmV3NKSHovMnJuRnM4Z3RuU2xLbTdZVVU4cmNlZTQKU1BhR0dVUFVMQTI5UnBCd1NrbElSUm8vOHRGZm1pbHJsQUhvYlFJREFRQUJBb0lCQUM0Rzc5bFQ0U0JDQnpqagp1bjdBNGI2OTdwSDBCWlNseWlnRHhPL2cydjZYWU9hMEFPVWJCY3FQOThlYWw2Y21rVlNKdnQ3aVJrQ0J0K1BDClhVektaL2F4d005UkNFK0JuTEttR1pXeFhZZ091NGVEci9Za0o3NWwxazZnRmJ0MDdWUlBRak1FWmUxUmxRclAKNERhWXRlV2RMUkJNayszaS9qdGxtbGljanBHcm02N1lwaFBKTDNGUUY3V3hOWnFqUmg3RGpCUFBWaGlaTitTdQpuY2g0SUFtUDRCdzdzYnZIcGpBN2tQOTl6dHltUWJMQmVzZEFjcnorRlFxejBqQjMrVzhHM0U0QThHaHRwRXFhCnF6UkNnZ1RwZ1EvNW5kSUVsZHJ5elhYdXRJZkNYdEdNSTMzL3dIMjhQZ1lSUzQzbjhkeEZSRWsrRE1OOWNrWUMKMU15U3VzRUNnWUVBOHo2V1dPNEJ5Q0Z6VVp4aG05VzNYMFAwZENlNldaSkZUbXczYUZmelFpbVczcm5xUHEyRwphOXRQamFVd3BOQ2pCZ3NJZWtsbjhhUHpUaWorMFVvUCtDUXJZOFQ4ejZKNVYyam84dTFPeFNzZEJRR3UycXIyCkVET0FiVzNEUnlmQkwxWXZqVWp0ektLK0U1enZYRlU1SmJGaU8wZkZrbEN4UXVMV1RIVDhTTkVDZ1lFQTZvUm0KcDc3UUs5Rk51RTJCSjNsa3JoVTNGdlJEa3NTWEJtVHczbE9DRE1CUFpMMno4RW5MN1RxUURhZXlHL2VleFQ1bwpiaG9DTlI1aGNKTGVaU2k2Y0ZWWjBYelpnbXJRYnZWN2ZtbDFKYnE0TTNDOVBta0ttRnZvc1c5bGFybmk0b1huCi9sUlYxYlQ5c082L0NURDNybDVMWnM3Tms3Yi8xZGp5VzExSlROMENnWUFvMDhCNGZMcGYxUDErSFRsazVxSTQKb3pkTXA3NW5lbDJYcENKSXFUcHpTSGZDT29KT3N1RjFDUUo1UzlpMlVTNkx2UjVYS0NzQ0svcVNpOTc1VWUwTQpRVVhuSVJFdDZKOWxSSDZWQjYvSStFdU9vNUd0c2pSSzA5b2lnK0hhOTVrOVVNSDZmTnN0RmNQQmx2MjJDYmZsCjA3Z2hLeExHVkRUc2ZSWnJEdGVwZ1FLQmdRQ3FreXJuajg1eVVJYXJLeFJwMWMzNUlNMDFFTzJsYndBNlVta3cKREtWbkNPbTJhSlRjalpDYU9DSlhERVpzT1N0dVkvb3BPeG1uOFRVR1lJMEtIeG1jWXpnMU93NHA0ZTlCQmFTUgpTYnMvZWhSSXRoT3Z0VTlUaW1ZeHlNaUhYRFUrZGc5TDJhT2xFVVFFMFdKNkdQZk9DQi9uNHp0NzJYc3oyOXhMCndBcDBzUUtCZ0FxTWNVMHZTbXo5ck53OC9WRVl6T3ROd2Y2NklhTzA5akdIRm1PbVV0QkJrRGxPb2xPVXNHdTQKOTlaYS9neWVlcE1UL29nSjd1SkE5TnUvcFZubE9pVW1KaTQwVU11VzRBRGcwczlkZUZWdytkazZxKyt6b3Z2SgpnVk1RbmRwU1d6R00rc01EQjkwd3Iya1ZJbGp5N1lvVWprTUVWRnJFM0RrRDJFaWhiY3NKCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==",
                            "verification": {}
                        },
                        "mode": 384
                    },
                    {
                        "group": {},
                        "overwrite": true,
                        "path": "/opt/openshift/tls/journal-gatewayd.crt",
                        "user": {
                            "name": "root"
                        },
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURZRENDQWtpZ0F3SUJBZ0lJWU9NYWVpMFpEMUF3RFFZSktvWklodmNOQVFFTEJRQXdKakVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1SQXdEZ1lEVlFRREV3ZHliMjkwTFdOaE1CNFhEVEl6TURReE9ERXpNRGd3T1ZvWApEVE16TURReE5URXpNRGd4TWxvd09URWNNQm9HQTFVRUNoTVRUM0JsYmxOb2FXWjBJRUp2YjNSemRISmhjREVaCk1CY0dBMVVFQXhNUWFtOTFjbTVoYkMxbllYUmxkMkY1WkRDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVAKQURDQ0FRb0NnZ0VCQU43VkF6MGljaHpFU2FoRk0vN3QzNmVrSGVDZVpBMXo2K21sU0Vwa2VQSDB3ZGMwOW1VcwpTYlV1Mlc2ZVJhbnJzdE5mQkdzUEJKdzBsSmdETW5VMHBObXBhbHVHNHRTUFJrd3dhcnNDNFBTM0RVeVlISG9YCnJMQWhYMkNwaHJJQkNUdXMvV0JtdmoyYWFvMkNyU2pGWGF4SUk4N0pWUTFaaStTZEVpMTZ2SllOTTJHR3puNC8KT2N2bTNJWFlLTTFicFV6THdXankrTXp0eHRTU0t4UjlLbndqT2hJSzRrOHdwZE1YOTFlSGNCamJ4bTFNeDFoegpVcmVIaGFmdDN4REhBSk95N0NtL3Y1ZVdFM1NFZ3l1MzFyQ1I4LzlxNXhiUElMWjBwU3B1MkZGUEszSG51RWoyCmhobEQxQ3dOdlVhUWNFcEpTRVVhUC9MUlg1b3BhNVFCNkcwQ0F3RUFBYU4vTUgwd0RnWURWUjBQQVFIL0JBUUQKQWdXZ01CMEdBMVVkSlFRV01CUUdDQ3NHQVFVRkJ3TUJCZ2dyQmdFRkJRY0RBakFNQmdOVkhSTUJBZjhFQWpBQQpNQjBHQTFVZERnUVdCQlQ4RTREV2JRNjZERXA2VEtmZkJDZ25mT2N4RkRBZkJnTlZIU01FR0RBV2dCUjdpVEpQCkV3VFlxcFM5L3Vmc0o3d2x2azV2Q1RBTkJna3Foa2lHOXcwQkFRc0ZBQU9DQVFFQWhkSjQrM1YyczZKeWlEZGEKcEkxdVAwbHNkK2ZFTm5VMEEyNWVnZkZ5MFlLSWhjY0YyamdtSk0xakNjb0c5MStoQ3lLYUtMM0lNNkhYbExkTAo5c3AzRldJc29yeEl2SEFZY0p5NHNqVk12TXJiYXZzdmFzaSszbTFpb3RYK2lQWGF1TUQ3Z2Y1WUZ5dHJXWnVPCjVSRlVzK3FWV1JVQTRQM0k1SVZpWHQyZTNoY3lPRjA1MTBnbHh0ZHVHNy82djE5aUJpWUJtaHBHNzFIZ2ZNQXUKY3kvcDVKRk1LcitncUpNNXhkSThaWnVHUmdBRlBMVW9tcnZDM1BnUnloUS9DZlo1RC94b0NuMUhUekl3S09pNgozMVhxbk1XUitNSXp6TTVGSTIvMTFWdmlsWmhGRjJPMEIxSkpsRGRza1AzT2h2V2hDZ3UweUFyaEVPRGhlV2xFCkRvVXUrUT09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K",
                            "verification": {}
                        },
                        "mode": 384
                    },
                    {
                        "group": {},
                        "overwrite": true,
                        "path": "/opt/openshift/tls/root-ca.crt",
                        "user": {
                            "name": "root"
                        },
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFRENDQWZpZ0F3SUJBZ0lJVTVpTWZlTEFzMFV3RFFZSktvWklodmNOQVFFTEJRQXdKakVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1SQXdEZ1lEVlFRREV3ZHliMjkwTFdOaE1CNFhEVEl6TURReE9ERXpNRGd3T1ZvWApEVE16TURReE5URXpNRGd3T1Zvd0pqRVNNQkFHQTFVRUN4TUpiM0JsYm5Ob2FXWjBNUkF3RGdZRFZRUURFd2R5CmIyOTBMV05oTUlJQklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQ0FRRUFzYTV3YzRSdzZRQWEKV09yMFZYOTVGY0wrWDlxWjVtbS8yNy9Ud2trVTc0Yzh1R093TXdjVGMzc0ZMWWxQa3l2WjdtVWNQT1BuZzVqcgovN1JPeG5LMUwwUDFWMkRZQ0p0a3c1c2Mxbzl0eDRoVUhIMTJ1b1c0Um9mMkIyQVRObHR2RU5sblBFbldTalR5CmdEZjRTc25HaXJ5d1NYZE1SZHAzK0N2R2VjQUFmZWw5OHVQdEYzcWd5ZnRScEM2Ri8zSmVUTEQ4Z29CQ0I1aWkKVGs2MDJYNkFMNUMrV0lRMnlFR3VIT0tDOFlYWjRwOWNRdC9LSENHSy9iUUUxc1RFVEJ2YnFSM0tTTnJwU1MzVAp4MFZBYUxkN05xQlFCSVFha3dUazN0KzdzaUpWZFdlbDZVZjE1eWtibzJDUkdacXFKMWMvYVhKNXdTQUhaM1FuCmZ6cnJJRHR5SlFJREFRQUJvMEl3UURBT0JnTlZIUThCQWY4RUJBTUNBcVF3RHdZRFZSMFRBUUgvQkFVd0F3RUIKL3pBZEJnTlZIUTRFRmdRVWU0a3lUeE1FMktxVXZmN243Q2U4SmI1T2J3a3dEUVlKS29aSWh2Y05BUUVMQlFBRApnZ0VCQUhxUWdLZG9lVUtDdGVmTTZ0U2IwVG9wdCtNUXNLY0dyL1JFbWlCUi9MREFhY21kOXZWWUMyU0lKQk1TCldwcjlSS2lreENqMTlFSDdsL1FrbGJ6a0VTcS96TUlYTmpaU3NHUTFJZWpBQ0RSdVVDZzFTS21sZHlBeCtHemYKM3NaeVRWUGx6NFN3Q0pHM3BnMG4yK2VjQXQxNGRQVEhucEV6YlN3VEdIK1l4anNUN3ZDazEzMUR6OE5Cb2tCSwpyQzV0aUNIWGJ0MFkycHB1emdjaVQ4OXlIYlJOWG1UdXdtZHhuVUZtaGIwc1BEWFJ4V21RS0k0bHhrRGVTVFBVCm91blZwbWt4SlAzWW9KcXJCZFZ6TW5GZmJtR2RvL3M4N3J4Zng1cnRrcVVTOUVtbDh5N25kR1pKTXIyWDBsd0YKcmZpMTcxRm42V2RQZEJkRWRIVDQ0SHVLSURvPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==",
                            "verification": {}
                        },
                        "mode": 420
                    }
                ]
            },
            "systemd": {
                "units": [
                    {
                        "contents": "[Unit]\nDescription=Approve CSRs during bootstrap phase\nWants=bootkube.service\nAfter=bootkube.service\n\n[Service]\nExecStart=/usr/local/bin/approve-csr.sh /opt/openshift/auth/kubeconfig-loopback\n\nRestart=on-failure\nRestartSec=5s\n\n[Install]\nWantedBy=multi-user.target\n",
                        "enabled": true,
                        "name": "approve-csr.service"
                    },
                    {
                        "contents": "[Unit]\nDescription=Bootstrap a Kubernetes cluster\nRequires=crio-configure.service\nWants=kubelet.service\nAfter=kubelet.service crio-configure.service\nConditionPathExists=!/opt/openshift/.bootkube.done\n\n[Service]\nWorkingDirectory=/opt/openshift\nExecStart=/usr/local/bin/bootkube.sh\n\nRestart=on-failure\nRestartSec=5s\n",
                        "name": "bootkube.service"
                    },
                    {
                        "contents": "# In RHEL8 the service uses DynamicUser=yes; we need to work both ways, so hence\n# we hack this by adding the user if it doesn't exist and chown the file, rather\n# than doing it in Ignition.\n# https://github.com/openshift/installer/pull/1445\n[Unit]\nDescription=Change ownership of journal-gatewayd.key\nBefore=systemd-journal-gatewayd.service\n\n[Service]\nType=oneshot\nRemainAfterExit=yes\nExecStart=/bin/sh -c \". /usr/local/bin/bootstrap-service-record.sh; if ! getent passwd systemd-journal-gateway \u0026\u003e/dev/null; then useradd -r systemd-journal-gateway; fi \u0026\u0026 chown systemd-journal-gateway: /opt/openshift/tls/journal-gatewayd.{crt,key}\"\n\n[Install]\nWantedBy=multi-user.target\n",
                        "enabled": true,
                        "name": "chown-gatewayd-key.service"
                    },
                    {
                        "contents": "[Unit]\nDescription=Configure CRI-O to use the pause image\nAfter=release-image.service\nRequires=release-image.service\nBefore=crio.service\n\n[Service]\nType=oneshot\nExecStart=/usr/local/bin/crio-configure.sh\nRemainAfterExit=true\n\n[Install]\nRequiredBy=crio.service\n",
                        "name": "crio-configure.service"
                    },
                    {
                        "contents": "[Unit]\nDescription=Kubernetes Kubelet\nWants=rpc-statd.service crio.service release-image.service\nAfter=crio.service release-image.service\n\n[Service]\nType=notify\nNotifyAccess=all\nExecStartPre=/bin/mkdir --parents /etc/kubernetes/manifests\nExecStartPre=/bin/mkdir --parents /etc/kubernetes/kubelet-plugins/volume/exec\nExecStartPre=/usr/local/bin/kubelet-pause-image.sh\nEnvironment=KUBELET_RUNTIME_REQUEST_TIMEOUT=10m\nEnvironmentFile=-/etc/kubernetes/kubelet-env\nEnvironmentFile=-/etc/kubernetes/kubelet-pause-image-override\n\nExecStart=/usr/local/bin/kubelet.sh\n\nRestart=always\nRestartSec=10\n\n[Install]\nWantedBy=multi-user.target\n",
                        "enabled": true,
                        "name": "kubelet.service"
                    },
                    {
                        "contents": "[Unit]\nDescription=Report the completion of the cluster bootstrap process\n# Workaround for https://github.com/systemd/systemd/issues/1312\nWants=bootkube.service\nAfter=bootkube.service\n\n[Service]\nExecStart=/usr/local/bin/report-progress.sh /opt/openshift/auth/kubeconfig\n\nRestart=on-failure\nRestartSec=5s\n\n[Install]\nWantedBy=multi-user.target\n",
                        "enabled": true,
                        "name": "progress.service"
                    },
                    {
                        "contents": "",
                        "name": "release-image-pivot.service"
                    },
                    {
                        "contents": "[Unit]\nDescription=Download the OpenShift Release Image\nWants=network-online.target\nAfter=network-online.target\n\n[Service]\nType=oneshot\nExecStart=/usr/local/bin/release-image-download.sh\nRemainAfterExit=true\n",
                        "name": "release-image.service"
                    },
                    {
                        "dropins": [
                            {
                                "contents": "[Service]\nExecStart=\nExecStart=/usr/lib/systemd/systemd-journal-gatewayd \\\n  --key=/opt/openshift/tls/journal-gatewayd.key \\\n  --cert=/opt/openshift/tls/journal-gatewayd.crt \\\n  --trust=/opt/openshift/tls/root-ca.crt\n",
                                "name": "certs.conf"
                            }
                        ],
                        "name": "systemd-journal-gatewayd.service"
                    },
                    {
                        "contents": "",
                        "enabled": true,
                        "name": "systemd-journal-gatewayd.socket"
                    },
                    {
                        "dropins": [
                            {
                                "contents": "[Unit]\nConditionPathExists=/enoent\n",
                                "name": "okd-machine-os-disabled.conf"
                            }
                        ],
                        "name": "zincati.service"
                    }
                ]
            }
        },
        "File": {
            "Filename": "bootstrap.ign",
            "Data": ""
        }
    },
    "*bootstrap.CVOIgnore": {
        "FileList": [
            {
                "Filename": "manifests/cvo-overrides.yaml",
                "Data": "YXBpVmVyc2lvbjogY29uZmlnLm9wZW5zaGlmdC5pby92MQpraW5kOiBDbHVzdGVyVmVyc2lvbgptZXRhZGF0YToKICBuYW1lOiB2ZXJzaW9uCiAgbmFtZXNwYWNlOiBvcGVuc2hpZnQtY2x1c3Rlci12ZXJzaW9uCnNwZWM6CiAgY2hhbm5lbDogc3RhYmxlLTQuMTIKICBjbHVzdGVySUQ6IGNmYzY3NWQwLWY1YTItNDg2OS05ZGY3LTZmMzJiMzYzZGVmZAogIG92ZXJyaWRlczoKICAtIGdyb3VwOiAiIgogICAga2luZDogQ29uZmlnTWFwCiAgICBuYW1lOiBjbHVzdGVyLWNvbmZpZy12MQogICAgbmFtZXNwYWNlOiBrdWJlLXN5c3RlbQogICAgdW5tYW5hZ2VkOiB0cnVlCiAgLSBncm91cDogY29uZmlnLm9wZW5zaGlmdC5pbwogICAga2luZDogRE5TCiAgICBuYW1lOiBjbHVzdGVyCiAgICBuYW1lc3BhY2U6ICIiCiAgICB1bm1hbmFnZWQ6IHRydWUKICAtIGdyb3VwOiBjb25maWcub3BlbnNoaWZ0LmlvCiAgICBraW5kOiBJbmZyYXN0cnVjdHVyZQogICAgbmFtZTogY2x1c3RlcgogICAgbmFtZXNwYWNlOiAiIgogICAgdW5tYW5hZ2VkOiB0cnVlCiAgLSBncm91cDogY29uZmlnLm9wZW5zaGlmdC5pbwogICAga2luZDogSW5ncmVzcwogICAgbmFtZTogY2x1c3RlcgogICAgbmFtZXNwYWNlOiAiIgogICAgdW5tYW5hZ2VkOiB0cnVlCiAgLSBncm91cDogYXBpZXh0ZW5zaW9ucy5rOHMuaW8KICAgIGtpbmQ6IEN1c3RvbVJlc291cmNlRGVmaW5pdGlvbgogICAgbmFtZTogbmV0d29ya3MuY29uZmlnLm9wZW5zaGlmdC5pbwogICAgbmFtZXNwYWNlOiAiIgogICAgdW5tYW5hZ2VkOiB0cnVlCiAgLSBncm91cDogY29uZmlnLm9wZW5zaGlmdC5pbwogICAga2luZDogTmV0d29yawogICAgbmFtZTogY2x1c3RlcgogICAgbmFtZXNwYWNlOiAiIgogICAgdW5tYW5hZ2VkOiB0cnVlCiAgLSBncm91cDogY29uZmlnLm9wZW5zaGlmdC5pbwogICAga2luZDogUHJveHkKICAgIG5hbWU6IGNsdXN0ZXIKICAgIG5hbWVzcGFjZTogIiIKICAgIHVubWFuYWdlZDogdHJ1ZQogIC0gZ3JvdXA6IGNvbmZpZy5vcGVuc2hpZnQuaW8KICAgIGtpbmQ6IFNjaGVkdWxlcgogICAgbmFtZTogY2x1c3RlcgogICAgbmFtZXNwYWNlOiAiIgogICAgdW5tYW5hZ2VkOiB0cnVlCiAgLSBncm91cDogIiIKICAgIGtpbmQ6IFNlY3JldAogICAgbmFtZToga3ViZS1jbG91ZC1jZmcKICAgIG5hbWVzcGFjZToga3ViZS1zeXN0ZW0KICAgIHVubWFuYWdlZDogdHJ1ZQogIC0gZ3JvdXA6ICIiCiAgICBraW5kOiBDb25maWdNYXAKICAgIG5hbWU6IHJvb3QtY2EKICAgIG5hbWVzcGFjZToga3ViZS1zeXN0ZW0KICAgIHVubWFuYWdlZDogdHJ1ZQogIC0gZ3JvdXA6ICIiCiAgICBraW5kOiBTZWNyZXQKICAgIG5hbWU6IG1hY2hpbmUtY29uZmlnLXNlcnZlci10bHMKICAgIG5hbWVzcGFjZTogb3BlbnNoaWZ0LW1hY2hpbmUtY29uZmlnLW9wZXJhdG9yCiAgICB1bm1hbmFnZWQ6IHRydWUKICAtIGdyb3VwOiAiIgogICAga2luZDogU2VjcmV0CiAgICBuYW1lOiBwdWxsLXNlY3JldAogICAgbmFtZXNwYWNlOiBvcGVuc2hpZnQtY29uZmlnCiAgICB1bm1hbmFnZWQ6IHRydWUKICAtIGdyb3VwOiAiIgogICAga2luZDogU2VjcmV0CiAgICBuYW1lOiBhd3MtY3JlZHMKICAgIG5hbWVzcGFjZToga3ViZS1zeXN0ZW0KICAgIHVubWFuYWdlZDogdHJ1ZQogIC0gZ3JvdXA6ICIiCiAgICBraW5kOiBTZWNyZXQKICAgIG5hbWU6IGt1YmVhZG1pbgogICAgbmFtZXNwYWNlOiBrdWJlLXN5c3RlbQogICAgdW5tYW5hZ2VkOiB0cnVlCiAgLSBncm91cDogcmJhYy5hdXRob3JpemF0aW9uLms4cy5pbwogICAga2luZDogUm9sZQogICAgbmFtZTogYXdzLWNyZWRzLXNlY3JldC1yZWFkZXIKICAgIG5hbWVzcGFjZToga3ViZS1zeXN0ZW0KICAgIHVubWFuYWdlZDogdHJ1ZQogIC0gZ3JvdXA6ICIiCiAgICBraW5kOiBDb25maWdNYXAKICAgIG5hbWU6IG9wZW5zaGlmdC1pbnN0YWxsLW1hbmlmZXN0cwogICAgbmFtZXNwYWNlOiBvcGVuc2hpZnQtY29uZmlnCiAgICB1bm1hbmFnZWQ6IHRydWUK"
            },
            {
                "Filename": "original_cvo_overrides.patch",
                "Data": "eyJzcGVjIjp7Im92ZXJyaWRlcyI6bnVsbH19"
            }
        ]
    },
    "*cluster.Cluster": {
        "FileList": [
            {
                "Filename": "terraform.cluster.tfstate",
                "Data": ""
            },
            {
                "Filename": "cluster.tfvars.json",
                "Data": "eyJhbWlfaWQiOiJhbWktMDBmYjRkOTY4ODZmNTVhMzEiLCJjb250cm9sX3BsYW5lX2lwcyI6WyIxMC4wLjE1Ny4xMDAiXSwibGJfdGFyZ2V0X2dyb3VwX2FybnMiOlsiYXJuOmF3czplbGFzdGljbG9hZGJhbGFuY2luZzp1cy13ZXN0LTI6MjY5NzMzMzgzMDY2OnRhcmdldGdyb3VwL3JlZHBvZC1hd3Mtc25vLW5nNXNyLWFpbnQvYTY3NzRlYTU3YmJjY2NmYyIsImFybjphd3M6ZWxhc3RpY2xvYWRiYWxhbmNpbmc6dXMtd2VzdC0yOjI2OTczMzM4MzA2Njp0YXJnZXRncm91cC9yZWRwb2QtYXdzLXNuby1uZzVzci1zaW50LzE5NWVmNDliN2UzZTAyNzAiLCJhcm46YXdzOmVsYXN0aWNsb2FkYmFsYW5jaW5nOnVzLXdlc3QtMjoyNjk3MzMzODMwNjY6dGFyZ2V0Z3JvdXAvcmVkcG9kLWF3cy1zbm8tbmc1c3ItYWV4dC9kYjBkY2RmMWZiNWFkZWY0Il0sImxiX3RhcmdldF9ncm91cF9hcm5zX2xlbmd0aCI6IjMiLCJtYXN0ZXJfc2dfaWQiOiJzZy0wYmMyNjEyZjhjZDJhMjQ0OSIsInByaXZhdGVfc3VibmV0X2lkcyI6WyJzdWJuZXQtMDYyZTExYzBhZDg5ZWMxMzciLCJzdWJuZXQtMGY5MGYxMTdiYTc5N2U4YTMiLCJzdWJuZXQtMDMwMGQ1NmQ5YTY5OGMxODkiLCJzdWJuZXQtMGI3NDkyMzQxZDU4Nzc4OGMiXSwicHVibGljX3N1Ym5ldF9pZHMiOlsic3VibmV0LTA2NmI1MmYyOTk0NWI3MmQwIiwic3VibmV0LTA0NTM3ZTNhODQ5NDEwMTlkIiwic3VibmV0LTBhMzdmOGUzOTdmMDMzZWQzIiwic3VibmV0LTAxMTU5YTEyZGNiYjhlZTViIl0sInZwY19pZCI6InZwYy0wYmI4ZjQxZmQyMmUwOTMzNiJ9"
            },
            {
                "Filename": "terraform.bootstrap.tfstate",
                "Data": ""
            },
            {
                "Filename": "bootstrap.tfvars.json",
                "Data": "eyJib290c3RyYXBfaXAiOiI1NC4xNDkuMjE0LjExMSJ9"
            }
        ]
    },
    "*cluster.Metadata": {
        "File": {
            "Filename": "metadata.json",
            "Data": "eyJjbHVzdGVyTmFtZSI6InJlZHBvZC1hd3Mtc25vIiwiY2x1c3RlcklEIjoiY2ZjNjc1ZDAtZjVhMi00ODY5LTlkZjctNmYzMmIzNjNkZWZkIiwiaW5mcmFJRCI6InJlZHBvZC1hd3Mtc25vLW5nNXNyIiwiYXdzIjp7InJlZ2lvbiI6InVzLXdlc3QtMiIsImlkZW50aWZpZXIiOlt7Imt1YmVybmV0ZXMuaW8vY2x1c3Rlci9yZWRwb2QtYXdzLXNuby1uZzVzciI6Im93bmVkIn0seyJvcGVuc2hpZnRDbHVzdGVySUQiOiJjZmM2NzVkMC1mNWEyLTQ4NjktOWRmNy02ZjMyYjM2M2RlZmQifV0sImNsdXN0ZXJEb21haW4iOiJyZWRwb2QtYXdzLXNuby5kZXZjbHVzdGVyLm9wZW5zaGlmdC5jb20ifX0="
        }
    },
    "*cluster.TerraformVariables": {
        "FileList": [
            {
                "Filename": "terraform.tfvars.json",
                "Data": ""
            },
            {
                "Filename": "terraform.platform.auto.tfvars.json",
                "Data": "ewogICJhd3NfYW1pIjogImFtaS0wMGZiNGQ5Njg4NmY1NWEzMSIsCiAgImF3c19hbWlfcmVnaW9uIjogInVzLXdlc3QtMiIsCiAgImF3c19leHRyYV90YWdzIjogewogICAgImt1YmVybmV0ZXMuaW8vY2x1c3Rlci9yZWRwb2QtYXdzLXNuby1uZzVzciI6ICJvd25lZCIKICB9LAogICJhd3NfYm9vdHN0cmFwX2luc3RhbmNlX3R5cGUiOiAicjUuMnhsYXJnZSIsCiAgImF3c19tYXN0ZXJfaW5zdGFuY2VfdHlwZSI6ICJyNS4yeGxhcmdlIiwKICAiYXdzX21hc3Rlcl9hdmFpbGFiaWxpdHlfem9uZXMiOiBbCiAgICAidXMtd2VzdC0yYSIKICBdLAogICJhd3Nfd29ya2VyX2F2YWlsYWJpbGl0eV96b25lcyI6IFsKICAgICJ1cy13ZXN0LTJkIiwKICAgICJ1cy13ZXN0LTJhIiwKICAgICJ1cy13ZXN0LTJiIiwKICAgICJ1cy13ZXN0LTJjIgogIF0sCiAgImF3c19tYXN0ZXJfcm9vdF92b2x1bWVfaW9wcyI6IDAsCiAgImF3c19tYXN0ZXJfcm9vdF92b2x1bWVfc2l6ZSI6IDY0LAogICJhd3NfbWFzdGVyX3Jvb3Rfdm9sdW1lX3R5cGUiOiAiZ3AzIiwKICAiYXdzX21hc3Rlcl9yb290X3ZvbHVtZV9lbmNyeXB0ZWQiOiB0cnVlLAogICJhd3NfcmVnaW9uIjogInVzLXdlc3QtMiIsCiAgImF3c19wdWJsaXNoX3N0cmF0ZWd5IjogIkV4dGVybmFsIiwKICAiYXdzX2lnbml0aW9uX2J1Y2tldCI6ICJyZWRwb2QtYXdzLXNuby1uZzVzci1ib290c3RyYXAiLAogICJhd3NfYm9vdHN0cmFwX3N0dWJfaWduaXRpb24iOiAie1wiaWduaXRpb25cIjp7XCJjb25maWdcIjp7XCJyZXBsYWNlXCI6e1wic291cmNlXCI6XCJodHRwczovL3JlZHBvZC1hd3Mtc25vLW5nNXNyLWJvb3RzdHJhcC5zMy51cy13ZXN0LTIuYW1hem9uYXdzLmNvbS9ib290c3RyYXAuaWduP1gtQW16LUFsZ29yaXRobT1BV1M0LUhNQUMtU0hBMjU2XFx1MDAyNlgtQW16LUNyZWRlbnRpYWw9QUtJQVQ1VEs0Wk9ORUcyT1FJMkQlMkYyMDIzMDQxOCUyRnVzLXdlc3QtMiUyRnMzJTJGYXdzNF9yZXF1ZXN0XFx1MDAyNlgtQW16LURhdGU9MjAyMzA0MThUMTMwODM5WlxcdTAwMjZYLUFtei1FeHBpcmVzPTM2MDBcXHUwMDI2WC1BbXotU2lnbmVkSGVhZGVycz1ob3N0XFx1MDAyNlgtQW16LVNpZ25hdHVyZT1mZTJjY2NlZWRiYzk4MjM1ZWVlMDI3MzNkNTI5Njc4NTg3OThlOWJmMGZkNjE5NTE2N2QxNGVmYjNmNTBhNzlmXCJ9fSxcInZlcnNpb25cIjpcIjMuMi4wXCJ9fSIKfQ=="
            }
        ]
    },
    "*installconfig.ClusterID": {
        "UUID": "cfc675d0-f5a2-4869-9df7-6f32b363defd",
        "InfraID": "redpod-aws-sno-ng5sr"
    },
    "*installconfig.InstallConfig": {
        "config": {
            "apiVersion": "v1",
            "metadata": {
                "name": "redpod-aws-sno",
                "creationTimestamp": null
            },
            "additionalTrustBundlePolicy": "Proxyonly",
            "sshKey": "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQDUrDu6U+4/PxPYH0gyPTi5onqeyeqmwgKXeh8qTee6XJ3Zbk0uJtMbb0x0VrkZqao8+8raz+FOT+AbbEjjxMb1+C4QLC6EmDrCMTLsWiI+yHlxH+g9FO5v+g5hUQe6MtzHdwjD29k0zC5ADh2xWWcz0nwZ9borhYUF3XaRBB6yN2DeB+Hex/zN7geueVxIt8zadqtaEqvgFrjPP9cXjijz4+QwOjlU+OGYp9IYsnMmGC55AFPeEhKiFWG1DoEfls3DBJaWE3E8emCjEP49q9ZMwJDAf2RgkKJbylq8c2b/R4JQEBP7YqDUzMkYjf+BH8u9aeggL5oGTJUKkJVGoQZQyjCYg899lVTx5aPwwpZTtMc0tAZpewMVc2VpaiGLVYRnMqLwBGVveD5iMU4irXDdYWGB1M3BLZIfNGxfWrbpKPCtl2+t8DF5FDQMMtoQdzop9sU2Z3TJsNI3iPP2jjA74jy9aZJMwqzzWOyGoMGtSsecdWxYaeMSRysHdBTGC2k= faermanj@fedora\n",
            "baseDomain": "devcluster.openshift.com",
            "networking": {
                "networkType": "OVNKubernetes",
                "machineNetwork": [
                    {
                        "cidr": "10.0.0.0/16"
                    }
                ],
                "clusterNetwork": [
                    {
                        "cidr": "10.128.0.0/14",
                        "hostPrefix": 23
                    }
                ],
                "serviceNetwork": [
                    "172.30.0.0/16"
                ]
            },
            "controlPlane": {
                "name": "master",
                "replicas": 1,
                "platform": {
                    "aws": {
                        "type": "r5.2xlarge",
                        "rootVolume": {
                            "iops": 0,
                            "size": 64,
                            "type": ""
                        },
                        "metadataService": {}
                    }
                },
                "hyperthreading": "Enabled",
                "architecture": "amd64"
            },
            "compute": [
                {
                    "name": "worker",
                    "replicas": 0,
                    "platform": {},
                    "hyperthreading": "Enabled",
                    "architecture": "amd64"
                }
            ],
            "platform": {
                "aws": {
                    "region": "us-west-2"
                }
            },
            "pullSecret": "{\"auths\":{\"cloud.openshift.com\":{\"auth\":\"b3BlbnNoaWZ0LXJlbGVhc2UtZGV2K29jbV9hY2Nlc3NfYzZiMjdhMjA5MzI1NDY4ZGEyNGNhNmU1ZmE4MGQwOTg6U0pYRDQ2R05MN0Y5VFAxN1lIMjBIM1RQRDJaMUNZVU5ZUUJHS0tJMzA2M0FROUU1RVc0QTFLUldNUTRFVVUwNQ==\",\"email\":\"jufaerma@redhat.com\"},\"quay.io\":{\"auth\":\"b3BlbnNoaWZ0LXJlbGVhc2UtZGV2K29jbV9hY2Nlc3NfYzZiMjdhMjA5MzI1NDY4ZGEyNGNhNmU1ZmE4MGQwOTg6U0pYRDQ2R05MN0Y5VFAxN1lIMjBIM1RQRDJaMUNZVU5ZUUJHS0tJMzA2M0FROUU1RVc0QTFLUldNUTRFVVUwNQ==\",\"email\":\"jufaerma@redhat.com\"},\"registry.connect.redhat.com\":{\"auth\":\"fHVoYy1wb29sLWVlZDUyZjc1LTkyMGQtNDhjMy1iM2VhLTNkNGFlOTM2ODBjMzpleUpoYkdjaU9pSlNVelV4TWlKOS5leUp6ZFdJaU9pSXdPR1V6TXpGa1pqRTNaRFkwTVRsa1lUSmpNMlk1TUdFeE1qQmlORFUzWVNKOS5aeS1RWk83TV9uV3daSHQ4STJpck5uMkFob0ZyU1g0SnBsc1lMcV92T2NDLWYyN1VscTN6NkhzN0xwN3dfWlQ2R05oaHZVc3R0eFk4aTd3eFlwNnZGcEJrelgxOFlFc01Mc3l6Wnl5TGl0YmYtU2E5VHZ6M1pmYnBSVmVGTXlxcVBpRnhLR21fNW10ZTd6dlBIcHRHYl9FQTlBbU5XMnpQQ3gtVE1rTTl6bGhwZ2NGcTF3NWhqdVlqRzN3alhqa0RoZjZ5Wmd5dUs1LWFKNzdwTGtnMVFBRG4xM2MxWHhRQ0xkVkNFSU1tTG55STlyZlNWX1FuSk1Lekp3MHdRbTBLdThRT2NHX2xMb0lfbW12MVZfSFQyX0NRTno0ZVp0VnM1UG80am0zUEtYblRodjVKanRBQ2tKbVdHdXlZUjU5YmJTMGx3al9UVHE0Z2ZCYkt1bWx5MDFaZnJnOXZaRHdCbWRjZ2wzT2F4Q2NuX3BlblZ2TnJTT3JqOXhheGN2VEs3dkg2OUFhenpkdEx6UTNfU0l4R1lzLWVlMkMyMl9EdTUwQXA2Y1dkY09XSzZTUDlqSERKRjV5SW1PeXRBY1NJem9nTFhHZFRSQ3BmZUJFWlZGVnNFbUZ2X29DV3ZQUFdGek5HdWRoRTdWY2FhX2RCT0o0c21MaTY5SkRieEtISUw1bHRQNlI2cGxWTGpma1N2WkRMNzFvVmo4bnhrMkxSVjcxbVBxUFhoRTFkaGgtdVBTM1FKeW02aWQ5SUdqMHZncDFFYnBrSXJuOTdxY1BSMFhaWFQ5WkdkQ19qdGlVbW5mcGVPQVdxOXpmcmlpWk5UZ2VJbU56aVdkVWNJLVBldWZaMHhNNkxwTFVZVlIwNG15UlBqZTNmNHlZUXpfLTB1V0dzMkJVdEtqWQ==\",\"email\":\"jufaerma@redhat.com\"},\"registry.redhat.io\":{\"auth\":\"fHVoYy1wb29sLWVlZDUyZjc1LTkyMGQtNDhjMy1iM2VhLTNkNGFlOTM2ODBjMzpleUpoYkdjaU9pSlNVelV4TWlKOS5leUp6ZFdJaU9pSXdPR1V6TXpGa1pqRTNaRFkwTVRsa1lUSmpNMlk1TUdFeE1qQmlORFUzWVNKOS5aeS1RWk83TV9uV3daSHQ4STJpck5uMkFob0ZyU1g0SnBsc1lMcV92T2NDLWYyN1VscTN6NkhzN0xwN3dfWlQ2R05oaHZVc3R0eFk4aTd3eFlwNnZGcEJrelgxOFlFc01Mc3l6Wnl5TGl0YmYtU2E5VHZ6M1pmYnBSVmVGTXlxcVBpRnhLR21fNW10ZTd6dlBIcHRHYl9FQTlBbU5XMnpQQ3gtVE1rTTl6bGhwZ2NGcTF3NWhqdVlqRzN3alhqa0RoZjZ5Wmd5dUs1LWFKNzdwTGtnMVFBRG4xM2MxWHhRQ0xkVkNFSU1tTG55STlyZlNWX1FuSk1Lekp3MHdRbTBLdThRT2NHX2xMb0lfbW12MVZfSFQyX0NRTno0ZVp0VnM1UG80am0zUEtYblRodjVKanRBQ2tKbVdHdXlZUjU5YmJTMGx3al9UVHE0Z2ZCYkt1bWx5MDFaZnJnOXZaRHdCbWRjZ2wzT2F4Q2NuX3BlblZ2TnJTT3JqOXhheGN2VEs3dkg2OUFhenpkdEx6UTNfU0l4R1lzLWVlMkMyMl9EdTUwQXA2Y1dkY09XSzZTUDlqSERKRjV5SW1PeXRBY1NJem9nTFhHZFRSQ3BmZUJFWlZGVnNFbUZ2X29DV3ZQUFdGek5HdWRoRTdWY2FhX2RCT0o0c21MaTY5SkRieEtISUw1bHRQNlI2cGxWTGpma1N2WkRMNzFvVmo4bnhrMkxSVjcxbVBxUFhoRTFkaGgtdVBTM1FKeW02aWQ5SUdqMHZncDFFYnBrSXJuOTdxY1BSMFhaWFQ5WkdkQ19qdGlVbW5mcGVPQVdxOXpmcmlpWk5UZ2VJbU56aVdkVWNJLVBldWZaMHhNNkxwTFVZVlIwNG15UlBqZTNmNHlZUXpfLTB1V0dzMkJVdEtqWQ==\",\"email\":\"jufaerma@redhat.com\"}}}",
            "publish": "External"
        },
        "file": {
            "Filename": "install-config.yaml",
            "Data": "YWRkaXRpb25hbFRydXN0QnVuZGxlUG9saWN5OiBQcm94eW9ubHkKYXBpVmVyc2lvbjogdjEKYmFzZURvbWFpbjogZGV2Y2x1c3Rlci5vcGVuc2hpZnQuY29tCmNvbXB1dGU6Ci0gYXJjaGl0ZWN0dXJlOiBhbWQ2NAogIGh5cGVydGhyZWFkaW5nOiBFbmFibGVkCiAgbmFtZTogd29ya2VyCiAgcGxhdGZvcm06IHt9CiAgcmVwbGljYXM6IDAKY29udHJvbFBsYW5lOgogIGFyY2hpdGVjdHVyZTogYW1kNjQKICBoeXBlcnRocmVhZGluZzogRW5hYmxlZAogIG5hbWU6IG1hc3RlcgogIHBsYXRmb3JtOgogICAgYXdzOgogICAgICBtZXRhZGF0YVNlcnZpY2U6IHt9CiAgICAgIHJvb3RWb2x1bWU6CiAgICAgICAgaW9wczogMAogICAgICAgIHNpemU6IDY0CiAgICAgICAgdHlwZTogIiIKICAgICAgdHlwZTogcjUuMnhsYXJnZQogIHJlcGxpY2FzOiAxCm1ldGFkYXRhOgogIGNyZWF0aW9uVGltZXN0YW1wOiBudWxsCiAgbmFtZTogcmVkcG9kLWF3cy1zbm8KbmV0d29ya2luZzoKICBjbHVzdGVyTmV0d29yazoKICAtIGNpZHI6IDEwLjEyOC4wLjAvMTQKICAgIGhvc3RQcmVmaXg6IDIzCiAgbWFjaGluZU5ldHdvcms6CiAgLSBjaWRyOiAxMC4wLjAuMC8xNgogIG5ldHdvcmtUeXBlOiBPVk5LdWJlcm5ldGVzCiAgc2VydmljZU5ldHdvcms6CiAgLSAxNzIuMzAuMC4wLzE2CnBsYXRmb3JtOgogIGF3czoKICAgIHJlZ2lvbjogdXMtd2VzdC0yCnB1Ymxpc2g6IEV4dGVybmFsCnB1bGxTZWNyZXQ6ICd7ImF1dGhzIjp7ImNsb3VkLm9wZW5zaGlmdC5jb20iOnsiYXV0aCI6ImIzQmxibk5vYVdaMExYSmxiR1ZoYzJVdFpHVjJLMjlqYlY5aFkyTmxjM05mWXpaaU1qZGhNakE1TXpJMU5EWTRaR0V5TkdOaE5tVTFabUU0TUdRd09UZzZVMHBZUkRRMlIwNU1OMFk1VkZBeE4xbElNakJJTTFSUVJESmFNVU5aVlU1WlVVSkhTMHRKTXpBMk0wRlJPVVUxUlZjMFFURkxVbGROVVRSRlZWVXdOUT09IiwiZW1haWwiOiJqdWZhZXJtYUByZWRoYXQuY29tIn0sInF1YXkuaW8iOnsiYXV0aCI6ImIzQmxibk5vYVdaMExYSmxiR1ZoYzJVdFpHVjJLMjlqYlY5aFkyTmxjM05mWXpaaU1qZGhNakE1TXpJMU5EWTRaR0V5TkdOaE5tVTFabUU0TUdRd09UZzZVMHBZUkRRMlIwNU1OMFk1VkZBeE4xbElNakJJTTFSUVJESmFNVU5aVlU1WlVVSkhTMHRKTXpBMk0wRlJPVVUxUlZjMFFURkxVbGROVVRSRlZWVXdOUT09IiwiZW1haWwiOiJqdWZhZXJtYUByZWRoYXQuY29tIn0sInJlZ2lzdHJ5LmNvbm5lY3QucmVkaGF0LmNvbSI6eyJhdXRoIjoiZkhWb1l5MXdiMjlzTFdWbFpEVXlaamMxTFRreU1HUXRORGhqTXkxaU0yVmhMVE5rTkdGbE9UTTJPREJqTXpwbGVVcG9Za2RqYVU5cFNsTlZlbFY0VFdsS09TNWxlVXA2WkZkSmFVOXBTWGRQUjFWNlRYcEdhMXBxUlROYVJGa3dUVlJzYTFsVVNtcE5NbGsxVFVkRmVFMXFRbWxPUkZVeldWTktPUzVhZVMxUldrODNUVjl1VjNkYVNIUTRTVEpwY2s1dU1rRm9iMFp5VTFnMFNuQnNjMWxNY1Y5MlQyTkRMV1l5TjFWc2NUTjZOa2h6TjB4d04zZGZXbFEyUjA1b2FIWlZjM1IwZUZrNGFUZDNlRmx3Tm5aR2NFSnJlbGd4T0ZsRmMwMU1jM2w2V25sNVRHbDBZbVl0VTJFNVZIWjZNMXBtWW5CU1ZtVkdUWGx4Y1ZCcFJuaExSMjFmTlcxMFpUZDZkbEJJY0hSSFlsOUZRVGxCYlU1WE1ucFFRM2d0VkUxclRUbDZiR2h3WjJOR2NURjNOV2hxZFZscVJ6TjNhbGhxYTBSb1pqWjVXbWQ1ZFVzMUxXRktOemR3VEd0bk1WRkJSRzR4TTJNeFdIaFJRMHhrVmtORlNVMXRURzU1U1RseVpsTldYMUZ1U2sxTGVrcDNNSGRSYlRCTGRUaFJUMk5IWDJ4TWIwbGZiVzEyTVZaZlNGUXlYME5SVG5vMFpWcDBWbk0xVUc4MGFtMHpVRXRZYmxSb2RqVkthblJCUTJ0S2JWZEhkWGxaVWpVNVltSlRNR3gzYWw5VVZIRTBaMlpDWWt0MWJXeDVNREZhWm5Kbk9YWmFSSGRDYldSaloyd3pUMkY0UTJOdVgzQmxibFoyVG5KVFQzSnFPWGhoZUdOMlZFczNka2cyT1VGaGVucGtkRXg2VVROZlUwbDRSMWx6TFdWbE1rTXlNbDlFZFRVd1FYQTJZMWRrWTA5WFN6WlRVRGxxU0VSS1JqVjVTVzFQZVhSQlkxTkplbTluVEZoSFpGUlNRM0JtWlVKRldsWkdWbk5GYlVaMlgyOURWM1pRVUZkR2VrNUhkV1JvUlRkV1kyRmhYMlJDVDBvMGMyMU1hVFk1U2tSaWVFdElTVXcxYkhSUU5sSTJjR3hXVEdwbWExTjJXa1JNTnpGdlZtbzRibmhyTWt4U1ZqY3hiVkJ4VUZob1JURmthR2d0ZFZCVE0xRktlVzAyYVdRNVNVZHFNSFpuY0RGRlluQnJTWEp1T1RkeFkxQlNNRmhhV0ZRNVdrZGtRMTlxZEdsVmJXNW1jR1ZQUVZkeE9YcG1jbWxwV2s1VVoyVkpiVTU2YVZka1ZXTkpMVkJsZFdaYU1IaE5Oa3h3VEZWWlZsSXdORzE1VWxCcVpUTm1OSGxaVVhwZkxUQjFWMGR6TWtKVmRFdHFXUT09IiwiZW1haWwiOiJqdWZhZXJtYUByZWRoYXQuY29tIn0sInJlZ2lzdHJ5LnJlZGhhdC5pbyI6eyJhdXRoIjoiZkhWb1l5MXdiMjlzTFdWbFpEVXlaamMxTFRreU1HUXRORGhqTXkxaU0yVmhMVE5rTkdGbE9UTTJPREJqTXpwbGVVcG9Za2RqYVU5cFNsTlZlbFY0VFdsS09TNWxlVXA2WkZkSmFVOXBTWGRQUjFWNlRYcEdhMXBxUlROYVJGa3dUVlJzYTFsVVNtcE5NbGsxVFVkRmVFMXFRbWxPUkZVeldWTktPUzVhZVMxUldrODNUVjl1VjNkYVNIUTRTVEpwY2s1dU1rRm9iMFp5VTFnMFNuQnNjMWxNY1Y5MlQyTkRMV1l5TjFWc2NUTjZOa2h6TjB4d04zZGZXbFEyUjA1b2FIWlZjM1IwZUZrNGFUZDNlRmx3Tm5aR2NFSnJlbGd4T0ZsRmMwMU1jM2w2V25sNVRHbDBZbVl0VTJFNVZIWjZNMXBtWW5CU1ZtVkdUWGx4Y1ZCcFJuaExSMjFmTlcxMFpUZDZkbEJJY0hSSFlsOUZRVGxCYlU1WE1ucFFRM2d0VkUxclRUbDZiR2h3WjJOR2NURjNOV2hxZFZscVJ6TjNhbGhxYTBSb1pqWjVXbWQ1ZFVzMUxXRktOemR3VEd0bk1WRkJSRzR4TTJNeFdIaFJRMHhrVmtORlNVMXRURzU1U1RseVpsTldYMUZ1U2sxTGVrcDNNSGRSYlRCTGRUaFJUMk5IWDJ4TWIwbGZiVzEyTVZaZlNGUXlYME5SVG5vMFpWcDBWbk0xVUc4MGFtMHpVRXRZYmxSb2RqVkthblJCUTJ0S2JWZEhkWGxaVWpVNVltSlRNR3gzYWw5VVZIRTBaMlpDWWt0MWJXeDVNREZhWm5Kbk9YWmFSSGRDYldSaloyd3pUMkY0UTJOdVgzQmxibFoyVG5KVFQzSnFPWGhoZUdOMlZFczNka2cyT1VGaGVucGtkRXg2VVROZlUwbDRSMWx6TFdWbE1rTXlNbDlFZFRVd1FYQTJZMWRrWTA5WFN6WlRVRGxxU0VSS1JqVjVTVzFQZVhSQlkxTkplbTluVEZoSFpGUlNRM0JtWlVKRldsWkdWbk5GYlVaMlgyOURWM1pRVUZkR2VrNUhkV1JvUlRkV1kyRmhYMlJDVDBvMGMyMU1hVFk1U2tSaWVFdElTVXcxYkhSUU5sSTJjR3hXVEdwbWExTjJXa1JNTnpGdlZtbzRibmhyTWt4U1ZqY3hiVkJ4VUZob1JURmthR2d0ZFZCVE0xRktlVzAyYVdRNVNVZHFNSFpuY0RGRlluQnJTWEp1T1RkeFkxQlNNRmhhV0ZRNVdrZGtRMTlxZEdsVmJXNW1jR1ZQUVZkeE9YcG1jbWxwV2s1VVoyVkpiVTU2YVZka1ZXTkpMVkJsZFdaYU1IaE5Oa3h3VEZWWlZsSXdORzE1VWxCcVpUTm1OSGxaVVhwZkxUQjFWMGR6TWtKVmRFdHFXUT09IiwiZW1haWwiOiJqdWZhZXJtYUByZWRoYXQuY29tIn19fScKc3NoS2V5OiB8CiAgc3NoLXJzYSBBQUFBQjNOemFDMXljMkVBQUFBREFRQUJBQUFCZ1FEVXJEdTZVKzQvUHhQWUgwZ3lQVGk1b25xZXllcW13Z0tYZWg4cVRlZTZYSjNaYmswdUp0TWJiMHgwVnJrWnFhbzgrOHJheitGT1QrQWJiRWpqeE1iMStDNFFMQzZFbURyQ01UTHNXaUkreUhseEgrZzlGTzV2K2c1aFVRZTZNdHpIZHdqRDI5azB6QzVBRGgyeFdXY3owbndaOWJvcmhZVUYzWGFSQkI2eU4yRGVCK0hleC96TjdnZXVlVnhJdDh6YWRxdGFFcXZnRnJqUFA5Y1hqaWp6NCtRd09qbFUrT0dZcDlJWXNuTW1HQzU1QUZQZUVoS2lGV0cxRG9FZmxzM0RCSmFXRTNFOGVtQ2pFUDQ5cTlaTXdKREFmMlJna0tKYnlscThjMmIvUjRKUUVCUDdZcURVek1rWWpmK0JIOHU5YWVnZ0w1b0dUSlVLa0pWR29RWlF5akNZZzg5OWxWVHg1YVB3d3BaVHRNYzB0QVpwZXdNVmMyVnBhaUdMVllSbk1xTHdCR1Z2ZUQ1aU1VNGlyWERkWVdHQjFNM0JMWklmTkd4ZldyYnBLUEN0bDIrdDhERjVGRFFNTXRvUWR6b3A5c1UyWjNUSnNOSTNpUFAyampBNzRqeTlhWkpNd3F6eldPeUdvTUd0U3NlY2RXeFlhZU1TUnlzSGRCVEdDMms9IGZhZXJtYW5qQGZlZG9yYQo="
        },
        "aws": {
            "region": "us-west-2"
        }
    },
    "*installconfig.PlatformCredsCheck": {},
    "*installconfig.PlatformPermsCheck": {},
    "*installconfig.PlatformProvisionCheck": {},
    "*kubeconfig.AdminClient": {
        "Config": {
            "preferences": {},
            "clusters": [
                {
                    "name": "redpod-aws-sno",
                    "cluster": {
                        "server": "https://api.redpod-aws-sno.devcluster.openshift.com:6443",
                        "certificate-authority-data": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURRRENDQWlpZ0F3SUJBZ0lJVXdMTkJjaHNZT1l3RFFZSktvWklodmNOQVFFTEJRQXdQakVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1TZ3dKZ1lEVlFRREV4OXJkV0psTFdGd2FYTmxjblpsY2kxc2IyTmhiR2h2YzNRdApjMmxuYm1WeU1CNFhEVEl6TURReE9ERXpNRGd4TUZvWERUTXpNRFF4TlRFek1EZ3hNRm93UGpFU01CQUdBMVVFCkN4TUpiM0JsYm5Ob2FXWjBNU2d3SmdZRFZRUURFeDlyZFdKbExXRndhWE5sY25abGNpMXNiMk5oYkdodmMzUXQKYzJsbmJtVnlNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DQVE4QU1JSUJDZ0tDQVFFQXVrQXFycmwrWHROcwpNQm1JMkRnZmlwUmMvNEluLytGZ2txSWZmaENTYzU3eXhGaXZBRXR5VTM3WERlQmNkeHNFMDRLQ1RuSDEram5PCm5VZkxlWFVKMmlHcFF6R1FSZ2FjV3VkeERBdUc1VmZmYkN0RkpxRGQvKzRTT3J6SlRQellvditUTGxPc296QlMKSHc5WWN4K1JmZUw0R3NlaXVhQVdmaFcreHdkQVFHWVg0eFJNcVBkcmlCY1JQUkprd2Q2K21xZ3FuM0t4UjI3VgpWeU85NnNlYWdjME5IR3h0dUlBUTF2eWgzeThvM2E3bURUdWJ6VDNRMXhTeDZTUUljd0I5K0RaUkRjMGwwUlBwClhzYVBuMVhMMzVYcHR0MHkxQTBZKzlKTXM5SWxTNkpCbzVNYzBERnNQWVNFZlNoeXZ5TVBDZFZ5bXdPcVRkbEcKdEpaZUxWazFKd0lEQVFBQm8wSXdRREFPQmdOVkhROEJBZjhFQkFNQ0FxUXdEd1lEVlIwVEFRSC9CQVV3QXdFQgovekFkQmdOVkhRNEVGZ1FVa01iUHN5YU5OaGg0bXlZZ3FOelJ5QmUzc21Rd0RRWUpLb1pJaHZjTkFRRUxCUUFECmdnRUJBR1FEMTZNdTAybEVaY1BodTNxcjFHRnVVQUZFWWh5T0hRSFVFcklUOU9rQ2hvczU4eUZ0WThPRFlwelYKdS83MllMVDBoSkdrY0diREVEN2dNTzNGMXhvWEc2bFh4Y2htb0FhOFZhWlpxTUJBckdVQXE4aXppUUdPUUMzawpaYVh4SjcrMGhhNTA0Q2xnUDJJd3hIMTlBOFhRVi8rS0hPU05YbjFGaDlSMXdNM2tHRG9JSFQ2bFZ4R1RlMTNZCldEMEN2NTRxZCtMWElSOCsrbVFVSXdMd1cwd3NKUEUybG5MYVhvSzQ5MHp6WDJvWWMxUWJ1WGNqeUxWY3pVUG0KVWFxY29IeDVjS3pabytjM2I5QVpvaDZzRjRvMG1LOWdJT2RWZXFzTitkbWlKSFJIeElhT0hYSzg2SFJpczRWWQpPM0VhTTlxWnViOS9vQ3BSRVcrN25CWWVDemM9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0KLS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURURENDQWpTZ0F3SUJBZ0lJUjhMVUtrdnFZdFF3RFFZSktvWklodmNOQVFFTEJRQXdSREVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1TNHdMQVlEVlFRREV5VnJkV0psTFdGd2FYTmxjblpsY2kxelpYSjJhV05sTFc1bApkSGR2Y21zdGMybG5ibVZ5TUI0WERUSXpNRFF4T0RFek1EZ3hNRm9YRFRNek1EUXhOVEV6TURneE1Gb3dSREVTCk1CQUdBMVVFQ3hNSmIzQmxibk5vYVdaME1TNHdMQVlEVlFRREV5VnJkV0psTFdGd2FYTmxjblpsY2kxelpYSjIKYVdObExXNWxkSGR2Y21zdGMybG5ibVZ5TUlJQklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQwpBUUVBNW9wNGpiL25wMW5OZURMSEp5K3EvcVByY1Z5bmNDLzg0ZDFiemp6dDlPTUpicnJ0TkEyTHlvNTBPblZaCmRIMTk5MklIbERTYnJLZFJacE9OR2Q1ZVRNT2hjZUNudVp3MWJ5K0ZBL0FJSHZ6alR4eXV5ZUNqajdQS0xQYm0KSlRsQm5nSjNSVnozV0dRai9MMEdJRWZYV0QwMndkdHJaYmY3dFBtUHEwQWYxYlY5MlM5U21XTWovcWoyTnVYaApLeWZ5aFU0ckI2b0NPQjlDY0M1VENtQW9DdzFJQjBFUEo3UmpxbFFnUVpCTTlwT1BYYTFDWFlleFZ6TFV4ZUZMClFTcHRiUW1UWnp6Yms0cUZrdkVRUlA1VFZEK3VKUXdkNlIvbUhseTZ6ZWRTUEh4SWpzYXVOYzE3bG8xamg5dkgKZkptUUQ5RElpSnU0dW9aaEErejQxQW9sZVFJREFRQUJvMEl3UURBT0JnTlZIUThCQWY4RUJBTUNBcVF3RHdZRApWUjBUQVFIL0JBVXdBd0VCL3pBZEJnTlZIUTRFRmdRVUFpU251cjQ0bVBvT1NsbUlrbE13aWhnMHFnd3dEUVlKCktvWklodmNOQVFFTEJRQURnZ0VCQUxKY2xtaVVKRnhHR0V2TWFwcGNKUXp0UTY0MFhvS0dxeXZVY2xnR0NKK3UKb0MzZmVIdTRKNzJqM1hoZ0VPMEVrbngySWt2ME5JZFplazZyUDk2Rk0ranVHZGZya3RSNmJkbXFpZHJHWXdMWgpLQnVLa0N3b1h0bDVtNWg5eURTRzVuYWRBcWg4VzhEdUhuUFhpZ25HLzk0UmcwRWxVUEw2ZTV4MHNHVUpVVEVXCkYrNzNiajE3RFV0b0RDd0JEY20yK1kxMTVsYzMySEhGTnRYaTFvTUYvRVpaL3F1bGQ3NDJzYUQ4Uk5ta0p5N1EKT3BIK1ZFSnNOUktpZHcyQVdTUW9idEYzbVIvbWFpTktMNExGUldISFNjNTduUkVlOGFUNEQvUFBmcVJKYndxOApLNEZ4TzNmQzRlbFpZaTFHVm5UbnR5RUVLM2JBS2pOblcyOGNBcTNIbkJZPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCi0tLS0tQkVHSU4gQ0VSVElGSUNBVEUtLS0tLQpNSUlETWpDQ0FocWdBd0lCQWdJSVZkUWFwZnowN1dZd0RRWUpLb1pJaHZjTkFRRUxCUUF3TnpFU01CQUdBMVVFCkN4TUpiM0JsYm5Ob2FXWjBNU0V3SHdZRFZRUURFeGhyZFdKbExXRndhWE5sY25abGNpMXNZaTF6YVdkdVpYSXcKSGhjTk1qTXdOREU0TVRNd09ERXdXaGNOTXpNd05ERTFNVE13T0RFd1dqQTNNUkl3RUFZRFZRUUxFd2x2Y0dWdQpjMmhwWm5ReElUQWZCZ05WQkFNVEdHdDFZbVV0WVhCcGMyVnlkbVZ5TFd4aUxYTnBaMjVsY2pDQ0FTSXdEUVlKCktvWklodmNOQVFFQkJRQURnZ0VQQURDQ0FRb0NnZ0VCQU9qZTNnc2U4M2MwMndvVVZPYVFxcDRWVVMyMHBPMXgKSWxISmRydGJNTmx2Q1o1a2ZCM1pxVlJMRUpDUjN2L2dCQzcyUnYxMEJVUUxPRjdwNGU2TExDSTNteE9nUllNbApFc20vbXJxbHlwYi9XNjl3NzV1YVhXRFZNNGNnSTdxLzhrS3ppT3RrTGJHWm12WVNFR1hQK29uelU5UFBIUFpBCkVnUVZWRUREdFFNaWt4eWlxZGdCN3BNbFV2alhmZ1o0dkI3NGZzeVd1RFZpQy9GYnVFSmxQRk0vdDFHenhKQm0KRDh5NTl1MXRobW8xY1ZOajRBcWRaWVlLaEhxdkZQNUhQYisvdEFvU0dNTTJzeXcwc3VrczAvRWpVSmx5M3ovdgpEcElCemxhRjFuNnVVS3BCQ3lyeittbnArSWxvWjFMd25hdzkvTlhwMW5kdlZIVy9Objd4SDNrQ0F3RUFBYU5DCk1FQXdEZ1lEVlIwUEFRSC9CQVFEQWdLa01BOEdBMVVkRXdFQi93UUZNQU1CQWY4d0hRWURWUjBPQkJZRUZPYm4KR09xRnRQM3RyUG1QakFtT0EyN1k1dTAzTUEwR0NTcUdTSWIzRFFFQkN3VUFBNElCQVFDTFJtbmZKd21LMituLwp2UUpyVUtIVk01SW1YOFJUWk5PbllsNUVYWFV4RXJJcnJCSEZJcnpVTTA4U2VLV3BCaHREalgzZzJaVVhnUjRCCkQzWXdKOXhkS1hHeDhBWmtUQXE4U3gyR09pb0Q3amhIU3NUV1pRODZFVVhhSUprbW9najFRcXh5RVFJRmdCZFUKbnpKekRWb1RwNzgzYVNCUC9FL3JpWndLTHVISCswUjhwOUNmM1k2dlE1aE94RDNOcjk4VmZvaVJXWEFVd2hlSAplTVMwTklUdDhNakhwVjdCRDgwamJNYXFtd3JoU2VQZ2FqaXBDdFl1d0lCQk94cHdmNlQ1WGZYZDh2RTZrNUhGCm1sZENyOTdJYTF2VEZpb2htSGhvcjI5cXhWb2Yxbno3VlMwLyt4cERPN0ZXcVhKWTNBa3VFZm1rcVcySE1QUnAKR2ZCSVRSOE8KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo="
                    }
                }
            ],
            "users": [
                {
                    "name": "admin",
                    "user": {
                        "client-certificate-data": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURaekNDQWsrZ0F3SUJBZ0lJVEhSYmJxSFVJVzh3RFFZSktvWklodmNOQVFFTEJRQXdOakVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1TQXdIZ1lEVlFRREV4ZGhaRzFwYmkxcmRXSmxZMjl1Wm1sbkxYTnBaMjVsY2pBZQpGdzB5TXpBME1UZ3hNekE0TURsYUZ3MHpNekEwTVRVeE16QTRNVEJhTURBeEZ6QVZCZ05WQkFvVERuTjVjM1JsCmJUcHRZWE4wWlhKek1SVXdFd1lEVlFRREV3eHplWE4wWlcwNllXUnRhVzR3Z2dFaU1BMEdDU3FHU0liM0RRRUIKQVFVQUE0SUJEd0F3Z2dFS0FvSUJBUUMvejU4dWZkTnd5R2xCNjN2VUN2Z1dBRm05Q0hNVlJMUGYyaVhMWnRsVwpubWVydGUvUFAxOGJNTG9iMzNwdC82M0prVDNLVGgrMGtKR2R4dWpXV2lQUHZ2Z0FremFoQVRvZ2p5cFNDWCtkCkpVVS9qSnA2bFo2U2Q5cVNjU2gxZi9lUHNrVTgwbnhMTkR2QitVK2Z0cEdCUFNQdEcyLzdBRDNTc0k0NGpheHAKWDFwSGVqY0QyLzNwRitidUZaY2tKaUFvQ3FubDhUeURYZGJZencvZURvcUo1RkxETk9zT0V5Y2E3WGlBM3VIOQp5akV2T0QvTE4rYlpjdDhNa044eXEvMWpnNlJ5czFtaFZtNUJ2RCthOGpzcFJPd3Y5T01MdFd3NGNWQW1HNmtICnFPUiszWXQzUlNkakFUVzZCc0RYZXRDQy9zUjFWaW1LOUFVVWJsVS90d3NuQWdNQkFBR2pmekI5TUE0R0ExVWQKRHdFQi93UUVBd0lGb0RBZEJnTlZIU1VFRmpBVUJnZ3JCZ0VGQlFjREFRWUlLd1lCQlFVSEF3SXdEQVlEVlIwVApBUUgvQkFJd0FEQWRCZ05WSFE0RUZnUVVPa3NHdGlGOENEM3gzSXRiLzh6anZXUUg5WHN3SHdZRFZSMGpCQmd3CkZvQVVmajZhYmRqUHl1UW1PdnA2Vlg0MGlheGR0U0V3RFFZSktvWklodmNOQVFFTEJRQURnZ0VCQUJ2MXp3di8KRlZpZWVuYk1rTVprWDFKcGlXWnp0S2pvUkNUYllLNWhTVThrMnZ0RWNVVDFKOVN6U1JTMi9KM0tlM0prL01USQo2YVFYNUsyajhEczBRRkxHU0l2THFub28yMS9DOVhuSG1mRnhsMmR0UTNIWkRYOHBUTlc5ZFlIOEQ2N0poWW0xCklGTFl5RXpSQzFMN1VVYkIzZFNMcTBGZ0p2RjVrSkFKeUNxRndlYTRMdVlBeGFmNGxTeVp5MVZtOXBzWXcwa1AKQ01rdENXc2pvU0Z0V3RhaVBqSy90T2ZUeEdqRDlSRlBMc1FaOUlVcks3eS9pUTBpVnU0cjgwa0VLVTNJbFIxMwpWdkNIeXp5cUZSaHZmWW9zR3Q2N2NNNUFQRllzdC83WXJEdWdZZTRiR2tleUwyT0xYc0VVZERTd1hTcys0eG1DClBPKy9mTlgrMm45OUs3cz0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=",
                        "client-key-data": "LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBdjgrZkxuM1RjTWhwUWV0NzFBcjRGZ0JadlFoekZVU3ozOW9seTJiWlZwNW5xN1h2Cnp6OWZHekM2Rzk5NmJmK3R5WkU5eWs0ZnRKQ1JuY2JvMWxvano3NzRBSk0yb1FFNklJOHFVZ2wvblNWRlA0eWEKZXBXZWtuZmFrbkVvZFgvM2o3SkZQTko4U3pRN3dmbFBuN2FSZ1QwajdSdHYrd0E5MHJDT09JMnNhVjlhUjNvMwpBOXY5NlJmbTdoV1hKQ1lnS0FxcDVmRThnMTNXMk04UDNnNktpZVJTd3pUckRoTW5HdTE0Z043aC9jb3hMemcvCnl6Zm0yWExmREpEZk1xdjlZNE9rY3JOWm9WWnVRYncvbXZJN0tVVHNML1RqQzdWc09IRlFKaHVwQjZqa2Z0MkwKZDBVbll3RTF1Z2JBMTNyUWd2N0VkVllwaXZRRkZHNVZQN2NMSndJREFRQUJBb0lCQUhya1JpT2VZRXNCVEZiOAp6ZkIwT3JDMTlzampVZ0NOYlFWK0dmcnc0VXphM3Fjb1FRWXludmVueDRXMk1CV3IyNmVxVThGN1Bsc015UThpCmN1bHJCVWpFSE5jWmVzVzdLSWZWMGhLUG5XQ01rWXAreGpiR0I3dmw2SGNzNHZRdFVlcVNHRVE0dzRQWGFuWUUKQ3R6VU52TnJ2Y25iYTJxUXBBdUtMUVRVMkdNRnBhSmRTSS9UY1d6cHZta3RxVXZXamQwS0ZCMFptcEpEWDJCbgpZY0FSWW9xTjd5WUduVTVZQ2VhMmJVT29EVjZsM1pIVkFvc1pBWnVKS2dwL21ncU5sN2hDUnNPQkU1SDV3NHN0CkNMMHRCNGpwazhtSHJuTHBSVmowRU9Ta3Q3bHgwSHZJQnhITFh2K0s1N2Y1UlNjd044NVB4SkxQbjJmZ2laT3kKTXdIb3MyRUNnWUVBMkE3WUkva1kyeGhJdEpEcWxxSmNoVHVqNUN2VVc4R2s5RnBnc3lFMWZQLzg1V01GWXJldwpOK2dQZlRPNmVQK3BuY1MvNEJ5NzhhWG1PaUN2U1lHYndPUjRYaUtVQVVTdkpLN2JXYUhsdkFRQlhQVVZMclNKCk1LMmxGUHdrV28zVi9xT2U1SXp3NXZsaDJVR3o5eXFLcWhKTzRyZy9FcituTG5HNjk2NnpvSGNDZ1lFQTQwVkUKS01DUVVUMnExVTcwc0VCVk16c2Z4NmNMS3l6dDVoOXpNalFUcFZhS2w3R3dpaUZTMStSYkxpZVBOVTQ0VGF1QgorVmJtV3dERkxzajhMcE12WUpXWEZMOCtqRjRieTNSNTVoKzlvVGlieFRSZ3UxM1duUGZlSFRNalYzeHE5QkNFCkNPOXNZbGVOVk02WmluRkZyc1N0L0lNczExcUF3Wnk3czZEenh0RUNnWUJtSXRaUVl5QTU2b2ZzUEJsNXJqVTQKa3BJT2VoM0FacEZaSmlSU2FkK0VRT3RIY1FFSndyWWVKNml5MGpKVG91Q0hBWXlISUc1RWROMmFHdnRpTDAvMgo1c3AwRGJxVHd1bGMyUUErcGdjWlUzZGxmMEpOT3ZFanZ1S3NRZW5abVBWUmsvMjRJMXg2ZytlYXNiR21wVWk1Cnp6L1ZjNjMxYWY1Wk9WQmVhQXJvVHdLQmdDZ3lEUDhFSjhJbW5QdEREcVhKaXdnWGtlUlcxL1BYNjIrQzZuWGIKbmdubEIzZ1MxajFuN1dYL25seklaRnl5SytVWXkxRVZISUxGM1JvTU5BWHN4RGxaMjdHd3JWaFlJS1JZUW1NQQpCQ0xxaHlwV3ZERUhSTGpZWWZGYUpRc0pGMFY1VWxEZVA1WVpGQWNHejBNY0M0NEFmU0VtOWh4VWhtYzMyRDdKCjNiT3hBb0dCQU5IdFkzdGRyUERjSS90bUd5TjJoUEVpaGVxWGVUaWNGSE85Wlk1bmJWOVdmazQ2UGpnTU1GS2YKSHVJNDl6S1FGSjV3Uko1TUw0dXE5TkVpT2xjTUhaY1FqcFdVbnlCTi94enlVd0hlcmJBUkNSWVpFdWNpTXJXSgpPSXBLOFl5QkRWV2t0Y05MT0RTL1YwTlBwR0plMmhxMUdvSzlkZGxjMnprNmxrMUNzc1BLCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg=="
                    }
                }
            ],
            "contexts": [
                {
                    "name": "admin",
                    "context": {
                        "cluster": "redpod-aws-sno",
                        "user": "admin"
                    }
                }
            ],
            "current-context": "admin"
        },
        "File": {
            "Filename": "auth/kubeconfig",
            "Data": ""
        }
    },
    "*kubeconfig.AdminInternalClient": {
        "Config": {
            "preferences": {},
            "clusters": [
                {
                    "name": "redpod-aws-sno",
                    "cluster": {
                        "server": "https://api-int.redpod-aws-sno.devcluster.openshift.com:6443",
                        "certificate-authority-data": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURRRENDQWlpZ0F3SUJBZ0lJVXdMTkJjaHNZT1l3RFFZSktvWklodmNOQVFFTEJRQXdQakVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1TZ3dKZ1lEVlFRREV4OXJkV0psTFdGd2FYTmxjblpsY2kxc2IyTmhiR2h2YzNRdApjMmxuYm1WeU1CNFhEVEl6TURReE9ERXpNRGd4TUZvWERUTXpNRFF4TlRFek1EZ3hNRm93UGpFU01CQUdBMVVFCkN4TUpiM0JsYm5Ob2FXWjBNU2d3SmdZRFZRUURFeDlyZFdKbExXRndhWE5sY25abGNpMXNiMk5oYkdodmMzUXQKYzJsbmJtVnlNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DQVE4QU1JSUJDZ0tDQVFFQXVrQXFycmwrWHROcwpNQm1JMkRnZmlwUmMvNEluLytGZ2txSWZmaENTYzU3eXhGaXZBRXR5VTM3WERlQmNkeHNFMDRLQ1RuSDEram5PCm5VZkxlWFVKMmlHcFF6R1FSZ2FjV3VkeERBdUc1VmZmYkN0RkpxRGQvKzRTT3J6SlRQellvditUTGxPc296QlMKSHc5WWN4K1JmZUw0R3NlaXVhQVdmaFcreHdkQVFHWVg0eFJNcVBkcmlCY1JQUkprd2Q2K21xZ3FuM0t4UjI3VgpWeU85NnNlYWdjME5IR3h0dUlBUTF2eWgzeThvM2E3bURUdWJ6VDNRMXhTeDZTUUljd0I5K0RaUkRjMGwwUlBwClhzYVBuMVhMMzVYcHR0MHkxQTBZKzlKTXM5SWxTNkpCbzVNYzBERnNQWVNFZlNoeXZ5TVBDZFZ5bXdPcVRkbEcKdEpaZUxWazFKd0lEQVFBQm8wSXdRREFPQmdOVkhROEJBZjhFQkFNQ0FxUXdEd1lEVlIwVEFRSC9CQVV3QXdFQgovekFkQmdOVkhRNEVGZ1FVa01iUHN5YU5OaGg0bXlZZ3FOelJ5QmUzc21Rd0RRWUpLb1pJaHZjTkFRRUxCUUFECmdnRUJBR1FEMTZNdTAybEVaY1BodTNxcjFHRnVVQUZFWWh5T0hRSFVFcklUOU9rQ2hvczU4eUZ0WThPRFlwelYKdS83MllMVDBoSkdrY0diREVEN2dNTzNGMXhvWEc2bFh4Y2htb0FhOFZhWlpxTUJBckdVQXE4aXppUUdPUUMzawpaYVh4SjcrMGhhNTA0Q2xnUDJJd3hIMTlBOFhRVi8rS0hPU05YbjFGaDlSMXdNM2tHRG9JSFQ2bFZ4R1RlMTNZCldEMEN2NTRxZCtMWElSOCsrbVFVSXdMd1cwd3NKUEUybG5MYVhvSzQ5MHp6WDJvWWMxUWJ1WGNqeUxWY3pVUG0KVWFxY29IeDVjS3pabytjM2I5QVpvaDZzRjRvMG1LOWdJT2RWZXFzTitkbWlKSFJIeElhT0hYSzg2SFJpczRWWQpPM0VhTTlxWnViOS9vQ3BSRVcrN25CWWVDemM9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0KLS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURURENDQWpTZ0F3SUJBZ0lJUjhMVUtrdnFZdFF3RFFZSktvWklodmNOQVFFTEJRQXdSREVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1TNHdMQVlEVlFRREV5VnJkV0psTFdGd2FYTmxjblpsY2kxelpYSjJhV05sTFc1bApkSGR2Y21zdGMybG5ibVZ5TUI0WERUSXpNRFF4T0RFek1EZ3hNRm9YRFRNek1EUXhOVEV6TURneE1Gb3dSREVTCk1CQUdBMVVFQ3hNSmIzQmxibk5vYVdaME1TNHdMQVlEVlFRREV5VnJkV0psTFdGd2FYTmxjblpsY2kxelpYSjIKYVdObExXNWxkSGR2Y21zdGMybG5ibVZ5TUlJQklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQwpBUUVBNW9wNGpiL25wMW5OZURMSEp5K3EvcVByY1Z5bmNDLzg0ZDFiemp6dDlPTUpicnJ0TkEyTHlvNTBPblZaCmRIMTk5MklIbERTYnJLZFJacE9OR2Q1ZVRNT2hjZUNudVp3MWJ5K0ZBL0FJSHZ6alR4eXV5ZUNqajdQS0xQYm0KSlRsQm5nSjNSVnozV0dRai9MMEdJRWZYV0QwMndkdHJaYmY3dFBtUHEwQWYxYlY5MlM5U21XTWovcWoyTnVYaApLeWZ5aFU0ckI2b0NPQjlDY0M1VENtQW9DdzFJQjBFUEo3UmpxbFFnUVpCTTlwT1BYYTFDWFlleFZ6TFV4ZUZMClFTcHRiUW1UWnp6Yms0cUZrdkVRUlA1VFZEK3VKUXdkNlIvbUhseTZ6ZWRTUEh4SWpzYXVOYzE3bG8xamg5dkgKZkptUUQ5RElpSnU0dW9aaEErejQxQW9sZVFJREFRQUJvMEl3UURBT0JnTlZIUThCQWY4RUJBTUNBcVF3RHdZRApWUjBUQVFIL0JBVXdBd0VCL3pBZEJnTlZIUTRFRmdRVUFpU251cjQ0bVBvT1NsbUlrbE13aWhnMHFnd3dEUVlKCktvWklodmNOQVFFTEJRQURnZ0VCQUxKY2xtaVVKRnhHR0V2TWFwcGNKUXp0UTY0MFhvS0dxeXZVY2xnR0NKK3UKb0MzZmVIdTRKNzJqM1hoZ0VPMEVrbngySWt2ME5JZFplazZyUDk2Rk0ranVHZGZya3RSNmJkbXFpZHJHWXdMWgpLQnVLa0N3b1h0bDVtNWg5eURTRzVuYWRBcWg4VzhEdUhuUFhpZ25HLzk0UmcwRWxVUEw2ZTV4MHNHVUpVVEVXCkYrNzNiajE3RFV0b0RDd0JEY20yK1kxMTVsYzMySEhGTnRYaTFvTUYvRVpaL3F1bGQ3NDJzYUQ4Uk5ta0p5N1EKT3BIK1ZFSnNOUktpZHcyQVdTUW9idEYzbVIvbWFpTktMNExGUldISFNjNTduUkVlOGFUNEQvUFBmcVJKYndxOApLNEZ4TzNmQzRlbFpZaTFHVm5UbnR5RUVLM2JBS2pOblcyOGNBcTNIbkJZPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCi0tLS0tQkVHSU4gQ0VSVElGSUNBVEUtLS0tLQpNSUlETWpDQ0FocWdBd0lCQWdJSVZkUWFwZnowN1dZd0RRWUpLb1pJaHZjTkFRRUxCUUF3TnpFU01CQUdBMVVFCkN4TUpiM0JsYm5Ob2FXWjBNU0V3SHdZRFZRUURFeGhyZFdKbExXRndhWE5sY25abGNpMXNZaTF6YVdkdVpYSXcKSGhjTk1qTXdOREU0TVRNd09ERXdXaGNOTXpNd05ERTFNVE13T0RFd1dqQTNNUkl3RUFZRFZRUUxFd2x2Y0dWdQpjMmhwWm5ReElUQWZCZ05WQkFNVEdHdDFZbVV0WVhCcGMyVnlkbVZ5TFd4aUxYTnBaMjVsY2pDQ0FTSXdEUVlKCktvWklodmNOQVFFQkJRQURnZ0VQQURDQ0FRb0NnZ0VCQU9qZTNnc2U4M2MwMndvVVZPYVFxcDRWVVMyMHBPMXgKSWxISmRydGJNTmx2Q1o1a2ZCM1pxVlJMRUpDUjN2L2dCQzcyUnYxMEJVUUxPRjdwNGU2TExDSTNteE9nUllNbApFc20vbXJxbHlwYi9XNjl3NzV1YVhXRFZNNGNnSTdxLzhrS3ppT3RrTGJHWm12WVNFR1hQK29uelU5UFBIUFpBCkVnUVZWRUREdFFNaWt4eWlxZGdCN3BNbFV2alhmZ1o0dkI3NGZzeVd1RFZpQy9GYnVFSmxQRk0vdDFHenhKQm0KRDh5NTl1MXRobW8xY1ZOajRBcWRaWVlLaEhxdkZQNUhQYisvdEFvU0dNTTJzeXcwc3VrczAvRWpVSmx5M3ovdgpEcElCemxhRjFuNnVVS3BCQ3lyeittbnArSWxvWjFMd25hdzkvTlhwMW5kdlZIVy9Objd4SDNrQ0F3RUFBYU5DCk1FQXdEZ1lEVlIwUEFRSC9CQVFEQWdLa01BOEdBMVVkRXdFQi93UUZNQU1CQWY4d0hRWURWUjBPQkJZRUZPYm4KR09xRnRQM3RyUG1QakFtT0EyN1k1dTAzTUEwR0NTcUdTSWIzRFFFQkN3VUFBNElCQVFDTFJtbmZKd21LMituLwp2UUpyVUtIVk01SW1YOFJUWk5PbllsNUVYWFV4RXJJcnJCSEZJcnpVTTA4U2VLV3BCaHREalgzZzJaVVhnUjRCCkQzWXdKOXhkS1hHeDhBWmtUQXE4U3gyR09pb0Q3amhIU3NUV1pRODZFVVhhSUprbW9najFRcXh5RVFJRmdCZFUKbnpKekRWb1RwNzgzYVNCUC9FL3JpWndLTHVISCswUjhwOUNmM1k2dlE1aE94RDNOcjk4VmZvaVJXWEFVd2hlSAplTVMwTklUdDhNakhwVjdCRDgwamJNYXFtd3JoU2VQZ2FqaXBDdFl1d0lCQk94cHdmNlQ1WGZYZDh2RTZrNUhGCm1sZENyOTdJYTF2VEZpb2htSGhvcjI5cXhWb2Yxbno3VlMwLyt4cERPN0ZXcVhKWTNBa3VFZm1rcVcySE1QUnAKR2ZCSVRSOE8KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo="
                    }
                }
            ],
            "users": [
                {
                    "name": "admin",
                    "user": {
                        "client-certificate-data": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURaekNDQWsrZ0F3SUJBZ0lJVEhSYmJxSFVJVzh3RFFZSktvWklodmNOQVFFTEJRQXdOakVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1TQXdIZ1lEVlFRREV4ZGhaRzFwYmkxcmRXSmxZMjl1Wm1sbkxYTnBaMjVsY2pBZQpGdzB5TXpBME1UZ3hNekE0TURsYUZ3MHpNekEwTVRVeE16QTRNVEJhTURBeEZ6QVZCZ05WQkFvVERuTjVjM1JsCmJUcHRZWE4wWlhKek1SVXdFd1lEVlFRREV3eHplWE4wWlcwNllXUnRhVzR3Z2dFaU1BMEdDU3FHU0liM0RRRUIKQVFVQUE0SUJEd0F3Z2dFS0FvSUJBUUMvejU4dWZkTnd5R2xCNjN2VUN2Z1dBRm05Q0hNVlJMUGYyaVhMWnRsVwpubWVydGUvUFAxOGJNTG9iMzNwdC82M0prVDNLVGgrMGtKR2R4dWpXV2lQUHZ2Z0FremFoQVRvZ2p5cFNDWCtkCkpVVS9qSnA2bFo2U2Q5cVNjU2gxZi9lUHNrVTgwbnhMTkR2QitVK2Z0cEdCUFNQdEcyLzdBRDNTc0k0NGpheHAKWDFwSGVqY0QyLzNwRitidUZaY2tKaUFvQ3FubDhUeURYZGJZencvZURvcUo1RkxETk9zT0V5Y2E3WGlBM3VIOQp5akV2T0QvTE4rYlpjdDhNa044eXEvMWpnNlJ5czFtaFZtNUJ2RCthOGpzcFJPd3Y5T01MdFd3NGNWQW1HNmtICnFPUiszWXQzUlNkakFUVzZCc0RYZXRDQy9zUjFWaW1LOUFVVWJsVS90d3NuQWdNQkFBR2pmekI5TUE0R0ExVWQKRHdFQi93UUVBd0lGb0RBZEJnTlZIU1VFRmpBVUJnZ3JCZ0VGQlFjREFRWUlLd1lCQlFVSEF3SXdEQVlEVlIwVApBUUgvQkFJd0FEQWRCZ05WSFE0RUZnUVVPa3NHdGlGOENEM3gzSXRiLzh6anZXUUg5WHN3SHdZRFZSMGpCQmd3CkZvQVVmajZhYmRqUHl1UW1PdnA2Vlg0MGlheGR0U0V3RFFZSktvWklodmNOQVFFTEJRQURnZ0VCQUJ2MXp3di8KRlZpZWVuYk1rTVprWDFKcGlXWnp0S2pvUkNUYllLNWhTVThrMnZ0RWNVVDFKOVN6U1JTMi9KM0tlM0prL01USQo2YVFYNUsyajhEczBRRkxHU0l2THFub28yMS9DOVhuSG1mRnhsMmR0UTNIWkRYOHBUTlc5ZFlIOEQ2N0poWW0xCklGTFl5RXpSQzFMN1VVYkIzZFNMcTBGZ0p2RjVrSkFKeUNxRndlYTRMdVlBeGFmNGxTeVp5MVZtOXBzWXcwa1AKQ01rdENXc2pvU0Z0V3RhaVBqSy90T2ZUeEdqRDlSRlBMc1FaOUlVcks3eS9pUTBpVnU0cjgwa0VLVTNJbFIxMwpWdkNIeXp5cUZSaHZmWW9zR3Q2N2NNNUFQRllzdC83WXJEdWdZZTRiR2tleUwyT0xYc0VVZERTd1hTcys0eG1DClBPKy9mTlgrMm45OUs3cz0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=",
                        "client-key-data": "LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBdjgrZkxuM1RjTWhwUWV0NzFBcjRGZ0JadlFoekZVU3ozOW9seTJiWlZwNW5xN1h2Cnp6OWZHekM2Rzk5NmJmK3R5WkU5eWs0ZnRKQ1JuY2JvMWxvano3NzRBSk0yb1FFNklJOHFVZ2wvblNWRlA0eWEKZXBXZWtuZmFrbkVvZFgvM2o3SkZQTko4U3pRN3dmbFBuN2FSZ1QwajdSdHYrd0E5MHJDT09JMnNhVjlhUjNvMwpBOXY5NlJmbTdoV1hKQ1lnS0FxcDVmRThnMTNXMk04UDNnNktpZVJTd3pUckRoTW5HdTE0Z043aC9jb3hMemcvCnl6Zm0yWExmREpEZk1xdjlZNE9rY3JOWm9WWnVRYncvbXZJN0tVVHNML1RqQzdWc09IRlFKaHVwQjZqa2Z0MkwKZDBVbll3RTF1Z2JBMTNyUWd2N0VkVllwaXZRRkZHNVZQN2NMSndJREFRQUJBb0lCQUhya1JpT2VZRXNCVEZiOAp6ZkIwT3JDMTlzampVZ0NOYlFWK0dmcnc0VXphM3Fjb1FRWXludmVueDRXMk1CV3IyNmVxVThGN1Bsc015UThpCmN1bHJCVWpFSE5jWmVzVzdLSWZWMGhLUG5XQ01rWXAreGpiR0I3dmw2SGNzNHZRdFVlcVNHRVE0dzRQWGFuWUUKQ3R6VU52TnJ2Y25iYTJxUXBBdUtMUVRVMkdNRnBhSmRTSS9UY1d6cHZta3RxVXZXamQwS0ZCMFptcEpEWDJCbgpZY0FSWW9xTjd5WUduVTVZQ2VhMmJVT29EVjZsM1pIVkFvc1pBWnVKS2dwL21ncU5sN2hDUnNPQkU1SDV3NHN0CkNMMHRCNGpwazhtSHJuTHBSVmowRU9Ta3Q3bHgwSHZJQnhITFh2K0s1N2Y1UlNjd044NVB4SkxQbjJmZ2laT3kKTXdIb3MyRUNnWUVBMkE3WUkva1kyeGhJdEpEcWxxSmNoVHVqNUN2VVc4R2s5RnBnc3lFMWZQLzg1V01GWXJldwpOK2dQZlRPNmVQK3BuY1MvNEJ5NzhhWG1PaUN2U1lHYndPUjRYaUtVQVVTdkpLN2JXYUhsdkFRQlhQVVZMclNKCk1LMmxGUHdrV28zVi9xT2U1SXp3NXZsaDJVR3o5eXFLcWhKTzRyZy9FcituTG5HNjk2NnpvSGNDZ1lFQTQwVkUKS01DUVVUMnExVTcwc0VCVk16c2Z4NmNMS3l6dDVoOXpNalFUcFZhS2w3R3dpaUZTMStSYkxpZVBOVTQ0VGF1QgorVmJtV3dERkxzajhMcE12WUpXWEZMOCtqRjRieTNSNTVoKzlvVGlieFRSZ3UxM1duUGZlSFRNalYzeHE5QkNFCkNPOXNZbGVOVk02WmluRkZyc1N0L0lNczExcUF3Wnk3czZEenh0RUNnWUJtSXRaUVl5QTU2b2ZzUEJsNXJqVTQKa3BJT2VoM0FacEZaSmlSU2FkK0VRT3RIY1FFSndyWWVKNml5MGpKVG91Q0hBWXlISUc1RWROMmFHdnRpTDAvMgo1c3AwRGJxVHd1bGMyUUErcGdjWlUzZGxmMEpOT3ZFanZ1S3NRZW5abVBWUmsvMjRJMXg2ZytlYXNiR21wVWk1Cnp6L1ZjNjMxYWY1Wk9WQmVhQXJvVHdLQmdDZ3lEUDhFSjhJbW5QdEREcVhKaXdnWGtlUlcxL1BYNjIrQzZuWGIKbmdubEIzZ1MxajFuN1dYL25seklaRnl5SytVWXkxRVZISUxGM1JvTU5BWHN4RGxaMjdHd3JWaFlJS1JZUW1NQQpCQ0xxaHlwV3ZERUhSTGpZWWZGYUpRc0pGMFY1VWxEZVA1WVpGQWNHejBNY0M0NEFmU0VtOWh4VWhtYzMyRDdKCjNiT3hBb0dCQU5IdFkzdGRyUERjSS90bUd5TjJoUEVpaGVxWGVUaWNGSE85Wlk1bmJWOVdmazQ2UGpnTU1GS2YKSHVJNDl6S1FGSjV3Uko1TUw0dXE5TkVpT2xjTUhaY1FqcFdVbnlCTi94enlVd0hlcmJBUkNSWVpFdWNpTXJXSgpPSXBLOFl5QkRWV2t0Y05MT0RTL1YwTlBwR0plMmhxMUdvSzlkZGxjMnprNmxrMUNzc1BLCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg=="
                    }
                }
            ],
            "contexts": [
                {
                    "name": "admin",
                    "context": {
                        "cluster": "redpod-aws-sno",
                        "user": "admin"
                    }
                }
            ],
            "current-context": "admin"
        },
        "File": {
            "Filename": "auth/kubeconfig",
            "Data": ""
        }
    },
    "*kubeconfig.Kubelet": {
        "Config": {
            "preferences": {},
            "clusters": [
                {
                    "name": "redpod-aws-sno",
                    "cluster": {
                        "server": "https://api-int.redpod-aws-sno.devcluster.openshift.com:6443",
                        "certificate-authority-data": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURRRENDQWlpZ0F3SUJBZ0lJVXdMTkJjaHNZT1l3RFFZSktvWklodmNOQVFFTEJRQXdQakVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1TZ3dKZ1lEVlFRREV4OXJkV0psTFdGd2FYTmxjblpsY2kxc2IyTmhiR2h2YzNRdApjMmxuYm1WeU1CNFhEVEl6TURReE9ERXpNRGd4TUZvWERUTXpNRFF4TlRFek1EZ3hNRm93UGpFU01CQUdBMVVFCkN4TUpiM0JsYm5Ob2FXWjBNU2d3SmdZRFZRUURFeDlyZFdKbExXRndhWE5sY25abGNpMXNiMk5oYkdodmMzUXQKYzJsbmJtVnlNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DQVE4QU1JSUJDZ0tDQVFFQXVrQXFycmwrWHROcwpNQm1JMkRnZmlwUmMvNEluLytGZ2txSWZmaENTYzU3eXhGaXZBRXR5VTM3WERlQmNkeHNFMDRLQ1RuSDEram5PCm5VZkxlWFVKMmlHcFF6R1FSZ2FjV3VkeERBdUc1VmZmYkN0RkpxRGQvKzRTT3J6SlRQellvditUTGxPc296QlMKSHc5WWN4K1JmZUw0R3NlaXVhQVdmaFcreHdkQVFHWVg0eFJNcVBkcmlCY1JQUkprd2Q2K21xZ3FuM0t4UjI3VgpWeU85NnNlYWdjME5IR3h0dUlBUTF2eWgzeThvM2E3bURUdWJ6VDNRMXhTeDZTUUljd0I5K0RaUkRjMGwwUlBwClhzYVBuMVhMMzVYcHR0MHkxQTBZKzlKTXM5SWxTNkpCbzVNYzBERnNQWVNFZlNoeXZ5TVBDZFZ5bXdPcVRkbEcKdEpaZUxWazFKd0lEQVFBQm8wSXdRREFPQmdOVkhROEJBZjhFQkFNQ0FxUXdEd1lEVlIwVEFRSC9CQVV3QXdFQgovekFkQmdOVkhRNEVGZ1FVa01iUHN5YU5OaGg0bXlZZ3FOelJ5QmUzc21Rd0RRWUpLb1pJaHZjTkFRRUxCUUFECmdnRUJBR1FEMTZNdTAybEVaY1BodTNxcjFHRnVVQUZFWWh5T0hRSFVFcklUOU9rQ2hvczU4eUZ0WThPRFlwelYKdS83MllMVDBoSkdrY0diREVEN2dNTzNGMXhvWEc2bFh4Y2htb0FhOFZhWlpxTUJBckdVQXE4aXppUUdPUUMzawpaYVh4SjcrMGhhNTA0Q2xnUDJJd3hIMTlBOFhRVi8rS0hPU05YbjFGaDlSMXdNM2tHRG9JSFQ2bFZ4R1RlMTNZCldEMEN2NTRxZCtMWElSOCsrbVFVSXdMd1cwd3NKUEUybG5MYVhvSzQ5MHp6WDJvWWMxUWJ1WGNqeUxWY3pVUG0KVWFxY29IeDVjS3pabytjM2I5QVpvaDZzRjRvMG1LOWdJT2RWZXFzTitkbWlKSFJIeElhT0hYSzg2SFJpczRWWQpPM0VhTTlxWnViOS9vQ3BSRVcrN25CWWVDemM9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0KLS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURURENDQWpTZ0F3SUJBZ0lJUjhMVUtrdnFZdFF3RFFZSktvWklodmNOQVFFTEJRQXdSREVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1TNHdMQVlEVlFRREV5VnJkV0psTFdGd2FYTmxjblpsY2kxelpYSjJhV05sTFc1bApkSGR2Y21zdGMybG5ibVZ5TUI0WERUSXpNRFF4T0RFek1EZ3hNRm9YRFRNek1EUXhOVEV6TURneE1Gb3dSREVTCk1CQUdBMVVFQ3hNSmIzQmxibk5vYVdaME1TNHdMQVlEVlFRREV5VnJkV0psTFdGd2FYTmxjblpsY2kxelpYSjIKYVdObExXNWxkSGR2Y21zdGMybG5ibVZ5TUlJQklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQwpBUUVBNW9wNGpiL25wMW5OZURMSEp5K3EvcVByY1Z5bmNDLzg0ZDFiemp6dDlPTUpicnJ0TkEyTHlvNTBPblZaCmRIMTk5MklIbERTYnJLZFJacE9OR2Q1ZVRNT2hjZUNudVp3MWJ5K0ZBL0FJSHZ6alR4eXV5ZUNqajdQS0xQYm0KSlRsQm5nSjNSVnozV0dRai9MMEdJRWZYV0QwMndkdHJaYmY3dFBtUHEwQWYxYlY5MlM5U21XTWovcWoyTnVYaApLeWZ5aFU0ckI2b0NPQjlDY0M1VENtQW9DdzFJQjBFUEo3UmpxbFFnUVpCTTlwT1BYYTFDWFlleFZ6TFV4ZUZMClFTcHRiUW1UWnp6Yms0cUZrdkVRUlA1VFZEK3VKUXdkNlIvbUhseTZ6ZWRTUEh4SWpzYXVOYzE3bG8xamg5dkgKZkptUUQ5RElpSnU0dW9aaEErejQxQW9sZVFJREFRQUJvMEl3UURBT0JnTlZIUThCQWY4RUJBTUNBcVF3RHdZRApWUjBUQVFIL0JBVXdBd0VCL3pBZEJnTlZIUTRFRmdRVUFpU251cjQ0bVBvT1NsbUlrbE13aWhnMHFnd3dEUVlKCktvWklodmNOQVFFTEJRQURnZ0VCQUxKY2xtaVVKRnhHR0V2TWFwcGNKUXp0UTY0MFhvS0dxeXZVY2xnR0NKK3UKb0MzZmVIdTRKNzJqM1hoZ0VPMEVrbngySWt2ME5JZFplazZyUDk2Rk0ranVHZGZya3RSNmJkbXFpZHJHWXdMWgpLQnVLa0N3b1h0bDVtNWg5eURTRzVuYWRBcWg4VzhEdUhuUFhpZ25HLzk0UmcwRWxVUEw2ZTV4MHNHVUpVVEVXCkYrNzNiajE3RFV0b0RDd0JEY20yK1kxMTVsYzMySEhGTnRYaTFvTUYvRVpaL3F1bGQ3NDJzYUQ4Uk5ta0p5N1EKT3BIK1ZFSnNOUktpZHcyQVdTUW9idEYzbVIvbWFpTktMNExGUldISFNjNTduUkVlOGFUNEQvUFBmcVJKYndxOApLNEZ4TzNmQzRlbFpZaTFHVm5UbnR5RUVLM2JBS2pOblcyOGNBcTNIbkJZPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCi0tLS0tQkVHSU4gQ0VSVElGSUNBVEUtLS0tLQpNSUlETWpDQ0FocWdBd0lCQWdJSVZkUWFwZnowN1dZd0RRWUpLb1pJaHZjTkFRRUxCUUF3TnpFU01CQUdBMVVFCkN4TUpiM0JsYm5Ob2FXWjBNU0V3SHdZRFZRUURFeGhyZFdKbExXRndhWE5sY25abGNpMXNZaTF6YVdkdVpYSXcKSGhjTk1qTXdOREU0TVRNd09ERXdXaGNOTXpNd05ERTFNVE13T0RFd1dqQTNNUkl3RUFZRFZRUUxFd2x2Y0dWdQpjMmhwWm5ReElUQWZCZ05WQkFNVEdHdDFZbVV0WVhCcGMyVnlkbVZ5TFd4aUxYTnBaMjVsY2pDQ0FTSXdEUVlKCktvWklodmNOQVFFQkJRQURnZ0VQQURDQ0FRb0NnZ0VCQU9qZTNnc2U4M2MwMndvVVZPYVFxcDRWVVMyMHBPMXgKSWxISmRydGJNTmx2Q1o1a2ZCM1pxVlJMRUpDUjN2L2dCQzcyUnYxMEJVUUxPRjdwNGU2TExDSTNteE9nUllNbApFc20vbXJxbHlwYi9XNjl3NzV1YVhXRFZNNGNnSTdxLzhrS3ppT3RrTGJHWm12WVNFR1hQK29uelU5UFBIUFpBCkVnUVZWRUREdFFNaWt4eWlxZGdCN3BNbFV2alhmZ1o0dkI3NGZzeVd1RFZpQy9GYnVFSmxQRk0vdDFHenhKQm0KRDh5NTl1MXRobW8xY1ZOajRBcWRaWVlLaEhxdkZQNUhQYisvdEFvU0dNTTJzeXcwc3VrczAvRWpVSmx5M3ovdgpEcElCemxhRjFuNnVVS3BCQ3lyeittbnArSWxvWjFMd25hdzkvTlhwMW5kdlZIVy9Objd4SDNrQ0F3RUFBYU5DCk1FQXdEZ1lEVlIwUEFRSC9CQVFEQWdLa01BOEdBMVVkRXdFQi93UUZNQU1CQWY4d0hRWURWUjBPQkJZRUZPYm4KR09xRnRQM3RyUG1QakFtT0EyN1k1dTAzTUEwR0NTcUdTSWIzRFFFQkN3VUFBNElCQVFDTFJtbmZKd21LMituLwp2UUpyVUtIVk01SW1YOFJUWk5PbllsNUVYWFV4RXJJcnJCSEZJcnpVTTA4U2VLV3BCaHREalgzZzJaVVhnUjRCCkQzWXdKOXhkS1hHeDhBWmtUQXE4U3gyR09pb0Q3amhIU3NUV1pRODZFVVhhSUprbW9najFRcXh5RVFJRmdCZFUKbnpKekRWb1RwNzgzYVNCUC9FL3JpWndLTHVISCswUjhwOUNmM1k2dlE1aE94RDNOcjk4VmZvaVJXWEFVd2hlSAplTVMwTklUdDhNakhwVjdCRDgwamJNYXFtd3JoU2VQZ2FqaXBDdFl1d0lCQk94cHdmNlQ1WGZYZDh2RTZrNUhGCm1sZENyOTdJYTF2VEZpb2htSGhvcjI5cXhWb2Yxbno3VlMwLyt4cERPN0ZXcVhKWTNBa3VFZm1rcVcySE1QUnAKR2ZCSVRSOE8KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo="
                    }
                }
            ],
            "users": [
                {
                    "name": "kubelet",
                    "user": {
                        "client-certificate-data": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUQ4RENDQXRpZ0F3SUJBZ0lJUmtxWC91T1JCOHN3RFFZSktvWklodmNOQVFFTEJRQXdRakVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1Td3dLZ1lEVlFRREV5TnJkV0psYkdWMExXSnZiM1J6ZEhKaGNDMXJkV0psWTI5dQpabWxuTFhOcFoyNWxjakFlRncweU16QTBNVGd4TXpBNE1UQmFGdzB6TXpBME1UVXhNekE0TVRCYU1JRzJNV0F3CkhRWURWUVFLRXhaemVYTjBaVzA2YzJWeWRtbGpaV0ZqWTI5MWJuUnpNRDhHQTFVRUNoTTRjM2x6ZEdWdE9uTmwKY25acFkyVmhZMk52ZFc1MGN6cHZjR1Z1YzJocFpuUXRiV0ZqYUdsdVpTMWpiMjVtYVdjdGIzQmxjbUYwYjNJeApVakJRQmdOVkJBTVRTWE41YzNSbGJUcHpaWEoyYVdObFlXTmpiM1Z1ZERwdmNHVnVjMmhwWm5RdGJXRmphR2x1ClpTMWpiMjVtYVdjdGIzQmxjbUYwYjNJNmJtOWtaUzFpYjI5MGMzUnlZWEJ3WlhJd2dnRWlNQTBHQ1NxR1NJYjMKRFFFQkFRVUFBNElCRHdBd2dnRUtBb0lCQVFDeDk5M0lqSStLWFZpNExsajBnSzlKeUhncU4xUjRYMnpQUXVpTApMZkRqaDFzaWo1ekx2Q3VtMmFRN29Ec1NTOFVKM3ltUGpDM0JMVFkvZ1FVQkhjTUhWZVo4M2s4V01YWWV0MUJSCnBhRW1FdlJVcENQSG9wSEhMSlJKdHV3MmV0RHZOV1A5bHRJUXg4UFUrSHBBUFJDU0lkc3JjUXI3Vm0waVg1K2sKL1hsS1p2TzBaS3ZZTGpSdmVkSlpubkdjZkVJSWdvMEE4QVFBUXV1T0VTNkpUZGpIcXZnZ3dvM2pTci9xd0plQgpnMVE5T1RJYUlRa0VjSFlVLzIydnhzaW15aFJaVk9VWnN5NFZLdUtQSmh6dEE5NDBEMWcraHA0cVhFR1JFcUUvCkE4UGRZTjNKWmM0dDd3SUViejBEUWVCTDBndkVFdFhMNXE1eVFTRzIrVExZOW1ydEFnTUJBQUdqZFRCek1BNEcKQTFVZER3RUIvd1FFQXdJRm9EQVRCZ05WSFNVRUREQUtCZ2dyQmdFRkJRY0RBakFNQmdOVkhSTUJBZjhFQWpBQQpNQjBHQTFVZERnUVdCQlQzcnhSaS9KSndKK3kvSW5wbSsyeHV4dUpoTURBZkJnTlZIU01FR0RBV2dCUkZZdXZVCittM3MzYWpXZTZyeGIrejJSNWVIbFRBTkJna3Foa2lHOXcwQkFRc0ZBQU9DQVFFQWZHMS96QmlvenNwREtSTHkKSHRTWXdOWHFqT2pNWkZUbVZvRktqVEpJTktwYXpFeFFzQkZJTlEzYU13bmoxcTFmM2tta01hR1c5Y2hzbWlZMgp2WjN3cXB2S0UwUXdqUXgvcDJaUmpRSXVlWlAvT0ZVbzkzQ2VZcXVQWmt1bHhlTjErTnRqc0hobDBOS2FFMU8xCkFzMHlGWEh4VzVQWEhDNlkranEwd3cwZU9EVGFOV2EveHhCMnM2UUlMb3FpVXdkQWFqdWc5N0ptb0c5YTJ6RGIKd0ZHRk5YbEV6VXcxZHVRSjhXR0R3Rld2MWJmN0xYdEhIdUdNa2g4VkgvVHRoR20yVzA5QVVMTE9LQXRLcXFSZgpydlZoOGkxeVBCanI2cjRLSHFteHlCZXRndEF6VTNsVUl5VWNBWGlwd2V3ZUZiTEdZQzRmcFBMRjhsMkt6NGZiCjR3QUVUdz09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K",
                        "client-key-data": "LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBc2ZmZHlJeVBpbDFZdUM1WTlJQ3ZTY2g0S2pkVWVGOXN6MExvaXkzdzQ0ZGJJbytjCnk3d3JwdG1rTzZBN0VrdkZDZDhwajR3dHdTMDJQNEVGQVIzREIxWG1mTjVQRmpGMkhyZFFVYVdoSmhMMFZLUWoKeDZLUnh5eVVTYmJzTm5yUTd6VmovWmJTRU1mRDFQaDZRRDBRa2lIYkszRUsrMVp0SWwrZnBQMTVTbWJ6dEdTcgoyQzQwYjNuU1daNXhuSHhDQ0lLTkFQQUVBRUxyamhFdWlVM1l4NnI0SU1LTjQwcS82c0NYZ1lOVVBUa3lHaUVKCkJIQjJGUDl0cjhiSXBzb1VXVlRsR2JNdUZTcmlqeVljN1FQZU5BOVlQb2FlS2x4QmtSS2hQd1BEM1dEZHlXWE8KTGU4Q0JHODlBMEhnUzlJTHhCTFZ5K2F1Y2tFaHR2a3kyUFpxN1FJREFRQUJBb0lCQVFDYnlsbHhwK28zdTROZwpwK0hqRjR0YTBZeXZtQVB2NDhrQ25wV20wSzZnM3VxZWxJMHpwQ09xU2JlRklyelRSVlRWVVcrMlk0WGlKMHZuCngyKzBESE9meGtpZ1lwTms0Q09BdkFRcGxRNCtvRFVXcXlGUEx6YmgzbHBwTlNJT2h2RERsajlUekdWVG55d0YKRVFjam1ORWF1MXg2Nk5ndU1QZ1VNUlUxZjFaZ0U4Mnd3MVpCOWdGaEtwSDZ3ei92a0RlM0lOcEl5NGc2M0hDTgpCaTZKNndWb2ttekZ2OVJ6Uy9OdG52T05jbHRnSTd2U3pmS2xzWmFLWWRwZTZVRG1aQzBEV3k1bTBGdTdWS2pFCjNMWmJuMVAxdXBycm45VGFaYW1ONHFGYy94SGEvVjhCYXBwN2U5aUpSU05saXRIc3U5cC9wS2RCWWtlRzFodnUKakpUc0dyT0JBb0dCQU4wRmJ6SlZMc0h3aStZd0dvamx6ZEgvNTRkbTh1dlhLZEltNzc3ZTJWbEErbGczcnJ3NAp0T2hCcER0WW0xVEh0Mk9NSHp4OUxDckF0Z1I2MVowWHFNa3ZLL0Z0NE91T2pMT2ZNQ09PRlZiaVZzSnRQY2pkClFWTHIrSUhJV2lIekR3NXZhYXlZRXlHamJRcGk0d1YxMXk3Y1JMUi91YW8vR0ZnNEFObjZvU1RkQW9HQkFNNGkKS1RicFByVU11UE5KYzE1b0YySmtGRk9mRExkMktJaElsbTREck81Ukp3ZDgyeDdnVmdDSEpIQzg2MzRkR0lQMgpETmROU0hoS2g4N1JhdDJtU3hiK2R2SEFudm9qOGxVT1huZEd5dFVWTTRrWEVpalEzVlhabzlCWElWNTQ3OXE2CkROc3dOMHlhQjJGRFVvemZpZ0c5UDNldjBmdHduWCtrZ1I0ck9EVlJBb0dBUG8xdkx4dVVwQ2JrTVQya0JPS2wKSWEzL1pQN3ArWDFueEtab2EraStNdGlGQWJxZ3BYeVhGclNkT242VlY2VStiZG9XYlJRd0Q5bUNxam5wZ3hCVApJTDFNL29OT2lOeExUZnJic1BSaGJibVpQR1dXZXViRHVpZzJxT1IvUGVTQWVtRmwwd2NuUXZueHZtTEdSYUZZClNWYmx5di9yR0JmTFdBeGhrVSt4azdFQ2dZQS9vRkhDYmtwNXpmeUVzK1pWZktIRE1Bc0tLS3pmTUN5Z3JHOHEKZEIzN3piYlRXOW15OVNIMnRjQXN3Rk9jTU5UeFhwQm1JS2UrNFpwNzN5NHlUbk1kSE55UUVKbkJzampKd2s2cwpXSUNoTnhNYVBMSFJRVzhnWWJacng0azRSUEljUEpOZFVNdXc3RlpjMGsvM3hjUXVkMERRNjhkUDZsbmpIVjd4CmRmdTZrUUtCZ0NyS1Vzb0xUR2VJVUo3MFpQcER3ZHdZT1MvZkJ2YVFGcHIyajFSZW45blZWVzhVQnV4dnFJTFIKU1pQZ0lYQjRQZnNuVEZjNzhxSkFmc1dxUTBLT2I1c21QVVZCOEkzeitJMmgzbDZIVDBjcXFucjMxUy9NOVljagp5eFA3a1oxdVZOWmZhQXQ5dXhQMFFQbHFvSlVqWHFkcE9Na1ljSWFOc1BRcHV3bVlValRCCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg=="
                    }
                }
            ],
            "contexts": [
                {
                    "name": "kubelet",
                    "context": {
                        "cluster": "redpod-aws-sno",
                        "user": "kubelet"
                    }
                }
            ],
            "current-context": "kubelet"
        },
        "File": {
            "Filename": "auth/kubeconfig-kubelet",
            "Data": ""
        }
    },
    "*kubeconfig.LoopbackClient": {
        "Config": {
            "preferences": {},
            "clusters": [
                {
                    "name": "redpod-aws-sno",
                    "cluster": {
                        "server": "https://localhost:6443",
                        "certificate-authority-data": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURRRENDQWlpZ0F3SUJBZ0lJVXdMTkJjaHNZT1l3RFFZSktvWklodmNOQVFFTEJRQXdQakVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1TZ3dKZ1lEVlFRREV4OXJkV0psTFdGd2FYTmxjblpsY2kxc2IyTmhiR2h2YzNRdApjMmxuYm1WeU1CNFhEVEl6TURReE9ERXpNRGd4TUZvWERUTXpNRFF4TlRFek1EZ3hNRm93UGpFU01CQUdBMVVFCkN4TUpiM0JsYm5Ob2FXWjBNU2d3SmdZRFZRUURFeDlyZFdKbExXRndhWE5sY25abGNpMXNiMk5oYkdodmMzUXQKYzJsbmJtVnlNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DQVE4QU1JSUJDZ0tDQVFFQXVrQXFycmwrWHROcwpNQm1JMkRnZmlwUmMvNEluLytGZ2txSWZmaENTYzU3eXhGaXZBRXR5VTM3WERlQmNkeHNFMDRLQ1RuSDEram5PCm5VZkxlWFVKMmlHcFF6R1FSZ2FjV3VkeERBdUc1VmZmYkN0RkpxRGQvKzRTT3J6SlRQellvditUTGxPc296QlMKSHc5WWN4K1JmZUw0R3NlaXVhQVdmaFcreHdkQVFHWVg0eFJNcVBkcmlCY1JQUkprd2Q2K21xZ3FuM0t4UjI3VgpWeU85NnNlYWdjME5IR3h0dUlBUTF2eWgzeThvM2E3bURUdWJ6VDNRMXhTeDZTUUljd0I5K0RaUkRjMGwwUlBwClhzYVBuMVhMMzVYcHR0MHkxQTBZKzlKTXM5SWxTNkpCbzVNYzBERnNQWVNFZlNoeXZ5TVBDZFZ5bXdPcVRkbEcKdEpaZUxWazFKd0lEQVFBQm8wSXdRREFPQmdOVkhROEJBZjhFQkFNQ0FxUXdEd1lEVlIwVEFRSC9CQVV3QXdFQgovekFkQmdOVkhRNEVGZ1FVa01iUHN5YU5OaGg0bXlZZ3FOelJ5QmUzc21Rd0RRWUpLb1pJaHZjTkFRRUxCUUFECmdnRUJBR1FEMTZNdTAybEVaY1BodTNxcjFHRnVVQUZFWWh5T0hRSFVFcklUOU9rQ2hvczU4eUZ0WThPRFlwelYKdS83MllMVDBoSkdrY0diREVEN2dNTzNGMXhvWEc2bFh4Y2htb0FhOFZhWlpxTUJBckdVQXE4aXppUUdPUUMzawpaYVh4SjcrMGhhNTA0Q2xnUDJJd3hIMTlBOFhRVi8rS0hPU05YbjFGaDlSMXdNM2tHRG9JSFQ2bFZ4R1RlMTNZCldEMEN2NTRxZCtMWElSOCsrbVFVSXdMd1cwd3NKUEUybG5MYVhvSzQ5MHp6WDJvWWMxUWJ1WGNqeUxWY3pVUG0KVWFxY29IeDVjS3pabytjM2I5QVpvaDZzRjRvMG1LOWdJT2RWZXFzTitkbWlKSFJIeElhT0hYSzg2SFJpczRWWQpPM0VhTTlxWnViOS9vQ3BSRVcrN25CWWVDemM9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K"
                    }
                }
            ],
            "users": [
                {
                    "name": "loopback",
                    "user": {
                        "client-certificate-data": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURaekNDQWsrZ0F3SUJBZ0lJVEhSYmJxSFVJVzh3RFFZSktvWklodmNOQVFFTEJRQXdOakVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1TQXdIZ1lEVlFRREV4ZGhaRzFwYmkxcmRXSmxZMjl1Wm1sbkxYTnBaMjVsY2pBZQpGdzB5TXpBME1UZ3hNekE0TURsYUZ3MHpNekEwTVRVeE16QTRNVEJhTURBeEZ6QVZCZ05WQkFvVERuTjVjM1JsCmJUcHRZWE4wWlhKek1SVXdFd1lEVlFRREV3eHplWE4wWlcwNllXUnRhVzR3Z2dFaU1BMEdDU3FHU0liM0RRRUIKQVFVQUE0SUJEd0F3Z2dFS0FvSUJBUUMvejU4dWZkTnd5R2xCNjN2VUN2Z1dBRm05Q0hNVlJMUGYyaVhMWnRsVwpubWVydGUvUFAxOGJNTG9iMzNwdC82M0prVDNLVGgrMGtKR2R4dWpXV2lQUHZ2Z0FremFoQVRvZ2p5cFNDWCtkCkpVVS9qSnA2bFo2U2Q5cVNjU2gxZi9lUHNrVTgwbnhMTkR2QitVK2Z0cEdCUFNQdEcyLzdBRDNTc0k0NGpheHAKWDFwSGVqY0QyLzNwRitidUZaY2tKaUFvQ3FubDhUeURYZGJZencvZURvcUo1RkxETk9zT0V5Y2E3WGlBM3VIOQp5akV2T0QvTE4rYlpjdDhNa044eXEvMWpnNlJ5czFtaFZtNUJ2RCthOGpzcFJPd3Y5T01MdFd3NGNWQW1HNmtICnFPUiszWXQzUlNkakFUVzZCc0RYZXRDQy9zUjFWaW1LOUFVVWJsVS90d3NuQWdNQkFBR2pmekI5TUE0R0ExVWQKRHdFQi93UUVBd0lGb0RBZEJnTlZIU1VFRmpBVUJnZ3JCZ0VGQlFjREFRWUlLd1lCQlFVSEF3SXdEQVlEVlIwVApBUUgvQkFJd0FEQWRCZ05WSFE0RUZnUVVPa3NHdGlGOENEM3gzSXRiLzh6anZXUUg5WHN3SHdZRFZSMGpCQmd3CkZvQVVmajZhYmRqUHl1UW1PdnA2Vlg0MGlheGR0U0V3RFFZSktvWklodmNOQVFFTEJRQURnZ0VCQUJ2MXp3di8KRlZpZWVuYk1rTVprWDFKcGlXWnp0S2pvUkNUYllLNWhTVThrMnZ0RWNVVDFKOVN6U1JTMi9KM0tlM0prL01USQo2YVFYNUsyajhEczBRRkxHU0l2THFub28yMS9DOVhuSG1mRnhsMmR0UTNIWkRYOHBUTlc5ZFlIOEQ2N0poWW0xCklGTFl5RXpSQzFMN1VVYkIzZFNMcTBGZ0p2RjVrSkFKeUNxRndlYTRMdVlBeGFmNGxTeVp5MVZtOXBzWXcwa1AKQ01rdENXc2pvU0Z0V3RhaVBqSy90T2ZUeEdqRDlSRlBMc1FaOUlVcks3eS9pUTBpVnU0cjgwa0VLVTNJbFIxMwpWdkNIeXp5cUZSaHZmWW9zR3Q2N2NNNUFQRllzdC83WXJEdWdZZTRiR2tleUwyT0xYc0VVZERTd1hTcys0eG1DClBPKy9mTlgrMm45OUs3cz0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=",
                        "client-key-data": "LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBdjgrZkxuM1RjTWhwUWV0NzFBcjRGZ0JadlFoekZVU3ozOW9seTJiWlZwNW5xN1h2Cnp6OWZHekM2Rzk5NmJmK3R5WkU5eWs0ZnRKQ1JuY2JvMWxvano3NzRBSk0yb1FFNklJOHFVZ2wvblNWRlA0eWEKZXBXZWtuZmFrbkVvZFgvM2o3SkZQTko4U3pRN3dmbFBuN2FSZ1QwajdSdHYrd0E5MHJDT09JMnNhVjlhUjNvMwpBOXY5NlJmbTdoV1hKQ1lnS0FxcDVmRThnMTNXMk04UDNnNktpZVJTd3pUckRoTW5HdTE0Z043aC9jb3hMemcvCnl6Zm0yWExmREpEZk1xdjlZNE9rY3JOWm9WWnVRYncvbXZJN0tVVHNML1RqQzdWc09IRlFKaHVwQjZqa2Z0MkwKZDBVbll3RTF1Z2JBMTNyUWd2N0VkVllwaXZRRkZHNVZQN2NMSndJREFRQUJBb0lCQUhya1JpT2VZRXNCVEZiOAp6ZkIwT3JDMTlzampVZ0NOYlFWK0dmcnc0VXphM3Fjb1FRWXludmVueDRXMk1CV3IyNmVxVThGN1Bsc015UThpCmN1bHJCVWpFSE5jWmVzVzdLSWZWMGhLUG5XQ01rWXAreGpiR0I3dmw2SGNzNHZRdFVlcVNHRVE0dzRQWGFuWUUKQ3R6VU52TnJ2Y25iYTJxUXBBdUtMUVRVMkdNRnBhSmRTSS9UY1d6cHZta3RxVXZXamQwS0ZCMFptcEpEWDJCbgpZY0FSWW9xTjd5WUduVTVZQ2VhMmJVT29EVjZsM1pIVkFvc1pBWnVKS2dwL21ncU5sN2hDUnNPQkU1SDV3NHN0CkNMMHRCNGpwazhtSHJuTHBSVmowRU9Ta3Q3bHgwSHZJQnhITFh2K0s1N2Y1UlNjd044NVB4SkxQbjJmZ2laT3kKTXdIb3MyRUNnWUVBMkE3WUkva1kyeGhJdEpEcWxxSmNoVHVqNUN2VVc4R2s5RnBnc3lFMWZQLzg1V01GWXJldwpOK2dQZlRPNmVQK3BuY1MvNEJ5NzhhWG1PaUN2U1lHYndPUjRYaUtVQVVTdkpLN2JXYUhsdkFRQlhQVVZMclNKCk1LMmxGUHdrV28zVi9xT2U1SXp3NXZsaDJVR3o5eXFLcWhKTzRyZy9FcituTG5HNjk2NnpvSGNDZ1lFQTQwVkUKS01DUVVUMnExVTcwc0VCVk16c2Z4NmNMS3l6dDVoOXpNalFUcFZhS2w3R3dpaUZTMStSYkxpZVBOVTQ0VGF1QgorVmJtV3dERkxzajhMcE12WUpXWEZMOCtqRjRieTNSNTVoKzlvVGlieFRSZ3UxM1duUGZlSFRNalYzeHE5QkNFCkNPOXNZbGVOVk02WmluRkZyc1N0L0lNczExcUF3Wnk3czZEenh0RUNnWUJtSXRaUVl5QTU2b2ZzUEJsNXJqVTQKa3BJT2VoM0FacEZaSmlSU2FkK0VRT3RIY1FFSndyWWVKNml5MGpKVG91Q0hBWXlISUc1RWROMmFHdnRpTDAvMgo1c3AwRGJxVHd1bGMyUUErcGdjWlUzZGxmMEpOT3ZFanZ1S3NRZW5abVBWUmsvMjRJMXg2ZytlYXNiR21wVWk1Cnp6L1ZjNjMxYWY1Wk9WQmVhQXJvVHdLQmdDZ3lEUDhFSjhJbW5QdEREcVhKaXdnWGtlUlcxL1BYNjIrQzZuWGIKbmdubEIzZ1MxajFuN1dYL25seklaRnl5SytVWXkxRVZISUxGM1JvTU5BWHN4RGxaMjdHd3JWaFlJS1JZUW1NQQpCQ0xxaHlwV3ZERUhSTGpZWWZGYUpRc0pGMFY1VWxEZVA1WVpGQWNHejBNY0M0NEFmU0VtOWh4VWhtYzMyRDdKCjNiT3hBb0dCQU5IdFkzdGRyUERjSS90bUd5TjJoUEVpaGVxWGVUaWNGSE85Wlk1bmJWOVdmazQ2UGpnTU1GS2YKSHVJNDl6S1FGSjV3Uko1TUw0dXE5TkVpT2xjTUhaY1FqcFdVbnlCTi94enlVd0hlcmJBUkNSWVpFdWNpTXJXSgpPSXBLOFl5QkRWV2t0Y05MT0RTL1YwTlBwR0plMmhxMUdvSzlkZGxjMnprNmxrMUNzc1BLCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg=="
                    }
                }
            ],
            "contexts": [
                {
                    "name": "loopback",
                    "context": {
                        "cluster": "redpod-aws-sno",
                        "user": "loopback"
                    }
                }
            ],
            "current-context": "loopback"
        },
        "File": {
            "Filename": "auth/kubeconfig-loopback",
            "Data": "Y2x1c3RlcnM6Ci0gY2x1c3RlcjoKICAgIGNlcnRpZmljYXRlLWF1dGhvcml0eS1kYXRhOiBMUzB0TFMxQ1JVZEpUaUJEUlZKVVNVWkpRMEZVUlMwdExTMHRDazFKU1VSUlJFTkRRV2xwWjBGM1NVSkJaMGxKVlhkTVRrSmphSE5aVDFsM1JGRlpTa3R2V2tsb2RtTk9RVkZGVEVKUlFYZFFha1ZUVFVKQlIwRXhWVVVLUTNoTlNtSXpRbXhpYms1dllWZGFNRTFUWjNkS1oxbEVWbEZSUkVWNE9YSmtWMHBzVEZkR2QyRllUbXhqYmxwc1kya3hjMkl5VG1oaVIyaDJZek5SZEFwak1teHVZbTFXZVUxQ05GaEVWRWw2VFVSUmVFOUVSWHBOUkdkNFRVWnZXRVJVVFhwTlJGRjRUbFJGZWsxRVozaE5SbTkzVUdwRlUwMUNRVWRCTVZWRkNrTjRUVXBpTTBKc1ltNU9iMkZYV2pCTlUyZDNTbWRaUkZaUlVVUkZlRGx5WkZkS2JFeFhSbmRoV0U1c1kyNWFiR05wTVhOaU1rNW9Za2RvZG1NelVYUUtZekpzYm1KdFZubE5TVWxDU1dwQlRrSm5hM0ZvYTJsSE9YY3dRa0ZSUlVaQlFVOURRVkU0UVUxSlNVSkRaMHREUVZGRlFYVnJRWEZ5Y213cldIUk9jd3BOUW0xSk1rUm5abWx3VW1Ndk5FbHVMeXRHWjJ0eFNXWm1hRU5UWXpVM2VYaEdhWFpCUlhSNVZUTTNXRVJsUW1Oa2VITkZNRFJMUTFSdVNERXJhbTVQQ201VlpreGxXRlZLTW1sSGNGRjZSMUZTWjJGalYzVmtlRVJCZFVjMVZtWm1Za04wUmtweFJHUXZLelJUVDNKNlNsUlFlbGx2ZGl0VVRHeFBjMjk2UWxNS1NIYzVXV040SzFKbVpVdzBSM05sYVhWaFFWZG1hRmNyZUhka1FWRkhXVmcwZUZKTmNWQmtjbWxDWTFKUVVrcHJkMlEySzIxeFozRnVNMHQ0VWpJM1ZncFdlVTg1Tm5ObFlXZGpNRTVJUjNoMGRVbEJVVEYyZVdnemVUaHZNMkUzYlVSVWRXSjZWRE5STVhoVGVEWlRVVWxqZDBJNUswUmFVa1JqTUd3d1VsQndDbGh6WVZCdU1WaE1NelZZY0hSME1Ia3hRVEJaS3psS1RYTTVTV3hUTmtwQ2J6Vk5ZekJFUm5OUVdWTkZabE5vZVhaNVRWQkRaRlo1YlhkUGNWUmtiRWNLZEVwYVpVeFdhekZLZDBsRVFWRkJRbTh3U1hkUlJFRlBRbWRPVmtoUk9FSkJaamhGUWtGTlEwRnhVWGRFZDFsRVZsSXdWRUZSU0M5Q1FWVjNRWGRGUWdvdmVrRmtRbWRPVmtoUk5FVkdaMUZWYTAxaVVITjVZVTVPYUdnMGJYbFpaM0ZPZWxKNVFtVXpjMjFSZDBSUldVcExiMXBKYUhaalRrRlJSVXhDVVVGRUNtZG5SVUpCUjFGRU1UWk5kVEF5YkVWYVkxQm9kVE54Y2pGSFJuVlZRVVpGV1doNVQwaFJTRlZGY2tsVU9VOXJRMmh2Y3pVNGVVWjBXVGhQUkZsd2VsWUtkUzgzTWxsTVZEQm9Ta2RyWTBkaVJFVkVOMmROVHpOR01YaHZXRWMyYkZoNFkyaHRiMEZoT0ZaaFdscHhUVUpCY2tkVlFYRTRhWHBwVVVkUFVVTXphd3BhWVZoNFNqY3JNR2hoTlRBMFEyeG5VREpKZDNoSU1UbEJPRmhSVmk4clMwaFBVMDVZYmpGR2FEbFNNWGROTTJ0SFJHOUpTRlEyYkZaNFIxUmxNVE5aQ2xkRU1FTjJOVFJ4WkN0TVdFbFNPQ3NyYlZGVlNYZE1kMWN3ZDNOS1VFVXliRzVNWVZodlN6UTVNSHA2V0RKdldXTXhVV0oxV0dOcWVVeFdZM3BWVUcwS1ZXRnhZMjlJZURWalMzcGFieXRqTTJJNVFWcHZhRFp6UmpSdk1HMUxPV2RKVDJSV1pYRnpUaXRrYldsS1NGSkllRWxoVDBoWVN6ZzJTRkpwY3pSV1dRcFBNMFZoVFRseFduVmlPUzl2UTNCU1JWY3JOMjVDV1dWRGVtTTlDaTB0TFMwdFJVNUVJRU5GVWxSSlJrbERRVlJGTFMwdExTMEsKICAgIHNlcnZlcjogaHR0cHM6Ly9sb2NhbGhvc3Q6NjQ0MwogIG5hbWU6IHJlZHBvZC1hd3Mtc25vCmNvbnRleHRzOgotIGNvbnRleHQ6CiAgICBjbHVzdGVyOiByZWRwb2QtYXdzLXNubwogICAgdXNlcjogbG9vcGJhY2sKICBuYW1lOiBsb29wYmFjawpjdXJyZW50LWNvbnRleHQ6IGxvb3BiYWNrCnByZWZlcmVuY2VzOiB7fQp1c2VyczoKLSBuYW1lOiBsb29wYmFjawogIHVzZXI6CiAgICBjbGllbnQtY2VydGlmaWNhdGUtZGF0YTogTFMwdExTMUNSVWRKVGlCRFJWSlVTVVpKUTBGVVJTMHRMUzB0Q2sxSlNVUmFla05EUVdzclowRjNTVUpCWjBsSlZFaFNZbUp4U0ZWSlZ6aDNSRkZaU2t0dldrbG9kbU5PUVZGRlRFSlJRWGRPYWtWVFRVSkJSMEV4VlVVS1EzaE5TbUl6UW14aWJrNXZZVmRhTUUxVFFYZElaMWxFVmxGUlJFVjRaR2hhUnpGd1lta3hjbVJYU214Wk1qbDFXbTFzYmt4WVRuQmFNalZzWTJwQlpRcEdkekI1VFhwQk1FMVVaM2hOZWtFMFRVUnNZVVozTUhwTmVrRXdUVlJWZUUxNlFUUk5WRUpoVFVSQmVFWjZRVlpDWjA1V1FrRnZWRVJ1VGpWak0xSnNDbUpVY0hSWldFNHdXbGhLZWsxU1ZYZEZkMWxFVmxGUlJFVjNlSHBsV0U0d1dsY3dObGxYVW5SaFZ6UjNaMmRGYVUxQk1FZERVM0ZIVTBsaU0wUlJSVUlLUVZGVlFVRTBTVUpFZDBGM1oyZEZTMEZ2U1VKQlVVTXZlalU0ZFdaa1RuZDVSMnhDTmpOMlZVTjJaMWRCUm0wNVEwaE5WbEpNVUdZeWFWaE1XblJzVndwdWJXVnlkR1V2VUZBeE9HSk5URzlpTXpOd2RDODJNMHByVkROTFZHZ3JNR3RLUjJSNGRXcFhWMmxRVUhaMlowRnJlbUZvUVZSdloycDVjRk5EV0N0a0NrcFZWUzlxU25BMmJGbzJVMlE1Y1ZOalUyZ3haaTlsVUhOclZUZ3dibmhNVGtSMlFpdFZLMlowY0VkQ1VGTlFkRWN5THpkQlJETlRjMGswTkdwaGVIQUtXREZ3U0dWcVkwUXlMek53Uml0aWRVWmFZMnRLYVVGdlEzRnViRGhVZVVSWVpHSlplbmN2WlVSdmNVbzFSa3hFVGs5elQwVjVZMkUzV0dsQk0zVklPUXA1YWtWMlQwUXZURTRyWWxwamREaE5hMDQ0ZVhFdk1XcG5ObEo1Y3pGdGFGWnROVUoyUkN0aE9HcHpjRkpQZDNZNVQwMU1kRmQzTkdOV1FXMUhObXRJQ25GUFVpc3pXWFF6VWxOa2FrRlVWelpDYzBSWVpYUkRReTl6VWpGV2FXMUxPVUZWVldKc1ZTOTBkM051UVdkTlFrRkJSMnBtZWtJNVRVRTBSMEV4VldRS1JIZEZRaTkzVVVWQmQwbEdiMFJCWkVKblRsWklVMVZGUm1wQlZVSm5aM0pDWjBWR1FsRmpSRUZSV1VsTGQxbENRbEZWU0VGM1NYZEVRVmxFVmxJd1ZBcEJVVWd2UWtGSmQwRkVRV1JDWjA1V1NGRTBSVVpuVVZWUGEzTkhkR2xHT0VORU0zZ3pTWFJpTHpoNmFuWlhVVWc1V0hOM1NIZFpSRlpTTUdwQ1FtZDNDa1p2UVZWbWFqWmhZbVJxVUhsMVVXMVBkbkEyVmxnME1HbGhlR1IwVTBWM1JGRlpTa3R2V2tsb2RtTk9RVkZGVEVKUlFVUm5aMFZDUVVKMk1YcDNkaThLUmxacFpXVnVZazFyVFZwcldERktjR2xYV25wMFMycHZVa05VWWxsTE5XaFRWVGhyTW5aMFJXTlZWREZLT1ZONlUxSlRNaTlLTTB0bE0wcHJMMDFVU1FvMllWRllOVXN5YWpoRWN6QlJSa3hIVTBsMlRIRnViMjh5TVM5RE9WaHVTRzFtUm5oc01tUjBVVE5JV2tSWU9IQlVUbGM1WkZsSU9FUTJOMHBvV1cweENrbEdURmw1UlhwU1F6Rk1OMVZWWWtJelpGTk1jVEJHWjBwMlJqVnJTa0ZLZVVOeFJuZGxZVFJNZFZsQmVHRm1OR3hUZVZwNU1WWnRPWEJ6V1hjd2ExQUtRMDFyZEVOWGMycHZVMFowVjNSaGFWQnFTeTkwVDJaVWVFZHFSRGxTUmxCTWMxRmFPVWxWY2tzM2VTOXBVVEJwVm5VMGNqZ3dhMFZMVlROSmJGSXhNd3BXZGtOSWVYcDVjVVpTYUhabVdXOXpSM1EyTjJOTk5VRlFSbGx6ZEM4M1dYSkVkV2RaWlRSaVIydGxlVXd5VDB4WWMwVlZaRVJUZDFoVGN5czBlRzFEQ2xCUEt5OW1UbGdyTW00NU9VczNjejBLTFMwdExTMUZUa1FnUTBWU1ZFbEdTVU5CVkVVdExTMHRMUW89CiAgICBjbGllbnQta2V5LWRhdGE6IExTMHRMUzFDUlVkSlRpQlNVMEVnVUZKSlZrRlVSU0JMUlZrdExTMHRMUXBOU1VsRmIzZEpRa0ZCUzBOQlVVVkJkamdyWmt4dU0xUmpUV2h3VVdWME56RkJjalJHWjBKYWRsRm9la1pWVTNvek9XOXNlVEppV2xad05XNXhOMWgyQ25wNk9XWkhla00yUnprNU5tSm1LM1I1V2tVNWVXczBablJLUTFKdVkySnZNV3h2YW5vM056UkJTazB5YjFGRk5rbEpPSEZWWjJ3dmJsTldSbEEwZVdFS1pYQlhaV3R1Wm1GcmJrVnZaRmd2TTJvM1NrWlFUa280VTNwUk4zZG1iRkJ1TjJGU1oxUXdhamRTZEhZcmQwRTVNSEpEVDA5Sk1uTmhWamxoVWpOdk13cEJPWFk1TmxKbWJUZG9WMWhLUTFsblMwRnhjRFZtUlRobk1UTlhNazA0VURObk5rdHBaVkpUZDNwVWNrUm9UVzVIZFRFMFowNDNhQzlqYjNoTWVtY3ZDbmw2Wm0weVdFeG1SRXBFWmsxeGRqbFpORTlyWTNKT1dtOVdXblZSWW5jdmJYWkpOMHRWVkhOTUwxUnFRemRXYzA5SVJsRkthSFZ3UWpacWEyWjBNa3dLWkRCVmJsbDNSVEYxWjJKQk1UTnlVV2QyTjBWa1ZsbHdhWFpSUmtaSE5WWlFOMk5NU25kSlJFRlJRVUpCYjBsQ1FVaHlhMUpwVDJWWlJYTkNWRVppT0FwNlprSXdUM0pETVRsemFtcFZaME5PWWxGV0swZG1jbmMwVlhwaE0zRmpiMUZSV1hsdWRtVnVlRFJYTWsxQ1YzSXlObVZ4VlRoR04xQnNjMDE1VVRocENtTjFiSEpDVldwRlNFNWpXbVZ6VnpkTFNXWldNR2hMVUc1WFEwMXJXWEFyZUdwaVIwSTNkbXcyU0dOek5IWlJkRlZsY1ZOSFJWRTBkelJRV0dGdVdVVUtRM1I2VlU1MlRuSjJZMjVpWVRKeFVYQkJkVXRNVVZSVk1rZE5SbkJoU21SVFNTOVVZMWQ2Y0hadGEzUnhWWFpYYW1Rd1MwWkNNRnB0Y0VwRVdESkNiZ3BaWTBGU1dXOXhUamQ1V1VkdVZUVlpRMlZoTW1KVlQyOUVWalpzTTFwSVZrRnZjMXBCV25WS1MyZHdMMjFuY1U1c04yaERVbk5QUWtVMVNEVjNOSE4wQ2tOTU1IUkNOR3B3YXpodFNISnVUSEJTVm1vd1JVOVRhM1EzYkhnd1NIWkpRbmhJVEZoMkswczFOMlkxVWxOamQwNDROVkI0U2t4UWJqSm1aMmxhVDNrS1RYZEliM015UlVObldVVkJNa0UzV1VrdmExa3llR2hKZEVwRWNXeHhTbU5vVkhWcU5VTjJWVmM0UjJzNVJuQm5jM2xGTVdaUUx6ZzFWMDFHV1hKbGR3cE9LMmRRWmxSUE5tVlFLM0J1WTFNdk5FSjVOemhoV0cxUGFVTjJVMWxIWW5kUFVqUllhVXRWUVZWVGRrcExOMkpYWVVoc2RrRlJRbGhRVlZaTWNsTktDazFMTW14R1VIZHJWMjh6Vmk5eFQyVTFTWHAzTlhac2FESlZSM281ZVhGTGNXaEtUelJ5Wnk5RmNpdHVURzVITmprMk5ucHZTR05EWjFsRlFUUXdWa1VLUzAxRFVWVlVNbkV4VlRjd2MwVkNWazE2YzJaNE5tTk1TM2w2ZERWb09YcE5hbEZVY0ZaaFMydzNSM2RwYVVaVE1TdFNZa3hwWlZCT1ZUUTBWR0YxUWdvclZtSnRWM2RFUmt4emFqaE1jRTEyV1VwWFdFWk1PQ3RxUmpSaWVUTlNOVFZvS3psdlZHbGllRlJTWjNVeE0xZHVVR1psU0ZSTmFsWXplSEU1UWtORkNrTlBPWE5aYkdWT1ZrMDJXbWx1UmtaeWMxTjBMMGxOY3pFeGNVRjNXbmszY3paRWVuaDBSVU5uV1VKdFNYUmFVVmw1UVRVMmIyWnpVRUpzTlhKcVZUUUthM0JKVDJWb00wRmFjRVphU21sU1UyRmtLMFZSVDNSSVkxRkZTbmR5V1dWS05tbDVNR3BLVkc5MVEwaEJXWGxJU1VjMVJXUk9NbUZIZG5ScFREQXZNZ28xYzNBd1JHSnhWSGQxYkdNeVVVRXJjR2RqV2xVelpHeG1NRXBPVDNaRmFuWjFTM05SWlc1YWJWQldVbXN2TWpSSk1YZzJaeXRsWVhOaVIyMXdWV2sxQ25wNkwxWmpOak14WVdZMVdrOVdRbVZoUVhKdlZIZExRbWREWjNsRVVEaEZTamhKYlc1UWRFUkVjVmhLYVhkbldHdGxVbGN4TDFCWU5qSXJRelp1V0dJS2JtZHViRUl6WjFNeGFqRnVOMWRZTDI1c2VrbGFSbmw1U3l0VldYa3hSVlpJU1V4R00xSnZUVTVCV0hONFJHeGFNamRIZDNKV2FGbEpTMUpaVVcxTlFRcENRMHh4YUhsd1YzWkVSVWhTVEdwWldXWkdZVXBSYzBwR01GWTFWV3hFWlZBMVdWcEdRV05IZWpCTlkwTTBORUZtVTBWdE9XaDRWV2h0WXpNeVJEZEtDak5pVDNoQmIwZENRVTVJZEZremRHUnlVRVJqU1M5MGJVZDVUakpvVUVWcGFHVnhXR1ZVYVdOR1NFODVXbGsxYm1KV09WZG1helEyVUdwblRVMUdTMllLU0hWSk5EbDZTMUZHU2pWM1VrbzFUVXcwZFhFNVRrVnBUMnhqVFVoYVkxRnFjRmRWYm5sQ1RpOTRlbmxWZDBobGNtSkJVa05TV1ZwRmRXTnBUWEpYU2dwUFNYQkxPRmw1UWtSV1YydDBZMDVNVDBSVEwxWXdUbEJ3UjBwbE1taHhNVWR2U3psa1pHeGpNbnByTm14ck1VTnpjMUJMQ2kwdExTMHRSVTVFSUZKVFFTQlFVa2xXUVZSRklFdEZXUzB0TFMwdENnPT0K"
        }
    },
    "*machine.Master": {
        "Config": {
            "ignition": {
                "config": {
                    "merge": [
                        {
                            "source": "https://api-int.redpod-aws-sno.devcluster.openshift.com:22623/config/master",
                            "verification": {}
                        }
                    ],
                    "replace": {
                        "verification": {}
                    }
                },
                "proxy": {},
                "security": {
                    "tls": {
                        "certificateAuthorities": [
                            {
                                "source": "data:text/plain;charset=utf-8;base64,LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFRENDQWZpZ0F3SUJBZ0lJVTVpTWZlTEFzMFV3RFFZSktvWklodmNOQVFFTEJRQXdKakVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1SQXdEZ1lEVlFRREV3ZHliMjkwTFdOaE1CNFhEVEl6TURReE9ERXpNRGd3T1ZvWApEVE16TURReE5URXpNRGd3T1Zvd0pqRVNNQkFHQTFVRUN4TUpiM0JsYm5Ob2FXWjBNUkF3RGdZRFZRUURFd2R5CmIyOTBMV05oTUlJQklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQ0FRRUFzYTV3YzRSdzZRQWEKV09yMFZYOTVGY0wrWDlxWjVtbS8yNy9Ud2trVTc0Yzh1R093TXdjVGMzc0ZMWWxQa3l2WjdtVWNQT1BuZzVqcgovN1JPeG5LMUwwUDFWMkRZQ0p0a3c1c2Mxbzl0eDRoVUhIMTJ1b1c0Um9mMkIyQVRObHR2RU5sblBFbldTalR5CmdEZjRTc25HaXJ5d1NYZE1SZHAzK0N2R2VjQUFmZWw5OHVQdEYzcWd5ZnRScEM2Ri8zSmVUTEQ4Z29CQ0I1aWkKVGs2MDJYNkFMNUMrV0lRMnlFR3VIT0tDOFlYWjRwOWNRdC9LSENHSy9iUUUxc1RFVEJ2YnFSM0tTTnJwU1MzVAp4MFZBYUxkN05xQlFCSVFha3dUazN0KzdzaUpWZFdlbDZVZjE1eWtibzJDUkdacXFKMWMvYVhKNXdTQUhaM1FuCmZ6cnJJRHR5SlFJREFRQUJvMEl3UURBT0JnTlZIUThCQWY4RUJBTUNBcVF3RHdZRFZSMFRBUUgvQkFVd0F3RUIKL3pBZEJnTlZIUTRFRmdRVWU0a3lUeE1FMktxVXZmN243Q2U4SmI1T2J3a3dEUVlKS29aSWh2Y05BUUVMQlFBRApnZ0VCQUhxUWdLZG9lVUtDdGVmTTZ0U2IwVG9wdCtNUXNLY0dyL1JFbWlCUi9MREFhY21kOXZWWUMyU0lKQk1TCldwcjlSS2lreENqMTlFSDdsL1FrbGJ6a0VTcS96TUlYTmpaU3NHUTFJZWpBQ0RSdVVDZzFTS21sZHlBeCtHemYKM3NaeVRWUGx6NFN3Q0pHM3BnMG4yK2VjQXQxNGRQVEhucEV6YlN3VEdIK1l4anNUN3ZDazEzMUR6OE5Cb2tCSwpyQzV0aUNIWGJ0MFkycHB1emdjaVQ4OXlIYlJOWG1UdXdtZHhuVUZtaGIwc1BEWFJ4V21RS0k0bHhrRGVTVFBVCm91blZwbWt4SlAzWW9KcXJCZFZ6TW5GZmJtR2RvL3M4N3J4Zng1cnRrcVVTOUVtbDh5N25kR1pKTXIyWDBsd0YKcmZpMTcxRm42V2RQZEJkRWRIVDQ0SHVLSURvPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==",
                                "verification": {}
                            }
                        ]
                    }
                },
                "timeouts": {},
                "version": "3.2.0"
            },
            "passwd": {},
            "storage": {},
            "systemd": {}
        },
        "File": {
            "Filename": "master.ign",
            "Data": "eyJpZ25pdGlvbiI6eyJjb25maWciOnsibWVyZ2UiOlt7InNvdXJjZSI6Imh0dHBzOi8vYXBpLWludC5yZWRwb2QtYXdzLXNuby5kZXZjbHVzdGVyLm9wZW5zaGlmdC5jb206MjI2MjMvY29uZmlnL21hc3RlciJ9XX0sInNlY3VyaXR5Ijp7InRscyI6eyJjZXJ0aWZpY2F0ZUF1dGhvcml0aWVzIjpbeyJzb3VyY2UiOiJkYXRhOnRleHQvcGxhaW47Y2hhcnNldD11dGYtODtiYXNlNjQsTFMwdExTMUNSVWRKVGlCRFJWSlVTVVpKUTBGVVJTMHRMUzB0Q2sxSlNVUkZSRU5EUVdacFowRjNTVUpCWjBsSlZUVnBUV1psVEVGek1GVjNSRkZaU2t0dldrbG9kbU5PUVZGRlRFSlJRWGRLYWtWVFRVSkJSMEV4VlVVS1EzaE5TbUl6UW14aWJrNXZZVmRhTUUxU1FYZEVaMWxFVmxGUlJFVjNaSGxpTWprd1RGZE9hRTFDTkZoRVZFbDZUVVJSZUU5RVJYcE5SR2QzVDFadldBcEVWRTE2VFVSUmVFNVVSWHBOUkdkM1QxWnZkMHBxUlZOTlFrRkhRVEZWUlVONFRVcGlNMEpzWW01T2IyRlhXakJOVWtGM1JHZFpSRlpSVVVSRmQyUjVDbUl5T1RCTVYwNW9UVWxKUWtscVFVNUNaMnR4YUd0cFJ6bDNNRUpCVVVWR1FVRlBRMEZST0VGTlNVbENRMmRMUTBGUlJVRnpZVFYzWXpSU2R6WlJRV0VLVjA5eU1GWllPVFZHWTB3cldEbHhXalZ0YlM4eU55OVVkMnRyVlRjMFl6aDFSMDkzVFhkalZHTXpjMFpNV1d4UWEzbDJXamR0VldOUVQxQnVaelZxY2dvdk4xSlBlRzVMTVV3d1VERldNa1JaUTBwMGEzYzFjMk14YnpsMGVEUm9WVWhJTVRKMWIxYzBVbTltTWtJeVFWUk9iSFIyUlU1c2JsQkZibGRUYWxSNUNtZEVaalJUYzI1SGFYSjVkMU5ZWkUxU1pIQXpLME4yUjJWalFVRm1aV3c1T0hWUWRFWXpjV2Q1Wm5SU2NFTTJSaTh6U21WVVRFUTRaMjlDUTBJMWFXa0tWR3MyTURKWU5rRk1OVU1yVjBsUk1ubEZSM1ZJVDB0RE9GbFlXalJ3T1dOUmRDOUxTRU5IU3k5aVVVVXhjMVJGVkVKMlluRlNNMHRUVG5Kd1UxTXpWQXA0TUZaQllVeGtOMDV4UWxGQ1NWRmhhM2RVYXpOMEt6ZHphVXBXWkZkbGJEWlZaakUxZVd0aWJ6SkRVa2RhY1hGS01XTXZZVmhLTlhkVFFVaGFNMUZ1Q21aNmNuSkpSSFI1U2xGSlJFRlJRVUp2TUVsM1VVUkJUMEpuVGxaSVVUaENRV1k0UlVKQlRVTkJjVkYzUkhkWlJGWlNNRlJCVVVndlFrRlZkMEYzUlVJS0wzcEJaRUpuVGxaSVVUUkZSbWRSVldVMGEzbFVlRTFGTWt0eFZYWm1OMjQzUTJVNFNtSTFUMkozYTNkRVVWbEtTMjlhU1doMlkwNUJVVVZNUWxGQlJBcG5aMFZDUVVoeFVXZExaRzlsVlV0RGRHVm1UVFowVTJJd1ZHOXdkQ3ROVVhOTFkwZHlMMUpGYldsQ1VpOU1SRUZoWTIxa09YWldXVU15VTBsS1FrMVRDbGR3Y2psU1MybHJlRU5xTVRsRlNEZHNMMUZyYkdKNmEwVlRjUzk2VFVsWVRtcGFVM05IVVRGSlpXcEJRMFJTZFZWRFp6RlRTMjFzWkhsQmVDdEhlbVlLTTNOYWVWUldVR3g2TkZOM1EwcEhNM0JuTUc0eUsyVmpRWFF4TkdSUVZFaHVjRVY2WWxOM1ZFZElLMWw0YW5OVU4zWkRhekV6TVVSNk9FNUNiMnRDU3dweVF6VjBhVU5JV0dKME1Ga3ljSEIxZW1kamFWUTRPWGxJWWxKT1dHMVVkWGR0WkhodVZVWnRhR0l3YzFCRVdGSjRWMjFSUzBrMGJIaHJSR1ZUVkZCVkNtOTFibFp3Yld0NFNsQXpXVzlLY1hKQ1pGWjZUVzVHWm1KdFIyUnZMM000TjNKNFpuZzFjblJyY1ZWVE9VVnRiRGg1TjI1a1IxcEtUWEl5V0RCc2QwWUtjbVpwTVRjeFJtNDJWMlJRWkVKa1JXUklWRFEwU0hWTFNVUnZQUW90TFMwdExVVk9SQ0JEUlZKVVNVWkpRMEZVUlMwdExTMHRDZz09In1dfX0sInZlcnNpb24iOiIzLjIuMCJ9fQ=="
        }
    },
    "*machine.MasterIgnitionCustomizations": {
        "File": null
    },
    "*machine.Worker": {
        "Config": {
            "ignition": {
                "config": {
                    "merge": [
                        {
                            "source": "https://api-int.redpod-aws-sno.devcluster.openshift.com:22623/config/worker",
                            "verification": {}
                        }
                    ],
                    "replace": {
                        "verification": {}
                    }
                },
                "proxy": {},
                "security": {
                    "tls": {
                        "certificateAuthorities": [
                            {
                                "source": "data:text/plain;charset=utf-8;base64,LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFRENDQWZpZ0F3SUJBZ0lJVTVpTWZlTEFzMFV3RFFZSktvWklodmNOQVFFTEJRQXdKakVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1SQXdEZ1lEVlFRREV3ZHliMjkwTFdOaE1CNFhEVEl6TURReE9ERXpNRGd3T1ZvWApEVE16TURReE5URXpNRGd3T1Zvd0pqRVNNQkFHQTFVRUN4TUpiM0JsYm5Ob2FXWjBNUkF3RGdZRFZRUURFd2R5CmIyOTBMV05oTUlJQklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQ0FRRUFzYTV3YzRSdzZRQWEKV09yMFZYOTVGY0wrWDlxWjVtbS8yNy9Ud2trVTc0Yzh1R093TXdjVGMzc0ZMWWxQa3l2WjdtVWNQT1BuZzVqcgovN1JPeG5LMUwwUDFWMkRZQ0p0a3c1c2Mxbzl0eDRoVUhIMTJ1b1c0Um9mMkIyQVRObHR2RU5sblBFbldTalR5CmdEZjRTc25HaXJ5d1NYZE1SZHAzK0N2R2VjQUFmZWw5OHVQdEYzcWd5ZnRScEM2Ri8zSmVUTEQ4Z29CQ0I1aWkKVGs2MDJYNkFMNUMrV0lRMnlFR3VIT0tDOFlYWjRwOWNRdC9LSENHSy9iUUUxc1RFVEJ2YnFSM0tTTnJwU1MzVAp4MFZBYUxkN05xQlFCSVFha3dUazN0KzdzaUpWZFdlbDZVZjE1eWtibzJDUkdacXFKMWMvYVhKNXdTQUhaM1FuCmZ6cnJJRHR5SlFJREFRQUJvMEl3UURBT0JnTlZIUThCQWY4RUJBTUNBcVF3RHdZRFZSMFRBUUgvQkFVd0F3RUIKL3pBZEJnTlZIUTRFRmdRVWU0a3lUeE1FMktxVXZmN243Q2U4SmI1T2J3a3dEUVlKS29aSWh2Y05BUUVMQlFBRApnZ0VCQUhxUWdLZG9lVUtDdGVmTTZ0U2IwVG9wdCtNUXNLY0dyL1JFbWlCUi9MREFhY21kOXZWWUMyU0lKQk1TCldwcjlSS2lreENqMTlFSDdsL1FrbGJ6a0VTcS96TUlYTmpaU3NHUTFJZWpBQ0RSdVVDZzFTS21sZHlBeCtHemYKM3NaeVRWUGx6NFN3Q0pHM3BnMG4yK2VjQXQxNGRQVEhucEV6YlN3VEdIK1l4anNUN3ZDazEzMUR6OE5Cb2tCSwpyQzV0aUNIWGJ0MFkycHB1emdjaVQ4OXlIYlJOWG1UdXdtZHhuVUZtaGIwc1BEWFJ4V21RS0k0bHhrRGVTVFBVCm91blZwbWt4SlAzWW9KcXJCZFZ6TW5GZmJtR2RvL3M4N3J4Zng1cnRrcVVTOUVtbDh5N25kR1pKTXIyWDBsd0YKcmZpMTcxRm42V2RQZEJkRWRIVDQ0SHVLSURvPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==",
                                "verification": {}
                            }
                        ]
                    }
                },
                "timeouts": {},
                "version": "3.2.0"
            },
            "passwd": {},
            "storage": {},
            "systemd": {}
        },
        "File": {
            "Filename": "worker.ign",
            "Data": "eyJpZ25pdGlvbiI6eyJjb25maWciOnsibWVyZ2UiOlt7InNvdXJjZSI6Imh0dHBzOi8vYXBpLWludC5yZWRwb2QtYXdzLXNuby5kZXZjbHVzdGVyLm9wZW5zaGlmdC5jb206MjI2MjMvY29uZmlnL3dvcmtlciJ9XX0sInNlY3VyaXR5Ijp7InRscyI6eyJjZXJ0aWZpY2F0ZUF1dGhvcml0aWVzIjpbeyJzb3VyY2UiOiJkYXRhOnRleHQvcGxhaW47Y2hhcnNldD11dGYtODtiYXNlNjQsTFMwdExTMUNSVWRKVGlCRFJWSlVTVVpKUTBGVVJTMHRMUzB0Q2sxSlNVUkZSRU5EUVdacFowRjNTVUpCWjBsSlZUVnBUV1psVEVGek1GVjNSRkZaU2t0dldrbG9kbU5PUVZGRlRFSlJRWGRLYWtWVFRVSkJSMEV4VlVVS1EzaE5TbUl6UW14aWJrNXZZVmRhTUUxU1FYZEVaMWxFVmxGUlJFVjNaSGxpTWprd1RGZE9hRTFDTkZoRVZFbDZUVVJSZUU5RVJYcE5SR2QzVDFadldBcEVWRTE2VFVSUmVFNVVSWHBOUkdkM1QxWnZkMHBxUlZOTlFrRkhRVEZWUlVONFRVcGlNMEpzWW01T2IyRlhXakJOVWtGM1JHZFpSRlpSVVVSRmQyUjVDbUl5T1RCTVYwNW9UVWxKUWtscVFVNUNaMnR4YUd0cFJ6bDNNRUpCVVVWR1FVRlBRMEZST0VGTlNVbENRMmRMUTBGUlJVRnpZVFYzWXpSU2R6WlJRV0VLVjA5eU1GWllPVFZHWTB3cldEbHhXalZ0YlM4eU55OVVkMnRyVlRjMFl6aDFSMDkzVFhkalZHTXpjMFpNV1d4UWEzbDJXamR0VldOUVQxQnVaelZxY2dvdk4xSlBlRzVMTVV3d1VERldNa1JaUTBwMGEzYzFjMk14YnpsMGVEUm9WVWhJTVRKMWIxYzBVbTltTWtJeVFWUk9iSFIyUlU1c2JsQkZibGRUYWxSNUNtZEVaalJUYzI1SGFYSjVkMU5ZWkUxU1pIQXpLME4yUjJWalFVRm1aV3c1T0hWUWRFWXpjV2Q1Wm5SU2NFTTJSaTh6U21WVVRFUTRaMjlDUTBJMWFXa0tWR3MyTURKWU5rRk1OVU1yVjBsUk1ubEZSM1ZJVDB0RE9GbFlXalJ3T1dOUmRDOUxTRU5IU3k5aVVVVXhjMVJGVkVKMlluRlNNMHRUVG5Kd1UxTXpWQXA0TUZaQllVeGtOMDV4UWxGQ1NWRmhhM2RVYXpOMEt6ZHphVXBXWkZkbGJEWlZaakUxZVd0aWJ6SkRVa2RhY1hGS01XTXZZVmhLTlhkVFFVaGFNMUZ1Q21aNmNuSkpSSFI1U2xGSlJFRlJRVUp2TUVsM1VVUkJUMEpuVGxaSVVUaENRV1k0UlVKQlRVTkJjVkYzUkhkWlJGWlNNRlJCVVVndlFrRlZkMEYzUlVJS0wzcEJaRUpuVGxaSVVUUkZSbWRSVldVMGEzbFVlRTFGTWt0eFZYWm1OMjQzUTJVNFNtSTFUMkozYTNkRVVWbEtTMjlhU1doMlkwNUJVVVZNUWxGQlJBcG5aMFZDUVVoeFVXZExaRzlsVlV0RGRHVm1UVFowVTJJd1ZHOXdkQ3ROVVhOTFkwZHlMMUpGYldsQ1VpOU1SRUZoWTIxa09YWldXVU15VTBsS1FrMVRDbGR3Y2psU1MybHJlRU5xTVRsRlNEZHNMMUZyYkdKNmEwVlRjUzk2VFVsWVRtcGFVM05IVVRGSlpXcEJRMFJTZFZWRFp6RlRTMjFzWkhsQmVDdEhlbVlLTTNOYWVWUldVR3g2TkZOM1EwcEhNM0JuTUc0eUsyVmpRWFF4TkdSUVZFaHVjRVY2WWxOM1ZFZElLMWw0YW5OVU4zWkRhekV6TVVSNk9FNUNiMnRDU3dweVF6VjBhVU5JV0dKME1Ga3ljSEIxZW1kamFWUTRPWGxJWWxKT1dHMVVkWGR0WkhodVZVWnRhR0l3YzFCRVdGSjRWMjFSUzBrMGJIaHJSR1ZUVkZCVkNtOTFibFp3Yld0NFNsQXpXVzlLY1hKQ1pGWjZUVzVHWm1KdFIyUnZMM000TjNKNFpuZzFjblJyY1ZWVE9VVnRiRGg1TjI1a1IxcEtUWEl5V0RCc2QwWUtjbVpwTVRjeFJtNDJWMlJRWkVKa1JXUklWRFEwU0hWTFNVUnZQUW90TFMwdExVVk9SQ0JEUlZKVVNVWkpRMEZVUlMwdExTMHRDZz09In1dfX0sInZlcnNpb24iOiIzLjIuMCJ9fQ=="
        }
    },
    "*machine.WorkerIgnitionCustomizations": {
        "File": null
    },
    "*machines.Master": {
        "UserDataFile": {
            "Filename": "openshift/99_openshift-cluster-api_master-user-data-secret.yaml",
            "Data": "YXBpVmVyc2lvbjogdjEKa2luZDogU2VjcmV0Cm1ldGFkYXRhOgogIG5hbWU6IG1hc3Rlci11c2VyLWRhdGEKICBuYW1lc3BhY2U6IG9wZW5zaGlmdC1tYWNoaW5lLWFwaQp0eXBlOiBPcGFxdWUKZGF0YToKICBkaXNhYmxlVGVtcGxhdGluZzogImRISjFaUW89IgogIHVzZXJEYXRhOiBleUpwWjI1cGRHbHZiaUk2ZXlKamIyNW1hV2NpT25zaWJXVnlaMlVpT2x0N0luTnZkWEpqWlNJNkltaDBkSEJ6T2k4dllYQnBMV2x1ZEM1eVpXUndiMlF0WVhkekxYTnVieTVrWlhaamJIVnpkR1Z5TG05d1pXNXphR2xtZEM1amIyMDZNakkyTWpNdlkyOXVabWxuTDIxaGMzUmxjaUo5WFgwc0luTmxZM1Z5YVhSNUlqcDdJblJzY3lJNmV5SmpaWEowYVdacFkyRjBaVUYxZEdodmNtbDBhV1Z6SWpwYmV5SnpiM1Z5WTJVaU9pSmtZWFJoT25SbGVIUXZjR3hoYVc0N1kyaGhjbk5sZEQxMWRHWXRPRHRpWVhObE5qUXNURk13ZEV4VE1VTlNWV1JLVkdsQ1JGSldTbFZUVlZwS1VUQkdWVkpUTUhSTVV6QjBRMnN4U2xOVlVrWlNSVTVFVVZkYWNGb3dSak5UVlVwQ1dqQnNTbFpVVm5CVVYxcHNWRVZHZWsxR1ZqTlNSa1phVTJ0MGRsZHJiRzlrYlU1UFVWWkdSbFJGU2xKUldHUkxZV3RXVkZSVlNrSlNNRVY0VmxWVlMxRXphRTVUYlVsNlVXMTRhV0pyTlhaWlZtUmhUVVV4VTFGWVpFVmFNV3hGVm14R1VsSkZWak5hU0d4cFRXcHJkMVJHWkU5aFJURkRUa1pvUlZaRmJEWlVWVkpTWlVVNVJWSlljRTVTUjJRelZERmFkbGRCY0VWV1JURTJWRlZTVW1WRk5WVlNXSEJPVWtka00xUXhXblprTUhCeFVsWk9UbEZyUmtoUlZFWldVbFZPTkZSVmNHbE5NRXB6V1cwMVQySXlSbGhYYWtKT1ZXdEdNMUpIWkZwU1JscFNWVlZTUm1ReVVqVkRiVWw1VDFSQ1RWWXdOVzlVVld4S1VXdHNjVkZWTlVOYU1uUjRZVWQwY0ZKNmJETk5SVXBDVlZWV1IxRlZSbEJSTUVaU1QwVkdUbE5WYkVOUk1tUk1VVEJHVWxKVlJucFpWRll6V1hwU1UyUjZXbEpSVjBWTFZqQTVlVTFHV2xsUFZGWkhXVEIzY2xkRWJIaFhhbFowWWxNNGVVNTVPVlZrTW5SeVZsUmpNRmw2YURGU01Ea3pWRmhrYWxaSFRYcGpNRnBOVjFkNFVXRXpiREpYYW1SMFZsZE9VVlF4UW5WYWVsWnhZMmR2ZGs0eFNsQmxSelZNVFZWM2QxVkVSbGROYTFKYVVUQndNR0V6WXpGak1rMTRZbnBzTUdWRVVtOVdWV2hKVFZSS01XSXhZekJWYlRsdFRXdEplVkZXVWs5aVNGSXlVbFUxYzJKc1FrWmliR1JVWVd4U05VTnRaRVZhYWxKVVl6STFTR0ZZU2pWa01VNVpXa1V4VTFwSVFYcExNRTR5VWpKV2FsRlZSbTFhVjNjMVQwaFdVV1JGV1hwalYyUTFXbTVTVTJORlRUSlNhVGg2VTIxV1ZWUkZVVFJhTWpsRFVUQkpNV0ZYYTB0V1IzTXlUVVJLV1U1clJrMU9WVTF5VmpCc1VrMXViRVpTTTFaSlZEQjBSRTlHYkZsWGFsSjNUMWRPVW1SRE9VeFRSVTVJVTNrNWFWVlZWWGhqTVZKR1ZrVktNbGx1UmxOTk1IUlVWRzVLZDFVeFRYcFdRWEEwVFVaYVFsbFZlR3RPTURWNFVXeEdRMU5XUm1oaE0yUlZZWHBPTUV0NlpIcGhWWEJYV2taa2JHSkVXbFphYWtVeFpWZDBhV0o2U2tSVmEyUmhZMWhHUzAxWFRYWlpWbWhMVGxoa1ZGRlZhR0ZOTVVaMVEyMWFObU51U2twU1NGSTFVMnhHU2xKRlJsSlJWVXAyVFVWc00xVlZVa0pVTUVwdVZHeGFTVlZVYUVOUlYxazBVbFZLUWxSVlRrSmpWa1l6VWtoa1dsSkdXbE5OUmxKQ1ZWVm5kbEZyUmxaa01FWXpVbFZKUzB3emNFSmFSVXB1Vkd4YVNWVlVVa1pTYldSU1ZsZFZNR0V6YkZWbFJURkdUV3QwZUZaWVdtMU9NalF6VVRKVk5GTnRTVEZVTWtvellUTmtSVlZXYkV0VE1qbGhVMWRvTWxrd05VSlZWVlpOVVd4R1FsSkJjRzVhTUZaRFVWVm9lRlZYWkV4YVJ6bHNWbFYwUkdSSFZtMVVWRm93VlRKSmQxWkhPWGRrUTNST1ZWaE9URmt3WkhsTU1VcEdZbGRzUTFWcE9VMVNSVVpvV1RJeGEwOVlXbGRYVlUxNVZUQnNTMUZyTVZSRGJHUjNZMnBzVTFNeWJISmxSVTV4VFZSc1JsTkVaSE5NTVVaeVlrZEtObUV3VmxSalV6azJWRlZzV1ZSdGNHRlZNMDVJVlZSR1NscFhjRUpSTUZKVFpGWldSRnA2UmxSVE1qRnpXa2hzUW1WRGRFaGxiVmxMVFROT1lXVldVbGRWUjNnMlRrWk9NMUV3Y0VoTk0wSnVUVWMwZVVzeVZtcFJXRkY0VGtkU1VWWkZhSFZqUlZZMldXeE9NMVpGWkVsTE1XdzBZVzVPVlU0eldrUmhla1Y2VFZWU05rOUZOVU5pTW5SRFUzZHdlVkY2VmpCaFZVNUpWMGRLTUUxR2EzbGpTRUl4Wlcxa2FtRldVVFJQV0d4SldXeEtUMWRITVZWa1dHUjBXa2hvZFZaVlduUmhSMGwzWXpGQ1JWZEdTalJXTWpGU1V6QnJNR0pJYUhKU1IxWlVWa1pDVmtOdE9URmliRnAzWWxkME5GTnNRWHBYVnpsTFkxaEtRMXBHV2paVVZ6VkhXbTFLZEZJeVVuWk1NMDAwVGpOS05GcHVaekZqYmxKeVkxWldWRTlWVm5SaVJHZzFUakkxYTFJeGNFdFVXRWw1VjBSQ2MyUXdXVXRqYlZwd1RWUmplRkp0TkRKV01sSlJXa1ZLYTFKWFVrbFdSRkV3VTBoV1RGTlZVblpRVVc5MFRGTXdkRXhWVms5U1EwSkVVbFpLVlZOVldrcFJNRVpWVWxNd2RFeFRNSFJEWnowOUluMWRmWDBzSW5abGNuTnBiMjRpT2lJekxqSXVNQ0o5ZlE9PQo="
        },
        "MachineConfigFiles": [
            {
                "Filename": "openshift/99_openshift-machineconfig_99-master-ssh.yaml",
                "Data": "YXBpVmVyc2lvbjogbWFjaGluZWNvbmZpZ3VyYXRpb24ub3BlbnNoaWZ0LmlvL3YxCmtpbmQ6IE1hY2hpbmVDb25maWcKbWV0YWRhdGE6CiAgY3JlYXRpb25UaW1lc3RhbXA6IG51bGwKICBsYWJlbHM6CiAgICBtYWNoaW5lY29uZmlndXJhdGlvbi5vcGVuc2hpZnQuaW8vcm9sZTogbWFzdGVyCiAgbmFtZTogOTktbWFzdGVyLXNzaApzcGVjOgogIGNvbmZpZzoKICAgIGlnbml0aW9uOgogICAgICB2ZXJzaW9uOiAzLjIuMAogICAgcGFzc3dkOgogICAgICB1c2VyczoKICAgICAgLSBuYW1lOiBjb3JlCiAgICAgICAgc3NoQXV0aG9yaXplZEtleXM6CiAgICAgICAgLSB8CiAgICAgICAgICBzc2gtcnNhIEFBQUFCM056YUMxeWMyRUFBQUFEQVFBQkFBQUJnUURVckR1NlUrNC9QeFBZSDBneVBUaTVvbnFleWVxbXdnS1hlaDhxVGVlNlhKM1piazB1SnRNYmIweDBWcmtacWFvOCs4cmF6K0ZPVCtBYmJFamp4TWIxK0M0UUxDNkVtRHJDTVRMc1dpSSt5SGx4SCtnOUZPNXYrZzVoVVFlNk10ekhkd2pEMjlrMHpDNUFEaDJ4V1djejBud1o5Ym9yaFlVRjNYYVJCQjZ5TjJEZUIrSGV4L3pON2dldWVWeEl0OHphZHF0YUVxdmdGcmpQUDljWGppano0K1F3T2psVStPR1lwOUlZc25NbUdDNTVBRlBlRWhLaUZXRzFEb0VmbHMzREJKYVdFM0U4ZW1DakVQNDlxOVpNd0pEQWYyUmdrS0pieWxxOGMyYi9SNEpRRUJQN1lxRFV6TWtZamYrQkg4dTlhZWdnTDVvR1RKVUtrSlZHb1FaUXlqQ1lnODk5bFZUeDVhUHd3cFpUdE1jMHRBWnBld01WYzJWcGFpR0xWWVJuTXFMd0JHVnZlRDVpTVU0aXJYRGRZV0dCMU0zQkxaSWZOR3hmV3JicEtQQ3RsMit0OERGNUZEUU1NdG9RZHpvcDlzVTJaM1RKc05JM2lQUDJqakE3NGp5OWFaSk13cXp6V095R29NR3RTc2VjZFd4WWFlTVNSeXNIZEJUR0Myaz0gZmFlcm1hbmpAZmVkb3JhCiAgZXh0ZW5zaW9uczogbnVsbAogIGZpcHM6IGZhbHNlCiAga2VybmVsQXJndW1lbnRzOiBudWxsCiAga2VybmVsVHlwZTogIiIKICBvc0ltYWdlVVJMOiAiIgo="
            }
        ],
        "MachineFiles": [
            {
                "Filename": "openshift/99_openshift-cluster-api_master-machines-0.yaml",
                "Data": "YXBpVmVyc2lvbjogbWFjaGluZS5vcGVuc2hpZnQuaW8vdjFiZXRhMQpraW5kOiBNYWNoaW5lCm1ldGFkYXRhOgogIGNyZWF0aW9uVGltZXN0YW1wOiBudWxsCiAgbGFiZWxzOgogICAgbWFjaGluZS5vcGVuc2hpZnQuaW8vY2x1c3Rlci1hcGktY2x1c3RlcjogcmVkcG9kLWF3cy1zbm8tbmc1c3IKICAgIG1hY2hpbmUub3BlbnNoaWZ0LmlvL2NsdXN0ZXItYXBpLW1hY2hpbmUtcm9sZTogbWFzdGVyCiAgICBtYWNoaW5lLm9wZW5zaGlmdC5pby9jbHVzdGVyLWFwaS1tYWNoaW5lLXR5cGU6IG1hc3RlcgogIG5hbWU6IHJlZHBvZC1hd3Mtc25vLW5nNXNyLW1hc3Rlci0wCiAgbmFtZXNwYWNlOiBvcGVuc2hpZnQtbWFjaGluZS1hcGkKc3BlYzoKICBsaWZlY3ljbGVIb29rczoge30KICBtZXRhZGF0YToge30KICBwcm92aWRlclNwZWM6CiAgICB2YWx1ZToKICAgICAgYW1pOgogICAgICAgIGlkOiBhbWktMDBmYjRkOTY4ODZmNTVhMzEKICAgICAgYXBpVmVyc2lvbjogbWFjaGluZS5vcGVuc2hpZnQuaW8vdjFiZXRhMQogICAgICBibG9ja0RldmljZXM6CiAgICAgIC0gZWJzOgogICAgICAgICAgZW5jcnlwdGVkOiB0cnVlCiAgICAgICAgICBpb3BzOiAwCiAgICAgICAgICBrbXNLZXk6CiAgICAgICAgICAgIGFybjogIiIKICAgICAgICAgIHZvbHVtZVNpemU6IDY0CiAgICAgICAgICB2b2x1bWVUeXBlOiBncDMKICAgICAgY3JlZGVudGlhbHNTZWNyZXQ6CiAgICAgICAgbmFtZTogYXdzLWNsb3VkLWNyZWRlbnRpYWxzCiAgICAgIGRldmljZUluZGV4OiAwCiAgICAgIGlhbUluc3RhbmNlUHJvZmlsZToKICAgICAgICBpZDogcmVkcG9kLWF3cy1zbm8tbmc1c3ItbWFzdGVyLXByb2ZpbGUKICAgICAgaW5zdGFuY2VUeXBlOiByNS4yeGxhcmdlCiAgICAgIGtpbmQ6IEFXU01hY2hpbmVQcm92aWRlckNvbmZpZwogICAgICBsb2FkQmFsYW5jZXJzOgogICAgICAtIG5hbWU6IHJlZHBvZC1hd3Mtc25vLW5nNXNyLWludAogICAgICAgIHR5cGU6IG5ldHdvcmsKICAgICAgLSBuYW1lOiByZWRwb2QtYXdzLXNuby1uZzVzci1leHQKICAgICAgICB0eXBlOiBuZXR3b3JrCiAgICAgIG1ldGFkYXRhOgogICAgICAgIGNyZWF0aW9uVGltZXN0YW1wOiBudWxsCiAgICAgIG1ldGFkYXRhU2VydmljZU9wdGlvbnM6IHt9CiAgICAgIHBsYWNlbWVudDoKICAgICAgICBhdmFpbGFiaWxpdHlab25lOiB1cy13ZXN0LTJhCiAgICAgICAgcmVnaW9uOiB1cy13ZXN0LTIKICAgICAgc2VjdXJpdHlHcm91cHM6CiAgICAgIC0gZmlsdGVyczoKICAgICAgICAtIG5hbWU6IHRhZzpOYW1lCiAgICAgICAgICB2YWx1ZXM6CiAgICAgICAgICAtIHJlZHBvZC1hd3Mtc25vLW5nNXNyLW1hc3Rlci1zZwogICAgICBzdWJuZXQ6CiAgICAgICAgZmlsdGVyczoKICAgICAgICAtIG5hbWU6IHRhZzpOYW1lCiAgICAgICAgICB2YWx1ZXM6CiAgICAgICAgICAtIHJlZHBvZC1hd3Mtc25vLW5nNXNyLXByaXZhdGUtdXMtd2VzdC0yYQogICAgICB0YWdzOgogICAgICAtIG5hbWU6IGt1YmVybmV0ZXMuaW8vY2x1c3Rlci9yZWRwb2QtYXdzLXNuby1uZzVzcgogICAgICAgIHZhbHVlOiBvd25lZAogICAgICB1c2VyRGF0YVNlY3JldDoKICAgICAgICBuYW1lOiBtYXN0ZXItdXNlci1kYXRhCnN0YXR1czoge30K"
            }
        ],
        "ControlPlaneMachineSet": null,
        "SecretFiles": null,
        "NetworkConfigSecretFiles": null,
        "HostFiles": null
    },
    "*machines.Worker": {
        "UserDataFile": {
            "Filename": "openshift/99_openshift-cluster-api_worker-user-data-secret.yaml",
            "Data": "YXBpVmVyc2lvbjogdjEKa2luZDogU2VjcmV0Cm1ldGFkYXRhOgogIG5hbWU6IHdvcmtlci11c2VyLWRhdGEKICBuYW1lc3BhY2U6IG9wZW5zaGlmdC1tYWNoaW5lLWFwaQp0eXBlOiBPcGFxdWUKZGF0YToKICBkaXNhYmxlVGVtcGxhdGluZzogImRISjFaUW89IgogIHVzZXJEYXRhOiBleUpwWjI1cGRHbHZiaUk2ZXlKamIyNW1hV2NpT25zaWJXVnlaMlVpT2x0N0luTnZkWEpqWlNJNkltaDBkSEJ6T2k4dllYQnBMV2x1ZEM1eVpXUndiMlF0WVhkekxYTnVieTVrWlhaamJIVnpkR1Z5TG05d1pXNXphR2xtZEM1amIyMDZNakkyTWpNdlkyOXVabWxuTDNkdmNtdGxjaUo5WFgwc0luTmxZM1Z5YVhSNUlqcDdJblJzY3lJNmV5SmpaWEowYVdacFkyRjBaVUYxZEdodmNtbDBhV1Z6SWpwYmV5SnpiM1Z5WTJVaU9pSmtZWFJoT25SbGVIUXZjR3hoYVc0N1kyaGhjbk5sZEQxMWRHWXRPRHRpWVhObE5qUXNURk13ZEV4VE1VTlNWV1JLVkdsQ1JGSldTbFZUVlZwS1VUQkdWVkpUTUhSTVV6QjBRMnN4U2xOVlVrWlNSVTVFVVZkYWNGb3dSak5UVlVwQ1dqQnNTbFpVVm5CVVYxcHNWRVZHZWsxR1ZqTlNSa1phVTJ0MGRsZHJiRzlrYlU1UFVWWkdSbFJGU2xKUldHUkxZV3RXVkZSVlNrSlNNRVY0VmxWVlMxRXphRTVUYlVsNlVXMTRhV0pyTlhaWlZtUmhUVVV4VTFGWVpFVmFNV3hGVm14R1VsSkZWak5hU0d4cFRXcHJkMVJHWkU5aFJURkRUa1pvUlZaRmJEWlVWVkpTWlVVNVJWSlljRTVTUjJRelZERmFkbGRCY0VWV1JURTJWRlZTVW1WRk5WVlNXSEJPVWtka00xUXhXblprTUhCeFVsWk9UbEZyUmtoUlZFWldVbFZPTkZSVmNHbE5NRXB6V1cwMVQySXlSbGhYYWtKT1ZXdEdNMUpIWkZwU1JscFNWVlZTUm1ReVVqVkRiVWw1VDFSQ1RWWXdOVzlVVld4S1VXdHNjVkZWTlVOYU1uUjRZVWQwY0ZKNmJETk5SVXBDVlZWV1IxRlZSbEJSTUVaU1QwVkdUbE5WYkVOUk1tUk1VVEJHVWxKVlJucFpWRll6V1hwU1UyUjZXbEpSVjBWTFZqQTVlVTFHV2xsUFZGWkhXVEIzY2xkRWJIaFhhbFowWWxNNGVVNTVPVlZrTW5SeVZsUmpNRmw2YURGU01Ea3pWRmhrYWxaSFRYcGpNRnBOVjFkNFVXRXpiREpYYW1SMFZsZE9VVlF4UW5WYWVsWnhZMmR2ZGs0eFNsQmxSelZNVFZWM2QxVkVSbGROYTFKYVVUQndNR0V6WXpGak1rMTRZbnBzTUdWRVVtOVdWV2hKVFZSS01XSXhZekJWYlRsdFRXdEplVkZXVWs5aVNGSXlVbFUxYzJKc1FrWmliR1JVWVd4U05VTnRaRVZhYWxKVVl6STFTR0ZZU2pWa01VNVpXa1V4VTFwSVFYcExNRTR5VWpKV2FsRlZSbTFhVjNjMVQwaFdVV1JGV1hwalYyUTFXbTVTVTJORlRUSlNhVGg2VTIxV1ZWUkZVVFJhTWpsRFVUQkpNV0ZYYTB0V1IzTXlUVVJLV1U1clJrMU9WVTF5VmpCc1VrMXViRVpTTTFaSlZEQjBSRTlHYkZsWGFsSjNUMWRPVW1SRE9VeFRSVTVJVTNrNWFWVlZWWGhqTVZKR1ZrVktNbGx1UmxOTk1IUlVWRzVLZDFVeFRYcFdRWEEwVFVaYVFsbFZlR3RPTURWNFVXeEdRMU5XUm1oaE0yUlZZWHBPTUV0NlpIcGhWWEJYV2taa2JHSkVXbFphYWtVeFpWZDBhV0o2U2tSVmEyUmhZMWhHUzAxWFRYWlpWbWhMVGxoa1ZGRlZhR0ZOTVVaMVEyMWFObU51U2twU1NGSTFVMnhHU2xKRlJsSlJWVXAyVFVWc00xVlZVa0pVTUVwdVZHeGFTVlZVYUVOUlYxazBVbFZLUWxSVlRrSmpWa1l6VWtoa1dsSkdXbE5OUmxKQ1ZWVm5kbEZyUmxaa01FWXpVbFZKUzB3emNFSmFSVXB1Vkd4YVNWVlVVa1pTYldSU1ZsZFZNR0V6YkZWbFJURkdUV3QwZUZaWVdtMU9NalF6VVRKVk5GTnRTVEZVTWtvellUTmtSVlZXYkV0VE1qbGhVMWRvTWxrd05VSlZWVlpOVVd4R1FsSkJjRzVhTUZaRFVWVm9lRlZYWkV4YVJ6bHNWbFYwUkdSSFZtMVVWRm93VlRKSmQxWkhPWGRrUTNST1ZWaE9URmt3WkhsTU1VcEdZbGRzUTFWcE9VMVNSVVpvV1RJeGEwOVlXbGRYVlUxNVZUQnNTMUZyTVZSRGJHUjNZMnBzVTFNeWJISmxSVTV4VFZSc1JsTkVaSE5NTVVaeVlrZEtObUV3VmxSalV6azJWRlZzV1ZSdGNHRlZNMDVJVlZSR1NscFhjRUpSTUZKVFpGWldSRnA2UmxSVE1qRnpXa2hzUW1WRGRFaGxiVmxMVFROT1lXVldVbGRWUjNnMlRrWk9NMUV3Y0VoTk0wSnVUVWMwZVVzeVZtcFJXRkY0VGtkU1VWWkZhSFZqUlZZMldXeE9NMVpGWkVsTE1XdzBZVzVPVlU0eldrUmhla1Y2VFZWU05rOUZOVU5pTW5SRFUzZHdlVkY2VmpCaFZVNUpWMGRLTUUxR2EzbGpTRUl4Wlcxa2FtRldVVFJQV0d4SldXeEtUMWRITVZWa1dHUjBXa2hvZFZaVlduUmhSMGwzWXpGQ1JWZEdTalJXTWpGU1V6QnJNR0pJYUhKU1IxWlVWa1pDVmtOdE9URmliRnAzWWxkME5GTnNRWHBYVnpsTFkxaEtRMXBHV2paVVZ6VkhXbTFLZEZJeVVuWk1NMDAwVGpOS05GcHVaekZqYmxKeVkxWldWRTlWVm5SaVJHZzFUakkxYTFJeGNFdFVXRWw1VjBSQ2MyUXdXVXRqYlZwd1RWUmplRkp0TkRKV01sSlJXa1ZLYTFKWFVrbFdSRkV3VTBoV1RGTlZVblpRVVc5MFRGTXdkRXhWVms5U1EwSkVVbFpLVlZOVldrcFJNRVpWVWxNd2RFeFRNSFJEWnowOUluMWRmWDBzSW5abGNuTnBiMjRpT2lJekxqSXVNQ0o5ZlE9PQo="
        },
        "MachineConfigFiles": [
            {
                "Filename": "openshift/99_openshift-machineconfig_99-worker-ssh.yaml",
                "Data": "YXBpVmVyc2lvbjogbWFjaGluZWNvbmZpZ3VyYXRpb24ub3BlbnNoaWZ0LmlvL3YxCmtpbmQ6IE1hY2hpbmVDb25maWcKbWV0YWRhdGE6CiAgY3JlYXRpb25UaW1lc3RhbXA6IG51bGwKICBsYWJlbHM6CiAgICBtYWNoaW5lY29uZmlndXJhdGlvbi5vcGVuc2hpZnQuaW8vcm9sZTogd29ya2VyCiAgbmFtZTogOTktd29ya2VyLXNzaApzcGVjOgogIGNvbmZpZzoKICAgIGlnbml0aW9uOgogICAgICB2ZXJzaW9uOiAzLjIuMAogICAgcGFzc3dkOgogICAgICB1c2VyczoKICAgICAgLSBuYW1lOiBjb3JlCiAgICAgICAgc3NoQXV0aG9yaXplZEtleXM6CiAgICAgICAgLSB8CiAgICAgICAgICBzc2gtcnNhIEFBQUFCM056YUMxeWMyRUFBQUFEQVFBQkFBQUJnUURVckR1NlUrNC9QeFBZSDBneVBUaTVvbnFleWVxbXdnS1hlaDhxVGVlNlhKM1piazB1SnRNYmIweDBWcmtacWFvOCs4cmF6K0ZPVCtBYmJFamp4TWIxK0M0UUxDNkVtRHJDTVRMc1dpSSt5SGx4SCtnOUZPNXYrZzVoVVFlNk10ekhkd2pEMjlrMHpDNUFEaDJ4V1djejBud1o5Ym9yaFlVRjNYYVJCQjZ5TjJEZUIrSGV4L3pON2dldWVWeEl0OHphZHF0YUVxdmdGcmpQUDljWGppano0K1F3T2psVStPR1lwOUlZc25NbUdDNTVBRlBlRWhLaUZXRzFEb0VmbHMzREJKYVdFM0U4ZW1DakVQNDlxOVpNd0pEQWYyUmdrS0pieWxxOGMyYi9SNEpRRUJQN1lxRFV6TWtZamYrQkg4dTlhZWdnTDVvR1RKVUtrSlZHb1FaUXlqQ1lnODk5bFZUeDVhUHd3cFpUdE1jMHRBWnBld01WYzJWcGFpR0xWWVJuTXFMd0JHVnZlRDVpTVU0aXJYRGRZV0dCMU0zQkxaSWZOR3hmV3JicEtQQ3RsMit0OERGNUZEUU1NdG9RZHpvcDlzVTJaM1RKc05JM2lQUDJqakE3NGp5OWFaSk13cXp6V095R29NR3RTc2VjZFd4WWFlTVNSeXNIZEJUR0Myaz0gZmFlcm1hbmpAZmVkb3JhCiAgZXh0ZW5zaW9uczogbnVsbAogIGZpcHM6IGZhbHNlCiAga2VybmVsQXJndW1lbnRzOiBudWxsCiAga2VybmVsVHlwZTogIiIKICBvc0ltYWdlVVJMOiAiIgo="
            }
        ],
        "MachineSetFiles": [
            {
                "Filename": "openshift/99_openshift-cluster-api_worker-machineset-0.yaml",
                "Data": "YXBpVmVyc2lvbjogbWFjaGluZS5vcGVuc2hpZnQuaW8vdjFiZXRhMQpraW5kOiBNYWNoaW5lU2V0Cm1ldGFkYXRhOgogIGNyZWF0aW9uVGltZXN0YW1wOiBudWxsCiAgbGFiZWxzOgogICAgbWFjaGluZS5vcGVuc2hpZnQuaW8vY2x1c3Rlci1hcGktY2x1c3RlcjogcmVkcG9kLWF3cy1zbm8tbmc1c3IKICBuYW1lOiByZWRwb2QtYXdzLXNuby1uZzVzci13b3JrZXItdXMtd2VzdC0yYQogIG5hbWVzcGFjZTogb3BlbnNoaWZ0LW1hY2hpbmUtYXBpCnNwZWM6CiAgcmVwbGljYXM6IDAKICBzZWxlY3RvcjoKICAgIG1hdGNoTGFiZWxzOgogICAgICBtYWNoaW5lLm9wZW5zaGlmdC5pby9jbHVzdGVyLWFwaS1jbHVzdGVyOiByZWRwb2QtYXdzLXNuby1uZzVzcgogICAgICBtYWNoaW5lLm9wZW5zaGlmdC5pby9jbHVzdGVyLWFwaS1tYWNoaW5lc2V0OiByZWRwb2QtYXdzLXNuby1uZzVzci13b3JrZXItdXMtd2VzdC0yYQogIHRlbXBsYXRlOgogICAgbWV0YWRhdGE6CiAgICAgIGxhYmVsczoKICAgICAgICBtYWNoaW5lLm9wZW5zaGlmdC5pby9jbHVzdGVyLWFwaS1jbHVzdGVyOiByZWRwb2QtYXdzLXNuby1uZzVzcgogICAgICAgIG1hY2hpbmUub3BlbnNoaWZ0LmlvL2NsdXN0ZXItYXBpLW1hY2hpbmUtcm9sZTogd29ya2VyCiAgICAgICAgbWFjaGluZS5vcGVuc2hpZnQuaW8vY2x1c3Rlci1hcGktbWFjaGluZS10eXBlOiB3b3JrZXIKICAgICAgICBtYWNoaW5lLm9wZW5zaGlmdC5pby9jbHVzdGVyLWFwaS1tYWNoaW5lc2V0OiByZWRwb2QtYXdzLXNuby1uZzVzci13b3JrZXItdXMtd2VzdC0yYQogICAgc3BlYzoKICAgICAgbGlmZWN5Y2xlSG9va3M6IHt9CiAgICAgIG1ldGFkYXRhOiB7fQogICAgICBwcm92aWRlclNwZWM6CiAgICAgICAgdmFsdWU6CiAgICAgICAgICBhbWk6CiAgICAgICAgICAgIGlkOiBhbWktMDBmYjRkOTY4ODZmNTVhMzEKICAgICAgICAgIGFwaVZlcnNpb246IG1hY2hpbmUub3BlbnNoaWZ0LmlvL3YxYmV0YTEKICAgICAgICAgIGJsb2NrRGV2aWNlczoKICAgICAgICAgIC0gZWJzOgogICAgICAgICAgICAgIGVuY3J5cHRlZDogdHJ1ZQogICAgICAgICAgICAgIGlvcHM6IDAKICAgICAgICAgICAgICBrbXNLZXk6CiAgICAgICAgICAgICAgICBhcm46ICIiCiAgICAgICAgICAgICAgdm9sdW1lU2l6ZTogMTIwCiAgICAgICAgICAgICAgdm9sdW1lVHlwZTogZ3AzCiAgICAgICAgICBjcmVkZW50aWFsc1NlY3JldDoKICAgICAgICAgICAgbmFtZTogYXdzLWNsb3VkLWNyZWRlbnRpYWxzCiAgICAgICAgICBkZXZpY2VJbmRleDogMAogICAgICAgICAgaWFtSW5zdGFuY2VQcm9maWxlOgogICAgICAgICAgICBpZDogcmVkcG9kLWF3cy1zbm8tbmc1c3Itd29ya2VyLXByb2ZpbGUKICAgICAgICAgIGluc3RhbmNlVHlwZTogbTZpLnhsYXJnZQogICAgICAgICAga2luZDogQVdTTWFjaGluZVByb3ZpZGVyQ29uZmlnCiAgICAgICAgICBtZXRhZGF0YToKICAgICAgICAgICAgY3JlYXRpb25UaW1lc3RhbXA6IG51bGwKICAgICAgICAgIG1ldGFkYXRhU2VydmljZU9wdGlvbnM6IHt9CiAgICAgICAgICBwbGFjZW1lbnQ6CiAgICAgICAgICAgIGF2YWlsYWJpbGl0eVpvbmU6IHVzLXdlc3QtMmEKICAgICAgICAgICAgcmVnaW9uOiB1cy13ZXN0LTIKICAgICAgICAgIHNlY3VyaXR5R3JvdXBzOgogICAgICAgICAgLSBmaWx0ZXJzOgogICAgICAgICAgICAtIG5hbWU6IHRhZzpOYW1lCiAgICAgICAgICAgICAgdmFsdWVzOgogICAgICAgICAgICAgIC0gcmVkcG9kLWF3cy1zbm8tbmc1c3Itd29ya2VyLXNnCiAgICAgICAgICBzdWJuZXQ6CiAgICAgICAgICAgIGZpbHRlcnM6CiAgICAgICAgICAgIC0gbmFtZTogdGFnOk5hbWUKICAgICAgICAgICAgICB2YWx1ZXM6CiAgICAgICAgICAgICAgLSByZWRwb2QtYXdzLXNuby1uZzVzci1wcml2YXRlLXVzLXdlc3QtMmEKICAgICAgICAgIHRhZ3M6CiAgICAgICAgICAtIG5hbWU6IGt1YmVybmV0ZXMuaW8vY2x1c3Rlci9yZWRwb2QtYXdzLXNuby1uZzVzcgogICAgICAgICAgICB2YWx1ZTogb3duZWQKICAgICAgICAgIHVzZXJEYXRhU2VjcmV0OgogICAgICAgICAgICBuYW1lOiB3b3JrZXItdXNlci1kYXRhCnN0YXR1czoKICByZXBsaWNhczogMAo="
            },
            {
                "Filename": "openshift/99_openshift-cluster-api_worker-machineset-1.yaml",
                "Data": "YXBpVmVyc2lvbjogbWFjaGluZS5vcGVuc2hpZnQuaW8vdjFiZXRhMQpraW5kOiBNYWNoaW5lU2V0Cm1ldGFkYXRhOgogIGNyZWF0aW9uVGltZXN0YW1wOiBudWxsCiAgbGFiZWxzOgogICAgbWFjaGluZS5vcGVuc2hpZnQuaW8vY2x1c3Rlci1hcGktY2x1c3RlcjogcmVkcG9kLWF3cy1zbm8tbmc1c3IKICBuYW1lOiByZWRwb2QtYXdzLXNuby1uZzVzci13b3JrZXItdXMtd2VzdC0yYgogIG5hbWVzcGFjZTogb3BlbnNoaWZ0LW1hY2hpbmUtYXBpCnNwZWM6CiAgcmVwbGljYXM6IDAKICBzZWxlY3RvcjoKICAgIG1hdGNoTGFiZWxzOgogICAgICBtYWNoaW5lLm9wZW5zaGlmdC5pby9jbHVzdGVyLWFwaS1jbHVzdGVyOiByZWRwb2QtYXdzLXNuby1uZzVzcgogICAgICBtYWNoaW5lLm9wZW5zaGlmdC5pby9jbHVzdGVyLWFwaS1tYWNoaW5lc2V0OiByZWRwb2QtYXdzLXNuby1uZzVzci13b3JrZXItdXMtd2VzdC0yYgogIHRlbXBsYXRlOgogICAgbWV0YWRhdGE6CiAgICAgIGxhYmVsczoKICAgICAgICBtYWNoaW5lLm9wZW5zaGlmdC5pby9jbHVzdGVyLWFwaS1jbHVzdGVyOiByZWRwb2QtYXdzLXNuby1uZzVzcgogICAgICAgIG1hY2hpbmUub3BlbnNoaWZ0LmlvL2NsdXN0ZXItYXBpLW1hY2hpbmUtcm9sZTogd29ya2VyCiAgICAgICAgbWFjaGluZS5vcGVuc2hpZnQuaW8vY2x1c3Rlci1hcGktbWFjaGluZS10eXBlOiB3b3JrZXIKICAgICAgICBtYWNoaW5lLm9wZW5zaGlmdC5pby9jbHVzdGVyLWFwaS1tYWNoaW5lc2V0OiByZWRwb2QtYXdzLXNuby1uZzVzci13b3JrZXItdXMtd2VzdC0yYgogICAgc3BlYzoKICAgICAgbGlmZWN5Y2xlSG9va3M6IHt9CiAgICAgIG1ldGFkYXRhOiB7fQogICAgICBwcm92aWRlclNwZWM6CiAgICAgICAgdmFsdWU6CiAgICAgICAgICBhbWk6CiAgICAgICAgICAgIGlkOiBhbWktMDBmYjRkOTY4ODZmNTVhMzEKICAgICAgICAgIGFwaVZlcnNpb246IG1hY2hpbmUub3BlbnNoaWZ0LmlvL3YxYmV0YTEKICAgICAgICAgIGJsb2NrRGV2aWNlczoKICAgICAgICAgIC0gZWJzOgogICAgICAgICAgICAgIGVuY3J5cHRlZDogdHJ1ZQogICAgICAgICAgICAgIGlvcHM6IDAKICAgICAgICAgICAgICBrbXNLZXk6CiAgICAgICAgICAgICAgICBhcm46ICIiCiAgICAgICAgICAgICAgdm9sdW1lU2l6ZTogMTIwCiAgICAgICAgICAgICAgdm9sdW1lVHlwZTogZ3AzCiAgICAgICAgICBjcmVkZW50aWFsc1NlY3JldDoKICAgICAgICAgICAgbmFtZTogYXdzLWNsb3VkLWNyZWRlbnRpYWxzCiAgICAgICAgICBkZXZpY2VJbmRleDogMAogICAgICAgICAgaWFtSW5zdGFuY2VQcm9maWxlOgogICAgICAgICAgICBpZDogcmVkcG9kLWF3cy1zbm8tbmc1c3Itd29ya2VyLXByb2ZpbGUKICAgICAgICAgIGluc3RhbmNlVHlwZTogbTZpLnhsYXJnZQogICAgICAgICAga2luZDogQVdTTWFjaGluZVByb3ZpZGVyQ29uZmlnCiAgICAgICAgICBtZXRhZGF0YToKICAgICAgICAgICAgY3JlYXRpb25UaW1lc3RhbXA6IG51bGwKICAgICAgICAgIG1ldGFkYXRhU2VydmljZU9wdGlvbnM6IHt9CiAgICAgICAgICBwbGFjZW1lbnQ6CiAgICAgICAgICAgIGF2YWlsYWJpbGl0eVpvbmU6IHVzLXdlc3QtMmIKICAgICAgICAgICAgcmVnaW9uOiB1cy13ZXN0LTIKICAgICAgICAgIHNlY3VyaXR5R3JvdXBzOgogICAgICAgICAgLSBmaWx0ZXJzOgogICAgICAgICAgICAtIG5hbWU6IHRhZzpOYW1lCiAgICAgICAgICAgICAgdmFsdWVzOgogICAgICAgICAgICAgIC0gcmVkcG9kLWF3cy1zbm8tbmc1c3Itd29ya2VyLXNnCiAgICAgICAgICBzdWJuZXQ6CiAgICAgICAgICAgIGZpbHRlcnM6CiAgICAgICAgICAgIC0gbmFtZTogdGFnOk5hbWUKICAgICAgICAgICAgICB2YWx1ZXM6CiAgICAgICAgICAgICAgLSByZWRwb2QtYXdzLXNuby1uZzVzci1wcml2YXRlLXVzLXdlc3QtMmIKICAgICAgICAgIHRhZ3M6CiAgICAgICAgICAtIG5hbWU6IGt1YmVybmV0ZXMuaW8vY2x1c3Rlci9yZWRwb2QtYXdzLXNuby1uZzVzcgogICAgICAgICAgICB2YWx1ZTogb3duZWQKICAgICAgICAgIHVzZXJEYXRhU2VjcmV0OgogICAgICAgICAgICBuYW1lOiB3b3JrZXItdXNlci1kYXRhCnN0YXR1czoKICByZXBsaWNhczogMAo="
            },
            {
                "Filename": "openshift/99_openshift-cluster-api_worker-machineset-2.yaml",
                "Data": "YXBpVmVyc2lvbjogbWFjaGluZS5vcGVuc2hpZnQuaW8vdjFiZXRhMQpraW5kOiBNYWNoaW5lU2V0Cm1ldGFkYXRhOgogIGNyZWF0aW9uVGltZXN0YW1wOiBudWxsCiAgbGFiZWxzOgogICAgbWFjaGluZS5vcGVuc2hpZnQuaW8vY2x1c3Rlci1hcGktY2x1c3RlcjogcmVkcG9kLWF3cy1zbm8tbmc1c3IKICBuYW1lOiByZWRwb2QtYXdzLXNuby1uZzVzci13b3JrZXItdXMtd2VzdC0yYwogIG5hbWVzcGFjZTogb3BlbnNoaWZ0LW1hY2hpbmUtYXBpCnNwZWM6CiAgcmVwbGljYXM6IDAKICBzZWxlY3RvcjoKICAgIG1hdGNoTGFiZWxzOgogICAgICBtYWNoaW5lLm9wZW5zaGlmdC5pby9jbHVzdGVyLWFwaS1jbHVzdGVyOiByZWRwb2QtYXdzLXNuby1uZzVzcgogICAgICBtYWNoaW5lLm9wZW5zaGlmdC5pby9jbHVzdGVyLWFwaS1tYWNoaW5lc2V0OiByZWRwb2QtYXdzLXNuby1uZzVzci13b3JrZXItdXMtd2VzdC0yYwogIHRlbXBsYXRlOgogICAgbWV0YWRhdGE6CiAgICAgIGxhYmVsczoKICAgICAgICBtYWNoaW5lLm9wZW5zaGlmdC5pby9jbHVzdGVyLWFwaS1jbHVzdGVyOiByZWRwb2QtYXdzLXNuby1uZzVzcgogICAgICAgIG1hY2hpbmUub3BlbnNoaWZ0LmlvL2NsdXN0ZXItYXBpLW1hY2hpbmUtcm9sZTogd29ya2VyCiAgICAgICAgbWFjaGluZS5vcGVuc2hpZnQuaW8vY2x1c3Rlci1hcGktbWFjaGluZS10eXBlOiB3b3JrZXIKICAgICAgICBtYWNoaW5lLm9wZW5zaGlmdC5pby9jbHVzdGVyLWFwaS1tYWNoaW5lc2V0OiByZWRwb2QtYXdzLXNuby1uZzVzci13b3JrZXItdXMtd2VzdC0yYwogICAgc3BlYzoKICAgICAgbGlmZWN5Y2xlSG9va3M6IHt9CiAgICAgIG1ldGFkYXRhOiB7fQogICAgICBwcm92aWRlclNwZWM6CiAgICAgICAgdmFsdWU6CiAgICAgICAgICBhbWk6CiAgICAgICAgICAgIGlkOiBhbWktMDBmYjRkOTY4ODZmNTVhMzEKICAgICAgICAgIGFwaVZlcnNpb246IG1hY2hpbmUub3BlbnNoaWZ0LmlvL3YxYmV0YTEKICAgICAgICAgIGJsb2NrRGV2aWNlczoKICAgICAgICAgIC0gZWJzOgogICAgICAgICAgICAgIGVuY3J5cHRlZDogdHJ1ZQogICAgICAgICAgICAgIGlvcHM6IDAKICAgICAgICAgICAgICBrbXNLZXk6CiAgICAgICAgICAgICAgICBhcm46ICIiCiAgICAgICAgICAgICAgdm9sdW1lU2l6ZTogMTIwCiAgICAgICAgICAgICAgdm9sdW1lVHlwZTogZ3AzCiAgICAgICAgICBjcmVkZW50aWFsc1NlY3JldDoKICAgICAgICAgICAgbmFtZTogYXdzLWNsb3VkLWNyZWRlbnRpYWxzCiAgICAgICAgICBkZXZpY2VJbmRleDogMAogICAgICAgICAgaWFtSW5zdGFuY2VQcm9maWxlOgogICAgICAgICAgICBpZDogcmVkcG9kLWF3cy1zbm8tbmc1c3Itd29ya2VyLXByb2ZpbGUKICAgICAgICAgIGluc3RhbmNlVHlwZTogbTZpLnhsYXJnZQogICAgICAgICAga2luZDogQVdTTWFjaGluZVByb3ZpZGVyQ29uZmlnCiAgICAgICAgICBtZXRhZGF0YToKICAgICAgICAgICAgY3JlYXRpb25UaW1lc3RhbXA6IG51bGwKICAgICAgICAgIG1ldGFkYXRhU2VydmljZU9wdGlvbnM6IHt9CiAgICAgICAgICBwbGFjZW1lbnQ6CiAgICAgICAgICAgIGF2YWlsYWJpbGl0eVpvbmU6IHVzLXdlc3QtMmMKICAgICAgICAgICAgcmVnaW9uOiB1cy13ZXN0LTIKICAgICAgICAgIHNlY3VyaXR5R3JvdXBzOgogICAgICAgICAgLSBmaWx0ZXJzOgogICAgICAgICAgICAtIG5hbWU6IHRhZzpOYW1lCiAgICAgICAgICAgICAgdmFsdWVzOgogICAgICAgICAgICAgIC0gcmVkcG9kLWF3cy1zbm8tbmc1c3Itd29ya2VyLXNnCiAgICAgICAgICBzdWJuZXQ6CiAgICAgICAgICAgIGZpbHRlcnM6CiAgICAgICAgICAgIC0gbmFtZTogdGFnOk5hbWUKICAgICAgICAgICAgICB2YWx1ZXM6CiAgICAgICAgICAgICAgLSByZWRwb2QtYXdzLXNuby1uZzVzci1wcml2YXRlLXVzLXdlc3QtMmMKICAgICAgICAgIHRhZ3M6CiAgICAgICAgICAtIG5hbWU6IGt1YmVybmV0ZXMuaW8vY2x1c3Rlci9yZWRwb2QtYXdzLXNuby1uZzVzcgogICAgICAgICAgICB2YWx1ZTogb3duZWQKICAgICAgICAgIHVzZXJEYXRhU2VjcmV0OgogICAgICAgICAgICBuYW1lOiB3b3JrZXItdXNlci1kYXRhCnN0YXR1czoKICByZXBsaWNhczogMAo="
            },
            {
                "Filename": "openshift/99_openshift-cluster-api_worker-machineset-3.yaml",
                "Data": "YXBpVmVyc2lvbjogbWFjaGluZS5vcGVuc2hpZnQuaW8vdjFiZXRhMQpraW5kOiBNYWNoaW5lU2V0Cm1ldGFkYXRhOgogIGNyZWF0aW9uVGltZXN0YW1wOiBudWxsCiAgbGFiZWxzOgogICAgbWFjaGluZS5vcGVuc2hpZnQuaW8vY2x1c3Rlci1hcGktY2x1c3RlcjogcmVkcG9kLWF3cy1zbm8tbmc1c3IKICBuYW1lOiByZWRwb2QtYXdzLXNuby1uZzVzci13b3JrZXItdXMtd2VzdC0yZAogIG5hbWVzcGFjZTogb3BlbnNoaWZ0LW1hY2hpbmUtYXBpCnNwZWM6CiAgcmVwbGljYXM6IDAKICBzZWxlY3RvcjoKICAgIG1hdGNoTGFiZWxzOgogICAgICBtYWNoaW5lLm9wZW5zaGlmdC5pby9jbHVzdGVyLWFwaS1jbHVzdGVyOiByZWRwb2QtYXdzLXNuby1uZzVzcgogICAgICBtYWNoaW5lLm9wZW5zaGlmdC5pby9jbHVzdGVyLWFwaS1tYWNoaW5lc2V0OiByZWRwb2QtYXdzLXNuby1uZzVzci13b3JrZXItdXMtd2VzdC0yZAogIHRlbXBsYXRlOgogICAgbWV0YWRhdGE6CiAgICAgIGxhYmVsczoKICAgICAgICBtYWNoaW5lLm9wZW5zaGlmdC5pby9jbHVzdGVyLWFwaS1jbHVzdGVyOiByZWRwb2QtYXdzLXNuby1uZzVzcgogICAgICAgIG1hY2hpbmUub3BlbnNoaWZ0LmlvL2NsdXN0ZXItYXBpLW1hY2hpbmUtcm9sZTogd29ya2VyCiAgICAgICAgbWFjaGluZS5vcGVuc2hpZnQuaW8vY2x1c3Rlci1hcGktbWFjaGluZS10eXBlOiB3b3JrZXIKICAgICAgICBtYWNoaW5lLm9wZW5zaGlmdC5pby9jbHVzdGVyLWFwaS1tYWNoaW5lc2V0OiByZWRwb2QtYXdzLXNuby1uZzVzci13b3JrZXItdXMtd2VzdC0yZAogICAgc3BlYzoKICAgICAgbGlmZWN5Y2xlSG9va3M6IHt9CiAgICAgIG1ldGFkYXRhOiB7fQogICAgICBwcm92aWRlclNwZWM6CiAgICAgICAgdmFsdWU6CiAgICAgICAgICBhbWk6CiAgICAgICAgICAgIGlkOiBhbWktMDBmYjRkOTY4ODZmNTVhMzEKICAgICAgICAgIGFwaVZlcnNpb246IG1hY2hpbmUub3BlbnNoaWZ0LmlvL3YxYmV0YTEKICAgICAgICAgIGJsb2NrRGV2aWNlczoKICAgICAgICAgIC0gZWJzOgogICAgICAgICAgICAgIGVuY3J5cHRlZDogdHJ1ZQogICAgICAgICAgICAgIGlvcHM6IDAKICAgICAgICAgICAgICBrbXNLZXk6CiAgICAgICAgICAgICAgICBhcm46ICIiCiAgICAgICAgICAgICAgdm9sdW1lU2l6ZTogMTIwCiAgICAgICAgICAgICAgdm9sdW1lVHlwZTogZ3AzCiAgICAgICAgICBjcmVkZW50aWFsc1NlY3JldDoKICAgICAgICAgICAgbmFtZTogYXdzLWNsb3VkLWNyZWRlbnRpYWxzCiAgICAgICAgICBkZXZpY2VJbmRleDogMAogICAgICAgICAgaWFtSW5zdGFuY2VQcm9maWxlOgogICAgICAgICAgICBpZDogcmVkcG9kLWF3cy1zbm8tbmc1c3Itd29ya2VyLXByb2ZpbGUKICAgICAgICAgIGluc3RhbmNlVHlwZTogbTZpLnhsYXJnZQogICAgICAgICAga2luZDogQVdTTWFjaGluZVByb3ZpZGVyQ29uZmlnCiAgICAgICAgICBtZXRhZGF0YToKICAgICAgICAgICAgY3JlYXRpb25UaW1lc3RhbXA6IG51bGwKICAgICAgICAgIG1ldGFkYXRhU2VydmljZU9wdGlvbnM6IHt9CiAgICAgICAgICBwbGFjZW1lbnQ6CiAgICAgICAgICAgIGF2YWlsYWJpbGl0eVpvbmU6IHVzLXdlc3QtMmQKICAgICAgICAgICAgcmVnaW9uOiB1cy13ZXN0LTIKICAgICAgICAgIHNlY3VyaXR5R3JvdXBzOgogICAgICAgICAgLSBmaWx0ZXJzOgogICAgICAgICAgICAtIG5hbWU6IHRhZzpOYW1lCiAgICAgICAgICAgICAgdmFsdWVzOgogICAgICAgICAgICAgIC0gcmVkcG9kLWF3cy1zbm8tbmc1c3Itd29ya2VyLXNnCiAgICAgICAgICBzdWJuZXQ6CiAgICAgICAgICAgIGZpbHRlcnM6CiAgICAgICAgICAgIC0gbmFtZTogdGFnOk5hbWUKICAgICAgICAgICAgICB2YWx1ZXM6CiAgICAgICAgICAgICAgLSByZWRwb2QtYXdzLXNuby1uZzVzci1wcml2YXRlLXVzLXdlc3QtMmQKICAgICAgICAgIHRhZ3M6CiAgICAgICAgICAtIG5hbWU6IGt1YmVybmV0ZXMuaW8vY2x1c3Rlci9yZWRwb2QtYXdzLXNuby1uZzVzcgogICAgICAgICAgICB2YWx1ZTogb3duZWQKICAgICAgICAgIHVzZXJEYXRhU2VjcmV0OgogICAgICAgICAgICBuYW1lOiB3b3JrZXItdXNlci1kYXRhCnN0YXR1czoKICByZXBsaWNhczogMAo="
            }
        ]
    },
    "*manifests.AdditionalTrustBundleConfig": {
        "ConfigMap": null,
        "File": null
    },
    "*manifests.CloudProviderConfig": {
        "ConfigMap": null,
        "File": null
    },
    "*manifests.DNS": {
        "FileList": [
            {
                "Filename": "manifests/cluster-dns-02-config.yml",
                "Data": "YXBpVmVyc2lvbjogY29uZmlnLm9wZW5zaGlmdC5pby92MQpraW5kOiBETlMKbWV0YWRhdGE6CiAgY3JlYXRpb25UaW1lc3RhbXA6IG51bGwKICBuYW1lOiBjbHVzdGVyCnNwZWM6CiAgYmFzZURvbWFpbjogcmVkcG9kLWF3cy1zbm8uZGV2Y2x1c3Rlci5vcGVuc2hpZnQuY29tCiAgcHJpdmF0ZVpvbmU6CiAgICB0YWdzOgogICAgICBOYW1lOiByZWRwb2QtYXdzLXNuby1uZzVzci1pbnQKICAgICAga3ViZXJuZXRlcy5pby9jbHVzdGVyL3JlZHBvZC1hd3Mtc25vLW5nNXNyOiBvd25lZAogIHB1YmxpY1pvbmU6CiAgICBpZDogWjNVUlk2VFdROTFLVlYKc3RhdHVzOiB7fQo="
            }
        ]
    },
    "*manifests.FeatureGate": {
        "FileList": null,
        "Config": {
            "metadata": {
                "creationTimestamp": null
            },
            "spec": {},
            "status": {}
        }
    },
    "*manifests.ImageContentSourcePolicy": {
        "FileList": []
    },
    "*manifests.Infrastructure": {
        "FileList": [
            {
                "Filename": "manifests/cluster-infrastructure-02-config.yml",
                "Data": "YXBpVmVyc2lvbjogY29uZmlnLm9wZW5zaGlmdC5pby92MQpraW5kOiBJbmZyYXN0cnVjdHVyZQptZXRhZGF0YToKICBjcmVhdGlvblRpbWVzdGFtcDogbnVsbAogIG5hbWU6IGNsdXN0ZXIKc3BlYzoKICBjbG91ZENvbmZpZzoKICAgIG5hbWU6ICIiCiAgcGxhdGZvcm1TcGVjOgogICAgYXdzOiB7fQogICAgdHlwZTogQVdTCnN0YXR1czoKICBhcGlTZXJ2ZXJJbnRlcm5hbFVSSTogaHR0cHM6Ly9hcGktaW50LnJlZHBvZC1hd3Mtc25vLmRldmNsdXN0ZXIub3BlbnNoaWZ0LmNvbTo2NDQzCiAgYXBpU2VydmVyVVJMOiBodHRwczovL2FwaS5yZWRwb2QtYXdzLXNuby5kZXZjbHVzdGVyLm9wZW5zaGlmdC5jb206NjQ0MwogIGNvbnRyb2xQbGFuZVRvcG9sb2d5OiBTaW5nbGVSZXBsaWNhCiAgZXRjZERpc2NvdmVyeURvbWFpbjogIiIKICBpbmZyYXN0cnVjdHVyZU5hbWU6IHJlZHBvZC1hd3Mtc25vLW5nNXNyCiAgaW5mcmFzdHJ1Y3R1cmVUb3BvbG9neTogU2luZ2xlUmVwbGljYQogIHBsYXRmb3JtOiBBV1MKICBwbGF0Zm9ybVN0YXR1czoKICAgIGF3czoKICAgICAgcmVnaW9uOiB1cy13ZXN0LTIKICAgIHR5cGU6IEFXUwo="
            }
        ]
    },
    "*manifests.Ingress": {
        "FileList": [
            {
                "Filename": "manifests/cluster-ingress-02-config.yml",
                "Data": "YXBpVmVyc2lvbjogY29uZmlnLm9wZW5zaGlmdC5pby92MQpraW5kOiBJbmdyZXNzCm1ldGFkYXRhOgogIGNyZWF0aW9uVGltZXN0YW1wOiBudWxsCiAgbmFtZTogY2x1c3RlcgpzcGVjOgogIGRvbWFpbjogYXBwcy5yZWRwb2QtYXdzLXNuby5kZXZjbHVzdGVyLm9wZW5zaGlmdC5jb20KICBsb2FkQmFsYW5jZXI6CiAgICBwbGF0Zm9ybToKICAgICAgYXdzOgogICAgICAgIHR5cGU6IENsYXNzaWMKICAgICAgdHlwZTogQVdTCnN0YXR1czoKICBkZWZhdWx0UGxhY2VtZW50OiBXb3JrZXJzCg=="
            }
        ]
    },
    "*manifests.Manifests": {
        "KubeSysConfig": {
            "kind": "ConfigMap",
            "apiVersion": "v1",
            "metadata": {
                "annotations": {
                    "kubernetes.io/description": "The install-config content used to create the cluster.  The cluster configuration may have evolved since installation, so check cluster configuration resources directly if you are interested in the current cluster state."
                },
                "name": "cluster-config-v1",
                "namespace": "kube-system"
            },
            "data": {
                "install-config": "additionalTrustBundlePolicy: Proxyonly\napiVersion: v1\nbaseDomain: devcluster.openshift.com\ncompute:\n- architecture: amd64\n  hyperthreading: Enabled\n  name: worker\n  platform: {}\n  replicas: 0\ncontrolPlane:\n  architecture: amd64\n  hyperthreading: Enabled\n  name: master\n  platform:\n    aws:\n      metadataService: {}\n      rootVolume:\n        iops: 0\n        size: 64\n        type: \"\"\n      type: r5.2xlarge\n  replicas: 1\nmetadata:\n  creationTimestamp: null\n  name: redpod-aws-sno\nnetworking:\n  clusterNetwork:\n  - cidr: 10.128.0.0/14\n    hostPrefix: 23\n  machineNetwork:\n  - cidr: 10.0.0.0/16\n  networkType: OVNKubernetes\n  serviceNetwork:\n  - 172.30.0.0/16\nplatform:\n  aws:\n    region: us-west-2\npublish: External\npullSecret: \"\"\nsshKey: |\n  ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQDUrDu6U+4/PxPYH0gyPTi5onqeyeqmwgKXeh8qTee6XJ3Zbk0uJtMbb0x0VrkZqao8+8raz+FOT+AbbEjjxMb1+C4QLC6EmDrCMTLsWiI+yHlxH+g9FO5v+g5hUQe6MtzHdwjD29k0zC5ADh2xWWcz0nwZ9borhYUF3XaRBB6yN2DeB+Hex/zN7geueVxIt8zadqtaEqvgFrjPP9cXjijz4+QwOjlU+OGYp9IYsnMmGC55AFPeEhKiFWG1DoEfls3DBJaWE3E8emCjEP49q9ZMwJDAf2RgkKJbylq8c2b/R4JQEBP7YqDUzMkYjf+BH8u9aeggL5oGTJUKkJVGoQZQyjCYg899lVTx5aPwwpZTtMc0tAZpewMVc2VpaiGLVYRnMqLwBGVveD5iMU4irXDdYWGB1M3BLZIfNGxfWrbpKPCtl2+t8DF5FDQMMtoQdzop9sU2Z3TJsNI3iPP2jjA74jy9aZJMwqzzWOyGoMGtSsecdWxYaeMSRysHdBTGC2k= faermanj@fedora\n"
            }
        },
        "FileList": [
            {
                "Filename": "manifests/cluster-config.yaml",
                "Data": "YXBpVmVyc2lvbjogdjEKZGF0YToKICBpbnN0YWxsLWNvbmZpZzogfAogICAgYWRkaXRpb25hbFRydXN0QnVuZGxlUG9saWN5OiBQcm94eW9ubHkKICAgIGFwaVZlcnNpb246IHYxCiAgICBiYXNlRG9tYWluOiBkZXZjbHVzdGVyLm9wZW5zaGlmdC5jb20KICAgIGNvbXB1dGU6CiAgICAtIGFyY2hpdGVjdHVyZTogYW1kNjQKICAgICAgaHlwZXJ0aHJlYWRpbmc6IEVuYWJsZWQKICAgICAgbmFtZTogd29ya2VyCiAgICAgIHBsYXRmb3JtOiB7fQogICAgICByZXBsaWNhczogMAogICAgY29udHJvbFBsYW5lOgogICAgICBhcmNoaXRlY3R1cmU6IGFtZDY0CiAgICAgIGh5cGVydGhyZWFkaW5nOiBFbmFibGVkCiAgICAgIG5hbWU6IG1hc3RlcgogICAgICBwbGF0Zm9ybToKICAgICAgICBhd3M6CiAgICAgICAgICBtZXRhZGF0YVNlcnZpY2U6IHt9CiAgICAgICAgICByb290Vm9sdW1lOgogICAgICAgICAgICBpb3BzOiAwCiAgICAgICAgICAgIHNpemU6IDY0CiAgICAgICAgICAgIHR5cGU6ICIiCiAgICAgICAgICB0eXBlOiByNS4yeGxhcmdlCiAgICAgIHJlcGxpY2FzOiAxCiAgICBtZXRhZGF0YToKICAgICAgY3JlYXRpb25UaW1lc3RhbXA6IG51bGwKICAgICAgbmFtZTogcmVkcG9kLWF3cy1zbm8KICAgIG5ldHdvcmtpbmc6CiAgICAgIGNsdXN0ZXJOZXR3b3JrOgogICAgICAtIGNpZHI6IDEwLjEyOC4wLjAvMTQKICAgICAgICBob3N0UHJlZml4OiAyMwogICAgICBtYWNoaW5lTmV0d29yazoKICAgICAgLSBjaWRyOiAxMC4wLjAuMC8xNgogICAgICBuZXR3b3JrVHlwZTogT1ZOS3ViZXJuZXRlcwogICAgICBzZXJ2aWNlTmV0d29yazoKICAgICAgLSAxNzIuMzAuMC4wLzE2CiAgICBwbGF0Zm9ybToKICAgICAgYXdzOgogICAgICAgIHJlZ2lvbjogdXMtd2VzdC0yCiAgICBwdWJsaXNoOiBFeHRlcm5hbAogICAgcHVsbFNlY3JldDogIiIKICAgIHNzaEtleTogfAogICAgICBzc2gtcnNhIEFBQUFCM056YUMxeWMyRUFBQUFEQVFBQkFBQUJnUURVckR1NlUrNC9QeFBZSDBneVBUaTVvbnFleWVxbXdnS1hlaDhxVGVlNlhKM1piazB1SnRNYmIweDBWcmtacWFvOCs4cmF6K0ZPVCtBYmJFamp4TWIxK0M0UUxDNkVtRHJDTVRMc1dpSSt5SGx4SCtnOUZPNXYrZzVoVVFlNk10ekhkd2pEMjlrMHpDNUFEaDJ4V1djejBud1o5Ym9yaFlVRjNYYVJCQjZ5TjJEZUIrSGV4L3pON2dldWVWeEl0OHphZHF0YUVxdmdGcmpQUDljWGppano0K1F3T2psVStPR1lwOUlZc25NbUdDNTVBRlBlRWhLaUZXRzFEb0VmbHMzREJKYVdFM0U4ZW1DakVQNDlxOVpNd0pEQWYyUmdrS0pieWxxOGMyYi9SNEpRRUJQN1lxRFV6TWtZamYrQkg4dTlhZWdnTDVvR1RKVUtrSlZHb1FaUXlqQ1lnODk5bFZUeDVhUHd3cFpUdE1jMHRBWnBld01WYzJWcGFpR0xWWVJuTXFMd0JHVnZlRDVpTVU0aXJYRGRZV0dCMU0zQkxaSWZOR3hmV3JicEtQQ3RsMit0OERGNUZEUU1NdG9RZHpvcDlzVTJaM1RKc05JM2lQUDJqakE3NGp5OWFaSk13cXp6V095R29NR3RTc2VjZFd4WWFlTVNSeXNIZEJUR0Myaz0gZmFlcm1hbmpAZmVkb3JhCmtpbmQ6IENvbmZpZ01hcAptZXRhZGF0YToKICBhbm5vdGF0aW9uczoKICAgIGt1YmVybmV0ZXMuaW8vZGVzY3JpcHRpb246IFRoZSBpbnN0YWxsLWNvbmZpZyBjb250ZW50IHVzZWQgdG8gY3JlYXRlIHRoZSBjbHVzdGVyLiAgVGhlCiAgICAgIGNsdXN0ZXIgY29uZmlndXJhdGlvbiBtYXkgaGF2ZSBldm9sdmVkIHNpbmNlIGluc3RhbGxhdGlvbiwgc28gY2hlY2sgY2x1c3RlcgogICAgICBjb25maWd1cmF0aW9uIHJlc291cmNlcyBkaXJlY3RseSBpZiB5b3UgYXJlIGludGVyZXN0ZWQgaW4gdGhlIGN1cnJlbnQgY2x1c3RlcgogICAgICBzdGF0ZS4KICBuYW1lOiBjbHVzdGVyLWNvbmZpZy12MQogIG5hbWVzcGFjZToga3ViZS1zeXN0ZW0K"
            },
            {
                "Filename": "manifests/cluster-dns-02-config.yml",
                "Data": "YXBpVmVyc2lvbjogY29uZmlnLm9wZW5zaGlmdC5pby92MQpraW5kOiBETlMKbWV0YWRhdGE6CiAgY3JlYXRpb25UaW1lc3RhbXA6IG51bGwKICBuYW1lOiBjbHVzdGVyCnNwZWM6CiAgYmFzZURvbWFpbjogcmVkcG9kLWF3cy1zbm8uZGV2Y2x1c3Rlci5vcGVuc2hpZnQuY29tCiAgcHJpdmF0ZVpvbmU6CiAgICB0YWdzOgogICAgICBOYW1lOiByZWRwb2QtYXdzLXNuby1uZzVzci1pbnQKICAgICAga3ViZXJuZXRlcy5pby9jbHVzdGVyL3JlZHBvZC1hd3Mtc25vLW5nNXNyOiBvd25lZAogIHB1YmxpY1pvbmU6CiAgICBpZDogWjNVUlk2VFdROTFLVlYKc3RhdHVzOiB7fQo="
            },
            {
                "Filename": "manifests/cluster-infrastructure-02-config.yml",
                "Data": "YXBpVmVyc2lvbjogY29uZmlnLm9wZW5zaGlmdC5pby92MQpraW5kOiBJbmZyYXN0cnVjdHVyZQptZXRhZGF0YToKICBjcmVhdGlvblRpbWVzdGFtcDogbnVsbAogIG5hbWU6IGNsdXN0ZXIKc3BlYzoKICBjbG91ZENvbmZpZzoKICAgIG5hbWU6ICIiCiAgcGxhdGZvcm1TcGVjOgogICAgYXdzOiB7fQogICAgdHlwZTogQVdTCnN0YXR1czoKICBhcGlTZXJ2ZXJJbnRlcm5hbFVSSTogaHR0cHM6Ly9hcGktaW50LnJlZHBvZC1hd3Mtc25vLmRldmNsdXN0ZXIub3BlbnNoaWZ0LmNvbTo2NDQzCiAgYXBpU2VydmVyVVJMOiBodHRwczovL2FwaS5yZWRwb2QtYXdzLXNuby5kZXZjbHVzdGVyLm9wZW5zaGlmdC5jb206NjQ0MwogIGNvbnRyb2xQbGFuZVRvcG9sb2d5OiBTaW5nbGVSZXBsaWNhCiAgZXRjZERpc2NvdmVyeURvbWFpbjogIiIKICBpbmZyYXN0cnVjdHVyZU5hbWU6IHJlZHBvZC1hd3Mtc25vLW5nNXNyCiAgaW5mcmFzdHJ1Y3R1cmVUb3BvbG9neTogU2luZ2xlUmVwbGljYQogIHBsYXRmb3JtOiBBV1MKICBwbGF0Zm9ybVN0YXR1czoKICAgIGF3czoKICAgICAgcmVnaW9uOiB1cy13ZXN0LTIKICAgIHR5cGU6IEFXUwo="
            },
            {
                "Filename": "manifests/cluster-ingress-02-config.yml",
                "Data": "YXBpVmVyc2lvbjogY29uZmlnLm9wZW5zaGlmdC5pby92MQpraW5kOiBJbmdyZXNzCm1ldGFkYXRhOgogIGNyZWF0aW9uVGltZXN0YW1wOiBudWxsCiAgbmFtZTogY2x1c3RlcgpzcGVjOgogIGRvbWFpbjogYXBwcy5yZWRwb2QtYXdzLXNuby5kZXZjbHVzdGVyLm9wZW5zaGlmdC5jb20KICBsb2FkQmFsYW5jZXI6CiAgICBwbGF0Zm9ybToKICAgICAgYXdzOgogICAgICAgIHR5cGU6IENsYXNzaWMKICAgICAgdHlwZTogQVdTCnN0YXR1czoKICBkZWZhdWx0UGxhY2VtZW50OiBXb3JrZXJzCg=="
            },
            {
                "Filename": "manifests/cluster-network-01-crd.yml",
                "Data": ""
            },
            {
                "Filename": "manifests/cluster-network-02-config.yml",
                "Data": "YXBpVmVyc2lvbjogY29uZmlnLm9wZW5zaGlmdC5pby92MQpraW5kOiBOZXR3b3JrCm1ldGFkYXRhOgogIGNyZWF0aW9uVGltZXN0YW1wOiBudWxsCiAgbmFtZTogY2x1c3RlcgpzcGVjOgogIGNsdXN0ZXJOZXR3b3JrOgogIC0gY2lkcjogMTAuMTI4LjAuMC8xNAogICAgaG9zdFByZWZpeDogMjMKICBleHRlcm5hbElQOgogICAgcG9saWN5OiB7fQogIG5ldHdvcmtUeXBlOiBPVk5LdWJlcm5ldGVzCiAgc2VydmljZU5ldHdvcms6CiAgLSAxNzIuMzAuMC4wLzE2CnN0YXR1czoge30K"
            },
            {
                "Filename": "manifests/cluster-proxy-01-config.yaml",
                "Data": "YXBpVmVyc2lvbjogY29uZmlnLm9wZW5zaGlmdC5pby92MQpraW5kOiBQcm94eQptZXRhZGF0YToKICBjcmVhdGlvblRpbWVzdGFtcDogbnVsbAogIG5hbWU6IGNsdXN0ZXIKc3BlYzoKICB0cnVzdGVkQ0E6CiAgICBuYW1lOiAiIgpzdGF0dXM6IHt9Cg=="
            },
            {
                "Filename": "manifests/cluster-scheduler-02-config.yml",
                "Data": "YXBpVmVyc2lvbjogY29uZmlnLm9wZW5zaGlmdC5pby92MQpraW5kOiBTY2hlZHVsZXIKbWV0YWRhdGE6CiAgY3JlYXRpb25UaW1lc3RhbXA6IG51bGwKICBuYW1lOiBjbHVzdGVyCnNwZWM6CiAgbWFzdGVyc1NjaGVkdWxhYmxlOiB0cnVlCiAgcG9saWN5OgogICAgbmFtZTogIiIKc3RhdHVzOiB7fQo="
            },
            {
                "Filename": "manifests/cvo-overrides.yaml",
                "Data": "YXBpVmVyc2lvbjogY29uZmlnLm9wZW5zaGlmdC5pby92MQpraW5kOiBDbHVzdGVyVmVyc2lvbgptZXRhZGF0YToKICBuYW1lc3BhY2U6IG9wZW5zaGlmdC1jbHVzdGVyLXZlcnNpb24KICBuYW1lOiB2ZXJzaW9uCnNwZWM6CiAgY2hhbm5lbDogc3RhYmxlLTQuMTIKICBjbHVzdGVySUQ6IGNmYzY3NWQwLWY1YTItNDg2OS05ZGY3LTZmMzJiMzYzZGVmZAo="
            },
            {
                "Filename": "manifests/kube-cloud-config.yaml",
                "Data": "YXBpVmVyc2lvbjogdjEKa2luZDogU2VjcmV0Cm1ldGFkYXRhOgogIG5hbWU6IGt1YmUtY2xvdWQtY2ZnCiAgbmFtZXNwYWNlOiBrdWJlLXN5c3RlbQp0eXBlOiBPcGFxdWUKZGF0YToKICBjb25maWc6ICIiCg=="
            },
            {
                "Filename": "manifests/kube-system-configmap-root-ca.yaml",
                "Data": "YXBpVmVyc2lvbjogdjEKa2luZDogQ29uZmlnTWFwCm1ldGFkYXRhOgogIG5hbWU6IHJvb3QtY2EKICBuYW1lc3BhY2U6IGt1YmUtc3lzdGVtCmRhdGE6CiAgY2EuY3J0OiB8CiAgICAtLS0tLUJFR0lOIENFUlRJRklDQVRFLS0tLS0KICAgIE1JSURFRENDQWZpZ0F3SUJBZ0lJVTVpTWZlTEFzMFV3RFFZSktvWklodmNOQVFFTEJRQXdKakVTTUJBR0ExVUUKICAgIEN4TUpiM0JsYm5Ob2FXWjBNUkF3RGdZRFZRUURFd2R5YjI5MExXTmhNQjRYRFRJek1EUXhPREV6TURnd09Wb1gKICAgIERUTXpNRFF4TlRFek1EZ3dPVm93SmpFU01CQUdBMVVFQ3hNSmIzQmxibk5vYVdaME1SQXdEZ1lEVlFRREV3ZHkKICAgIGIyOTBMV05oTUlJQklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQ0FRRUFzYTV3YzRSdzZRQWEKICAgIFdPcjBWWDk1RmNMK1g5cVo1bW0vMjcvVHdra1U3NGM4dUdPd013Y1RjM3NGTFlsUGt5dlo3bVVjUE9Qbmc1anIKICAgIC83Uk94bksxTDBQMVYyRFlDSnRrdzVzYzFvOXR4NGhVSEgxMnVvVzRSb2YyQjJBVE5sdHZFTmxuUEVuV1NqVHkKICAgIGdEZjRTc25HaXJ5d1NYZE1SZHAzK0N2R2VjQUFmZWw5OHVQdEYzcWd5ZnRScEM2Ri8zSmVUTEQ4Z29CQ0I1aWkKICAgIFRrNjAyWDZBTDVDK1dJUTJ5RUd1SE9LQzhZWFo0cDljUXQvS0hDR0svYlFFMXNURVRCdmJxUjNLU05ycFNTM1QKICAgIHgwVkFhTGQ3TnFCUUJJUWFrd1RrM3QrN3NpSlZkV2VsNlVmMTV5a2JvMkNSR1pxcUoxYy9hWEo1d1NBSFozUW4KICAgIGZ6cnJJRHR5SlFJREFRQUJvMEl3UURBT0JnTlZIUThCQWY4RUJBTUNBcVF3RHdZRFZSMFRBUUgvQkFVd0F3RUIKICAgIC96QWRCZ05WSFE0RUZnUVVlNGt5VHhNRTJLcVV2ZjduN0NlOEpiNU9id2t3RFFZSktvWklodmNOQVFFTEJRQUQKICAgIGdnRUJBSHFRZ0tkb2VVS0N0ZWZNNnRTYjBUb3B0K01Rc0tjR3IvUkVtaUJSL0xEQWFjbWQ5dlZZQzJTSUpCTVMKICAgIFdwcjlSS2lreENqMTlFSDdsL1FrbGJ6a0VTcS96TUlYTmpaU3NHUTFJZWpBQ0RSdVVDZzFTS21sZHlBeCtHemYKICAgIDNzWnlUVlBsejRTd0NKRzNwZzBuMitlY0F0MTRkUFRIbnBFemJTd1RHSCtZeGpzVDd2Q2sxMzFEejhOQm9rQksKICAgIHJDNXRpQ0hYYnQwWTJwcHV6Z2NpVDg5eUhiUk5YbVR1d21keG5VRm1oYjBzUERYUnhXbVFLSTRseGtEZVNUUFUKICAgIG91blZwbWt4SlAzWW9KcXJCZFZ6TW5GZmJtR2RvL3M4N3J4Zng1cnRrcVVTOUVtbDh5N25kR1pKTXIyWDBsd0YKICAgIHJmaTE3MUZuNldkUGRCZEVkSFQ0NEh1S0lEbz0KICAgIC0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0KICAgIAo="
            },
            {
                "Filename": "manifests/machine-config-server-tls-secret.yaml",
                "Data": "YXBpVmVyc2lvbjogdjEKa2luZDogU2VjcmV0Cm1ldGFkYXRhOgogIG5hbWU6IG1hY2hpbmUtY29uZmlnLXNlcnZlci10bHMKICBuYW1lc3BhY2U6IG9wZW5zaGlmdC1tYWNoaW5lLWNvbmZpZy1vcGVyYXRvcgp0eXBlOiBPcGFxdWUKZGF0YToKICB0bHMuY3J0OiBMUzB0TFMxQ1JVZEpUaUJEUlZKVVNVWkpRMEZVUlMwdExTMHRDazFKU1VSamFrTkRRV3h4WjBGM1NVSkJaMGxKUVhocU9IazBiV1JqYWtsM1JGRlpTa3R2V2tsb2RtTk9RVkZGVEVKUlFYZEtha1ZUVFVKQlIwRXhWVVVLUTNoTlNtSXpRbXhpYms1dllWZGFNRTFTUVhkRVoxbEVWbEZSUkVWM1pIbGlNamt3VEZkT2FFMUNORmhFVkVsNlRVUlJlRTlFUlhwTlJHZDNUMVp2V0FwRVZFMTZUVVJSZUU1VVJYcE5SR2QzVDFadmQwcDZSV3hOUTAxSFFURlZSVUY0VFdOak0yeDZaRWRXZEU5dE1XaFpNbWh3WW0xVmRGa3lPWFZhYld4dUNreFlUbXhqYmxwc1kycERRMEZUU1hkRVVWbEtTMjlhU1doMlkwNUJVVVZDUWxGQlJHZG5SVkJCUkVORFFWRnZRMmRuUlVKQlVHVnNZVGhwVlZkb1dtZ0tkSFZwYTNnM1RWSlFWamc1YTNaMVVrMXFObXg2Ym1rellVSjNhbHBSV1hRdmNEVnpVMlJtVUU1aGFscElZbWROTUhkU1RuUkNXR3BGYkhaR1prcExTQXBxWTFkR1MyOU9TM0JGUVd4alZUTjRhMnRyYnpSdGRtWnZXRWRvYUZCSVlUWXZja3RtZVhabldISkVOelZ0YlZaYWVqUlpOVXgzYWs5RFEzTk1RMUF2Q2tOV1kycG9kV0pzUnpGV1VUbE5iUzlqVEdjd1pFTTBTR1JxUVVOclZWcHlkWG80Tm5aV1ZUZDNTV1J3TVdObU9FeGtNVU5QVVZRMlEzZDNRekp5VldrS1JGcG5hRzkwYUZWMGRWWlhXVVZhWkVNMVpXRlhWMXBOY1RkdWNGVnBkQzl3ZVhCS1JVa3hlbFZVVURsTlMydFpjMFJLUjBaa09FVm1SMDEzZUdGRmJ3cExlR2N5UWxGSmNHWkRkM1UzYUcxQ1pIRlRRVzV4Tmk5dmVHMXpOVUZHTmxodE9XTk5UbkpSUW1wWU9XRjBVVUppUlZJelMwbGpTbWRhVldaSGNGYzVDa2xMYWxoU0wyMUVhR0U0UTBGM1JVRkJZVTlDYjJwRFFtNTZRVlJDWjA1V1NGTlZSVVJFUVV0Q1oyZHlRbWRGUmtKUlkwUkJWRUZOUW1kT1ZraFNUVUlLUVdZNFJVRnFRVUZOUWpCSFFURlZaRVJuVVZkQ1FsRTRUVzVZYVRKS1VWVnJlVXBZT0hSeE4ybENaak5zSzJWMk9FUkJaa0puVGxaSVUwMUZSMFJCVndwblFsSTNhVlJLVUVWM1ZGbHhjRk01TDNWbWMwbzNkMngyYXpWMlExUkJOa0puVGxaSVVrVkZUWHBCZUdkcE9XaGpSMnQwWVZjMU1FeHVTbXhhU0VKMkNscERNV2hrTTAxMFl6STFka3h0VW14a2JVNXpaRmhPTUZwWVNYVmlNMEpzWW01T2IyRlhXakJNYlU1MllsUkJUa0puYTNGb2EybEhPWGN3UWtGUmMwWUtRVUZQUTBGUlJVRlhOV0p3YUdwQmRVZzRZVzFwTHk5b2VXSmhXbmxWVnpacVRYSTNPWGx2WkRnNWIwaEpSR1JSZDJkRVYyZFVla0VyYUVOeWRVSnZjUW8zY21kbE4zVmlPV2xGTXpaemIyeFNNSFJwY1RKeVdXcHhhRTF1Y0ZSamNHdE9RblJrVTJoSE5FSnlNR1JDUkc1MFZGWXJiREkxWkdoQ1JtTjFMMEYwQ214R0swcDBhRWsyWnpOMGJXNVRabmtyTjA5MmJVMTZNWGxJV0ZaclREbHRWR1YwV21VMFVETm1WR0ZqVUN0eU5EUTBhR0UwYUZOSVUyeENPSGR6YzNRS09ITkdZV05GU3pjdk5tYzNkbGhhVGxkV1VVUXdiQ3Q2VWpkRmMxcFZaa1ZwT0VWb09XSkxXR2hqT0dsNFozTmxlV1pYTjJoaVFrcEJLMUJWWjBWdlZBb3ZTbU5WV205cFpGa3ZiR1JwV0cwd1JFSmtiVWxTUlZCTlYwcEtjR2xHVm1wa2NIQnpiMGxwWjNKVWVEUXJZbUpNYlVFM2NsaGtNbmxvTjNaWk5pdFdDbWRtTXpaRWJESnpUbkZvY1hGaGF6aEtjblEzVTNGd01sQjBUMnhNUVQwOUNpMHRMUzB0UlU1RUlFTkZVbFJKUmtsRFFWUkZMUzB0TFMwSwogIHRscy5rZXk6IExTMHRMUzFDUlVkSlRpQlNVMEVnVUZKSlZrRlVSU0JMUlZrdExTMHRMUXBOU1VsRmNHZEpRa0ZCUzBOQlVVVkJPVFpXY25sS1VtRkdiVWN5Tmt0VVNITjRSVGxZZWpKVEt6VkZlVkJ4V0U5bFRHUnZTRU5PYkVKcE15dHViWGhLQ2pFNE9ERnhUbXRrZFVGNlZFSkZNakJHWlUxVFZ6aFdPR3R2WlU1NFdWVnhaekJ4YTFGRFZuaFVaa2RUVTFOcWFXRTVLMmhqWVVkRk9HUnljaXR6Y0M4S1N5dENaWE5RZG0xaFdsWnVVR2hxYTNaRFRUUkpTM2R6U1M4NFNsWjVUMGMxZFZWaVZsWkVNSGxpT1hkMVJGSXdUR2RrTWsxQlMxSlNiWFUzVUhweE9RcFdWSFpCYURKdVZuZ3ZkM1F6VlVrMVFsQnZURVJCVEdGMFUwbE9iVU5IYVRKR1V6STFWbHBuVW13d1RHdzFjRnBhYTNseWRXVnNVMHN6SzI1TGEydFJDbXBZVGxKTkx6QjNjVkpwZDAxcldWWXpkMUk0V1hwRVJtOVRaM0pIUkZsR1FXbHNPRXhETjNWSFdVWXljRWxEWlhKeUsycEhZWHByUVZod1pXSXhkM2NLTW5SQlIwNW1NWEV4UVVaelVraGpiMmgzYlVKc1VqaGhiR0l3WjNGT1pFZ3JXVTlHY25kSlJFRlJRVUpCYjBsQ1FWRkVUVFUzUTJoRVF6ZHRTMllyTHdwNWRXWTFaME5CTlhRMlluZFNRbXhCZDAxNGQwVmpSWGN4ZUVJeE5XOVRkemRKVkVVM1ozaEhTWGs1TVRWQ1lVNXFkMWRqZG00cmIwMHlWalZyU0U0M0NuQlZNbWg1U21KVVFrdG5WbWd2V1RCV2IwaFRTUzh4WmtkbVpqUmlaREp1WVhadFEyZHRiVmhKZWxwdk1HeG1WV2cyUW5KRmRrVlZRalpIVjFCNVYzQUtWbWh1S3pOcU5scG1lSGx5SzFwNk5ISldOR0l6T0hsdmRVNWpabGhqSzJ4TE9HbzRaRTh3WVhOdmVFdFZVbmR6T1VsaWFtbDVjblZrWTNGeE9IZHViUW8zVkRKSmNXMDFaSE5XYmtScFEzUXpUMWtyVDJ0UU4wUXpjbEZPTVVzeFluRlNORGR3ZUdFeGRIUXdkRFJDYURSMVprMDRTamxRTDBsblIwOUthR1JXQ2xaVVRHeGxZVE5NUW5Vd2NrZEdUbUpVVW5NeWNtSjNiMnRwYUdsQlJIUlZaVk5zUjFoUmNFbzBWamx2WVhFclVHcDZVWFZYZWpGRlRGSndhSFZFYmtrS1ZFRnFNV05EZFZKQmIwZENRVkJyYlZaTlFrRTRMMGxPZEd4NVNYaEthV0ZQVldJeU1GWjVlbTh6ZEhwd1MzVjZhVzF1UnpoUlpHSXZWVXBQU0ZkQmN3cEljV1JFTUVSbloyaEJURVZXYUdGaU1WQkpWSGRaUzJVcldEbE1RV2hyY2pCWGRFaElVVzV0ZVVrNFZHdzRTMUV3ZW5oT1lXTTBLM2xYUzNWeFNFZHdDblZrUmk5eFNteGxSMGhVYjNWR1YwRlBkV3M1ZHpOM1RsRk9hWFpXWmtwcWNuTmhPRFprVjJwWlZVSTFhSFZSYUdkaFRUVXlUelJxUVc5SFFrRlFOVEFLWjJONVZtbHdibWRSU0hkV2RUSkhVa2RSYTA5UEwwMXZPV2RZVkRGUmJXVjNlRWMxVWtsbmFXUmtiaXRMTUhoMmQxZDJTMjVrYmxoc05ubEtUakZFYkFweGNrZDNNalZQVm5VcmEzRm5jREJxZUZkTVREQm5aelIwTjFsUk5VOUVjWEF2ZFhKeVFuZFROM3A0WnpaemRuRkJPVUZxTm0xc1RtbEVMMVZYVW1ONUNteE5SMVF6UldSaFZtcDFWeXRWZGk5c2NHbENMemxFTVhCb2NGTk9VMU01TmpFMVNrdG9WVVpCYjBkQ1FVcDNVRFpaYUdaYWVUWlpZbXRGTmtoclRXc0tXRE53V0VGcU9Wb3JjVFZMWlhKNFpXZDJXRTByYnpsTmFrc3ZjWFJFV0ZscVVEZHBNa1p6THpaMFF6ZzBUblpoYTNGR2NuaEpkVzlRYzI5QlZuWnJhZ3BZUmsxb1VWVjRRbVJwUmtFcldTdFVTR1V5YnpRdmVXWnJXU3Q0Y21Gek9EQkVjM1JDY0ZCRGRpOXJSRU5QZG5SdVdHdGhRMmRtTjFkVlNXaFhaVzE0Q21wUWJrcDJXVXh1YVhaU1V6WjVObU15YkVrck1uVlpXRUZ2UjBKQlRsSmlSM3BDU0RWUlNVTlhkelo2WmtWM2VYTmlaMU12ZDJ0NGRVSkRiemwyVVhVS1dWSklZbXRyZDJsd2ExRnNhMHhGWWpJd2NFRk5TR2h5UzNCUE9XVkZTekZUVkRBclNXbEpURXB0VjNwTGIzQkhTR2xqVkdaMFpVcHlhR1oxUWxoWFNBcHZSMWQ1YjJSS1ZVbDNRVFo1Wm10bU9XTnhlRVJ4UzFCTFFsSk5MMWxWVlcwemVuRkVlalJzVFVNMVVFVjNURkEzVkdsa01WbGliMWMxVlM4MGExbHNDbXRrWVVGTVVGTmFRVzlIUWtGTlJYcGtjMlpqTlhCNmRrNW1WazFtUWpkNE5uWjBkRlI1ZFhjdmIxUk5lVGRCV25CVFJtaDJLMlo0YVRkTlExTmhVR3dLTldkSFFXZGFXSEJ2TkV4SlVVVjZWVTQxVkVoV1oycGpjRlpJTXpGMlpuaHFVMUpoVFRSMWVGZFNkWGszUlhKMUsxaGpaR05KUzBGeGRETjNVV2N2YlFwamRsZDFXVVJrZW1KaU5TdGxkVEZUYnpab2NYY3ZWWEJWUzBacmRrdHRRMjByVHl0RlMxaFJjVzlwUm5SdlVsY3lPVmxxYUZGSE1Rb3RMUzB0TFVWT1JDQlNVMEVnVUZKSlZrRlVSU0JMUlZrdExTMHRMUW89Cg=="
            },
            {
                "Filename": "manifests/openshift-config-secret-pull-secret.yaml",
                "Data": "YXBpVmVyc2lvbjogdjEKa2luZDogU2VjcmV0CnR5cGU6IGt1YmVybmV0ZXMuaW8vZG9ja2VyY29uZmlnanNvbgptZXRhZGF0YToKICBuYW1lc3BhY2U6IG9wZW5zaGlmdC1jb25maWcKICBuYW1lOiBwdWxsLXNlY3JldApkYXRhOgogIC5kb2NrZXJjb25maWdqc29uOiBleUpoZFhSb2N5STZleUpqYkc5MVpDNXZjR1Z1YzJocFpuUXVZMjl0SWpwN0ltRjFkR2dpT2lKaU0wSnNZbTVPYjJGWFdqQk1XRXBzWWtkV2FHTXlWWFJhUjFZeVN6STVhbUpXT1doWk1rNXNZek5PWmxsNldtbE5hbVJvVFdwQk5VMTZTVEZPUkZrMFdrZEZlVTVIVG1oT2JWVXhXbTFGTkUxSFVYZFBWR2MyVlRCd1dWSkVVVEpTTURWTlRqQlpOVlpHUVhoT01XeEpUV3BDU1UweFVsRlNSRXBoVFZWT1dsWlZOVnBWVlVwSVV6QjBTazE2UVRKTk1FWlNUMVZWTVZKV1l6QlJWRVpNVld4a1RsVlVVa1pXVmxWM1RsRTlQU0lzSW1WdFlXbHNJam9pYW5WbVlXVnliV0ZBY21Wa2FHRjBMbU52YlNKOUxDSnhkV0Y1TG1sdklqcDdJbUYxZEdnaU9pSmlNMEpzWW01T2IyRlhXakJNV0Vwc1lrZFdhR015VlhSYVIxWXlTekk1YW1KV09XaFpNazVzWXpOT1psbDZXbWxOYW1Sb1RXcEJOVTE2U1RGT1JGazBXa2RGZVU1SFRtaE9iVlV4V20xRk5FMUhVWGRQVkdjMlZUQndXVkpFVVRKU01EVk5UakJaTlZaR1FYaE9NV3hKVFdwQ1NVMHhVbEZTUkVwaFRWVk9XbFpWTlZwVlZVcElVekIwU2sxNlFUSk5NRVpTVDFWVk1WSldZekJSVkVaTVZXeGtUbFZVVWtaV1ZsVjNUbEU5UFNJc0ltVnRZV2xzSWpvaWFuVm1ZV1Z5YldGQWNtVmthR0YwTG1OdmJTSjlMQ0p5WldkcGMzUnllUzVqYjI1dVpXTjBMbkpsWkdoaGRDNWpiMjBpT25zaVlYVjBhQ0k2SW1aSVZtOVplVEYzWWpJNWMweFhWbXhhUkZWNVdtcGpNVXhVYTNsTlIxRjBUa1JvYWsxNU1XbE5NbFpvVEZST2EwNUhSbXhQVkUweVQwUkNhazE2Y0d4bFZYQnZXV3RrYW1GVk9YQlRiRTVXWld4V05GUlhiRXRQVXpWc1pWVndObHBHWkVwaFZUbHdVMWhrVUZJeFZqWlVXSEJIWVRGd2NWSlVUbUZTUm10M1ZGWlNjMkV4YkZWVGJYQk9UV3hyTVZSVlpFWmxSVEZ4VVcxc1QxSkdWWHBYVms1TFQxTTFZV1ZUTVZKWGF6Z3pWRlk1ZFZZelpHRlRTRkUwVTFSS2NHTnJOWFZOYTBadllqQmFlVlV4WnpCVGJrSnpZekZzVFdOV09USlVNazVFVEZkWmVVNHhWbk5qVkU0MlRtdG9lazR3ZUhkT00yUm1WMnhSTWxJd05XOWhTRnBXWXpOU01HVkdhelJoVkdRelpVWnNkMDV1V2tkalJVcHlaV3huZUU5R2JFWmpNREZOWXpOc05sZHViRFZVUjJ3d1dXMVpkRlV5UlRWV1NGbzJUVEZ3YlZsdVFsTldiVlpIVkZoc2VHTldRbkJTYm1oTVVqSXhaazVYTVRCYVZHUTJaR3hDU1dOSVVraFpiRGxHVVZSc1FtSlZOVmhOYm5CUlVUTm5kRlpGTVhKVVZHdzJZa2RvZDFveVRrZGpWRVl6VGxkb2NXUldiSEZTZWs0ellXeG9jV0V3VW05YWFsbzFWMjFrTldSVmN6Rk1WMFpMVG5wa2QxUkhkRzVOVmtaQ1VrYzBlRTB5VFhoWFNHaFNVVEI0YTFaclRrWlRWVEYwVkVjMU5WTlViSGxhYkU1WFdERkdkVk5yTVV4bGEzQXpUVWhrVW1KVVFreGtWR2hTVkRKT1NGZ3llRTFpTUd4bVlsY3hNazFXV21aVFJsRjVXREJPVWxSdWJ6QmFWbkF3Vm01Tk1WVkhPREJoYlRCNlZVVjBXV0pzVW05a2FsWkxZVzVTUWxFeWRFdGlWbVJJWkZoc1dsVnFWVFZaYlVwVVRVZDRNMkZzT1ZWV1NFVXdXakphUTFscmRERmlWM2cxVFVSR1lWcHVTbTVQV0ZwaFVraGtRMkpYVW1wYU1uZDZWREpHTkZFeVRuVllNMEpzWW14YU1sUnVTbFJVTTBweFQxaG9hR1ZIVGpKV1JYTXpaR3RuTWs5VlJtaGxibkJyWkVWNE5sVlVUbVpWTUd3MFVqRnNla3hYVm14TmEwMTVUV3c1UldSVVZYZFJXRUV5V1RGa2Exa3dPVmhUZWxwVVZVUnNjVk5GVWt0U2FsWTFVMWN4VUdWWVVrSlpNVTVLWlcwNWJsUkdhRWhhUmxKVFVUTkNiVnBWU2taWGJGcEhWbTVPUm1KVldqSllNamxFVmpOYVVWVkdaRWRsYXpWSVpGZFNiMUpVWkZkWk1rWm9XREpTUTFRd2J6QmpNakZOWVZSWk5WTnJVbWxsUlhSSlUxVjNNV0pJVWxGT2JFa3lZMGQ0VjFSSGNHMWhNVTR5VjJ0U1RVNTZSblpXYlc4MFltNW9jazFyZUZOV2FtTjRZbFpDZUZWR2FHOVNWRVpyWVVkbmRHUldRbFJOTVVaTFpWY3dNbUZYVVRWVFZXUnhUVWhhYm1ORVJrWlpia0p5VTFoS2RVOVVaSGhaTVVKVFRVWm9ZVmRHVVRWWGEyUnJVVEU1Y1dSSGJGWmlWelZ0WTBkV1VGRldaSGhQV0hCdFkyMXNjRmRyTlZWYU1sWktZbFUxTm1GV1pHdFdWMDVLVEZaQ2JHUlhXbUZOU0doT1RtdDRkMVJHVmxwV2JFbDNUa2N4TlZWc1FuRmFWRTV0VGtoc1dsVlljR1pNVkVJeFZqQmtlazFyU2xaa1JYUnhWMUU5UFNJc0ltVnRZV2xzSWpvaWFuVm1ZV1Z5YldGQWNtVmthR0YwTG1OdmJTSjlMQ0p5WldkcGMzUnllUzV5WldSb1lYUXVhVzhpT25zaVlYVjBhQ0k2SW1aSVZtOVplVEYzWWpJNWMweFhWbXhhUkZWNVdtcGpNVXhVYTNsTlIxRjBUa1JvYWsxNU1XbE5NbFpvVEZST2EwNUhSbXhQVkUweVQwUkNhazE2Y0d4bFZYQnZXV3RrYW1GVk9YQlRiRTVXWld4V05GUlhiRXRQVXpWc1pWVndObHBHWkVwaFZUbHdVMWhrVUZJeFZqWlVXSEJIWVRGd2NWSlVUbUZTUm10M1ZGWlNjMkV4YkZWVGJYQk9UV3hyTVZSVlpFWmxSVEZ4VVcxc1QxSkdWWHBYVms1TFQxTTFZV1ZUTVZKWGF6Z3pWRlk1ZFZZelpHRlRTRkUwVTFSS2NHTnJOWFZOYTBadllqQmFlVlV4WnpCVGJrSnpZekZzVFdOV09USlVNazVFVEZkWmVVNHhWbk5qVkU0MlRtdG9lazR3ZUhkT00yUm1WMnhSTWxJd05XOWhTRnBXWXpOU01HVkdhelJoVkdRelpVWnNkMDV1V2tkalJVcHlaV3huZUU5R2JFWmpNREZOWXpOc05sZHViRFZVUjJ3d1dXMVpkRlV5UlRWV1NGbzJUVEZ3YlZsdVFsTldiVlpIVkZoc2VHTldRbkJTYm1oTVVqSXhaazVYTVRCYVZHUTJaR3hDU1dOSVVraFpiRGxHVVZSc1FtSlZOVmhOYm5CUlVUTm5kRlpGTVhKVVZHdzJZa2RvZDFveVRrZGpWRVl6VGxkb2NXUldiSEZTZWs0ellXeG9jV0V3VW05YWFsbzFWMjFrTldSVmN6Rk1WMFpMVG5wa2QxUkhkRzVOVmtaQ1VrYzBlRTB5VFhoWFNHaFNVVEI0YTFaclRrWlRWVEYwVkVjMU5WTlViSGxhYkU1WFdERkdkVk5yTVV4bGEzQXpUVWhrVW1KVVFreGtWR2hTVkRKT1NGZ3llRTFpTUd4bVlsY3hNazFXV21aVFJsRjVXREJPVWxSdWJ6QmFWbkF3Vm01Tk1WVkhPREJoYlRCNlZVVjBXV0pzVW05a2FsWkxZVzVTUWxFeWRFdGlWbVJJWkZoc1dsVnFWVFZaYlVwVVRVZDRNMkZzT1ZWV1NFVXdXakphUTFscmRERmlWM2cxVFVSR1lWcHVTbTVQV0ZwaFVraGtRMkpYVW1wYU1uZDZWREpHTkZFeVRuVllNMEpzWW14YU1sUnVTbFJVTTBweFQxaG9hR1ZIVGpKV1JYTXpaR3RuTWs5VlJtaGxibkJyWkVWNE5sVlVUbVpWTUd3MFVqRnNla3hYVm14TmEwMTVUV3c1UldSVVZYZFJXRUV5V1RGa2Exa3dPVmhUZWxwVVZVUnNjVk5GVWt0U2FsWTFVMWN4VUdWWVVrSlpNVTVLWlcwNWJsUkdhRWhhUmxKVFVUTkNiVnBWU2taWGJGcEhWbTVPUm1KVldqSllNamxFVmpOYVVWVkdaRWRsYXpWSVpGZFNiMUpVWkZkWk1rWm9XREpTUTFRd2J6QmpNakZOWVZSWk5WTnJVbWxsUlhSSlUxVjNNV0pJVWxGT2JFa3lZMGQ0VjFSSGNHMWhNVTR5VjJ0U1RVNTZSblpXYlc4MFltNW9jazFyZUZOV2FtTjRZbFpDZUZWR2FHOVNWRVpyWVVkbmRHUldRbFJOTVVaTFpWY3dNbUZYVVRWVFZXUnhUVWhhYm1ORVJrWlpia0p5VTFoS2RVOVVaSGhaTVVKVFRVWm9ZVmRHVVRWWGEyUnJVVEU1Y1dSSGJGWmlWelZ0WTBkV1VGRldaSGhQV0hCdFkyMXNjRmRyTlZWYU1sWktZbFUxTm1GV1pHdFdWMDVLVEZaQ2JHUlhXbUZOU0doT1RtdDRkMVJHVmxwV2JFbDNUa2N4TlZWc1FuRmFWRTV0VGtoc1dsVlljR1pNVkVJeFZqQmtlazFyU2xaa1JYUnhWMUU5UFNJc0ltVnRZV2xzSWpvaWFuVm1ZV1Z5YldGQWNtVmthR0YwTG1OdmJTSjlmWDA9Cg=="
            }
        ]
    },
    "*manifests.Networking": {
        "Config": {
            "kind": "Network",
            "apiVersion": "config.openshift.io/v1",
            "metadata": {
                "name": "cluster",
                "creationTimestamp": null
            },
            "spec": {
                "clusterNetwork": [
                    {
                        "cidr": "10.128.0.0/14",
                        "hostPrefix": 23
                    }
                ],
                "serviceNetwork": [
                    "172.30.0.0/16"
                ],
                "networkType": "OVNKubernetes",
                "externalIP": {
                    "policy": {}
                }
            },
            "status": {}
        },
        "FileList": [
            {
                "Filename": "manifests/cluster-network-01-crd.yml",
                "Data": ""
            },
            {
                "Filename": "manifests/cluster-network-02-config.yml",
                "Data": "YXBpVmVyc2lvbjogY29uZmlnLm9wZW5zaGlmdC5pby92MQpraW5kOiBOZXR3b3JrCm1ldGFkYXRhOgogIGNyZWF0aW9uVGltZXN0YW1wOiBudWxsCiAgbmFtZTogY2x1c3RlcgpzcGVjOgogIGNsdXN0ZXJOZXR3b3JrOgogIC0gY2lkcjogMTAuMTI4LjAuMC8xNAogICAgaG9zdFByZWZpeDogMjMKICBleHRlcm5hbElQOgogICAgcG9saWN5OiB7fQogIG5ldHdvcmtUeXBlOiBPVk5LdWJlcm5ldGVzCiAgc2VydmljZU5ldHdvcms6CiAgLSAxNzIuMzAuMC4wLzE2CnN0YXR1czoge30K"
            }
        ]
    },
    "*manifests.Openshift": {
        "FileList": [
            {
                "Filename": "openshift/99_cloud-creds-secret.yaml",
                "Data": "a2luZDogU2VjcmV0CmFwaVZlcnNpb246IHYxCm1ldGFkYXRhOgogIG5hbWVzcGFjZToga3ViZS1zeXN0ZW0KICBuYW1lOiBhd3MtY3JlZHMKZGF0YToKICBhd3NfYWNjZXNzX2tleV9pZDogUVV0SlFWUTFWRXMwV2s5T1JVY3lUMUZKTWtRPQogIGF3c19zZWNyZXRfYWNjZXNzX2tleTogV1ZRMmFuZG9SSEJCVW5CbGNrbG9NV3cxWkd4TmFtbE1lV3RyVUdWdkt6SmhjbTVyUzNaYUx3PT0K"
            },
            {
                "Filename": "openshift/99_kubeadmin-password-secret.yaml",
                "Data": "a2luZDogU2VjcmV0CmFwaVZlcnNpb246IHYxCm1ldGFkYXRhOgogIG5hbWVzcGFjZToga3ViZS1zeXN0ZW0KICBuYW1lOiBrdWJlYWRtaW4KZGF0YToKICBrdWJlYWRtaW46IEpESmhKREV3SkhWbldETTVibXhUZEhOU1FqRkxlVFpqY0VvM1VYVnZORkUzUmpKWEwxTjRUMDFrV0hWNVducEZhV2MwYXpZMWNFNXpZa3RUCg=="
            },
            {
                "Filename": "openshift/99_role-cloud-creds-secret-reader.yaml",
                "Data": "a2luZDogUm9sZQphcGlWZXJzaW9uOiByYmFjLmF1dGhvcml6YXRpb24uazhzLmlvL3YxCm1ldGFkYXRhOgogIG5hbWVzcGFjZToga3ViZS1zeXN0ZW0KICBuYW1lOiBhd3MtY3JlZHMtc2VjcmV0LXJlYWRlcgpydWxlczoKLSBhcGlHcm91cHM6IFsiIl0KICByZXNvdXJjZXM6IFsic2VjcmV0cyJdCiAgcmVzb3VyY2VOYW1lczogWyJhd3MtY3JlZHMiXQogIHZlcmJzOiBbImdldCJdCg=="
            },
            {
                "Filename": "openshift/openshift-install-manifests.yaml",
                "Data": "YXBpVmVyc2lvbjogdjEKZGF0YToKICBpbnZva2VyOiB1c2VyCiAgdmVyc2lvbjogdjQuMTIuMApraW5kOiBDb25maWdNYXAKbWV0YWRhdGE6CiAgY3JlYXRpb25UaW1lc3RhbXA6IG51bGwKICBuYW1lOiBvcGVuc2hpZnQtaW5zdGFsbC1tYW5pZmVzdHMKICBuYW1lc3BhY2U6IG9wZW5zaGlmdC1jb25maWcK"
            }
        ]
    },
    "*manifests.Proxy": {
        "FileList": [
            {
                "Filename": "manifests/cluster-proxy-01-config.yaml",
                "Data": "YXBpVmVyc2lvbjogY29uZmlnLm9wZW5zaGlmdC5pby92MQpraW5kOiBQcm94eQptZXRhZGF0YToKICBjcmVhdGlvblRpbWVzdGFtcDogbnVsbAogIG5hbWU6IGNsdXN0ZXIKc3BlYzoKICB0cnVzdGVkQ0E6CiAgICBuYW1lOiAiIgpzdGF0dXM6IHt9Cg=="
            }
        ],
        "Config": {
            "kind": "Proxy",
            "apiVersion": "config.openshift.io/v1",
            "metadata": {
                "name": "cluster",
                "creationTimestamp": null
            },
            "spec": {
                "trustedCA": {
                    "name": ""
                }
            },
            "status": {}
        }
    },
    "*manifests.Scheduler": {
        "FileList": [
            {
                "Filename": "manifests/cluster-scheduler-02-config.yml",
                "Data": "YXBpVmVyc2lvbjogY29uZmlnLm9wZW5zaGlmdC5pby92MQpraW5kOiBTY2hlZHVsZXIKbWV0YWRhdGE6CiAgY3JlYXRpb25UaW1lc3RhbXA6IG51bGwKICBuYW1lOiBjbHVzdGVyCnNwZWM6CiAgbWFzdGVyc1NjaGVkdWxhYmxlOiB0cnVlCiAgcG9saWN5OgogICAgbmFtZTogIiIKc3RhdHVzOiB7fQo="
            }
        ]
    },
    "*openshift.AzureCloudProviderSecret": {
        "FileList": [
            {
                "Filename": "templates/99_azure-cloud-provider-secret.yaml.template",
                "Data": "YXBpVmVyc2lvbjogdjEKa2luZDogU2VjcmV0Cm1ldGFkYXRhOgogIG5hbWU6IGF6dXJlLWNsb3VkLXByb3ZpZGVyCiAgbmFtZXNwYWNlOiBrdWJlLXN5c3RlbQpzdHJpbmdEYXRhOgogIGNsb3VkLWNvbmZpZzogfAogICAge3suQ2xvdWRDb25maWcgfCBpbmRlbnQgNH19Cg=="
            },
            {
                "Filename": "templates/99_azure-cloud-provider-secret-getter-rolebinding.yaml",
                "Data": "YXBpVmVyc2lvbjogcmJhYy5hdXRob3JpemF0aW9uLms4cy5pby92MQpraW5kOiBSb2xlQmluZGluZwptZXRhZGF0YToKICBuYW1lOiBzeXN0ZW06YXp1cmUtY2xvdWQtcHJvdmlkZXItc2VjcmV0LWdldHRlcgogIG5hbWVzcGFjZToga3ViZS1zeXN0ZW0Kcm9sZVJlZjoKICBhcGlHcm91cDogcmJhYy5hdXRob3JpemF0aW9uLms4cy5pbwogIGtpbmQ6IFJvbGUKICBuYW1lOiBzeXN0ZW06YXp1cmUtY2xvdWQtcHJvdmlkZXItc2VjcmV0LWdldHRlcgpzdWJqZWN0czoKLSBraW5kOiBTZXJ2aWNlQWNjb3VudAogIG5hbWU6IGF6dXJlLWNsb3VkLXByb3ZpZGVyCiAgbmFtZXNwYWNlOiBrdWJlLXN5c3RlbQo="
            },
            {
                "Filename": "templates/99_azure-cloud-provider-secret-getter-role.yaml",
                "Data": "YXBpVmVyc2lvbjogcmJhYy5hdXRob3JpemF0aW9uLms4cy5pby92MQpraW5kOiBSb2xlCm1ldGFkYXRhOgogIG5hbWU6IHN5c3RlbTphenVyZS1jbG91ZC1wcm92aWRlci1zZWNyZXQtZ2V0dGVyCiAgbmFtZXNwYWNlOiBrdWJlLXN5c3RlbQpydWxlczoKLSBhcGlHcm91cHM6CiAgLSAiIgogIHJlc291cmNlTmFtZXM6CiAgLSBhenVyZS1jbG91ZC1wcm92aWRlcgogIHJlc291cmNlczoKICAtIHNlY3JldHMKICB2ZXJiczoKICAtIGdldAo="
            }
        ]
    },
    "*openshift.BaremetalConfig": {
        "FileList": [
            {
                "Filename": "templates/baremetal-provisioning-config.yaml.template",
                "Data": "YXBpVmVyc2lvbjogbWV0YWwzLmlvL3YxYWxwaGExCmtpbmQ6IFByb3Zpc2lvbmluZwptZXRhZGF0YToKICBuYW1lOiBwcm92aXNpb25pbmctY29uZmlndXJhdGlvbgpzcGVjOgogIHByb3Zpc2lvbmluZ0ludGVyZmFjZTogInt7LkJhcmVtZXRhbC5Qcm92aXNpb25pbmdOZXR3b3JrSW50ZXJmYWNlfX0iCiAgcHJvdmlzaW9uaW5nSVA6ICJ7ey5CYXJlbWV0YWwuQ2x1c3RlclByb3Zpc2lvbmluZ0lQfX0iCiAgcHJvdmlzaW9uaW5nTmV0d29ya0NJRFI6ICJ7ey5CYXJlbWV0YWwuUHJvdmlzaW9uaW5nTmV0d29ya0NJRFJ9fSIKICBwcm92aXNpb25pbmdOZXR3b3JrOiAie3suQmFyZW1ldGFsLlByb3Zpc2lvbmluZ05ldHdvcmt9fSIKICBwcm92aXNpb25pbmdESENQUmFuZ2U6ICJ7ey5CYXJlbWV0YWwuUHJvdmlzaW9uaW5nREhDUFJhbmdlfX0iCiAgcHJvdmlzaW9uaW5nT1NEb3dubG9hZFVSTDogInt7LlByb3Zpc2lvbmluZ09TRG93bmxvYWRVUkx9fSIKICB3YXRjaEFsbE5hbWVzcGFjZXM6IGZhbHNlCg=="
            }
        ]
    },
    "*openshift.CloudCredsSecret": {
        "FileList": [
            {
                "Filename": "templates/cloud-creds-secret.yaml.template",
                "Data": "a2luZDogU2VjcmV0CmFwaVZlcnNpb246IHYxCm1ldGFkYXRhOgogIG5hbWVzcGFjZToga3ViZS1zeXN0ZW0Ke3stIGlmIC5DbG91ZENyZWRzLkFXU319CiAgbmFtZTogYXdzLWNyZWRzCnt7LSBlbHNlIGlmIC5DbG91ZENyZWRzLkF6dXJlfX0KICBuYW1lOiBhenVyZS1jcmVkZW50aWFscwp7ey0gZWxzZSBpZiAuQ2xvdWRDcmVkcy5HQ1B9fQogIG5hbWU6IGdjcC1jcmVkZW50aWFscwp7ey0gZWxzZSBpZiAuQ2xvdWRDcmVkcy5JQk1DbG91ZH19CiAgbmFtZTogaWJtY2xvdWQtY3JlZGVudGlhbHMKe3stIGVsc2UgaWYgLkNsb3VkQ3JlZHMuT3BlblN0YWNrfX0KICBuYW1lOiBvcGVuc3RhY2stY3JlZGVudGlhbHMKe3stIGVsc2UgaWYgLkNsb3VkQ3JlZHMuVlNwaGVyZX19CiAgbmFtZTogdnNwaGVyZS1jcmVkcwp7ey0gZWxzZSBpZiAuQ2xvdWRDcmVkcy5PdmlydH19CiAgbmFtZTogb3ZpcnQtY3JlZGVudGlhbHMKe3stIGVuZH19CmRhdGE6Cnt7LSBpZiAuQ2xvdWRDcmVkcy5BV1N9fQogIGF3c19hY2Nlc3Nfa2V5X2lkOiB7ey5DbG91ZENyZWRzLkFXUy5CYXNlNjRlbmNvZGVBY2Nlc3NLZXlJRH19CiAgYXdzX3NlY3JldF9hY2Nlc3Nfa2V5OiB7ey5DbG91ZENyZWRzLkFXUy5CYXNlNjRlbmNvZGVTZWNyZXRBY2Nlc3NLZXl9fQp7ey0gZWxzZSBpZiAuQ2xvdWRDcmVkcy5BenVyZX19CiAgYXp1cmVfc3Vic2NyaXB0aW9uX2lkOiB7ey5DbG91ZENyZWRzLkF6dXJlLkJhc2U2NGVuY29kZVN1YnNjcmlwdGlvbklEfX0KICBhenVyZV9jbGllbnRfaWQ6IHt7LkNsb3VkQ3JlZHMuQXp1cmUuQmFzZTY0ZW5jb2RlQ2xpZW50SUR9fQogIGF6dXJlX2NsaWVudF9zZWNyZXQ6IHt7LkNsb3VkQ3JlZHMuQXp1cmUuQmFzZTY0ZW5jb2RlQ2xpZW50U2VjcmV0fX0KICBhenVyZV90ZW5hbnRfaWQ6IHt7LkNsb3VkQ3JlZHMuQXp1cmUuQmFzZTY0ZW5jb2RlVGVuYW50SUR9fQogIGF6dXJlX3Jlc291cmNlX3ByZWZpeDoge3suQ2xvdWRDcmVkcy5BenVyZS5CYXNlNjRlbmNvZGVSZXNvdXJjZVByZWZpeH19CiAgYXp1cmVfcmVzb3VyY2Vncm91cDoge3suQ2xvdWRDcmVkcy5BenVyZS5CYXNlNjRlbmNvZGVSZXNvdXJjZUdyb3VwfX0KICBhenVyZV9yZWdpb246IHt7LkNsb3VkQ3JlZHMuQXp1cmUuQmFzZTY0ZW5jb2RlUmVnaW9ufX0Ke3stIGVsc2UgaWYgLkNsb3VkQ3JlZHMuR0NQfX0KICBzZXJ2aWNlX2FjY291bnQuanNvbjoge3suQ2xvdWRDcmVkcy5HQ1AuQmFzZTY0ZW5jb2RlU2VydmljZUFjY291bnR9fQp7ey0gZWxzZSBpZiAuQ2xvdWRDcmVkcy5JQk1DbG91ZH19CiAgaWJtY2xvdWRfYXBpX2tleToge3suQ2xvdWRDcmVkcy5JQk1DbG91ZC5CYXNlNjRlbmNvZGVBUElLZXl9fQp7ey0gZWxzZSBpZiAuQ2xvdWRDcmVkcy5PcGVuU3RhY2t9fQogIGNsb3Vkcy55YW1sOiB7ey5DbG91ZENyZWRzLk9wZW5TdGFjay5CYXNlNjRlbmNvZGVDbG91ZENyZWRzfX0KICBjbG91ZHMuY29uZjoge3suQ2xvdWRDcmVkcy5PcGVuU3RhY2suQmFzZTY0ZW5jb2RlQ2xvdWRDcmVkc0lOSX19Cnt7LSBlbHNlIGlmIC5DbG91ZENyZWRzLlZTcGhlcmV9fQp7ey0gcmFuZ2UgLkNsb3VkQ3JlZHMuVlNwaGVyZX19CiAge3suVkNlbnRlcn19LnVzZXJuYW1lOiB7ey5CYXNlNjRlbmNvZGVVc2VybmFtZX19CiAge3suVkNlbnRlcn19LnBhc3N3b3JkOiB7ey5CYXNlNjRlbmNvZGVQYXNzd29yZH19Cnt7LSBlbmR9fQp7ey0gZWxzZSBpZiAuQ2xvdWRDcmVkcy5PdmlydH19CiAgb3ZpcnRfdXJsOiB7ey5DbG91ZENyZWRzLk92aXJ0LkJhc2U2NGVuY29kZVVSTH19CiAgb3ZpcnRfdXNlcm5hbWU6IHt7LkNsb3VkQ3JlZHMuT3ZpcnQuQmFzZTY0ZW5jb2RlVXNlcm5hbWV9fQogIG92aXJ0X3Bhc3N3b3JkOiB7ey5DbG91ZENyZWRzLk92aXJ0LkJhc2U2NGVuY29kZVBhc3N3b3JkfX0KICBvdmlydF9pbnNlY3VyZToge3suQ2xvdWRDcmVkcy5PdmlydC5CYXNlNjRlbmNvZGVJbnNlY3VyZX19CiAgb3ZpcnRfY2FfYnVuZGxlOiB7ey5DbG91ZENyZWRzLk92aXJ0LkJhc2U2NGVuY29kZUNBQnVuZGxlfX0Ke3stIGVuZH19Cg=="
            }
        ]
    },
    "*openshift.KubeadminPasswordSecret": {
        "FileList": [
            {
                "Filename": "templates/kubeadmin-password-secret.yaml.template",
                "Data": "a2luZDogU2VjcmV0CmFwaVZlcnNpb246IHYxCm1ldGFkYXRhOgogIG5hbWVzcGFjZToga3ViZS1zeXN0ZW0KICBuYW1lOiBrdWJlYWRtaW4KZGF0YToKICBrdWJlYWRtaW46IHt7LkJhc2U2NEVuY29kZWRLdWJlYWRtaW5Qd0hhc2h9fQo="
            }
        ]
    },
    "*openshift.NetworkCRDs": {
        "FileList": [
            {
                "Filename": "templates/cluster-networkconfig-crd.yaml",
                "Data": ""
            }
        ]
    },
    "*openshift.RoleCloudCredsSecretReader": {
        "FileList": [
            {
                "Filename": "templates/role-cloud-creds-secret-reader.yaml.template",
                "Data": "a2luZDogUm9sZQphcGlWZXJzaW9uOiByYmFjLmF1dGhvcml6YXRpb24uazhzLmlvL3YxCm1ldGFkYXRhOgogIG5hbWVzcGFjZToga3ViZS1zeXN0ZW0Ke3stIGlmIC5DbG91ZENyZWRzLkFXU319CiAgbmFtZTogYXdzLWNyZWRzLXNlY3JldC1yZWFkZXIKe3stIGVsc2UgaWYgLkNsb3VkQ3JlZHMuQXp1cmV9fQogIG5hbWU6IGF6dXJlLWNyZWRzLXNlY3JldC1yZWFkZXIKe3stIGVsc2UgaWYgLkNsb3VkQ3JlZHMuR0NQfX0KICBuYW1lOiBnY3AtY3JlZHMtc2VjcmV0LXJlYWRlcgp7ey0gZWxzZSBpZiAuQ2xvdWRDcmVkcy5JQk1DbG91ZH19CiAgbmFtZTogaWJtY2xvdWQtY3JlZHMtc2VjcmV0LXJlYWRlcgp7ey0gZWxzZSBpZiAuQ2xvdWRDcmVkcy5PcGVuU3RhY2t9fQogIG5hbWU6IG9wZW5zdGFjay1jcmVkcy1zZWNyZXQtcmVhZGVyCnt7LSBlbHNlIGlmIC5DbG91ZENyZWRzLlZTcGhlcmV9fQogIG5hbWU6IHZzcGhlcmUtY3JlZHMtc2VjcmV0LXJlYWRlcgp7ey0gZWxzZSBpZiAuQ2xvdWRDcmVkcy5PdmlydH19CiAgbmFtZTogb3ZpcnQtY3JlZHMtc2VjcmV0LXJlYWRlcgp7ey0gZWxzZSBpZiAuQ2xvdWRDcmVkcy5OdXRhbml4fX0KICBuYW1lOiBudXRhbml4LWNyZWRzLXNlY3JldC1yZWFkZXIKe3stIGVuZH19CnJ1bGVzOgotIGFwaUdyb3VwczogWyIiXQogIHJlc291cmNlczogWyJzZWNyZXRzIl0Ke3stIGlmIC5DbG91ZENyZWRzLkFXU319CiAgcmVzb3VyY2VOYW1lczogWyJhd3MtY3JlZHMiXQp7ey0gZWxzZSBpZiAuQ2xvdWRDcmVkcy5BenVyZX19CiAgcmVzb3VyY2VOYW1lczogWyJhenVyZS1jcmVkZW50aWFscyJdCnt7LSBlbHNlIGlmIC5DbG91ZENyZWRzLkdDUH19CiAgcmVzb3VyY2VOYW1lczogWyJnY3AtY3JlZGVudGlhbHMiXQp7ey0gZWxzZSBpZiAuQ2xvdWRDcmVkcy5JQk1DbG91ZH19CiAgcmVzb3VyY2VOYW1lczogWyJpYm1jbG91ZC1jcmVkZW50aWFscyJdCnt7LSBlbHNlIGlmIC5DbG91ZENyZWRzLk9wZW5TdGFja319CiAgcmVzb3VyY2VOYW1lczogWyJvcGVuc3RhY2stY3JlZGVudGlhbHMiXQp7ey0gZWxzZSBpZiAuQ2xvdWRDcmVkcy5WU3BoZXJlfX0KICByZXNvdXJjZU5hbWVzOiBbInZzcGhlcmUtY3JlZHMiXQp7ey0gZWxzZSBpZiAuQ2xvdWRDcmVkcy5PdmlydH19CiAgcmVzb3VyY2VOYW1lczogWyJvdmlydC1jcmVkZW50aWFscyJdCnt7LSBlbHNlIGlmIC5DbG91ZENyZWRzLk51dGFuaXh9fQogIHJlc291cmNlTmFtZXM6IFsibnV0YW5peC1jcmVkZW50aWFscyJdCnt7LSBlbmR9fQogIHZlcmJzOiBbImdldCJdCg=="
            }
        ]
    },
    "*openshiftinstall.Config": {
        "File": {
            "Filename": "openshift/openshift-install-manifests.yaml",
            "Data": "YXBpVmVyc2lvbjogdjEKZGF0YToKICBpbnZva2VyOiB1c2VyCiAgdmVyc2lvbjogdjQuMTIuMApraW5kOiBDb25maWdNYXAKbWV0YWRhdGE6CiAgY3JlYXRpb25UaW1lc3RhbXA6IG51bGwKICBuYW1lOiBvcGVuc2hpZnQtaW5zdGFsbC1tYW5pZmVzdHMKICBuYW1lc3BhY2U6IG9wZW5zaGlmdC1jb25maWcK"
        }
    },
    "*password.KubeadminPassword": {
        "Password": "ryLtb-dFCde-VE9Wo-yPwSh",
        "PasswordHash": "JDJhJDEwJHVnWDM5bmxTdHNSQjFLeTZjcEo3UXVvNFE3RjJXL1N4T01kWHV5WnpFaWc0azY1cE5zYktT",
        "File": {
            "Filename": "auth/kubeadmin-password",
            "Data": "cnlMdGItZEZDZGUtVkU5V28teVB3U2g="
        }
    },
    "*quota.PlatformQuotaCheck": {},
    "*releaseimage.Image": {
        "PullSpec": "quay.io/openshift-release-dev/ocp-release@sha256:b9d6ccb5ba5a878141e468e56fa62912ad7c04864acfec0c0056d2b41e3259cc",
        "Repository": "quay.io/openshift-release-dev/ocp-release"
    },
    "*rhcos.BootstrapImage": "ami-00fb4d96886f55a31",
    "*rhcos.Image": "ami-00fb4d96886f55a31",
    "*rhcos.Release": "",
    "*tls.APIServerProxyCertKey": {
        "CertRaw": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURXekNDQWtPZ0F3SUJBZ0lJZFM3OVJlYkp2c013RFFZSktvWklodmNOQVFFTEJRQXdLREVSTUE4R0ExVUUKQ3hNSVltOXZkR3QxWW1VeEV6QVJCZ05WQkFNVENtRm5aM0psWjJGMGIzSXdIaGNOTWpNd05ERTRNVE13T0RFeApXaGNOTWpNd05ERTVNVE13T0RFeVdqQThNUlF3RWdZRFZRUUtFd3RyZFdKbExXMWhjM1JsY2pFa01DSUdBMVVFCkF4TWJjM2x6ZEdWdE9tdDFZbVV0WVhCcGMyVnlkbVZ5TFhCeWIzaDVNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUYKQUFPQ0FROEFNSUlCQ2dLQ0FRRUF2bEdDdVkrak9YMjl2KzNkVFYrYUhOYUNCOHN5Q05YSUFQUnB5M3BKcVlaeAo1YXFPQkxQUW9tS2JIZExVRlRzbkgzeGl4aythRjlpWUZsQng5WXNNa3BrZTN3SWJVUGNXOEFtelZUN1Jpc2NqCjVmLzF4ZnlUZDNoVjFnMnhlWlRhK0d2THVTRnZvVlQxLzh1NzhaMk9jVjVuWWFucXlFckwxZktDUjc3RzlTV2cKREd6QTlrSEpnK0l3R2FzdXQ3WkpIYitMOFNJRlBhSE1RTjRteFkwcTU3SFFQRk1qb0JKMndxdGNFZ0xiV1g3eQppamJUem5MUVdyQWNOSXhjWWlmLzBoTUFlM1FpdXpYeG5DZmdhTDNHaVJSVWVRcTN1aktkUWZ5V2hQU0tYQVVDCmlFVTNiUE5EN29NVnUvQTMyZzdEL3I5dW5lTGlxTG9ILzYvYmdNV3p1d0lEQVFBQm8zVXdjekFPQmdOVkhROEIKQWY4RUJBTUNCYUF3RXdZRFZSMGxCQXd3Q2dZSUt3WUJCUVVIQXdJd0RBWURWUjBUQVFIL0JBSXdBREFkQmdOVgpIUTRFRmdRVVJwNU92L1QzVjNyc0pBOEtxM2hQVFpwOXBNc3dId1lEVlIwakJCZ3dGb0FVRmpIb1NJbHVEUkRUCnBYZEpBcDVTd1NRY0RNY3dEUVlKS29aSWh2Y05BUUVMQlFBRGdnRUJBRjRoTy9BY04yb25pQ0djRnNzUFEzWkYKaUZWbldGaXZyQlprNHloY0tBN1paUllhQkZXZDVGc21Uc3VGYy9tRWVQdEdKaEpDNUhCZFNvOVEzWXBISzEvawpZSU5aN1B0OEhsNmhva2p6RTlyWFlWTlFmNGFUSmpiZ3FQblU2OU9TNHAyR3dLb3dTMU00SkRJWjRqeUViRHlMCmg3UW93YWlYQXE4WlJoeGtUYTViSERIZ2krRlZpSEVxVVUyeUZTOVB6emlKT0RsKzhYTitoaFZhcWRUOUdSbHcKQzg0anRBRUJUQ2Z5VlkwVEYxaU8yTnByc3hSYjRkOFlsZTcvRTFzbnluaC8rWTU1MnRPcUVVQlc0N0ZZYkFoMgpCczBGRElBYUExdExPeW9zbFhMSmhuT2RyMWZyYVpNajhIY3F3dHVvb2w3KytqRmFtT2l1bW95OUZ2R1RGRVU9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K",
        "KeyRaw": "LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb2dJQkFBS0NBUUVBdmxHQ3VZK2pPWDI5diszZFRWK2FITmFDQjhzeUNOWElBUFJweTNwSnFZWng1YXFPCkJMUFFvbUtiSGRMVUZUc25IM3hpeGsrYUY5aVlGbEJ4OVlzTWtwa2Uzd0liVVBjVzhBbXpWVDdSaXNjajVmLzEKeGZ5VGQzaFYxZzJ4ZVpUYStHdkx1U0Z2b1ZUMS84dTc4WjJPY1Y1bllhbnF5RXJMMWZLQ1I3N0c5U1dnREd6QQo5a0hKZytJd0dhc3V0N1pKSGIrTDhTSUZQYUhNUU40bXhZMHE1N0hRUEZNam9CSjJ3cXRjRWdMYldYN3lpamJUCnpuTFFXckFjTkl4Y1lpZi8waE1BZTNRaXV6WHhuQ2ZnYUwzR2lSUlVlUXEzdWpLZFFmeVdoUFNLWEFVQ2lFVTMKYlBORDdvTVZ1L0EzMmc3RC9yOXVuZUxpcUxvSC82L2JnTVd6dXdJREFRQUJBb0lCQUczUkt0VllCSjlQNXdXdwpnMW42S0RzcnE2eERtNE50bUJLMDliYnJ3VVdJeG4vM2dpdEVkc2E4anpVT1NrSlY5NlU3YU9OMVd6MFhSZXJhClVHZVc3SkpLdUgyR0FhMGVacVhyY3dkbFVCUDhCTUxhaHo3UEYyaUFqMGNNYjdQd0tNbmZxWllSclJBeXJpQUQKdDFjYnl1MnZ3NGVmUEZLR2xrZkZ2MWNXeGtiOWhlL2hla3ViQVR2YkloTGNsNlozRm9IYnN3cGowbFhDd29SSgo3RFNwM3hpRUl4d29rTlV2a2FobHRwbWJyN005Z1FFZEFuSHdGSGo0ZmlnMEcwT2o3UjFOQitJY0orSFBCQkJUCkNEWTdSUVhmTVNORDc2TmFaeUpUU294ZiswaWZSWXo3Z1Q3L1Q2NlEvMEg1MmFhakQrUGk4ckxsSVFMU0pvOUYKNmg1MHlVRUNnWUVBL0ZkdlBBdnNCUjFoM3lVQzRvVkNtQUZtTktNWHNTZE1uNjNFMkowejlPYUF0cmxXNHNOUQp5eDNZUVdxaUlERDJrcEl4enJpYTMrT2FiaVZ6S2FrWlc1L1lpR0Q4RmdUL2xwcmRzTnplSCs1cEFqZktvNVB2CjhsTlJ2VXBMWXpqVmVreStUeENEd29oNlczSnJNdzRNM3J6ZzRJbHZ3dnNLYlo4QWlNUi8rZzhDZ1lFQXdSUGcKbGF0c1E0TzNhR3RUQ1o0U0ExNW4wbXFrbHZYYnNycFZKVGw1b0NMYkJRblBzOXBSRmdJa0x4Tlo4OTR4c2VydApWRVVhL3hTWC9NeHFkdHFqMXJkaXgrL0VFcE1TYU4rcUdCWjk3Zm12cVJza3c1R1Y4YnpUbUlPSjlmVjF1MkhQCkRvWlpheG1yRFFUWFVCSmhLdWtJWDY2VTVDa0l2RzdLSHhnaFI1VUNnWUJ2b3pjQTk3MUpYZ0JvdW5VV1JpSjYKSVZSWVFUZEFGc1RkZUFFNFhBUWFlc2ZERHlnVFZwbXQ0dHhEeEt0SlZxQWZwRElJNUw4UUFoL1dUeGN0L1RQTQp4MkVDcFBXaHdFQmJIdFNwWkcyWTd0N2lMbENtSWRMc0FGU1BUQWtpTW9pdmZMaE5QbDhzZHppNnNGb2cwang3ClpsQ094Zjc5NGhady9RRTlnTUdsblFLQmdEM2ZxdGNMNmxQd2YvUWNnSzNTVkI5MFAzMDA0NjNrK0JUY2xiQ3EKTEluZTRhVkpzYUFIVkhqakVzbHJRQ1pnakRoaCt0QkluUkFsZjFkcUFxdzRBTTBzVTZHUytwaWhQUU1TdWlXaAovNVVsc045V2JYK214aENEM0tOQmRCSzRLSlIyRWE2cjZ6ZmhMK21xSlgzcGhlNEVZOFNWNCswQ0lXU1JkSUJtCmNUUEpBb0dBSy9QUWJUQzlYczUxM1VRMk9WeVhRU1h6Z0hXY0l4ZWVyZHYvMWREYzgyalM4aFd2TEZIZVhDbGEKWkludEFNL0tKK2VIZmlGTWMrcEQ5WHBCQ0UrT0Q1VmJrTk1Ia000RCtWSnBWSnpkcXorOXg0VDZsTi9TWDVuUgpqZkwrRXdjVVFJVUhFMmo5TUhVOFE0ejdmYXdXWlhjUWhBektJRmE2QUVyOEJwbWx5cUU9Ci0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==",
        "FileList": [
            {
                "Filename": "tls/apiserver-proxy.key",
                "Data": "LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb2dJQkFBS0NBUUVBdmxHQ3VZK2pPWDI5diszZFRWK2FITmFDQjhzeUNOWElBUFJweTNwSnFZWng1YXFPCkJMUFFvbUtiSGRMVUZUc25IM3hpeGsrYUY5aVlGbEJ4OVlzTWtwa2Uzd0liVVBjVzhBbXpWVDdSaXNjajVmLzEKeGZ5VGQzaFYxZzJ4ZVpUYStHdkx1U0Z2b1ZUMS84dTc4WjJPY1Y1bllhbnF5RXJMMWZLQ1I3N0c5U1dnREd6QQo5a0hKZytJd0dhc3V0N1pKSGIrTDhTSUZQYUhNUU40bXhZMHE1N0hRUEZNam9CSjJ3cXRjRWdMYldYN3lpamJUCnpuTFFXckFjTkl4Y1lpZi8waE1BZTNRaXV6WHhuQ2ZnYUwzR2lSUlVlUXEzdWpLZFFmeVdoUFNLWEFVQ2lFVTMKYlBORDdvTVZ1L0EzMmc3RC9yOXVuZUxpcUxvSC82L2JnTVd6dXdJREFRQUJBb0lCQUczUkt0VllCSjlQNXdXdwpnMW42S0RzcnE2eERtNE50bUJLMDliYnJ3VVdJeG4vM2dpdEVkc2E4anpVT1NrSlY5NlU3YU9OMVd6MFhSZXJhClVHZVc3SkpLdUgyR0FhMGVacVhyY3dkbFVCUDhCTUxhaHo3UEYyaUFqMGNNYjdQd0tNbmZxWllSclJBeXJpQUQKdDFjYnl1MnZ3NGVmUEZLR2xrZkZ2MWNXeGtiOWhlL2hla3ViQVR2YkloTGNsNlozRm9IYnN3cGowbFhDd29SSgo3RFNwM3hpRUl4d29rTlV2a2FobHRwbWJyN005Z1FFZEFuSHdGSGo0ZmlnMEcwT2o3UjFOQitJY0orSFBCQkJUCkNEWTdSUVhmTVNORDc2TmFaeUpUU294ZiswaWZSWXo3Z1Q3L1Q2NlEvMEg1MmFhakQrUGk4ckxsSVFMU0pvOUYKNmg1MHlVRUNnWUVBL0ZkdlBBdnNCUjFoM3lVQzRvVkNtQUZtTktNWHNTZE1uNjNFMkowejlPYUF0cmxXNHNOUQp5eDNZUVdxaUlERDJrcEl4enJpYTMrT2FiaVZ6S2FrWlc1L1lpR0Q4RmdUL2xwcmRzTnplSCs1cEFqZktvNVB2CjhsTlJ2VXBMWXpqVmVreStUeENEd29oNlczSnJNdzRNM3J6ZzRJbHZ3dnNLYlo4QWlNUi8rZzhDZ1lFQXdSUGcKbGF0c1E0TzNhR3RUQ1o0U0ExNW4wbXFrbHZYYnNycFZKVGw1b0NMYkJRblBzOXBSRmdJa0x4Tlo4OTR4c2VydApWRVVhL3hTWC9NeHFkdHFqMXJkaXgrL0VFcE1TYU4rcUdCWjk3Zm12cVJza3c1R1Y4YnpUbUlPSjlmVjF1MkhQCkRvWlpheG1yRFFUWFVCSmhLdWtJWDY2VTVDa0l2RzdLSHhnaFI1VUNnWUJ2b3pjQTk3MUpYZ0JvdW5VV1JpSjYKSVZSWVFUZEFGc1RkZUFFNFhBUWFlc2ZERHlnVFZwbXQ0dHhEeEt0SlZxQWZwRElJNUw4UUFoL1dUeGN0L1RQTQp4MkVDcFBXaHdFQmJIdFNwWkcyWTd0N2lMbENtSWRMc0FGU1BUQWtpTW9pdmZMaE5QbDhzZHppNnNGb2cwang3ClpsQ094Zjc5NGhady9RRTlnTUdsblFLQmdEM2ZxdGNMNmxQd2YvUWNnSzNTVkI5MFAzMDA0NjNrK0JUY2xiQ3EKTEluZTRhVkpzYUFIVkhqakVzbHJRQ1pnakRoaCt0QkluUkFsZjFkcUFxdzRBTTBzVTZHUytwaWhQUU1TdWlXaAovNVVsc045V2JYK214aENEM0tOQmRCSzRLSlIyRWE2cjZ6ZmhMK21xSlgzcGhlNEVZOFNWNCswQ0lXU1JkSUJtCmNUUEpBb0dBSy9QUWJUQzlYczUxM1VRMk9WeVhRU1h6Z0hXY0l4ZWVyZHYvMWREYzgyalM4aFd2TEZIZVhDbGEKWkludEFNL0tKK2VIZmlGTWMrcEQ5WHBCQ0UrT0Q1VmJrTk1Ia000RCtWSnBWSnpkcXorOXg0VDZsTi9TWDVuUgpqZkwrRXdjVVFJVUhFMmo5TUhVOFE0ejdmYXdXWlhjUWhBektJRmE2QUVyOEJwbWx5cUU9Ci0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg=="
            },
            {
                "Filename": "tls/apiserver-proxy.crt",
                "Data": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURXekNDQWtPZ0F3SUJBZ0lJZFM3OVJlYkp2c013RFFZSktvWklodmNOQVFFTEJRQXdLREVSTUE4R0ExVUUKQ3hNSVltOXZkR3QxWW1VeEV6QVJCZ05WQkFNVENtRm5aM0psWjJGMGIzSXdIaGNOTWpNd05ERTRNVE13T0RFeApXaGNOTWpNd05ERTVNVE13T0RFeVdqQThNUlF3RWdZRFZRUUtFd3RyZFdKbExXMWhjM1JsY2pFa01DSUdBMVVFCkF4TWJjM2x6ZEdWdE9tdDFZbVV0WVhCcGMyVnlkbVZ5TFhCeWIzaDVNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUYKQUFPQ0FROEFNSUlCQ2dLQ0FRRUF2bEdDdVkrak9YMjl2KzNkVFYrYUhOYUNCOHN5Q05YSUFQUnB5M3BKcVlaeAo1YXFPQkxQUW9tS2JIZExVRlRzbkgzeGl4aythRjlpWUZsQng5WXNNa3BrZTN3SWJVUGNXOEFtelZUN1Jpc2NqCjVmLzF4ZnlUZDNoVjFnMnhlWlRhK0d2THVTRnZvVlQxLzh1NzhaMk9jVjVuWWFucXlFckwxZktDUjc3RzlTV2cKREd6QTlrSEpnK0l3R2FzdXQ3WkpIYitMOFNJRlBhSE1RTjRteFkwcTU3SFFQRk1qb0JKMndxdGNFZ0xiV1g3eQppamJUem5MUVdyQWNOSXhjWWlmLzBoTUFlM1FpdXpYeG5DZmdhTDNHaVJSVWVRcTN1aktkUWZ5V2hQU0tYQVVDCmlFVTNiUE5EN29NVnUvQTMyZzdEL3I5dW5lTGlxTG9ILzYvYmdNV3p1d0lEQVFBQm8zVXdjekFPQmdOVkhROEIKQWY4RUJBTUNCYUF3RXdZRFZSMGxCQXd3Q2dZSUt3WUJCUVVIQXdJd0RBWURWUjBUQVFIL0JBSXdBREFkQmdOVgpIUTRFRmdRVVJwNU92L1QzVjNyc0pBOEtxM2hQVFpwOXBNc3dId1lEVlIwakJCZ3dGb0FVRmpIb1NJbHVEUkRUCnBYZEpBcDVTd1NRY0RNY3dEUVlKS29aSWh2Y05BUUVMQlFBRGdnRUJBRjRoTy9BY04yb25pQ0djRnNzUFEzWkYKaUZWbldGaXZyQlprNHloY0tBN1paUllhQkZXZDVGc21Uc3VGYy9tRWVQdEdKaEpDNUhCZFNvOVEzWXBISzEvawpZSU5aN1B0OEhsNmhva2p6RTlyWFlWTlFmNGFUSmpiZ3FQblU2OU9TNHAyR3dLb3dTMU00SkRJWjRqeUViRHlMCmg3UW93YWlYQXE4WlJoeGtUYTViSERIZ2krRlZpSEVxVVUyeUZTOVB6emlKT0RsKzhYTitoaFZhcWRUOUdSbHcKQzg0anRBRUJUQ2Z5VlkwVEYxaU8yTnByc3hSYjRkOFlsZTcvRTFzbnluaC8rWTU1MnRPcUVVQlc0N0ZZYkFoMgpCczBGRElBYUExdExPeW9zbFhMSmhuT2RyMWZyYVpNajhIY3F3dHVvb2w3KytqRmFtT2l1bW95OUZ2R1RGRVU9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K"
            }
        ]
    },
    "*tls.AdminKubeConfigCABundle": {
        "BundleRaw": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURNRENDQWhpZ0F3SUJBZ0lJWXhvRDk1bWk0YlV3RFFZSktvWklodmNOQVFFTEJRQXdOakVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1TQXdIZ1lEVlFRREV4ZGhaRzFwYmkxcmRXSmxZMjl1Wm1sbkxYTnBaMjVsY2pBZQpGdzB5TXpBME1UZ3hNekE0TURsYUZ3MHpNekEwTVRVeE16QTRNRGxhTURZeEVqQVFCZ05WQkFzVENXOXdaVzV6CmFHbG1kREVnTUI0R0ExVUVBeE1YWVdSdGFXNHRhM1ZpWldOdmJtWnBaeTF6YVdkdVpYSXdnZ0VpTUEwR0NTcUcKU0liM0RRRUJBUVVBQTRJQkR3QXdnZ0VLQW9JQkFRRE9Kb0FzTUN6WUFUZXZta0pUQ28rK3UvL3Y3QkFFTU9LUwp5bmhFM2RaTTMvVlViUnlBUnppU01iTDVpSXdGSGJzZHN6V2VVa1l6UElSRzliWDJzSXh6d2Q5OURMRzM4YkU3ClpTYUYySE91WFIwMFdCajI3ZEJjcFlyTmVzNFA0ODBublZ0WmsxWlQrVlUyMHhEaFVQWGpyakFoM2E2Y3dkYmQKWkduKzJBZVlveEplU2wvKzJUZzBXcEdnUm5PdVI3azV4WmpGVDJVNnhnNEt3c0d2eWRyZHVoVVFDVkxBT1hVZQpVcW5XMnJxY3gzeTVSYWd3cVVsMVZKZWxFQzBVbXJVeFRlQWlnelhGOVVHRmpFOXkvY29maEh1QmtXTGs0cCs5CmRPVXJ3cXQ2VE9Nd2d4Mk1pQXN6WS9IQ0FGcjc1ek9Ua1BaQTFCeEpyTHpEYUVHT0ZsVVZBZ01CQUFHalFqQkEKTUE0R0ExVWREd0VCL3dRRUF3SUNwREFQQmdOVkhSTUJBZjhFQlRBREFRSC9NQjBHQTFVZERnUVdCQlIrUHBwdAoyTS9LNUNZNitucFZmalNKckYyMUlUQU5CZ2txaGtpRzl3MEJBUXNGQUFPQ0FRRUFVTWFoc1pLcFpJVUh4MWI1Cm9CQnI1b0RsckdKUFZvSEh6M1pWL0M0K0NTMjNlaVFiTDhQc2Z4OU5DQ0VHLzV2akxSekVtL2ZCL1ZnZFVlaUMKdUxuUWdtQmUwWDBQNDIzdndmTzJKZGV3d0ZLSTdRZVRTWmw0VHoxK3FKOGt1YmlUYjBUcnhTd2FyQ3ZHbk5kYwpkYTBsTzBsbUpyNDA0Y091MUtqM1hWZXNDM2RnQnJpTXpiWmxCaDlyNzdLaytJYmNXY0ZIY1lxWFB1MDB5eVM4CmVoRHpNelRoZVI4ekVtZUNQdkxNa2toSzBpYXpLVmNDNVJlY3BvbDI3Uk80SmhkMDFjUUpXKy9xRUdKb0M3VlgKTlFwbVNhaTNOQkpwU0o2NWlPaGVmOVZSblVyamRxVVZDeEplMEpOVWJjSGtTZHpyWlBGK0NuYlRqOW9QcGROLwpxdjc3ZkE9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==",
        "FileList": [
            {
                "Filename": "tls/admin-kubeconfig-ca-bundle.crt",
                "Data": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURNRENDQWhpZ0F3SUJBZ0lJWXhvRDk1bWk0YlV3RFFZSktvWklodmNOQVFFTEJRQXdOakVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1TQXdIZ1lEVlFRREV4ZGhaRzFwYmkxcmRXSmxZMjl1Wm1sbkxYTnBaMjVsY2pBZQpGdzB5TXpBME1UZ3hNekE0TURsYUZ3MHpNekEwTVRVeE16QTRNRGxhTURZeEVqQVFCZ05WQkFzVENXOXdaVzV6CmFHbG1kREVnTUI0R0ExVUVBeE1YWVdSdGFXNHRhM1ZpWldOdmJtWnBaeTF6YVdkdVpYSXdnZ0VpTUEwR0NTcUcKU0liM0RRRUJBUVVBQTRJQkR3QXdnZ0VLQW9JQkFRRE9Kb0FzTUN6WUFUZXZta0pUQ28rK3UvL3Y3QkFFTU9LUwp5bmhFM2RaTTMvVlViUnlBUnppU01iTDVpSXdGSGJzZHN6V2VVa1l6UElSRzliWDJzSXh6d2Q5OURMRzM4YkU3ClpTYUYySE91WFIwMFdCajI3ZEJjcFlyTmVzNFA0ODBublZ0WmsxWlQrVlUyMHhEaFVQWGpyakFoM2E2Y3dkYmQKWkduKzJBZVlveEplU2wvKzJUZzBXcEdnUm5PdVI3azV4WmpGVDJVNnhnNEt3c0d2eWRyZHVoVVFDVkxBT1hVZQpVcW5XMnJxY3gzeTVSYWd3cVVsMVZKZWxFQzBVbXJVeFRlQWlnelhGOVVHRmpFOXkvY29maEh1QmtXTGs0cCs5CmRPVXJ3cXQ2VE9Nd2d4Mk1pQXN6WS9IQ0FGcjc1ek9Ua1BaQTFCeEpyTHpEYUVHT0ZsVVZBZ01CQUFHalFqQkEKTUE0R0ExVWREd0VCL3dRRUF3SUNwREFQQmdOVkhSTUJBZjhFQlRBREFRSC9NQjBHQTFVZERnUVdCQlIrUHBwdAoyTS9LNUNZNitucFZmalNKckYyMUlUQU5CZ2txaGtpRzl3MEJBUXNGQUFPQ0FRRUFVTWFoc1pLcFpJVUh4MWI1Cm9CQnI1b0RsckdKUFZvSEh6M1pWL0M0K0NTMjNlaVFiTDhQc2Z4OU5DQ0VHLzV2akxSekVtL2ZCL1ZnZFVlaUMKdUxuUWdtQmUwWDBQNDIzdndmTzJKZGV3d0ZLSTdRZVRTWmw0VHoxK3FKOGt1YmlUYjBUcnhTd2FyQ3ZHbk5kYwpkYTBsTzBsbUpyNDA0Y091MUtqM1hWZXNDM2RnQnJpTXpiWmxCaDlyNzdLaytJYmNXY0ZIY1lxWFB1MDB5eVM4CmVoRHpNelRoZVI4ekVtZUNQdkxNa2toSzBpYXpLVmNDNVJlY3BvbDI3Uk80SmhkMDFjUUpXKy9xRUdKb0M3VlgKTlFwbVNhaTNOQkpwU0o2NWlPaGVmOVZSblVyamRxVVZDeEplMEpOVWJjSGtTZHpyWlBGK0NuYlRqOW9QcGROLwpxdjc3ZkE9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg=="
            }
        ]
    },
    "*tls.AdminKubeConfigClientCertKey": {
        "CertRaw": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURaekNDQWsrZ0F3SUJBZ0lJVEhSYmJxSFVJVzh3RFFZSktvWklodmNOQVFFTEJRQXdOakVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1TQXdIZ1lEVlFRREV4ZGhaRzFwYmkxcmRXSmxZMjl1Wm1sbkxYTnBaMjVsY2pBZQpGdzB5TXpBME1UZ3hNekE0TURsYUZ3MHpNekEwTVRVeE16QTRNVEJhTURBeEZ6QVZCZ05WQkFvVERuTjVjM1JsCmJUcHRZWE4wWlhKek1SVXdFd1lEVlFRREV3eHplWE4wWlcwNllXUnRhVzR3Z2dFaU1BMEdDU3FHU0liM0RRRUIKQVFVQUE0SUJEd0F3Z2dFS0FvSUJBUUMvejU4dWZkTnd5R2xCNjN2VUN2Z1dBRm05Q0hNVlJMUGYyaVhMWnRsVwpubWVydGUvUFAxOGJNTG9iMzNwdC82M0prVDNLVGgrMGtKR2R4dWpXV2lQUHZ2Z0FremFoQVRvZ2p5cFNDWCtkCkpVVS9qSnA2bFo2U2Q5cVNjU2gxZi9lUHNrVTgwbnhMTkR2QitVK2Z0cEdCUFNQdEcyLzdBRDNTc0k0NGpheHAKWDFwSGVqY0QyLzNwRitidUZaY2tKaUFvQ3FubDhUeURYZGJZencvZURvcUo1RkxETk9zT0V5Y2E3WGlBM3VIOQp5akV2T0QvTE4rYlpjdDhNa044eXEvMWpnNlJ5czFtaFZtNUJ2RCthOGpzcFJPd3Y5T01MdFd3NGNWQW1HNmtICnFPUiszWXQzUlNkakFUVzZCc0RYZXRDQy9zUjFWaW1LOUFVVWJsVS90d3NuQWdNQkFBR2pmekI5TUE0R0ExVWQKRHdFQi93UUVBd0lGb0RBZEJnTlZIU1VFRmpBVUJnZ3JCZ0VGQlFjREFRWUlLd1lCQlFVSEF3SXdEQVlEVlIwVApBUUgvQkFJd0FEQWRCZ05WSFE0RUZnUVVPa3NHdGlGOENEM3gzSXRiLzh6anZXUUg5WHN3SHdZRFZSMGpCQmd3CkZvQVVmajZhYmRqUHl1UW1PdnA2Vlg0MGlheGR0U0V3RFFZSktvWklodmNOQVFFTEJRQURnZ0VCQUJ2MXp3di8KRlZpZWVuYk1rTVprWDFKcGlXWnp0S2pvUkNUYllLNWhTVThrMnZ0RWNVVDFKOVN6U1JTMi9KM0tlM0prL01USQo2YVFYNUsyajhEczBRRkxHU0l2THFub28yMS9DOVhuSG1mRnhsMmR0UTNIWkRYOHBUTlc5ZFlIOEQ2N0poWW0xCklGTFl5RXpSQzFMN1VVYkIzZFNMcTBGZ0p2RjVrSkFKeUNxRndlYTRMdVlBeGFmNGxTeVp5MVZtOXBzWXcwa1AKQ01rdENXc2pvU0Z0V3RhaVBqSy90T2ZUeEdqRDlSRlBMc1FaOUlVcks3eS9pUTBpVnU0cjgwa0VLVTNJbFIxMwpWdkNIeXp5cUZSaHZmWW9zR3Q2N2NNNUFQRllzdC83WXJEdWdZZTRiR2tleUwyT0xYc0VVZERTd1hTcys0eG1DClBPKy9mTlgrMm45OUs3cz0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=",
        "KeyRaw": "LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBdjgrZkxuM1RjTWhwUWV0NzFBcjRGZ0JadlFoekZVU3ozOW9seTJiWlZwNW5xN1h2Cnp6OWZHekM2Rzk5NmJmK3R5WkU5eWs0ZnRKQ1JuY2JvMWxvano3NzRBSk0yb1FFNklJOHFVZ2wvblNWRlA0eWEKZXBXZWtuZmFrbkVvZFgvM2o3SkZQTko4U3pRN3dmbFBuN2FSZ1QwajdSdHYrd0E5MHJDT09JMnNhVjlhUjNvMwpBOXY5NlJmbTdoV1hKQ1lnS0FxcDVmRThnMTNXMk04UDNnNktpZVJTd3pUckRoTW5HdTE0Z043aC9jb3hMemcvCnl6Zm0yWExmREpEZk1xdjlZNE9rY3JOWm9WWnVRYncvbXZJN0tVVHNML1RqQzdWc09IRlFKaHVwQjZqa2Z0MkwKZDBVbll3RTF1Z2JBMTNyUWd2N0VkVllwaXZRRkZHNVZQN2NMSndJREFRQUJBb0lCQUhya1JpT2VZRXNCVEZiOAp6ZkIwT3JDMTlzampVZ0NOYlFWK0dmcnc0VXphM3Fjb1FRWXludmVueDRXMk1CV3IyNmVxVThGN1Bsc015UThpCmN1bHJCVWpFSE5jWmVzVzdLSWZWMGhLUG5XQ01rWXAreGpiR0I3dmw2SGNzNHZRdFVlcVNHRVE0dzRQWGFuWUUKQ3R6VU52TnJ2Y25iYTJxUXBBdUtMUVRVMkdNRnBhSmRTSS9UY1d6cHZta3RxVXZXamQwS0ZCMFptcEpEWDJCbgpZY0FSWW9xTjd5WUduVTVZQ2VhMmJVT29EVjZsM1pIVkFvc1pBWnVKS2dwL21ncU5sN2hDUnNPQkU1SDV3NHN0CkNMMHRCNGpwazhtSHJuTHBSVmowRU9Ta3Q3bHgwSHZJQnhITFh2K0s1N2Y1UlNjd044NVB4SkxQbjJmZ2laT3kKTXdIb3MyRUNnWUVBMkE3WUkva1kyeGhJdEpEcWxxSmNoVHVqNUN2VVc4R2s5RnBnc3lFMWZQLzg1V01GWXJldwpOK2dQZlRPNmVQK3BuY1MvNEJ5NzhhWG1PaUN2U1lHYndPUjRYaUtVQVVTdkpLN2JXYUhsdkFRQlhQVVZMclNKCk1LMmxGUHdrV28zVi9xT2U1SXp3NXZsaDJVR3o5eXFLcWhKTzRyZy9FcituTG5HNjk2NnpvSGNDZ1lFQTQwVkUKS01DUVVUMnExVTcwc0VCVk16c2Z4NmNMS3l6dDVoOXpNalFUcFZhS2w3R3dpaUZTMStSYkxpZVBOVTQ0VGF1QgorVmJtV3dERkxzajhMcE12WUpXWEZMOCtqRjRieTNSNTVoKzlvVGlieFRSZ3UxM1duUGZlSFRNalYzeHE5QkNFCkNPOXNZbGVOVk02WmluRkZyc1N0L0lNczExcUF3Wnk3czZEenh0RUNnWUJtSXRaUVl5QTU2b2ZzUEJsNXJqVTQKa3BJT2VoM0FacEZaSmlSU2FkK0VRT3RIY1FFSndyWWVKNml5MGpKVG91Q0hBWXlISUc1RWROMmFHdnRpTDAvMgo1c3AwRGJxVHd1bGMyUUErcGdjWlUzZGxmMEpOT3ZFanZ1S3NRZW5abVBWUmsvMjRJMXg2ZytlYXNiR21wVWk1Cnp6L1ZjNjMxYWY1Wk9WQmVhQXJvVHdLQmdDZ3lEUDhFSjhJbW5QdEREcVhKaXdnWGtlUlcxL1BYNjIrQzZuWGIKbmdubEIzZ1MxajFuN1dYL25seklaRnl5SytVWXkxRVZISUxGM1JvTU5BWHN4RGxaMjdHd3JWaFlJS1JZUW1NQQpCQ0xxaHlwV3ZERUhSTGpZWWZGYUpRc0pGMFY1VWxEZVA1WVpGQWNHejBNY0M0NEFmU0VtOWh4VWhtYzMyRDdKCjNiT3hBb0dCQU5IdFkzdGRyUERjSS90bUd5TjJoUEVpaGVxWGVUaWNGSE85Wlk1bmJWOVdmazQ2UGpnTU1GS2YKSHVJNDl6S1FGSjV3Uko1TUw0dXE5TkVpT2xjTUhaY1FqcFdVbnlCTi94enlVd0hlcmJBUkNSWVpFdWNpTXJXSgpPSXBLOFl5QkRWV2t0Y05MT0RTL1YwTlBwR0plMmhxMUdvSzlkZGxjMnprNmxrMUNzc1BLCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==",
        "FileList": [
            {
                "Filename": "tls/admin-kubeconfig-client.key",
                "Data": "LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBdjgrZkxuM1RjTWhwUWV0NzFBcjRGZ0JadlFoekZVU3ozOW9seTJiWlZwNW5xN1h2Cnp6OWZHekM2Rzk5NmJmK3R5WkU5eWs0ZnRKQ1JuY2JvMWxvano3NzRBSk0yb1FFNklJOHFVZ2wvblNWRlA0eWEKZXBXZWtuZmFrbkVvZFgvM2o3SkZQTko4U3pRN3dmbFBuN2FSZ1QwajdSdHYrd0E5MHJDT09JMnNhVjlhUjNvMwpBOXY5NlJmbTdoV1hKQ1lnS0FxcDVmRThnMTNXMk04UDNnNktpZVJTd3pUckRoTW5HdTE0Z043aC9jb3hMemcvCnl6Zm0yWExmREpEZk1xdjlZNE9rY3JOWm9WWnVRYncvbXZJN0tVVHNML1RqQzdWc09IRlFKaHVwQjZqa2Z0MkwKZDBVbll3RTF1Z2JBMTNyUWd2N0VkVllwaXZRRkZHNVZQN2NMSndJREFRQUJBb0lCQUhya1JpT2VZRXNCVEZiOAp6ZkIwT3JDMTlzampVZ0NOYlFWK0dmcnc0VXphM3Fjb1FRWXludmVueDRXMk1CV3IyNmVxVThGN1Bsc015UThpCmN1bHJCVWpFSE5jWmVzVzdLSWZWMGhLUG5XQ01rWXAreGpiR0I3dmw2SGNzNHZRdFVlcVNHRVE0dzRQWGFuWUUKQ3R6VU52TnJ2Y25iYTJxUXBBdUtMUVRVMkdNRnBhSmRTSS9UY1d6cHZta3RxVXZXamQwS0ZCMFptcEpEWDJCbgpZY0FSWW9xTjd5WUduVTVZQ2VhMmJVT29EVjZsM1pIVkFvc1pBWnVKS2dwL21ncU5sN2hDUnNPQkU1SDV3NHN0CkNMMHRCNGpwazhtSHJuTHBSVmowRU9Ta3Q3bHgwSHZJQnhITFh2K0s1N2Y1UlNjd044NVB4SkxQbjJmZ2laT3kKTXdIb3MyRUNnWUVBMkE3WUkva1kyeGhJdEpEcWxxSmNoVHVqNUN2VVc4R2s5RnBnc3lFMWZQLzg1V01GWXJldwpOK2dQZlRPNmVQK3BuY1MvNEJ5NzhhWG1PaUN2U1lHYndPUjRYaUtVQVVTdkpLN2JXYUhsdkFRQlhQVVZMclNKCk1LMmxGUHdrV28zVi9xT2U1SXp3NXZsaDJVR3o5eXFLcWhKTzRyZy9FcituTG5HNjk2NnpvSGNDZ1lFQTQwVkUKS01DUVVUMnExVTcwc0VCVk16c2Z4NmNMS3l6dDVoOXpNalFUcFZhS2w3R3dpaUZTMStSYkxpZVBOVTQ0VGF1QgorVmJtV3dERkxzajhMcE12WUpXWEZMOCtqRjRieTNSNTVoKzlvVGlieFRSZ3UxM1duUGZlSFRNalYzeHE5QkNFCkNPOXNZbGVOVk02WmluRkZyc1N0L0lNczExcUF3Wnk3czZEenh0RUNnWUJtSXRaUVl5QTU2b2ZzUEJsNXJqVTQKa3BJT2VoM0FacEZaSmlSU2FkK0VRT3RIY1FFSndyWWVKNml5MGpKVG91Q0hBWXlISUc1RWROMmFHdnRpTDAvMgo1c3AwRGJxVHd1bGMyUUErcGdjWlUzZGxmMEpOT3ZFanZ1S3NRZW5abVBWUmsvMjRJMXg2ZytlYXNiR21wVWk1Cnp6L1ZjNjMxYWY1Wk9WQmVhQXJvVHdLQmdDZ3lEUDhFSjhJbW5QdEREcVhKaXdnWGtlUlcxL1BYNjIrQzZuWGIKbmdubEIzZ1MxajFuN1dYL25seklaRnl5SytVWXkxRVZISUxGM1JvTU5BWHN4RGxaMjdHd3JWaFlJS1JZUW1NQQpCQ0xxaHlwV3ZERUhSTGpZWWZGYUpRc0pGMFY1VWxEZVA1WVpGQWNHejBNY0M0NEFmU0VtOWh4VWhtYzMyRDdKCjNiT3hBb0dCQU5IdFkzdGRyUERjSS90bUd5TjJoUEVpaGVxWGVUaWNGSE85Wlk1bmJWOVdmazQ2UGpnTU1GS2YKSHVJNDl6S1FGSjV3Uko1TUw0dXE5TkVpT2xjTUhaY1FqcFdVbnlCTi94enlVd0hlcmJBUkNSWVpFdWNpTXJXSgpPSXBLOFl5QkRWV2t0Y05MT0RTL1YwTlBwR0plMmhxMUdvSzlkZGxjMnprNmxrMUNzc1BLCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg=="
            },
            {
                "Filename": "tls/admin-kubeconfig-client.crt",
                "Data": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURaekNDQWsrZ0F3SUJBZ0lJVEhSYmJxSFVJVzh3RFFZSktvWklodmNOQVFFTEJRQXdOakVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1TQXdIZ1lEVlFRREV4ZGhaRzFwYmkxcmRXSmxZMjl1Wm1sbkxYTnBaMjVsY2pBZQpGdzB5TXpBME1UZ3hNekE0TURsYUZ3MHpNekEwTVRVeE16QTRNVEJhTURBeEZ6QVZCZ05WQkFvVERuTjVjM1JsCmJUcHRZWE4wWlhKek1SVXdFd1lEVlFRREV3eHplWE4wWlcwNllXUnRhVzR3Z2dFaU1BMEdDU3FHU0liM0RRRUIKQVFVQUE0SUJEd0F3Z2dFS0FvSUJBUUMvejU4dWZkTnd5R2xCNjN2VUN2Z1dBRm05Q0hNVlJMUGYyaVhMWnRsVwpubWVydGUvUFAxOGJNTG9iMzNwdC82M0prVDNLVGgrMGtKR2R4dWpXV2lQUHZ2Z0FremFoQVRvZ2p5cFNDWCtkCkpVVS9qSnA2bFo2U2Q5cVNjU2gxZi9lUHNrVTgwbnhMTkR2QitVK2Z0cEdCUFNQdEcyLzdBRDNTc0k0NGpheHAKWDFwSGVqY0QyLzNwRitidUZaY2tKaUFvQ3FubDhUeURYZGJZencvZURvcUo1RkxETk9zT0V5Y2E3WGlBM3VIOQp5akV2T0QvTE4rYlpjdDhNa044eXEvMWpnNlJ5czFtaFZtNUJ2RCthOGpzcFJPd3Y5T01MdFd3NGNWQW1HNmtICnFPUiszWXQzUlNkakFUVzZCc0RYZXRDQy9zUjFWaW1LOUFVVWJsVS90d3NuQWdNQkFBR2pmekI5TUE0R0ExVWQKRHdFQi93UUVBd0lGb0RBZEJnTlZIU1VFRmpBVUJnZ3JCZ0VGQlFjREFRWUlLd1lCQlFVSEF3SXdEQVlEVlIwVApBUUgvQkFJd0FEQWRCZ05WSFE0RUZnUVVPa3NHdGlGOENEM3gzSXRiLzh6anZXUUg5WHN3SHdZRFZSMGpCQmd3CkZvQVVmajZhYmRqUHl1UW1PdnA2Vlg0MGlheGR0U0V3RFFZSktvWklodmNOQVFFTEJRQURnZ0VCQUJ2MXp3di8KRlZpZWVuYk1rTVprWDFKcGlXWnp0S2pvUkNUYllLNWhTVThrMnZ0RWNVVDFKOVN6U1JTMi9KM0tlM0prL01USQo2YVFYNUsyajhEczBRRkxHU0l2THFub28yMS9DOVhuSG1mRnhsMmR0UTNIWkRYOHBUTlc5ZFlIOEQ2N0poWW0xCklGTFl5RXpSQzFMN1VVYkIzZFNMcTBGZ0p2RjVrSkFKeUNxRndlYTRMdVlBeGFmNGxTeVp5MVZtOXBzWXcwa1AKQ01rdENXc2pvU0Z0V3RhaVBqSy90T2ZUeEdqRDlSRlBMc1FaOUlVcks3eS9pUTBpVnU0cjgwa0VLVTNJbFIxMwpWdkNIeXp5cUZSaHZmWW9zR3Q2N2NNNUFQRllzdC83WXJEdWdZZTRiR2tleUwyT0xYc0VVZERTd1hTcys0eG1DClBPKy9mTlgrMm45OUs3cz0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo="
            }
        ]
    },
    "*tls.AdminKubeConfigSignerCertKey": {
        "CertRaw": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURNRENDQWhpZ0F3SUJBZ0lJWXhvRDk1bWk0YlV3RFFZSktvWklodmNOQVFFTEJRQXdOakVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1TQXdIZ1lEVlFRREV4ZGhaRzFwYmkxcmRXSmxZMjl1Wm1sbkxYTnBaMjVsY2pBZQpGdzB5TXpBME1UZ3hNekE0TURsYUZ3MHpNekEwTVRVeE16QTRNRGxhTURZeEVqQVFCZ05WQkFzVENXOXdaVzV6CmFHbG1kREVnTUI0R0ExVUVBeE1YWVdSdGFXNHRhM1ZpWldOdmJtWnBaeTF6YVdkdVpYSXdnZ0VpTUEwR0NTcUcKU0liM0RRRUJBUVVBQTRJQkR3QXdnZ0VLQW9JQkFRRE9Kb0FzTUN6WUFUZXZta0pUQ28rK3UvL3Y3QkFFTU9LUwp5bmhFM2RaTTMvVlViUnlBUnppU01iTDVpSXdGSGJzZHN6V2VVa1l6UElSRzliWDJzSXh6d2Q5OURMRzM4YkU3ClpTYUYySE91WFIwMFdCajI3ZEJjcFlyTmVzNFA0ODBublZ0WmsxWlQrVlUyMHhEaFVQWGpyakFoM2E2Y3dkYmQKWkduKzJBZVlveEplU2wvKzJUZzBXcEdnUm5PdVI3azV4WmpGVDJVNnhnNEt3c0d2eWRyZHVoVVFDVkxBT1hVZQpVcW5XMnJxY3gzeTVSYWd3cVVsMVZKZWxFQzBVbXJVeFRlQWlnelhGOVVHRmpFOXkvY29maEh1QmtXTGs0cCs5CmRPVXJ3cXQ2VE9Nd2d4Mk1pQXN6WS9IQ0FGcjc1ek9Ua1BaQTFCeEpyTHpEYUVHT0ZsVVZBZ01CQUFHalFqQkEKTUE0R0ExVWREd0VCL3dRRUF3SUNwREFQQmdOVkhSTUJBZjhFQlRBREFRSC9NQjBHQTFVZERnUVdCQlIrUHBwdAoyTS9LNUNZNitucFZmalNKckYyMUlUQU5CZ2txaGtpRzl3MEJBUXNGQUFPQ0FRRUFVTWFoc1pLcFpJVUh4MWI1Cm9CQnI1b0RsckdKUFZvSEh6M1pWL0M0K0NTMjNlaVFiTDhQc2Z4OU5DQ0VHLzV2akxSekVtL2ZCL1ZnZFVlaUMKdUxuUWdtQmUwWDBQNDIzdndmTzJKZGV3d0ZLSTdRZVRTWmw0VHoxK3FKOGt1YmlUYjBUcnhTd2FyQ3ZHbk5kYwpkYTBsTzBsbUpyNDA0Y091MUtqM1hWZXNDM2RnQnJpTXpiWmxCaDlyNzdLaytJYmNXY0ZIY1lxWFB1MDB5eVM4CmVoRHpNelRoZVI4ekVtZUNQdkxNa2toSzBpYXpLVmNDNVJlY3BvbDI3Uk80SmhkMDFjUUpXKy9xRUdKb0M3VlgKTlFwbVNhaTNOQkpwU0o2NWlPaGVmOVZSblVyamRxVVZDeEplMEpOVWJjSGtTZHpyWlBGK0NuYlRqOW9QcGROLwpxdjc3ZkE9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==",
        "KeyRaw": "LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcFFJQkFBS0NBUUVBemlhQUxEQXMyQUUzcjVwQ1V3cVB2cnYvNyt3UUJERGlrc3A0Uk4zV1ROLzFWRzBjCmdFYzRrakd5K1lpTUJSMjdIYk0xbmxKR016eUVSdlcxOXJDTWM4SGZmUXl4dC9HeE8yVW1oZGh6cmwwZE5GZ1kKOXUzUVhLV0t6WHJPRCtQTko1MWJXWk5XVS9sVk50TVE0VkQxNDY0d0lkMnVuTUhXM1dScC90Z0htS01TWGtwZgovdGs0TkZxUm9FWnpya2U1T2NXWXhVOWxPc1lPQ3NMQnI4bmEzYm9WRUFsU3dEbDFIbEtwMXRxNm5NZDh1VVdvCk1LbEpkVlNYcFJBdEZKcTFNVTNnSW9NMXhmVkJoWXhQY3YzS0g0UjdnWkZpNU9LZnZYVGxLOEtyZWt6ak1JTWQKaklnTE0yUHh3Z0JhKytjems1RDJRTlFjU2F5OHcyaEJqaFpWRlFJREFRQUJBb0lCQUcvai83OThLbXJYUmxVKwpnZTgybFV5dUY3MHVRSWMxelZSbEpxQWlVL1dIdlUya3AwcU0zWXlrQXdOamRMUTJMZUJ4NjVGU0VKNHdvNDhzClFDWjBMdGVKaS9jQWs5bEdDcTgxT0pKL0tGS2tZWHlPc0lZZUQvQ3BQVXhIOGw0M2c1dVQwZ2d0YXpiSzV0Q0sKQU9oNm0rdUhHTUxZNHJSY2xYVzIwYjBybmZ2ZTFXdFlrL1RrSFpma1pDMVlaM3J1NzZVV3hqcWxlZ3F5S2dvRwo4ZDlFU0k3dTFxdjJQdUgrcmZod1gycy9KNVRmM0hwbGh1UVNacHphWFRvTEVDcmQzcE9yZ3RqcUU3YXFJYVA4CkFkd0hTR0NuMStBVldIcTYwZ0RUR1Z3ck5ZSTNhVFpNNFloUmVZM0o1WDJzbUtUcVpaZVc5cDZjZUpMaytYR3EKck8yYlFTRUNnWUVBNG9WSkpsemdSRzBqZ1I2Vk9IeTByK05aaU5Pem5rUEpvUmdWYXR6QVoremsrQ2Z5OVpqbApVSkJMOHl6UjJWT2tnelVNZXJnQktqcnVBcnhzN3FHMFZBMk0xa2ZzQnY4Q0diaS8wM0ViWCtQcWpKcDZJcDFoClRiWGJwbmRVNGlBQ0lJSFZxallnRGU4WFFYNk5SY2cxTEpJano3WGxEOHNEc3pSRGhZZXl2VWtDZ1lFQTZQcVEKVndrblRjaEFaZmlzamZTTWovUjJZek9PT2t6M01nTHAwb2wvaGF3elFoRER3bUE4emJkcHVOR2RCWTdIRDVTTAp1eHZTZUgwM2RwSXNIcWttVWdzL2dXUVExMk1xa2JjdWtJU29aZWFYR2R5Q2hEWEc4QTNTdTNRWGh2R3ZvUGVSCkdtN2dJb1hxM0FKWWt3NmpiNGFmUXNsTFJvR1NNd0JYbm9tTzFXMENnWUVBaFltRHJSejFqUUUxL0FsMmVKMXoKdTNqd3NHdjFLS2pYdGFOSUJQNXNZeGZSaDhXdFFrSEhkZTRMQ0NsMDhJU1JxRlBlcm4zSkdnY3hodVZqNW0zbgpxK0Z0RkduRDUvL3ZVaENLN1hCeGJkOGp4NDNOMEpnczQ2NEE5aXJGSEtVMys4ZnVtUEJkaHpsYTRWNWtsQzNKCnd5UEgvc3hCWkVVUFFsYmVNMXJpOFJrQ2dZRUE0UmdOVXZvV0RsR1czcTYzVU9QZzFzanpoUDd2d0taU0F2REwKcHMyUDlyK2NPbzFtQmF2anMwSXRGQkw1cWIvNzFiTEltanZVU3ZONEhjZzJkbDBwR0FXa0VzaHllUmRucnFlVQpocTZVNFBjOE1CRmJ6SThFcVRSQjBUamw3a3dlU3VCR1FvcXpaTWVNVllxeXQwcGlYOE5xcGlWRDVGZ1Z2ODdwCjJOUEF1N1VDZ1lFQXhuam1YekM1b3dmc3VLN3IwZ1J3cEg1WWtxOUFEYTFJWWh5M3dka0ovM3dHYUZ1MjRDMkIKQTkxY1VjQ0R5K3F1M2hGZTl0KzY4NUEra1BLWHVGTVdWUS9vZld0NmwzbDZpVnZidlkwRFNkWFg4L2VoczAxYwoyVm9VQm5ISVdmYnZWWFBBTkpOVDh4QkRmRTVGTno1RHNLOEt5cnV5MGYrZlo3eDF5VytoMTZFPQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=",
        "FileList": [
            {
                "Filename": "tls/admin-kubeconfig-signer.key",
                "Data": "LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcFFJQkFBS0NBUUVBemlhQUxEQXMyQUUzcjVwQ1V3cVB2cnYvNyt3UUJERGlrc3A0Uk4zV1ROLzFWRzBjCmdFYzRrakd5K1lpTUJSMjdIYk0xbmxKR016eUVSdlcxOXJDTWM4SGZmUXl4dC9HeE8yVW1oZGh6cmwwZE5GZ1kKOXUzUVhLV0t6WHJPRCtQTko1MWJXWk5XVS9sVk50TVE0VkQxNDY0d0lkMnVuTUhXM1dScC90Z0htS01TWGtwZgovdGs0TkZxUm9FWnpya2U1T2NXWXhVOWxPc1lPQ3NMQnI4bmEzYm9WRUFsU3dEbDFIbEtwMXRxNm5NZDh1VVdvCk1LbEpkVlNYcFJBdEZKcTFNVTNnSW9NMXhmVkJoWXhQY3YzS0g0UjdnWkZpNU9LZnZYVGxLOEtyZWt6ak1JTWQKaklnTE0yUHh3Z0JhKytjems1RDJRTlFjU2F5OHcyaEJqaFpWRlFJREFRQUJBb0lCQUcvai83OThLbXJYUmxVKwpnZTgybFV5dUY3MHVRSWMxelZSbEpxQWlVL1dIdlUya3AwcU0zWXlrQXdOamRMUTJMZUJ4NjVGU0VKNHdvNDhzClFDWjBMdGVKaS9jQWs5bEdDcTgxT0pKL0tGS2tZWHlPc0lZZUQvQ3BQVXhIOGw0M2c1dVQwZ2d0YXpiSzV0Q0sKQU9oNm0rdUhHTUxZNHJSY2xYVzIwYjBybmZ2ZTFXdFlrL1RrSFpma1pDMVlaM3J1NzZVV3hqcWxlZ3F5S2dvRwo4ZDlFU0k3dTFxdjJQdUgrcmZod1gycy9KNVRmM0hwbGh1UVNacHphWFRvTEVDcmQzcE9yZ3RqcUU3YXFJYVA4CkFkd0hTR0NuMStBVldIcTYwZ0RUR1Z3ck5ZSTNhVFpNNFloUmVZM0o1WDJzbUtUcVpaZVc5cDZjZUpMaytYR3EKck8yYlFTRUNnWUVBNG9WSkpsemdSRzBqZ1I2Vk9IeTByK05aaU5Pem5rUEpvUmdWYXR6QVoremsrQ2Z5OVpqbApVSkJMOHl6UjJWT2tnelVNZXJnQktqcnVBcnhzN3FHMFZBMk0xa2ZzQnY4Q0diaS8wM0ViWCtQcWpKcDZJcDFoClRiWGJwbmRVNGlBQ0lJSFZxallnRGU4WFFYNk5SY2cxTEpJano3WGxEOHNEc3pSRGhZZXl2VWtDZ1lFQTZQcVEKVndrblRjaEFaZmlzamZTTWovUjJZek9PT2t6M01nTHAwb2wvaGF3elFoRER3bUE4emJkcHVOR2RCWTdIRDVTTAp1eHZTZUgwM2RwSXNIcWttVWdzL2dXUVExMk1xa2JjdWtJU29aZWFYR2R5Q2hEWEc4QTNTdTNRWGh2R3ZvUGVSCkdtN2dJb1hxM0FKWWt3NmpiNGFmUXNsTFJvR1NNd0JYbm9tTzFXMENnWUVBaFltRHJSejFqUUUxL0FsMmVKMXoKdTNqd3NHdjFLS2pYdGFOSUJQNXNZeGZSaDhXdFFrSEhkZTRMQ0NsMDhJU1JxRlBlcm4zSkdnY3hodVZqNW0zbgpxK0Z0RkduRDUvL3ZVaENLN1hCeGJkOGp4NDNOMEpnczQ2NEE5aXJGSEtVMys4ZnVtUEJkaHpsYTRWNWtsQzNKCnd5UEgvc3hCWkVVUFFsYmVNMXJpOFJrQ2dZRUE0UmdOVXZvV0RsR1czcTYzVU9QZzFzanpoUDd2d0taU0F2REwKcHMyUDlyK2NPbzFtQmF2anMwSXRGQkw1cWIvNzFiTEltanZVU3ZONEhjZzJkbDBwR0FXa0VzaHllUmRucnFlVQpocTZVNFBjOE1CRmJ6SThFcVRSQjBUamw3a3dlU3VCR1FvcXpaTWVNVllxeXQwcGlYOE5xcGlWRDVGZ1Z2ODdwCjJOUEF1N1VDZ1lFQXhuam1YekM1b3dmc3VLN3IwZ1J3cEg1WWtxOUFEYTFJWWh5M3dka0ovM3dHYUZ1MjRDMkIKQTkxY1VjQ0R5K3F1M2hGZTl0KzY4NUEra1BLWHVGTVdWUS9vZld0NmwzbDZpVnZidlkwRFNkWFg4L2VoczAxYwoyVm9VQm5ISVdmYnZWWFBBTkpOVDh4QkRmRTVGTno1RHNLOEt5cnV5MGYrZlo3eDF5VytoMTZFPQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo="
            },
            {
                "Filename": "tls/admin-kubeconfig-signer.crt",
                "Data": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURNRENDQWhpZ0F3SUJBZ0lJWXhvRDk1bWk0YlV3RFFZSktvWklodmNOQVFFTEJRQXdOakVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1TQXdIZ1lEVlFRREV4ZGhaRzFwYmkxcmRXSmxZMjl1Wm1sbkxYTnBaMjVsY2pBZQpGdzB5TXpBME1UZ3hNekE0TURsYUZ3MHpNekEwTVRVeE16QTRNRGxhTURZeEVqQVFCZ05WQkFzVENXOXdaVzV6CmFHbG1kREVnTUI0R0ExVUVBeE1YWVdSdGFXNHRhM1ZpWldOdmJtWnBaeTF6YVdkdVpYSXdnZ0VpTUEwR0NTcUcKU0liM0RRRUJBUVVBQTRJQkR3QXdnZ0VLQW9JQkFRRE9Kb0FzTUN6WUFUZXZta0pUQ28rK3UvL3Y3QkFFTU9LUwp5bmhFM2RaTTMvVlViUnlBUnppU01iTDVpSXdGSGJzZHN6V2VVa1l6UElSRzliWDJzSXh6d2Q5OURMRzM4YkU3ClpTYUYySE91WFIwMFdCajI3ZEJjcFlyTmVzNFA0ODBublZ0WmsxWlQrVlUyMHhEaFVQWGpyakFoM2E2Y3dkYmQKWkduKzJBZVlveEplU2wvKzJUZzBXcEdnUm5PdVI3azV4WmpGVDJVNnhnNEt3c0d2eWRyZHVoVVFDVkxBT1hVZQpVcW5XMnJxY3gzeTVSYWd3cVVsMVZKZWxFQzBVbXJVeFRlQWlnelhGOVVHRmpFOXkvY29maEh1QmtXTGs0cCs5CmRPVXJ3cXQ2VE9Nd2d4Mk1pQXN6WS9IQ0FGcjc1ek9Ua1BaQTFCeEpyTHpEYUVHT0ZsVVZBZ01CQUFHalFqQkEKTUE0R0ExVWREd0VCL3dRRUF3SUNwREFQQmdOVkhSTUJBZjhFQlRBREFRSC9NQjBHQTFVZERnUVdCQlIrUHBwdAoyTS9LNUNZNitucFZmalNKckYyMUlUQU5CZ2txaGtpRzl3MEJBUXNGQUFPQ0FRRUFVTWFoc1pLcFpJVUh4MWI1Cm9CQnI1b0RsckdKUFZvSEh6M1pWL0M0K0NTMjNlaVFiTDhQc2Z4OU5DQ0VHLzV2akxSekVtL2ZCL1ZnZFVlaUMKdUxuUWdtQmUwWDBQNDIzdndmTzJKZGV3d0ZLSTdRZVRTWmw0VHoxK3FKOGt1YmlUYjBUcnhTd2FyQ3ZHbk5kYwpkYTBsTzBsbUpyNDA0Y091MUtqM1hWZXNDM2RnQnJpTXpiWmxCaDlyNzdLaytJYmNXY0ZIY1lxWFB1MDB5eVM4CmVoRHpNelRoZVI4ekVtZUNQdkxNa2toSzBpYXpLVmNDNVJlY3BvbDI3Uk80SmhkMDFjUUpXKy9xRUdKb0M3VlgKTlFwbVNhaTNOQkpwU0o2NWlPaGVmOVZSblVyamRxVVZDeEplMEpOVWJjSGtTZHpyWlBGK0NuYlRqOW9QcGROLwpxdjc3ZkE9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg=="
            }
        ]
    },
    "*tls.AggregatorCA": {
        "CertRaw": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lJQ2g2dTJPakFIRGN3RFFZSktvWklodmNOQVFFTEJRQXdLREVSTUE4R0ExVUUKQ3hNSVltOXZkR3QxWW1VeEV6QVJCZ05WQkFNVENtRm5aM0psWjJGMGIzSXdIaGNOTWpNd05ERTRNVE13T0RFeApXaGNOTWpNd05ERTVNVE13T0RFeFdqQW9NUkV3RHdZRFZRUUxFd2hpYjI5MGEzVmlaVEVUTUJFR0ExVUVBeE1LCllXZG5jbVZuWVhSdmNqQ0NBU0l3RFFZSktvWklodmNOQVFFQkJRQURnZ0VQQURDQ0FRb0NnZ0VCQUpyT3dxTTkKcFFxM3J0Qys3K0UvL1pBNlBmZFVOckNwMnVJblhhWWJMbUY0MEhBOHRaN0ZpSHpkTGlLN1JVYzJhRWRQTHd4RQpycjRLbDBzYldPQ3ljeWRPRFd3cDdnN2N0dWlmWTI2ZUtld09CWUVIZGhYUFErZjVxNlg5VXkwRlY1Mm8xYVFICjRza01PSGZURHcwSC9ISExINHlEQUN4c0k4T2l2UmVFNzhXeEtyZU8yZ3JlaGljODlKNVdJc3lzU3Mrb3grQnMKT01KaUZBaEFXQTF1eDFPVmhPUnRDOVlXVjJEL1dTUUVwWlhnbi80RHVnMXk2Mmc3MWw4aGRidGZlck5iVUVOZgpoT1NqbTl5alRXajk0WXZ4OHhwQVljOE8wVG1BMkRXbmxSUm5OU3lBZWhvdEgxM3lXZHdMUUorTG9BckNxNmZFCmFZQUtQYmlWeWRsTElROENBd0VBQWFOQ01FQXdEZ1lEVlIwUEFRSC9CQVFEQWdLa01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGQll4NkVpSmJnMFEwNlYzU1FLZVVzRWtIQXpITUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQ2FyaWFHU2gwT0pBZTd3clVEanlrbjIzRmtoaXFWcXg1NFY5Q0Z3OVJIYlBKdk5EbUxPcHZ0CjZvaUFhMjJDWjUxZTUrWHR6QlZXVnV0NWszNDBlTWVHM3RSSTlFb0l6Qnp5OTRtQUV6b2hld1k2cm5SQnFjb0oKeGlBQTFPUkpKK05YSGtwb3p3OUtvY1ZNYnRHcWxmdmZxNDgxUlVmeWtYVFFFcDFsV0tOZFJqZlJoa1hzblh5LwpuaW5jQUZDcytwaEFlZTJ2N2NiVkM1RlB5OXVPMldUNFVqbjBRZEU5RjU0NThVRXBzVTQ2bTVuODZMSWJPR3RtCm4zR1h6Y0huVmdiVUVUTm9wbjdGTTE3MFFGaVdlK2Q1NUtPVXVHckw5ak9DL3lSR2tYUzUxekliRjlWekFpTU4KVWhPYXlKZnA5WGx0UFViR2kxMHM5SHEvZGRTWGpLMjYKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=",
        "KeyRaw": "LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBbXM3Q296MmxDcmV1MEw3djRULzlrRG85OTFRMnNLbmE0aWRkcGhzdVlYalFjRHkxCm5zV0lmTjB1SXJ0RlJ6Wm9SMDh2REVTdXZncVhTeHRZNExKekowNE5iQ251RHR5MjZKOWpicDRwN0E0RmdRZDIKRmM5RDUvbXJwZjFUTFFWWG5halZwQWZpeVF3NGQ5TVBEUWY4Y2NzZmpJTUFMR3dqdzZLOUY0VHZ4YkVxdDQ3YQpDdDZHSnp6MG5sWWl6S3hLejZqSDRHdzR3bUlVQ0VCWURXN0hVNVdFNUcwTDFoWlhZUDlaSkFTbGxlQ2YvZ082CkRYTHJhRHZXWHlGMXUxOTZzMXRRUTErRTVLT2IzS05OYVAzaGkvSHpHa0Joenc3Uk9ZRFlOYWVWRkdjMUxJQjYKR2kwZlhmSlozQXRBbjR1Z0NzS3JwOFJwZ0FvOXVKWEoyVXNoRHdJREFRQUJBb0lCQVFDVHVuTXE3QXl2S1pIOQpTZmdINzlTODZaZHdpa0NXWGNDdXgvb3FKUTRobmZUcTVrUTYreTNBV2lGSXE0VDA3QXFlNGdWM282Tk5Yelg1ClNtT0tLVUNTWlgyUmxvSENWUVdHLzNNWGdIOW84QWg0bFBJdTVkZGJhM3BOc0d6TExhbnFuYzhoOVJTSjNzdVUKTFNqVHVxZEF3Q0dmS1BQbGNGekF1Ry9TSGQzaHZDOW1nTjE5c0VnQjhLWTk4QzlMYmFuU2dIZ04wdUUwOGM2Mgo4bVJaT1lRMTFQdFZyZHMvSnRQK3NFbzEzZEd3U0hjWDMyQURHRFdNSW9mRnQrQzZ2SEF5ZWxSaERCNGZ6Ym04CnYzcWx0NGwzMlFsMVlFTXZneEJLdkJGR1JvSHFNQmJHWXJDUUsvbjZSSlJFdll5ZVdLWTg0KzVIUEhhYXI1Z2oKSC9NYlNuNWhBb0dCQU1CTmRGM1VHY0I3NlhxQmFYYnVVTm9UWXcza29UTUtVU281VFlrOWZIcUN3WjR4Zno2eAp4WEtlbTBkbndmSU1GUTZrMjVUQjJJZ1l1RCtoK1llNzhIRmtXNXQ5MURPekdBdmRQZlE1VHNIcWNNZnNhV3Z6CnVsMVl2LzZOQUY0ZWNXanZIWGZHeVJrZW1vOFB3WFZvajZKOVRiYi9nTXN2WVJaVkZ2eHNENEdGQW9HQkFNNFYKNElHd1NTRDFlcVJIMUY0MTV3a3dTU2VMdUgzUnl2dkFMTTVHQmxHcU93QWR1bi9TYkd2RTZVZlRIaXgvU250QwpUajlSc1hCdzFYVHhZNUdDYXNpYTJOY1BjOGFDbUQ3anRBckFrSDMyRkhXaXpobVo0QzloVVJXa1RIakx2Yks4CmNIUy9va1NLSEQ5bm9mNE9FLzNiZS9OWnpyQUVzZXNqcThWNDVwS0RBb0dBQW8vRmtnNW1QV3NwSkFtZlJ3ZEwKcW13QnNNaXY0UWN0SjV2VnpaTTFHa2l0blpiWk5CT1lKcnU0STg1ZEJnVmxMbW5CeHd5Qi91WWRaak9aS0ZhMwprRHNmQVVZKzBtVjdWNFVkOHlma1JhOEN5NWI1bkllRm53SzBwQVpxejlZbCtwamMwcUNpUXlSbU9LdWtEeFZTCmZINmd6MlE5NmZiNm14cU5FTlc3cXlVQ2dZQlUvcGJTUmZkVEhZc1FPQU94T3ovbS9VQWVqRFJ4eDlXVWtNU3AKNmgxdkR1czRlQXBUNzJBQjdudGJ3UWwveHB2Y1RCTmpiL2pqYTlYTlhrVDNYVGRYTnUzWmZLaitKUnhQUzdBVQpneWpVbW1vRHZqcU1PbmRJY3pWeTNJa2hoTDNlK25MUzQ3b3oxRllrSEVTbU4vNHN3NW5TV3FhdzE2N2RVSi9tCldKK1hxd0tCZ1FDZHc1ci8yd1RPdDZjejZJRjhDWlVMTGwzcHBWN0ZXL2tweTZtdXdsMkpSOUxQRnJKVCtrdEUKdmVWT0txL3VCVWtkUzlGVkREMzhmN1h4emxhcU9sZlVpNURBY1RHRVdTVnNtSlJyT2cydFBhenBqMkxlU1lDRwp2TE05am5nUmhDQlVqMFphck90a0ZOTVVkby8zQzBIbm9WbCt3dmZ4dEZpazI5OSs0Snh6TXc9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=",
        "FileList": [
            {
                "Filename": "tls/aggregator-ca.key",
                "Data": "LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBbXM3Q296MmxDcmV1MEw3djRULzlrRG85OTFRMnNLbmE0aWRkcGhzdVlYalFjRHkxCm5zV0lmTjB1SXJ0RlJ6Wm9SMDh2REVTdXZncVhTeHRZNExKekowNE5iQ251RHR5MjZKOWpicDRwN0E0RmdRZDIKRmM5RDUvbXJwZjFUTFFWWG5halZwQWZpeVF3NGQ5TVBEUWY4Y2NzZmpJTUFMR3dqdzZLOUY0VHZ4YkVxdDQ3YQpDdDZHSnp6MG5sWWl6S3hLejZqSDRHdzR3bUlVQ0VCWURXN0hVNVdFNUcwTDFoWlhZUDlaSkFTbGxlQ2YvZ082CkRYTHJhRHZXWHlGMXUxOTZzMXRRUTErRTVLT2IzS05OYVAzaGkvSHpHa0Joenc3Uk9ZRFlOYWVWRkdjMUxJQjYKR2kwZlhmSlozQXRBbjR1Z0NzS3JwOFJwZ0FvOXVKWEoyVXNoRHdJREFRQUJBb0lCQVFDVHVuTXE3QXl2S1pIOQpTZmdINzlTODZaZHdpa0NXWGNDdXgvb3FKUTRobmZUcTVrUTYreTNBV2lGSXE0VDA3QXFlNGdWM282Tk5Yelg1ClNtT0tLVUNTWlgyUmxvSENWUVdHLzNNWGdIOW84QWg0bFBJdTVkZGJhM3BOc0d6TExhbnFuYzhoOVJTSjNzdVUKTFNqVHVxZEF3Q0dmS1BQbGNGekF1Ry9TSGQzaHZDOW1nTjE5c0VnQjhLWTk4QzlMYmFuU2dIZ04wdUUwOGM2Mgo4bVJaT1lRMTFQdFZyZHMvSnRQK3NFbzEzZEd3U0hjWDMyQURHRFdNSW9mRnQrQzZ2SEF5ZWxSaERCNGZ6Ym04CnYzcWx0NGwzMlFsMVlFTXZneEJLdkJGR1JvSHFNQmJHWXJDUUsvbjZSSlJFdll5ZVdLWTg0KzVIUEhhYXI1Z2oKSC9NYlNuNWhBb0dCQU1CTmRGM1VHY0I3NlhxQmFYYnVVTm9UWXcza29UTUtVU281VFlrOWZIcUN3WjR4Zno2eAp4WEtlbTBkbndmSU1GUTZrMjVUQjJJZ1l1RCtoK1llNzhIRmtXNXQ5MURPekdBdmRQZlE1VHNIcWNNZnNhV3Z6CnVsMVl2LzZOQUY0ZWNXanZIWGZHeVJrZW1vOFB3WFZvajZKOVRiYi9nTXN2WVJaVkZ2eHNENEdGQW9HQkFNNFYKNElHd1NTRDFlcVJIMUY0MTV3a3dTU2VMdUgzUnl2dkFMTTVHQmxHcU93QWR1bi9TYkd2RTZVZlRIaXgvU250QwpUajlSc1hCdzFYVHhZNUdDYXNpYTJOY1BjOGFDbUQ3anRBckFrSDMyRkhXaXpobVo0QzloVVJXa1RIakx2Yks4CmNIUy9va1NLSEQ5bm9mNE9FLzNiZS9OWnpyQUVzZXNqcThWNDVwS0RBb0dBQW8vRmtnNW1QV3NwSkFtZlJ3ZEwKcW13QnNNaXY0UWN0SjV2VnpaTTFHa2l0blpiWk5CT1lKcnU0STg1ZEJnVmxMbW5CeHd5Qi91WWRaak9aS0ZhMwprRHNmQVVZKzBtVjdWNFVkOHlma1JhOEN5NWI1bkllRm53SzBwQVpxejlZbCtwamMwcUNpUXlSbU9LdWtEeFZTCmZINmd6MlE5NmZiNm14cU5FTlc3cXlVQ2dZQlUvcGJTUmZkVEhZc1FPQU94T3ovbS9VQWVqRFJ4eDlXVWtNU3AKNmgxdkR1czRlQXBUNzJBQjdudGJ3UWwveHB2Y1RCTmpiL2pqYTlYTlhrVDNYVGRYTnUzWmZLaitKUnhQUzdBVQpneWpVbW1vRHZqcU1PbmRJY3pWeTNJa2hoTDNlK25MUzQ3b3oxRllrSEVTbU4vNHN3NW5TV3FhdzE2N2RVSi9tCldKK1hxd0tCZ1FDZHc1ci8yd1RPdDZjejZJRjhDWlVMTGwzcHBWN0ZXL2tweTZtdXdsMkpSOUxQRnJKVCtrdEUKdmVWT0txL3VCVWtkUzlGVkREMzhmN1h4emxhcU9sZlVpNURBY1RHRVdTVnNtSlJyT2cydFBhenBqMkxlU1lDRwp2TE05am5nUmhDQlVqMFphck90a0ZOTVVkby8zQzBIbm9WbCt3dmZ4dEZpazI5OSs0Snh6TXc9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo="
            },
            {
                "Filename": "tls/aggregator-ca.crt",
                "Data": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lJQ2g2dTJPakFIRGN3RFFZSktvWklodmNOQVFFTEJRQXdLREVSTUE4R0ExVUUKQ3hNSVltOXZkR3QxWW1VeEV6QVJCZ05WQkFNVENtRm5aM0psWjJGMGIzSXdIaGNOTWpNd05ERTRNVE13T0RFeApXaGNOTWpNd05ERTVNVE13T0RFeFdqQW9NUkV3RHdZRFZRUUxFd2hpYjI5MGEzVmlaVEVUTUJFR0ExVUVBeE1LCllXZG5jbVZuWVhSdmNqQ0NBU0l3RFFZSktvWklodmNOQVFFQkJRQURnZ0VQQURDQ0FRb0NnZ0VCQUpyT3dxTTkKcFFxM3J0Qys3K0UvL1pBNlBmZFVOckNwMnVJblhhWWJMbUY0MEhBOHRaN0ZpSHpkTGlLN1JVYzJhRWRQTHd4RQpycjRLbDBzYldPQ3ljeWRPRFd3cDdnN2N0dWlmWTI2ZUtld09CWUVIZGhYUFErZjVxNlg5VXkwRlY1Mm8xYVFICjRza01PSGZURHcwSC9ISExINHlEQUN4c0k4T2l2UmVFNzhXeEtyZU8yZ3JlaGljODlKNVdJc3lzU3Mrb3grQnMKT01KaUZBaEFXQTF1eDFPVmhPUnRDOVlXVjJEL1dTUUVwWlhnbi80RHVnMXk2Mmc3MWw4aGRidGZlck5iVUVOZgpoT1NqbTl5alRXajk0WXZ4OHhwQVljOE8wVG1BMkRXbmxSUm5OU3lBZWhvdEgxM3lXZHdMUUorTG9BckNxNmZFCmFZQUtQYmlWeWRsTElROENBd0VBQWFOQ01FQXdEZ1lEVlIwUEFRSC9CQVFEQWdLa01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGQll4NkVpSmJnMFEwNlYzU1FLZVVzRWtIQXpITUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQ2FyaWFHU2gwT0pBZTd3clVEanlrbjIzRmtoaXFWcXg1NFY5Q0Z3OVJIYlBKdk5EbUxPcHZ0CjZvaUFhMjJDWjUxZTUrWHR6QlZXVnV0NWszNDBlTWVHM3RSSTlFb0l6Qnp5OTRtQUV6b2hld1k2cm5SQnFjb0oKeGlBQTFPUkpKK05YSGtwb3p3OUtvY1ZNYnRHcWxmdmZxNDgxUlVmeWtYVFFFcDFsV0tOZFJqZlJoa1hzblh5LwpuaW5jQUZDcytwaEFlZTJ2N2NiVkM1RlB5OXVPMldUNFVqbjBRZEU5RjU0NThVRXBzVTQ2bTVuODZMSWJPR3RtCm4zR1h6Y0huVmdiVUVUTm9wbjdGTTE3MFFGaVdlK2Q1NUtPVXVHckw5ak9DL3lSR2tYUzUxekliRjlWekFpTU4KVWhPYXlKZnA5WGx0UFViR2kxMHM5SHEvZGRTWGpLMjYKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo="
            }
        ]
    },
    "*tls.AggregatorCABundle": {
        "BundleRaw": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURKRENDQWd5Z0F3SUJBZ0lJVXV1NFpiOGh2dDB3RFFZSktvWklodmNOQVFFTEJRQXdNREVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1Sb3dHQVlEVlFRREV4RmhaMmR5WldkaGRHOXlMWE5wWjI1bGNqQWVGdzB5TXpBMApNVGd4TXpBNE1URmFGdzB5TXpBME1Ua3hNekE0TVRGYU1EQXhFakFRQmdOVkJBc1RDVzl3Wlc1emFHbG1kREVhCk1CZ0dBMVVFQXhNUllXZG5jbVZuWVhSdmNpMXphV2R1WlhJd2dnRWlNQTBHQ1NxR1NJYjNEUUVCQVFVQUE0SUIKRHdBd2dnRUtBb0lCQVFERmVJbENpVndwM1hDak1CdHJabTZZTzg0bmUwN3cyenV6N2Y5UXdLMDRFWlBNNkdScwpkK1ZRYmxJMmluNHNhOVgrS041a3EwZnZBUEk3OVpzVkdJNi8rL3RnanNQQlBIQjFMRVRPRnZjcDlmRFdWUGpFCkkzajM4VXYyT09MUzlDVnJaYkZSdGZodnh1SENFTDllZlpNS09heXZoQlViaitQL1BvQnVkYXpvanRQWWN6SjcKNm1ZVmxYZGdzL1M3MmdTbkNxR28vNWd1eGJRL1VMbXBlcXZUNWpET0FHdU5TelZRMmlMQ1lacGVBcGI4aTY0aQptekxmZEpOZVVXTllXQ0NtdW9PeUFvTnluQUtaZDFvMXhxc2Mya0djeUZtWXd6WXUrVXY1QkhaTC8yRSt0dXBGCmNJdkFGbm9iWUNMNDM4SFYrSzVlNjhRaWNoMzlRUDd1TnhJaEFnTUJBQUdqUWpCQU1BNEdBMVVkRHdFQi93UUUKQXdJQ3BEQVBCZ05WSFJNQkFmOEVCVEFEQVFIL01CMEdBMVVkRGdRV0JCUlFaOWdvN2pXOEtTRjlldXg3dFJ1egpSckMwZnpBTkJna3Foa2lHOXcwQkFRc0ZBQU9DQVFFQWZEQXZRNUc0aUxTK0N6ZXQ1TS9zMXdzaEhZdENsdlRPCk44N1RxMzRlWGhHalE3allVNjdhbGV0aThkWDdkU083T3hGNnRHTSthcHQxZ2VnelRac003OHFieDByQXlyK1UKOVlLd1pOSUp3c2RYbjJYMzhnRW9GQXV2M2V1dWxpM0tPR3BjT2Z3K1hTS09NVUhZZWsySWxKcndBa3B2NTNaWApBTk1PRHpEVFRIbnRkSzc0czZSV2VvTnNWeHJEU1IzL3JlOXViWG9taDE2NVhmdStLRXlzNXorSlFZbVU5YXZPCk92Qm05Tks3WUhlaW5mY3FnZ0wwaU5UOWkzTDY3N25EQ0JmYnNhVVJiVGg5dDVDLzQ1eVdqRUVmWnc4SmlzcXgKVEJOT1k2S2VmZnNsZTQ3STJTdlFJTGpneFhMcS9ZVTZSMUZha0VrMDkwMnZCd2FNZ3RET1N3PT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=",
        "FileList": [
            {
                "Filename": "tls/aggregator-ca-bundle.crt",
                "Data": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURKRENDQWd5Z0F3SUJBZ0lJVXV1NFpiOGh2dDB3RFFZSktvWklodmNOQVFFTEJRQXdNREVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1Sb3dHQVlEVlFRREV4RmhaMmR5WldkaGRHOXlMWE5wWjI1bGNqQWVGdzB5TXpBMApNVGd4TXpBNE1URmFGdzB5TXpBME1Ua3hNekE0TVRGYU1EQXhFakFRQmdOVkJBc1RDVzl3Wlc1emFHbG1kREVhCk1CZ0dBMVVFQXhNUllXZG5jbVZuWVhSdmNpMXphV2R1WlhJd2dnRWlNQTBHQ1NxR1NJYjNEUUVCQVFVQUE0SUIKRHdBd2dnRUtBb0lCQVFERmVJbENpVndwM1hDak1CdHJabTZZTzg0bmUwN3cyenV6N2Y5UXdLMDRFWlBNNkdScwpkK1ZRYmxJMmluNHNhOVgrS041a3EwZnZBUEk3OVpzVkdJNi8rL3RnanNQQlBIQjFMRVRPRnZjcDlmRFdWUGpFCkkzajM4VXYyT09MUzlDVnJaYkZSdGZodnh1SENFTDllZlpNS09heXZoQlViaitQL1BvQnVkYXpvanRQWWN6SjcKNm1ZVmxYZGdzL1M3MmdTbkNxR28vNWd1eGJRL1VMbXBlcXZUNWpET0FHdU5TelZRMmlMQ1lacGVBcGI4aTY0aQptekxmZEpOZVVXTllXQ0NtdW9PeUFvTnluQUtaZDFvMXhxc2Mya0djeUZtWXd6WXUrVXY1QkhaTC8yRSt0dXBGCmNJdkFGbm9iWUNMNDM4SFYrSzVlNjhRaWNoMzlRUDd1TnhJaEFnTUJBQUdqUWpCQU1BNEdBMVVkRHdFQi93UUUKQXdJQ3BEQVBCZ05WSFJNQkFmOEVCVEFEQVFIL01CMEdBMVVkRGdRV0JCUlFaOWdvN2pXOEtTRjlldXg3dFJ1egpSckMwZnpBTkJna3Foa2lHOXcwQkFRc0ZBQU9DQVFFQWZEQXZRNUc0aUxTK0N6ZXQ1TS9zMXdzaEhZdENsdlRPCk44N1RxMzRlWGhHalE3allVNjdhbGV0aThkWDdkU083T3hGNnRHTSthcHQxZ2VnelRac003OHFieDByQXlyK1UKOVlLd1pOSUp3c2RYbjJYMzhnRW9GQXV2M2V1dWxpM0tPR3BjT2Z3K1hTS09NVUhZZWsySWxKcndBa3B2NTNaWApBTk1PRHpEVFRIbnRkSzc0czZSV2VvTnNWeHJEU1IzL3JlOXViWG9taDE2NVhmdStLRXlzNXorSlFZbVU5YXZPCk92Qm05Tks3WUhlaW5mY3FnZ0wwaU5UOWkzTDY3N25EQ0JmYnNhVVJiVGg5dDVDLzQ1eVdqRUVmWnc4SmlzcXgKVEJOT1k2S2VmZnNsZTQ3STJTdlFJTGpneFhMcS9ZVTZSMUZha0VrMDkwMnZCd2FNZ3RET1N3PT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo="
            }
        ]
    },
    "*tls.AggregatorClientCertKey": {
        "CertRaw": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURZekNDQWt1Z0F3SUJBZ0lJSUxQTWxJYnpVZW93RFFZSktvWklodmNOQVFFTEJRQXdNREVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1Sb3dHQVlEVlFRREV4RmhaMmR5WldkaGRHOXlMWE5wWjI1bGNqQWVGdzB5TXpBMApNVGd4TXpBNE1URmFGdzB5TXpBME1Ua3hNekE0TVRKYU1Ed3hGREFTQmdOVkJBb1RDMnQxWW1VdGJXRnpkR1Z5Ck1TUXdJZ1lEVlFRREV4dHplWE4wWlcwNmEzVmlaUzFoY0dselpYSjJaWEl0Y0hKdmVIa3dnZ0VpTUEwR0NTcUcKU0liM0RRRUJBUVVBQTRJQkR3QXdnZ0VLQW9JQkFRRFBoVlFNRW5tWnk0TGJlRWdPSkxSelQ4THJpS2czU0w0YwpqaWp6YTBWTVlOdHVZNlpEOEFwRURtRE5EQkI4VGk5d0VQaGtTV3pCd0dqR1NQMm9uOGF3dFVLZk5VL0NHUWdYCllHcFV1dGpXZXZBK2xLSUNoVGlHTXRPOU11endyY3ZlTG5SL2thV05CSFRDWnljWUU1NVFZU045SHNnRk9iS0QKT1VHTkdISGVNaytwa1ZRUDA1MDNEVTVWT2hRSktHV2NKakpxVXpZa2poWmhyVTNpRjcvOVI3NHRheVNyNWJJMwp0VTlZUDhhaG5lTXNQYkpuMTNHclJuSFhPSFBoTDd5YUJhSXk1ZUt4WEZaL1JjM21JQm9Kd3E2dWt0cEthN293CnhuL3Qwb0N5QXFFa3NqR3ltbkZ4WVpoMWJDUjNCaGxnaE5aQ0xJbENSbDYwWmZaU3p5cFpBZ01CQUFHamRUQnoKTUE0R0ExVWREd0VCL3dRRUF3SUZvREFUQmdOVkhTVUVEREFLQmdnckJnRUZCUWNEQWpBTUJnTlZIUk1CQWY4RQpBakFBTUIwR0ExVWREZ1FXQkJUZlUvMWxHRXUvekl5aUVmdDluNkt3ZWtaQUd6QWZCZ05WSFNNRUdEQVdnQlJRClo5Z283alc4S1NGOWV1eDd0UnV6UnJDMGZ6QU5CZ2txaGtpRzl3MEJBUXNGQUFPQ0FRRUFjL1FkdDFpVzNFM3gKNnBRY3BKS09IblpVbmw4bFhqZmxwS0lBQ2hjRnVPSlVIMmVKZjFEdlZrbW4zdU0vcVFxVHUza3BkQWJ2WXIwNQpSWDk0QkRwZzNTZUN6MzJyQlZnbHF4VHh5QVIvRTU2TWt6L2x6RGZNMlVvazNGRGlobWlQYXJwb3Z5S21yZzF0CjBvZDJIYjI3cVVWUHhSTjk5QXR3YVQyazIvRHQ1VEVodUY5MldTZlVjemk3Rk9vaEVNV0NHYk9mRXlUeWMzUCsKSkdoRlRDSWI4SjcrVlE4NU1EeHpVMktzdisxRHRWNWpmTzNYenV2Y2VxeWk3UFJISjZxRWIrbE5yVWpiZlRlSgowV25ySkFEaW1DZThSdG9aSmFYaEJMZE1sUEdPWHB5TDJScUVvSFZuL1pibUdjQUhmdWF0SlNYaUxENG5UNXVYCnNGRDliTnFnZ3c9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==",
        "KeyRaw": "LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcGdJQkFBS0NBUUVBejRWVURCSjVtY3VDMjNoSURpUzBjMC9DNjRpb04waStISTRvODJ0RlRHRGJibU9tClEvQUtSQTVnelF3UWZFNHZjQkQ0WkVsc3djQm94a2o5cUovR3NMVkNuelZQd2hrSUYyQnFWTHJZMW5yd1BwU2kKQW9VNGhqTFR2VExzOEszTDNpNTBmNUdsalFSMHdtY25HQk9lVUdFamZSN0lCVG15Z3psQmpSaHgzakpQcVpGVQpEOU9kTncxT1ZUb1VDU2hsbkNZeWFsTTJKSTRXWWExTjRoZS8vVWUrTFdza3ErV3lON1ZQV0QvR29aM2pMRDJ5Clo5ZHhxMFp4MXpoejRTKzhtZ1dpTXVYaXNWeFdmMFhONWlBYUNjS3VycExhU211Nk1NWi83ZEtBc2dLaEpMSXgKc3BweGNXR1lkV3drZHdZWllJVFdRaXlKUWtaZXRHWDJVczhxV1FJREFRQUJBb0lCQVFDY29Fem5MNnFINFlwSwppMllYQnEwTHUwK3E1ZUhRbUI2ay9zYjVzaVVEbUxjRmdrQ2pWakRwWE5EQzhqQWZJZ083MlpNZ1hpcXZzY0ZpCnB3U01tTXNsNUNqOGNRaFp2dnJVYWZqWEtvOHVrbXR4VUUxWENhVzM0L1RiLyt2RlcrZGJNa1RMWStwSG5PMWoKTE9mY3pESFpDUGY0SDV0b0Zqd2R2c0V5OVJnOFV2RE1XU00vMGltMkZzYlk5TUhBUkpCRmhRRWdabVd3NXFUZApOamViWWNaQVV3UFRxeGk4K3hmY3lkU3VyNnpRMXNoMGNueWFJaS9MVTZPaXZ5N1FxUlhYWlZta25tREdyM29LCktYcFFrS2tROTFYR2lnallmUC9ZdnJGMXlWZytVdFRRRjZmNm4wUHl6eW5Yd1NwY0pKcU5YK1MzcFpSQ2ErRVMKd20vc0lZZ0JBb0dCQU9TR3grMVBVeXdhK200Rm5BRndjcWlhNk9hTHRHYWlyK3lKcVZEN3hFL1h5OG5NV3BrSwp3SVNvbC94UktVUzdPRXQ3ZXpPRnRTTEMxWm41UDdvbTVFck1YSTEyY1Q0NVFkRXJ1UHFlN29JckZ0TVIvM29XCm9rKzRDVFh6MXFHOE1rWFd4UmJlbm84NXVsT2VrRzNkbTlhZFBveFdQdzFTaWJGTlZndERucDg1QW9HQkFPaDQKRVpJRGx0L3lTM01oWkdJUTMyTkZuSDJtaFVZM1BGUE9yd3NzL3NJOVNPeHZ1aWQ1SVJobS9FYkUvQjF6bTFQNgpmQnFKczZBeVZESjNrTFlBanJ2S0grZVloRmtXZzI4MVRwMFI1RDRPY3dSU2xvYVNFeEpWb3ZIWWpuTmxETlRaCjJSczY5WTVudjZHMnRwcS9tRVJvb1A1blFnSzB2RjZUb3M0Z0hjUWhBb0dCQU9LM2ZIMUlwMkVvV3E3d1RiZDMKMGFqSUZxc3lpb1VRZmF3VFhyRUROZDFvWDdzU1RBZHREVllPMU1uejB4ZG5EaENFcnRPTW9RbWRkY0JOOFJWRApKRlc0clZHQzRoSXpSOEsydDh1Y0JVK0taQmgrMEpCVkNDNUNqSkRFR25sV2RpR25VdHkvZTFyb2tKd0l3WXpkCndJK0liTmRaY1RCTVpHSk1NVUwza05TeEFvR0JBT051bkpvQ292Z0QvMmJxMDEvUjdBc2VUb1RyaGxYMHNqTzMKOEs3NVhXREJQbmY2c3QvdGRNQi8rTzV2eDh3MGoxRndyVHYxWG1RcStRN0t4U3dhallvUnJIY1RVdUFwMDNyWQpaMG5wK0NmeVVQcDRwa1dQNGRLOUw0WjJmSjlPekdmdG5hY3pYb3ZzMnFHbXRTM2VwbVMvREVyNDBLNy9EWTlsCjF4RGNnT0toQW9HQkFOQzZFaG9kOVU4anhubEsyRTF1c3pQMXBjNTJTbWxLZ0EvOTVxOTRIN0NVTlFhaEhYY3MKTTJjS3R2UW1XMExDbVlvRVk3WEo4YnhhY0E3aTdRRU9GTnMrTzZkRTNzVGJ3ZVBGT0VvcHZNcTV3Yy9Lck9LdQp1bmRBTlhxWUJuU3VQSkhkR3pHS1VYM0UyTXJNdS9NUUJoclh2RVJVak1PSEdVYU81WVhQejYyUQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=",
        "FileList": [
            {
                "Filename": "tls/aggregator-client.key",
                "Data": "LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcGdJQkFBS0NBUUVBejRWVURCSjVtY3VDMjNoSURpUzBjMC9DNjRpb04waStISTRvODJ0RlRHRGJibU9tClEvQUtSQTVnelF3UWZFNHZjQkQ0WkVsc3djQm94a2o5cUovR3NMVkNuelZQd2hrSUYyQnFWTHJZMW5yd1BwU2kKQW9VNGhqTFR2VExzOEszTDNpNTBmNUdsalFSMHdtY25HQk9lVUdFamZSN0lCVG15Z3psQmpSaHgzakpQcVpGVQpEOU9kTncxT1ZUb1VDU2hsbkNZeWFsTTJKSTRXWWExTjRoZS8vVWUrTFdza3ErV3lON1ZQV0QvR29aM2pMRDJ5Clo5ZHhxMFp4MXpoejRTKzhtZ1dpTXVYaXNWeFdmMFhONWlBYUNjS3VycExhU211Nk1NWi83ZEtBc2dLaEpMSXgKc3BweGNXR1lkV3drZHdZWllJVFdRaXlKUWtaZXRHWDJVczhxV1FJREFRQUJBb0lCQVFDY29Fem5MNnFINFlwSwppMllYQnEwTHUwK3E1ZUhRbUI2ay9zYjVzaVVEbUxjRmdrQ2pWakRwWE5EQzhqQWZJZ083MlpNZ1hpcXZzY0ZpCnB3U01tTXNsNUNqOGNRaFp2dnJVYWZqWEtvOHVrbXR4VUUxWENhVzM0L1RiLyt2RlcrZGJNa1RMWStwSG5PMWoKTE9mY3pESFpDUGY0SDV0b0Zqd2R2c0V5OVJnOFV2RE1XU00vMGltMkZzYlk5TUhBUkpCRmhRRWdabVd3NXFUZApOamViWWNaQVV3UFRxeGk4K3hmY3lkU3VyNnpRMXNoMGNueWFJaS9MVTZPaXZ5N1FxUlhYWlZta25tREdyM29LCktYcFFrS2tROTFYR2lnallmUC9ZdnJGMXlWZytVdFRRRjZmNm4wUHl6eW5Yd1NwY0pKcU5YK1MzcFpSQ2ErRVMKd20vc0lZZ0JBb0dCQU9TR3grMVBVeXdhK200Rm5BRndjcWlhNk9hTHRHYWlyK3lKcVZEN3hFL1h5OG5NV3BrSwp3SVNvbC94UktVUzdPRXQ3ZXpPRnRTTEMxWm41UDdvbTVFck1YSTEyY1Q0NVFkRXJ1UHFlN29JckZ0TVIvM29XCm9rKzRDVFh6MXFHOE1rWFd4UmJlbm84NXVsT2VrRzNkbTlhZFBveFdQdzFTaWJGTlZndERucDg1QW9HQkFPaDQKRVpJRGx0L3lTM01oWkdJUTMyTkZuSDJtaFVZM1BGUE9yd3NzL3NJOVNPeHZ1aWQ1SVJobS9FYkUvQjF6bTFQNgpmQnFKczZBeVZESjNrTFlBanJ2S0grZVloRmtXZzI4MVRwMFI1RDRPY3dSU2xvYVNFeEpWb3ZIWWpuTmxETlRaCjJSczY5WTVudjZHMnRwcS9tRVJvb1A1blFnSzB2RjZUb3M0Z0hjUWhBb0dCQU9LM2ZIMUlwMkVvV3E3d1RiZDMKMGFqSUZxc3lpb1VRZmF3VFhyRUROZDFvWDdzU1RBZHREVllPMU1uejB4ZG5EaENFcnRPTW9RbWRkY0JOOFJWRApKRlc0clZHQzRoSXpSOEsydDh1Y0JVK0taQmgrMEpCVkNDNUNqSkRFR25sV2RpR25VdHkvZTFyb2tKd0l3WXpkCndJK0liTmRaY1RCTVpHSk1NVUwza05TeEFvR0JBT051bkpvQ292Z0QvMmJxMDEvUjdBc2VUb1RyaGxYMHNqTzMKOEs3NVhXREJQbmY2c3QvdGRNQi8rTzV2eDh3MGoxRndyVHYxWG1RcStRN0t4U3dhallvUnJIY1RVdUFwMDNyWQpaMG5wK0NmeVVQcDRwa1dQNGRLOUw0WjJmSjlPekdmdG5hY3pYb3ZzMnFHbXRTM2VwbVMvREVyNDBLNy9EWTlsCjF4RGNnT0toQW9HQkFOQzZFaG9kOVU4anhubEsyRTF1c3pQMXBjNTJTbWxLZ0EvOTVxOTRIN0NVTlFhaEhYY3MKTTJjS3R2UW1XMExDbVlvRVk3WEo4YnhhY0E3aTdRRU9GTnMrTzZkRTNzVGJ3ZVBGT0VvcHZNcTV3Yy9Lck9LdQp1bmRBTlhxWUJuU3VQSkhkR3pHS1VYM0UyTXJNdS9NUUJoclh2RVJVak1PSEdVYU81WVhQejYyUQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo="
            },
            {
                "Filename": "tls/aggregator-client.crt",
                "Data": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURZekNDQWt1Z0F3SUJBZ0lJSUxQTWxJYnpVZW93RFFZSktvWklodmNOQVFFTEJRQXdNREVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1Sb3dHQVlEVlFRREV4RmhaMmR5WldkaGRHOXlMWE5wWjI1bGNqQWVGdzB5TXpBMApNVGd4TXpBNE1URmFGdzB5TXpBME1Ua3hNekE0TVRKYU1Ed3hGREFTQmdOVkJBb1RDMnQxWW1VdGJXRnpkR1Z5Ck1TUXdJZ1lEVlFRREV4dHplWE4wWlcwNmEzVmlaUzFoY0dselpYSjJaWEl0Y0hKdmVIa3dnZ0VpTUEwR0NTcUcKU0liM0RRRUJBUVVBQTRJQkR3QXdnZ0VLQW9JQkFRRFBoVlFNRW5tWnk0TGJlRWdPSkxSelQ4THJpS2czU0w0YwpqaWp6YTBWTVlOdHVZNlpEOEFwRURtRE5EQkI4VGk5d0VQaGtTV3pCd0dqR1NQMm9uOGF3dFVLZk5VL0NHUWdYCllHcFV1dGpXZXZBK2xLSUNoVGlHTXRPOU11endyY3ZlTG5SL2thV05CSFRDWnljWUU1NVFZU045SHNnRk9iS0QKT1VHTkdISGVNaytwa1ZRUDA1MDNEVTVWT2hRSktHV2NKakpxVXpZa2poWmhyVTNpRjcvOVI3NHRheVNyNWJJMwp0VTlZUDhhaG5lTXNQYkpuMTNHclJuSFhPSFBoTDd5YUJhSXk1ZUt4WEZaL1JjM21JQm9Kd3E2dWt0cEthN293CnhuL3Qwb0N5QXFFa3NqR3ltbkZ4WVpoMWJDUjNCaGxnaE5aQ0xJbENSbDYwWmZaU3p5cFpBZ01CQUFHamRUQnoKTUE0R0ExVWREd0VCL3dRRUF3SUZvREFUQmdOVkhTVUVEREFLQmdnckJnRUZCUWNEQWpBTUJnTlZIUk1CQWY4RQpBakFBTUIwR0ExVWREZ1FXQkJUZlUvMWxHRXUvekl5aUVmdDluNkt3ZWtaQUd6QWZCZ05WSFNNRUdEQVdnQlJRClo5Z283alc4S1NGOWV1eDd0UnV6UnJDMGZ6QU5CZ2txaGtpRzl3MEJBUXNGQUFPQ0FRRUFjL1FkdDFpVzNFM3gKNnBRY3BKS09IblpVbmw4bFhqZmxwS0lBQ2hjRnVPSlVIMmVKZjFEdlZrbW4zdU0vcVFxVHUza3BkQWJ2WXIwNQpSWDk0QkRwZzNTZUN6MzJyQlZnbHF4VHh5QVIvRTU2TWt6L2x6RGZNMlVvazNGRGlobWlQYXJwb3Z5S21yZzF0CjBvZDJIYjI3cVVWUHhSTjk5QXR3YVQyazIvRHQ1VEVodUY5MldTZlVjemk3Rk9vaEVNV0NHYk9mRXlUeWMzUCsKSkdoRlRDSWI4SjcrVlE4NU1EeHpVMktzdisxRHRWNWpmTzNYenV2Y2VxeWk3UFJISjZxRWIrbE5yVWpiZlRlSgowV25ySkFEaW1DZThSdG9aSmFYaEJMZE1sUEdPWHB5TDJScUVvSFZuL1pibUdjQUhmdWF0SlNYaUxENG5UNXVYCnNGRDliTnFnZ3c9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg=="
            }
        ]
    },
    "*tls.AggregatorSignerCertKey": {
        "CertRaw": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURKRENDQWd5Z0F3SUJBZ0lJVXV1NFpiOGh2dDB3RFFZSktvWklodmNOQVFFTEJRQXdNREVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1Sb3dHQVlEVlFRREV4RmhaMmR5WldkaGRHOXlMWE5wWjI1bGNqQWVGdzB5TXpBMApNVGd4TXpBNE1URmFGdzB5TXpBME1Ua3hNekE0TVRGYU1EQXhFakFRQmdOVkJBc1RDVzl3Wlc1emFHbG1kREVhCk1CZ0dBMVVFQXhNUllXZG5jbVZuWVhSdmNpMXphV2R1WlhJd2dnRWlNQTBHQ1NxR1NJYjNEUUVCQVFVQUE0SUIKRHdBd2dnRUtBb0lCQVFERmVJbENpVndwM1hDak1CdHJabTZZTzg0bmUwN3cyenV6N2Y5UXdLMDRFWlBNNkdScwpkK1ZRYmxJMmluNHNhOVgrS041a3EwZnZBUEk3OVpzVkdJNi8rL3RnanNQQlBIQjFMRVRPRnZjcDlmRFdWUGpFCkkzajM4VXYyT09MUzlDVnJaYkZSdGZodnh1SENFTDllZlpNS09heXZoQlViaitQL1BvQnVkYXpvanRQWWN6SjcKNm1ZVmxYZGdzL1M3MmdTbkNxR28vNWd1eGJRL1VMbXBlcXZUNWpET0FHdU5TelZRMmlMQ1lacGVBcGI4aTY0aQptekxmZEpOZVVXTllXQ0NtdW9PeUFvTnluQUtaZDFvMXhxc2Mya0djeUZtWXd6WXUrVXY1QkhaTC8yRSt0dXBGCmNJdkFGbm9iWUNMNDM4SFYrSzVlNjhRaWNoMzlRUDd1TnhJaEFnTUJBQUdqUWpCQU1BNEdBMVVkRHdFQi93UUUKQXdJQ3BEQVBCZ05WSFJNQkFmOEVCVEFEQVFIL01CMEdBMVVkRGdRV0JCUlFaOWdvN2pXOEtTRjlldXg3dFJ1egpSckMwZnpBTkJna3Foa2lHOXcwQkFRc0ZBQU9DQVFFQWZEQXZRNUc0aUxTK0N6ZXQ1TS9zMXdzaEhZdENsdlRPCk44N1RxMzRlWGhHalE3allVNjdhbGV0aThkWDdkU083T3hGNnRHTSthcHQxZ2VnelRac003OHFieDByQXlyK1UKOVlLd1pOSUp3c2RYbjJYMzhnRW9GQXV2M2V1dWxpM0tPR3BjT2Z3K1hTS09NVUhZZWsySWxKcndBa3B2NTNaWApBTk1PRHpEVFRIbnRkSzc0czZSV2VvTnNWeHJEU1IzL3JlOXViWG9taDE2NVhmdStLRXlzNXorSlFZbVU5YXZPCk92Qm05Tks3WUhlaW5mY3FnZ0wwaU5UOWkzTDY3N25EQ0JmYnNhVVJiVGg5dDVDLzQ1eVdqRUVmWnc4SmlzcXgKVEJOT1k2S2VmZnNsZTQ3STJTdlFJTGpneFhMcS9ZVTZSMUZha0VrMDkwMnZCd2FNZ3RET1N3PT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=",
        "KeyRaw": "LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBeFhpSlFvbGNLZDF3b3pBYmEyWnVtRHZPSjN0TzhOczdzKzMvVU1DdE9CR1R6T2hrCmJIZmxVRzVTTm9wK0xHdlYvaWplWkt0SDd3RHlPL1diRlJpT3YvdjdZSTdEd1R4d2RTeEV6aGIzS2ZYdzFsVDQKeENONDkvRkw5amppMHZRbGEyV3hVYlg0YjhiaHdoQy9YbjJUQ2ptc3I0UVZHNC9qL3o2QWJuV3M2STdUMkhNeQplK3BtRlpWM1lMUDB1OW9FcHdxaHFQK1lMc1cwUDFDNXFYcXIwK1l3emdCcmpVczFVTm9pd21HYVhnS1cvSXV1Cklwc3kzM1NUWGxGaldGZ2dwcnFEc2dLRGNwd0NtWGRhTmNhckhOcEJuTWhabU1NMkx2bEwrUVIyUy85aFByYnEKUlhDTHdCWjZHMkFpK04vQjFmaXVYdXZFSW5JZC9VRCs3amNTSVFJREFRQUJBb0lCQUhjbDFuUCtHMHpyWHNZbwpCYk5VMTlBazdhdW0zQ2U1c0JsTnRlcU1oemU0YTF5TXIrTStxRzlTVVdxMVA1SWY4cnRxLzF6d2QvTyt0Mm4wCk5JR1RFcmJHSEpQVE1Fd000ckhnWnhlT2hjMmNwcGM4SitsNG1jbklueFBPbVJXOTJFSW4xc2k5cWt3UFRUSmkKRm9XMThSMlBWU0dGNlpKNnpJKzZyNVYyalVDM3ROaVIzMGRjM1FnTVUvTCtBelBLcEdqT3NLN2hiQVUzUWw1dApqRlkyM21CNVYwS1dmZXZjQjlMTXZkdjVHMVpBOUtmSW9hbUVxU1ArWHJkU2t6ZXovSVBtWG9NeTVQdWkvRWRVClpIa25EV3dmczJ1M0g0Mm53TnBYbzI4c3A5M0R2QloxS3NQYmtvVEdvb0FoMU5hcEFvTXFRVGdKRWdXU2JFZ0EKU05uKzV3RUNnWUVBOUYxVkZaa1Zuc2o1MlU1SFhlaVVSV1RCdzRxZk1XeDhHUWFqT2NuYnBUTGxBVHpvQjBZaAprenZIQmJvK0pvVzBuNFkxeXpGS3F4cDNhcjViTFJQMTByZGhMY3RrN2JlWlluNXk3dFhMaGxGMGtrQW1sVGUyCkE4ampsSlhVcWIrWHhKNmhJSCtvVmlhZCtFZWNvandsK3J0a2RWbk4vVFVPS1lVUjNqOEFoaEVDZ1lFQXp0K1kKYTRMR3FhZlJOeWM4L0I1QzZxdWcyODNERjFhempJcGNPN3lRTjFMcE9JMllMenBnZWVTZXJtMEt1NkE4OWNzcwp5WERTM2MzakplOEZHdVplSlpCbFpOVWxhNklqTWt4dlp5blBXYUNkejQzZWprOWJNU0VXcnJOYWJnaEdFSTlTCmhvVllNY1BBVHQ5RUNZUVdBVGFIVXZqa1A4RFR4OXh4Vm42RWV4RUNnWUJ5bGMxTyttQzcrMHZGVFVLRDA0cXIKVzRyTWNaVWliTmRvT01lVFVvZFBXS1V2eG1xYTlwVEo0STc3clpCMUtkOC9xb1JSQ29VVDVLNDRmSmh1Yzl5aQplV0QxUTFuSmFuMWZSU0lKd25EVVJCL2djSHBuSUIrV2VMM1dyOGR2N2FweUJWeFN5K21ZdERVQTlqdUppNkRYCmlNV2JqWWZkQXVMb0wwRG9zU3hDc1FLQmdRQ21LMUJoTzJDY01pS0piTWs5c29rSnV1YXc2Q3lHK0t1c2ZnN3MKSk9DcXI3eUtJcUpWZlV5MVhJQmhsMUVCdVFwK1hMOFM1NzlaVHVIZ1BJZ2JQV1B1UkhoTmNEQm9yb29iQXU2UgpMVEpTeWdNNURybndFYW9zWW1tMzFuVVM0UzUyYXNsZEtJclpIbVhBZFBKUHVudDZhZlIxSDFzb0lwbDZkb1hMCmRrQ3dJUUtCZ1FETzJ0ZkxYdUZ1YUlKSU8zY2E3d2VGK29WTTQwTmNYMWpzYzI5RjdQUzlFZEVlN0h5eDFKN1YKSDM2S0JQc3UxQXppay9oQ0N3UjljZjlHakhkbXpKc01peDdaUXR4dEk1WkFJQXdweG9XUS9LMzJma0lLUFl3TApNcXBEN1luS3R5VXpLWS9MMDNldGVjWjQ3Z3ZEU3dxTmhjSnA2OEc2dWJCbHliazdOcWdackE9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=",
        "FileList": [
            {
                "Filename": "tls/aggregator-signer.key",
                "Data": "LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBeFhpSlFvbGNLZDF3b3pBYmEyWnVtRHZPSjN0TzhOczdzKzMvVU1DdE9CR1R6T2hrCmJIZmxVRzVTTm9wK0xHdlYvaWplWkt0SDd3RHlPL1diRlJpT3YvdjdZSTdEd1R4d2RTeEV6aGIzS2ZYdzFsVDQKeENONDkvRkw5amppMHZRbGEyV3hVYlg0YjhiaHdoQy9YbjJUQ2ptc3I0UVZHNC9qL3o2QWJuV3M2STdUMkhNeQplK3BtRlpWM1lMUDB1OW9FcHdxaHFQK1lMc1cwUDFDNXFYcXIwK1l3emdCcmpVczFVTm9pd21HYVhnS1cvSXV1Cklwc3kzM1NUWGxGaldGZ2dwcnFEc2dLRGNwd0NtWGRhTmNhckhOcEJuTWhabU1NMkx2bEwrUVIyUy85aFByYnEKUlhDTHdCWjZHMkFpK04vQjFmaXVYdXZFSW5JZC9VRCs3amNTSVFJREFRQUJBb0lCQUhjbDFuUCtHMHpyWHNZbwpCYk5VMTlBazdhdW0zQ2U1c0JsTnRlcU1oemU0YTF5TXIrTStxRzlTVVdxMVA1SWY4cnRxLzF6d2QvTyt0Mm4wCk5JR1RFcmJHSEpQVE1Fd000ckhnWnhlT2hjMmNwcGM4SitsNG1jbklueFBPbVJXOTJFSW4xc2k5cWt3UFRUSmkKRm9XMThSMlBWU0dGNlpKNnpJKzZyNVYyalVDM3ROaVIzMGRjM1FnTVUvTCtBelBLcEdqT3NLN2hiQVUzUWw1dApqRlkyM21CNVYwS1dmZXZjQjlMTXZkdjVHMVpBOUtmSW9hbUVxU1ArWHJkU2t6ZXovSVBtWG9NeTVQdWkvRWRVClpIa25EV3dmczJ1M0g0Mm53TnBYbzI4c3A5M0R2QloxS3NQYmtvVEdvb0FoMU5hcEFvTXFRVGdKRWdXU2JFZ0EKU05uKzV3RUNnWUVBOUYxVkZaa1Zuc2o1MlU1SFhlaVVSV1RCdzRxZk1XeDhHUWFqT2NuYnBUTGxBVHpvQjBZaAprenZIQmJvK0pvVzBuNFkxeXpGS3F4cDNhcjViTFJQMTByZGhMY3RrN2JlWlluNXk3dFhMaGxGMGtrQW1sVGUyCkE4ampsSlhVcWIrWHhKNmhJSCtvVmlhZCtFZWNvandsK3J0a2RWbk4vVFVPS1lVUjNqOEFoaEVDZ1lFQXp0K1kKYTRMR3FhZlJOeWM4L0I1QzZxdWcyODNERjFhempJcGNPN3lRTjFMcE9JMllMenBnZWVTZXJtMEt1NkE4OWNzcwp5WERTM2MzakplOEZHdVplSlpCbFpOVWxhNklqTWt4dlp5blBXYUNkejQzZWprOWJNU0VXcnJOYWJnaEdFSTlTCmhvVllNY1BBVHQ5RUNZUVdBVGFIVXZqa1A4RFR4OXh4Vm42RWV4RUNnWUJ5bGMxTyttQzcrMHZGVFVLRDA0cXIKVzRyTWNaVWliTmRvT01lVFVvZFBXS1V2eG1xYTlwVEo0STc3clpCMUtkOC9xb1JSQ29VVDVLNDRmSmh1Yzl5aQplV0QxUTFuSmFuMWZSU0lKd25EVVJCL2djSHBuSUIrV2VMM1dyOGR2N2FweUJWeFN5K21ZdERVQTlqdUppNkRYCmlNV2JqWWZkQXVMb0wwRG9zU3hDc1FLQmdRQ21LMUJoTzJDY01pS0piTWs5c29rSnV1YXc2Q3lHK0t1c2ZnN3MKSk9DcXI3eUtJcUpWZlV5MVhJQmhsMUVCdVFwK1hMOFM1NzlaVHVIZ1BJZ2JQV1B1UkhoTmNEQm9yb29iQXU2UgpMVEpTeWdNNURybndFYW9zWW1tMzFuVVM0UzUyYXNsZEtJclpIbVhBZFBKUHVudDZhZlIxSDFzb0lwbDZkb1hMCmRrQ3dJUUtCZ1FETzJ0ZkxYdUZ1YUlKSU8zY2E3d2VGK29WTTQwTmNYMWpzYzI5RjdQUzlFZEVlN0h5eDFKN1YKSDM2S0JQc3UxQXppay9oQ0N3UjljZjlHakhkbXpKc01peDdaUXR4dEk1WkFJQXdweG9XUS9LMzJma0lLUFl3TApNcXBEN1luS3R5VXpLWS9MMDNldGVjWjQ3Z3ZEU3dxTmhjSnA2OEc2dWJCbHliazdOcWdackE9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo="
            },
            {
                "Filename": "tls/aggregator-signer.crt",
                "Data": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURKRENDQWd5Z0F3SUJBZ0lJVXV1NFpiOGh2dDB3RFFZSktvWklodmNOQVFFTEJRQXdNREVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1Sb3dHQVlEVlFRREV4RmhaMmR5WldkaGRHOXlMWE5wWjI1bGNqQWVGdzB5TXpBMApNVGd4TXpBNE1URmFGdzB5TXpBME1Ua3hNekE0TVRGYU1EQXhFakFRQmdOVkJBc1RDVzl3Wlc1emFHbG1kREVhCk1CZ0dBMVVFQXhNUllXZG5jbVZuWVhSdmNpMXphV2R1WlhJd2dnRWlNQTBHQ1NxR1NJYjNEUUVCQVFVQUE0SUIKRHdBd2dnRUtBb0lCQVFERmVJbENpVndwM1hDak1CdHJabTZZTzg0bmUwN3cyenV6N2Y5UXdLMDRFWlBNNkdScwpkK1ZRYmxJMmluNHNhOVgrS041a3EwZnZBUEk3OVpzVkdJNi8rL3RnanNQQlBIQjFMRVRPRnZjcDlmRFdWUGpFCkkzajM4VXYyT09MUzlDVnJaYkZSdGZodnh1SENFTDllZlpNS09heXZoQlViaitQL1BvQnVkYXpvanRQWWN6SjcKNm1ZVmxYZGdzL1M3MmdTbkNxR28vNWd1eGJRL1VMbXBlcXZUNWpET0FHdU5TelZRMmlMQ1lacGVBcGI4aTY0aQptekxmZEpOZVVXTllXQ0NtdW9PeUFvTnluQUtaZDFvMXhxc2Mya0djeUZtWXd6WXUrVXY1QkhaTC8yRSt0dXBGCmNJdkFGbm9iWUNMNDM4SFYrSzVlNjhRaWNoMzlRUDd1TnhJaEFnTUJBQUdqUWpCQU1BNEdBMVVkRHdFQi93UUUKQXdJQ3BEQVBCZ05WSFJNQkFmOEVCVEFEQVFIL01CMEdBMVVkRGdRV0JCUlFaOWdvN2pXOEtTRjlldXg3dFJ1egpSckMwZnpBTkJna3Foa2lHOXcwQkFRc0ZBQU9DQVFFQWZEQXZRNUc0aUxTK0N6ZXQ1TS9zMXdzaEhZdENsdlRPCk44N1RxMzRlWGhHalE3allVNjdhbGV0aThkWDdkU083T3hGNnRHTSthcHQxZ2VnelRac003OHFieDByQXlyK1UKOVlLd1pOSUp3c2RYbjJYMzhnRW9GQXV2M2V1dWxpM0tPR3BjT2Z3K1hTS09NVUhZZWsySWxKcndBa3B2NTNaWApBTk1PRHpEVFRIbnRkSzc0czZSV2VvTnNWeHJEU1IzL3JlOXViWG9taDE2NVhmdStLRXlzNXorSlFZbVU5YXZPCk92Qm05Tks3WUhlaW5mY3FnZ0wwaU5UOWkzTDY3N25EQ0JmYnNhVVJiVGg5dDVDLzQ1eVdqRUVmWnc4SmlzcXgKVEJOT1k2S2VmZnNsZTQ3STJTdlFJTGpneFhMcS9ZVTZSMUZha0VrMDkwMnZCd2FNZ3RET1N3PT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo="
            }
        ]
    },
    "*tls.BootstrapSSHKeyPair": {
        "Priv": "LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcFFJQkFBS0NBUUVBdkREQnphcWFKY1RlSUxZdUtFREVJcktYZ1JEcmt0NzFiS0VlK240bU5MbUdIbXllCnBtdlg5ZktRWDZJVisrL29UUTJ3d3BLN1h1RmNhQ1Z3VkpZWW1xQUpvVjBOeTdiaXNxVFg3Z1Z0MFZURkI4WWQKQ2U5SFFuMEJqUSt3M0NTVk1wdGdmelExK1Eva1QxTVMyMlBmbWJBYnVHRFBrUTdYUnFDa3ZxZjk0d1R6YmpQdApyVFNUMzNzR1BQbHVLUkZPREhJMWlZd3VsWlZhRzArREkxSzVzZzVkSDd3dVdZNCtZRUVEblF2SndUMHlGd1FQClExa3B4UUJnY2FCOHhQaDBqN25zTkxDMDl4dG9nUEJvdnZzSUlWaFRyeFl6U3ROY3pHdldjQVlnTlBGVFBPbzAKbDg2SERPTERNTGlmdDIwSitQMDVIMTRwandrTkJqQW1tT20zUHdJREFRQUJBb0lCQVFDQ2ZNUkUyU0JkUSs1SgpmRWp3L0VlRFQ1WWhsaHZpRU5yWDRiaGJOQkZGeWNZblhtVjdPNWZaSDhIZnJjSFVtUHJZUXIvbmlscUZaWG52CmROWTRzSUtLNUtFSTFENzJtKzhBczdCTmlGSW5MY0lZcTlRQ3lYajlyelBlSFowaVovTlR6Y3pSSnVDdHU4a3cKLzRjNXZEeVVram9HVklwWUtKUTRrcmJveEE4VTAyem9aSlZ0dTVoNkZYQzc2R04vQWlDM3ZLVGxPaDFmV01tWApyTC9OYmlmbERXV0wyL3UyMVFmWEF4OUdtNDFZV09BUXU4alZ2cVRza2I0eFNlYkJyTHcvSXRzM1pEY2Q3TmNRCkpUc3dweER5TE1ZT2tsZDc3dHNHNm16alJGYm00UUZDUTVkVzlCKzI3N0VsVi9ablIyejBTM1lranFtZFFMcXIKcVVISjNZQkJBb0dCQVByQlhJbWxpMjc0T2ZpM2FKajZnbEZNVFNTTng4ZG9SZDZ5dHlZTXk0MlBPam5tWGFEMgpTQVZnYXVwVnVrVHpDNHVVZFdjUGJVby90S1pIZEVSME9Gd1FlVkdjMjBCZ0hsN2ZvUFVNeHMzTGY1Y0Q0UGdkCmF1UFlybXVmZXFjUXFEV3I3VFNjRWhVUENvMHdoeklVR0tXMytuTnltdzFWUjg4TmxpRHYxeXl2QW9HQkFNQWcKWmxPSWVNalhjbU1LODJPMjFodGFVUFdkeXpkY3h5VU9DaHVvckliVVdKRmRRZnMzQ1JKLzJRbXZ1ZUFBZ3ZsZQoya1htWWxJTFJPM0k2aDJYbkxIalkySXFnRUFzcGxJRUIvZERSeUxuYmpkbnRGWEo2dWdKTEV4SVVZeE0yK2NTClM4M293K3hCbTdxSHFaMnZhNVA0dzRjRXNva09HcWlGbndjZWJHSnhBb0dCQU9kaUtidXlFRm5UbjlyTGt5OG0KYWI0UEJGZ29wQ0p6SzVYMW4xN3pDNW1TZ280TzduS3JENFkybERHcjdYZldOZDhVbk1qK3lVQnNUSXZxLzNSegpNZFp5TlNDRDl5VU9ETGhLN3NGd2lybzNmNEtnUjZWcnI4aVRsMDhrR0ErMUpTSnhoUzY0blU3bFZEMDRmR2hQCmR2YmtMNno4SWV0SnVEdHROQTBzZzRkdEFvR0JBSndHOC9Mc3h1S2NqVW0vNys5UDRjdHU2b2E5c2ZaeEEwMmwKZkRJQUpyU01xS3pNNXJQRWV6cXAxekhWb3djMmd5ZFBqOFhxbG5oNHJHN0xsczJYZmVxOWRzMlhKSFo1akV6WQo5enNvU1JJZ2p0S3lCck1RK3hPYnQzenYwa0kxZlBUSVdBV04vZWJWVlVvRHVJelZsSEVrT201aE16aTQybzkzCmpMRzBWR01SQW9HQVg2VDJEQlJ4SWFzNkRxTDlVRWZHREV2MFZMSzZ2S2daNXRtU0FHVDIvSC9KREhsMHk2NUoKMkFYZFhNUWQ3ZE1JN3JNL1BBUnkwbk9mU3I0cDBya3pOdnRhUlRDTWxNZmxRV3BuNTFPbUd1U2xIRG1KSmI5QQpONFQzcmNjQ1hsa1ZvTmx5QStiZE5uS3gxSzVGbGo1MXFyN3dKUVEreUZQNmRyVWl5eENBYnBrPQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=",
        "Pub": "c3NoLXJzYSBBQUFBQjNOemFDMXljMkVBQUFBREFRQUJBQUFCQVFDOE1NSE5xcG9seE40Z3RpNG9RTVFpc3BlQkVPdVMzdlZzb1I3NmZpWTB1WVllYko2bWE5ZjE4cEJmb2hYNzcraE5EYkRDa3J0ZTRWeG9KWEJVbGhpYW9BbWhYUTNMdHVLeXBOZnVCVzNSVk1VSHhoMEo3MGRDZlFHTkQ3RGNKSlV5bTJCL05EWDVEK1JQVXhMYlk5K1pzQnU0WU0rUkR0ZEdvS1MrcC8zakJQTnVNKzJ0TkpQZmV3WTgrVzRwRVU0TWNqV0pqQzZWbFZvYlQ0TWpVcm15RGwwZnZDNVpqajVnUVFPZEM4bkJQVElYQkE5RFdTbkZBR0J4b0h6RStIU1B1ZXcwc0xUM0cyaUE4R2krK3dnaFdGT3ZGak5LMDF6TWE5WndCaUEwOFZNODZqU1h6b2NNNHNNd3VKKzNiUW40L1RrZlhpbVBDUTBHTUNhWTZiYy8K"
    },
    "*tls.BoundSASigningKey": {
        "FileList": null
    },
    "*tls.CloudProviderCABundle": {
        "File": null
    },
    "*tls.JournalCertKey": {
        "CertRaw": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURZRENDQWtpZ0F3SUJBZ0lJWU9NYWVpMFpEMUF3RFFZSktvWklodmNOQVFFTEJRQXdKakVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1SQXdEZ1lEVlFRREV3ZHliMjkwTFdOaE1CNFhEVEl6TURReE9ERXpNRGd3T1ZvWApEVE16TURReE5URXpNRGd4TWxvd09URWNNQm9HQTFVRUNoTVRUM0JsYmxOb2FXWjBJRUp2YjNSemRISmhjREVaCk1CY0dBMVVFQXhNUWFtOTFjbTVoYkMxbllYUmxkMkY1WkRDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVAKQURDQ0FRb0NnZ0VCQU43VkF6MGljaHpFU2FoRk0vN3QzNmVrSGVDZVpBMXo2K21sU0Vwa2VQSDB3ZGMwOW1VcwpTYlV1Mlc2ZVJhbnJzdE5mQkdzUEJKdzBsSmdETW5VMHBObXBhbHVHNHRTUFJrd3dhcnNDNFBTM0RVeVlISG9YCnJMQWhYMkNwaHJJQkNUdXMvV0JtdmoyYWFvMkNyU2pGWGF4SUk4N0pWUTFaaStTZEVpMTZ2SllOTTJHR3puNC8KT2N2bTNJWFlLTTFicFV6THdXankrTXp0eHRTU0t4UjlLbndqT2hJSzRrOHdwZE1YOTFlSGNCamJ4bTFNeDFoegpVcmVIaGFmdDN4REhBSk95N0NtL3Y1ZVdFM1NFZ3l1MzFyQ1I4LzlxNXhiUElMWjBwU3B1MkZGUEszSG51RWoyCmhobEQxQ3dOdlVhUWNFcEpTRVVhUC9MUlg1b3BhNVFCNkcwQ0F3RUFBYU4vTUgwd0RnWURWUjBQQVFIL0JBUUQKQWdXZ01CMEdBMVVkSlFRV01CUUdDQ3NHQVFVRkJ3TUJCZ2dyQmdFRkJRY0RBakFNQmdOVkhSTUJBZjhFQWpBQQpNQjBHQTFVZERnUVdCQlQ4RTREV2JRNjZERXA2VEtmZkJDZ25mT2N4RkRBZkJnTlZIU01FR0RBV2dCUjdpVEpQCkV3VFlxcFM5L3Vmc0o3d2x2azV2Q1RBTkJna3Foa2lHOXcwQkFRc0ZBQU9DQVFFQWhkSjQrM1YyczZKeWlEZGEKcEkxdVAwbHNkK2ZFTm5VMEEyNWVnZkZ5MFlLSWhjY0YyamdtSk0xakNjb0c5MStoQ3lLYUtMM0lNNkhYbExkTAo5c3AzRldJc29yeEl2SEFZY0p5NHNqVk12TXJiYXZzdmFzaSszbTFpb3RYK2lQWGF1TUQ3Z2Y1WUZ5dHJXWnVPCjVSRlVzK3FWV1JVQTRQM0k1SVZpWHQyZTNoY3lPRjA1MTBnbHh0ZHVHNy82djE5aUJpWUJtaHBHNzFIZ2ZNQXUKY3kvcDVKRk1LcitncUpNNXhkSThaWnVHUmdBRlBMVW9tcnZDM1BnUnloUS9DZlo1RC94b0NuMUhUekl3S09pNgozMVhxbk1XUitNSXp6TTVGSTIvMTFWdmlsWmhGRjJPMEIxSkpsRGRza1AzT2h2V2hDZ3UweUFyaEVPRGhlV2xFCkRvVXUrUT09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K",
        "KeyRaw": "LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBM3RVRFBTSnlITVJKcUVVei91M2ZwNlFkNEo1a0RYUHI2YVZJU21SNDhmVEIxelQyClpTeEp0UzdaYnA1RnFldXkwMThFYXc4RW5EU1VtQU15ZFRTazJhbHFXNGJpMUk5R1REQnF1d0xnOUxjTlRKZ2MKZWhlc3NDRmZZS21Hc2dFSk82ejlZR2ErUFpwcWpZS3RLTVZkckVnanpzbFZEVm1MNUowU0xYcThsZzB6WVliTwpmajg1eStiY2hkZ296VnVsVE12QmFQTDR6TzNHMUpJckZIMHFmQ002RWdyaVR6Q2wweGYzVjRkd0dOdkdiVXpICldITlN0NGVGcCszZkVNY0FrN0xzS2IrL2w1WVRkSVNESzdmV3NKSHovMnJuRnM4Z3RuU2xLbTdZVVU4cmNlZTQKU1BhR0dVUFVMQTI5UnBCd1NrbElSUm8vOHRGZm1pbHJsQUhvYlFJREFRQUJBb0lCQUM0Rzc5bFQ0U0JDQnpqagp1bjdBNGI2OTdwSDBCWlNseWlnRHhPL2cydjZYWU9hMEFPVWJCY3FQOThlYWw2Y21rVlNKdnQ3aVJrQ0J0K1BDClhVektaL2F4d005UkNFK0JuTEttR1pXeFhZZ091NGVEci9Za0o3NWwxazZnRmJ0MDdWUlBRak1FWmUxUmxRclAKNERhWXRlV2RMUkJNayszaS9qdGxtbGljanBHcm02N1lwaFBKTDNGUUY3V3hOWnFqUmg3RGpCUFBWaGlaTitTdQpuY2g0SUFtUDRCdzdzYnZIcGpBN2tQOTl6dHltUWJMQmVzZEFjcnorRlFxejBqQjMrVzhHM0U0QThHaHRwRXFhCnF6UkNnZ1RwZ1EvNW5kSUVsZHJ5elhYdXRJZkNYdEdNSTMzL3dIMjhQZ1lSUzQzbjhkeEZSRWsrRE1OOWNrWUMKMU15U3VzRUNnWUVBOHo2V1dPNEJ5Q0Z6VVp4aG05VzNYMFAwZENlNldaSkZUbXczYUZmelFpbVczcm5xUHEyRwphOXRQamFVd3BOQ2pCZ3NJZWtsbjhhUHpUaWorMFVvUCtDUXJZOFQ4ejZKNVYyam84dTFPeFNzZEJRR3UycXIyCkVET0FiVzNEUnlmQkwxWXZqVWp0ektLK0U1enZYRlU1SmJGaU8wZkZrbEN4UXVMV1RIVDhTTkVDZ1lFQTZvUm0KcDc3UUs5Rk51RTJCSjNsa3JoVTNGdlJEa3NTWEJtVHczbE9DRE1CUFpMMno4RW5MN1RxUURhZXlHL2VleFQ1bwpiaG9DTlI1aGNKTGVaU2k2Y0ZWWjBYelpnbXJRYnZWN2ZtbDFKYnE0TTNDOVBta0ttRnZvc1c5bGFybmk0b1huCi9sUlYxYlQ5c082L0NURDNybDVMWnM3Tms3Yi8xZGp5VzExSlROMENnWUFvMDhCNGZMcGYxUDErSFRsazVxSTQKb3pkTXA3NW5lbDJYcENKSXFUcHpTSGZDT29KT3N1RjFDUUo1UzlpMlVTNkx2UjVYS0NzQ0svcVNpOTc1VWUwTQpRVVhuSVJFdDZKOWxSSDZWQjYvSStFdU9vNUd0c2pSSzA5b2lnK0hhOTVrOVVNSDZmTnN0RmNQQmx2MjJDYmZsCjA3Z2hLeExHVkRUc2ZSWnJEdGVwZ1FLQmdRQ3FreXJuajg1eVVJYXJLeFJwMWMzNUlNMDFFTzJsYndBNlVta3cKREtWbkNPbTJhSlRjalpDYU9DSlhERVpzT1N0dVkvb3BPeG1uOFRVR1lJMEtIeG1jWXpnMU93NHA0ZTlCQmFTUgpTYnMvZWhSSXRoT3Z0VTlUaW1ZeHlNaUhYRFUrZGc5TDJhT2xFVVFFMFdKNkdQZk9DQi9uNHp0NzJYc3oyOXhMCndBcDBzUUtCZ0FxTWNVMHZTbXo5ck53OC9WRVl6T3ROd2Y2NklhTzA5akdIRm1PbVV0QkJrRGxPb2xPVXNHdTQKOTlaYS9neWVlcE1UL29nSjd1SkE5TnUvcFZubE9pVW1KaTQwVU11VzRBRGcwczlkZUZWdytkazZxKyt6b3Z2SgpnVk1RbmRwU1d6R00rc01EQjkwd3Iya1ZJbGp5N1lvVWprTUVWRnJFM0RrRDJFaWhiY3NKCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==",
        "FileList": [
            {
                "Filename": "tls/journal-gatewayd.key",
                "Data": "LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBM3RVRFBTSnlITVJKcUVVei91M2ZwNlFkNEo1a0RYUHI2YVZJU21SNDhmVEIxelQyClpTeEp0UzdaYnA1RnFldXkwMThFYXc4RW5EU1VtQU15ZFRTazJhbHFXNGJpMUk5R1REQnF1d0xnOUxjTlRKZ2MKZWhlc3NDRmZZS21Hc2dFSk82ejlZR2ErUFpwcWpZS3RLTVZkckVnanpzbFZEVm1MNUowU0xYcThsZzB6WVliTwpmajg1eStiY2hkZ296VnVsVE12QmFQTDR6TzNHMUpJckZIMHFmQ002RWdyaVR6Q2wweGYzVjRkd0dOdkdiVXpICldITlN0NGVGcCszZkVNY0FrN0xzS2IrL2w1WVRkSVNESzdmV3NKSHovMnJuRnM4Z3RuU2xLbTdZVVU4cmNlZTQKU1BhR0dVUFVMQTI5UnBCd1NrbElSUm8vOHRGZm1pbHJsQUhvYlFJREFRQUJBb0lCQUM0Rzc5bFQ0U0JDQnpqagp1bjdBNGI2OTdwSDBCWlNseWlnRHhPL2cydjZYWU9hMEFPVWJCY3FQOThlYWw2Y21rVlNKdnQ3aVJrQ0J0K1BDClhVektaL2F4d005UkNFK0JuTEttR1pXeFhZZ091NGVEci9Za0o3NWwxazZnRmJ0MDdWUlBRak1FWmUxUmxRclAKNERhWXRlV2RMUkJNayszaS9qdGxtbGljanBHcm02N1lwaFBKTDNGUUY3V3hOWnFqUmg3RGpCUFBWaGlaTitTdQpuY2g0SUFtUDRCdzdzYnZIcGpBN2tQOTl6dHltUWJMQmVzZEFjcnorRlFxejBqQjMrVzhHM0U0QThHaHRwRXFhCnF6UkNnZ1RwZ1EvNW5kSUVsZHJ5elhYdXRJZkNYdEdNSTMzL3dIMjhQZ1lSUzQzbjhkeEZSRWsrRE1OOWNrWUMKMU15U3VzRUNnWUVBOHo2V1dPNEJ5Q0Z6VVp4aG05VzNYMFAwZENlNldaSkZUbXczYUZmelFpbVczcm5xUHEyRwphOXRQamFVd3BOQ2pCZ3NJZWtsbjhhUHpUaWorMFVvUCtDUXJZOFQ4ejZKNVYyam84dTFPeFNzZEJRR3UycXIyCkVET0FiVzNEUnlmQkwxWXZqVWp0ektLK0U1enZYRlU1SmJGaU8wZkZrbEN4UXVMV1RIVDhTTkVDZ1lFQTZvUm0KcDc3UUs5Rk51RTJCSjNsa3JoVTNGdlJEa3NTWEJtVHczbE9DRE1CUFpMMno4RW5MN1RxUURhZXlHL2VleFQ1bwpiaG9DTlI1aGNKTGVaU2k2Y0ZWWjBYelpnbXJRYnZWN2ZtbDFKYnE0TTNDOVBta0ttRnZvc1c5bGFybmk0b1huCi9sUlYxYlQ5c082L0NURDNybDVMWnM3Tms3Yi8xZGp5VzExSlROMENnWUFvMDhCNGZMcGYxUDErSFRsazVxSTQKb3pkTXA3NW5lbDJYcENKSXFUcHpTSGZDT29KT3N1RjFDUUo1UzlpMlVTNkx2UjVYS0NzQ0svcVNpOTc1VWUwTQpRVVhuSVJFdDZKOWxSSDZWQjYvSStFdU9vNUd0c2pSSzA5b2lnK0hhOTVrOVVNSDZmTnN0RmNQQmx2MjJDYmZsCjA3Z2hLeExHVkRUc2ZSWnJEdGVwZ1FLQmdRQ3FreXJuajg1eVVJYXJLeFJwMWMzNUlNMDFFTzJsYndBNlVta3cKREtWbkNPbTJhSlRjalpDYU9DSlhERVpzT1N0dVkvb3BPeG1uOFRVR1lJMEtIeG1jWXpnMU93NHA0ZTlCQmFTUgpTYnMvZWhSSXRoT3Z0VTlUaW1ZeHlNaUhYRFUrZGc5TDJhT2xFVVFFMFdKNkdQZk9DQi9uNHp0NzJYc3oyOXhMCndBcDBzUUtCZ0FxTWNVMHZTbXo5ck53OC9WRVl6T3ROd2Y2NklhTzA5akdIRm1PbVV0QkJrRGxPb2xPVXNHdTQKOTlaYS9neWVlcE1UL29nSjd1SkE5TnUvcFZubE9pVW1KaTQwVU11VzRBRGcwczlkZUZWdytkazZxKyt6b3Z2SgpnVk1RbmRwU1d6R00rc01EQjkwd3Iya1ZJbGp5N1lvVWprTUVWRnJFM0RrRDJFaWhiY3NKCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg=="
            },
            {
                "Filename": "tls/journal-gatewayd.crt",
                "Data": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURZRENDQWtpZ0F3SUJBZ0lJWU9NYWVpMFpEMUF3RFFZSktvWklodmNOQVFFTEJRQXdKakVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1SQXdEZ1lEVlFRREV3ZHliMjkwTFdOaE1CNFhEVEl6TURReE9ERXpNRGd3T1ZvWApEVE16TURReE5URXpNRGd4TWxvd09URWNNQm9HQTFVRUNoTVRUM0JsYmxOb2FXWjBJRUp2YjNSemRISmhjREVaCk1CY0dBMVVFQXhNUWFtOTFjbTVoYkMxbllYUmxkMkY1WkRDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVAKQURDQ0FRb0NnZ0VCQU43VkF6MGljaHpFU2FoRk0vN3QzNmVrSGVDZVpBMXo2K21sU0Vwa2VQSDB3ZGMwOW1VcwpTYlV1Mlc2ZVJhbnJzdE5mQkdzUEJKdzBsSmdETW5VMHBObXBhbHVHNHRTUFJrd3dhcnNDNFBTM0RVeVlISG9YCnJMQWhYMkNwaHJJQkNUdXMvV0JtdmoyYWFvMkNyU2pGWGF4SUk4N0pWUTFaaStTZEVpMTZ2SllOTTJHR3puNC8KT2N2bTNJWFlLTTFicFV6THdXankrTXp0eHRTU0t4UjlLbndqT2hJSzRrOHdwZE1YOTFlSGNCamJ4bTFNeDFoegpVcmVIaGFmdDN4REhBSk95N0NtL3Y1ZVdFM1NFZ3l1MzFyQ1I4LzlxNXhiUElMWjBwU3B1MkZGUEszSG51RWoyCmhobEQxQ3dOdlVhUWNFcEpTRVVhUC9MUlg1b3BhNVFCNkcwQ0F3RUFBYU4vTUgwd0RnWURWUjBQQVFIL0JBUUQKQWdXZ01CMEdBMVVkSlFRV01CUUdDQ3NHQVFVRkJ3TUJCZ2dyQmdFRkJRY0RBakFNQmdOVkhSTUJBZjhFQWpBQQpNQjBHQTFVZERnUVdCQlQ4RTREV2JRNjZERXA2VEtmZkJDZ25mT2N4RkRBZkJnTlZIU01FR0RBV2dCUjdpVEpQCkV3VFlxcFM5L3Vmc0o3d2x2azV2Q1RBTkJna3Foa2lHOXcwQkFRc0ZBQU9DQVFFQWhkSjQrM1YyczZKeWlEZGEKcEkxdVAwbHNkK2ZFTm5VMEEyNWVnZkZ5MFlLSWhjY0YyamdtSk0xakNjb0c5MStoQ3lLYUtMM0lNNkhYbExkTAo5c3AzRldJc29yeEl2SEFZY0p5NHNqVk12TXJiYXZzdmFzaSszbTFpb3RYK2lQWGF1TUQ3Z2Y1WUZ5dHJXWnVPCjVSRlVzK3FWV1JVQTRQM0k1SVZpWHQyZTNoY3lPRjA1MTBnbHh0ZHVHNy82djE5aUJpWUJtaHBHNzFIZ2ZNQXUKY3kvcDVKRk1LcitncUpNNXhkSThaWnVHUmdBRlBMVW9tcnZDM1BnUnloUS9DZlo1RC94b0NuMUhUekl3S09pNgozMVhxbk1XUitNSXp6TTVGSTIvMTFWdmlsWmhGRjJPMEIxSkpsRGRza1AzT2h2V2hDZ3UweUFyaEVPRGhlV2xFCkRvVXUrUT09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K"
            }
        ]
    },
    "*tls.KubeAPIServerCompleteCABundle": {
        "BundleRaw": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURRRENDQWlpZ0F3SUJBZ0lJVXdMTkJjaHNZT1l3RFFZSktvWklodmNOQVFFTEJRQXdQakVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1TZ3dKZ1lEVlFRREV4OXJkV0psTFdGd2FYTmxjblpsY2kxc2IyTmhiR2h2YzNRdApjMmxuYm1WeU1CNFhEVEl6TURReE9ERXpNRGd4TUZvWERUTXpNRFF4TlRFek1EZ3hNRm93UGpFU01CQUdBMVVFCkN4TUpiM0JsYm5Ob2FXWjBNU2d3SmdZRFZRUURFeDlyZFdKbExXRndhWE5sY25abGNpMXNiMk5oYkdodmMzUXQKYzJsbmJtVnlNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DQVE4QU1JSUJDZ0tDQVFFQXVrQXFycmwrWHROcwpNQm1JMkRnZmlwUmMvNEluLytGZ2txSWZmaENTYzU3eXhGaXZBRXR5VTM3WERlQmNkeHNFMDRLQ1RuSDEram5PCm5VZkxlWFVKMmlHcFF6R1FSZ2FjV3VkeERBdUc1VmZmYkN0RkpxRGQvKzRTT3J6SlRQellvditUTGxPc296QlMKSHc5WWN4K1JmZUw0R3NlaXVhQVdmaFcreHdkQVFHWVg0eFJNcVBkcmlCY1JQUkprd2Q2K21xZ3FuM0t4UjI3VgpWeU85NnNlYWdjME5IR3h0dUlBUTF2eWgzeThvM2E3bURUdWJ6VDNRMXhTeDZTUUljd0I5K0RaUkRjMGwwUlBwClhzYVBuMVhMMzVYcHR0MHkxQTBZKzlKTXM5SWxTNkpCbzVNYzBERnNQWVNFZlNoeXZ5TVBDZFZ5bXdPcVRkbEcKdEpaZUxWazFKd0lEQVFBQm8wSXdRREFPQmdOVkhROEJBZjhFQkFNQ0FxUXdEd1lEVlIwVEFRSC9CQVV3QXdFQgovekFkQmdOVkhRNEVGZ1FVa01iUHN5YU5OaGg0bXlZZ3FOelJ5QmUzc21Rd0RRWUpLb1pJaHZjTkFRRUxCUUFECmdnRUJBR1FEMTZNdTAybEVaY1BodTNxcjFHRnVVQUZFWWh5T0hRSFVFcklUOU9rQ2hvczU4eUZ0WThPRFlwelYKdS83MllMVDBoSkdrY0diREVEN2dNTzNGMXhvWEc2bFh4Y2htb0FhOFZhWlpxTUJBckdVQXE4aXppUUdPUUMzawpaYVh4SjcrMGhhNTA0Q2xnUDJJd3hIMTlBOFhRVi8rS0hPU05YbjFGaDlSMXdNM2tHRG9JSFQ2bFZ4R1RlMTNZCldEMEN2NTRxZCtMWElSOCsrbVFVSXdMd1cwd3NKUEUybG5MYVhvSzQ5MHp6WDJvWWMxUWJ1WGNqeUxWY3pVUG0KVWFxY29IeDVjS3pabytjM2I5QVpvaDZzRjRvMG1LOWdJT2RWZXFzTitkbWlKSFJIeElhT0hYSzg2SFJpczRWWQpPM0VhTTlxWnViOS9vQ3BSRVcrN25CWWVDemM9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0KLS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURURENDQWpTZ0F3SUJBZ0lJUjhMVUtrdnFZdFF3RFFZSktvWklodmNOQVFFTEJRQXdSREVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1TNHdMQVlEVlFRREV5VnJkV0psTFdGd2FYTmxjblpsY2kxelpYSjJhV05sTFc1bApkSGR2Y21zdGMybG5ibVZ5TUI0WERUSXpNRFF4T0RFek1EZ3hNRm9YRFRNek1EUXhOVEV6TURneE1Gb3dSREVTCk1CQUdBMVVFQ3hNSmIzQmxibk5vYVdaME1TNHdMQVlEVlFRREV5VnJkV0psTFdGd2FYTmxjblpsY2kxelpYSjIKYVdObExXNWxkSGR2Y21zdGMybG5ibVZ5TUlJQklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQwpBUUVBNW9wNGpiL25wMW5OZURMSEp5K3EvcVByY1Z5bmNDLzg0ZDFiemp6dDlPTUpicnJ0TkEyTHlvNTBPblZaCmRIMTk5MklIbERTYnJLZFJacE9OR2Q1ZVRNT2hjZUNudVp3MWJ5K0ZBL0FJSHZ6alR4eXV5ZUNqajdQS0xQYm0KSlRsQm5nSjNSVnozV0dRai9MMEdJRWZYV0QwMndkdHJaYmY3dFBtUHEwQWYxYlY5MlM5U21XTWovcWoyTnVYaApLeWZ5aFU0ckI2b0NPQjlDY0M1VENtQW9DdzFJQjBFUEo3UmpxbFFnUVpCTTlwT1BYYTFDWFlleFZ6TFV4ZUZMClFTcHRiUW1UWnp6Yms0cUZrdkVRUlA1VFZEK3VKUXdkNlIvbUhseTZ6ZWRTUEh4SWpzYXVOYzE3bG8xamg5dkgKZkptUUQ5RElpSnU0dW9aaEErejQxQW9sZVFJREFRQUJvMEl3UURBT0JnTlZIUThCQWY4RUJBTUNBcVF3RHdZRApWUjBUQVFIL0JBVXdBd0VCL3pBZEJnTlZIUTRFRmdRVUFpU251cjQ0bVBvT1NsbUlrbE13aWhnMHFnd3dEUVlKCktvWklodmNOQVFFTEJRQURnZ0VCQUxKY2xtaVVKRnhHR0V2TWFwcGNKUXp0UTY0MFhvS0dxeXZVY2xnR0NKK3UKb0MzZmVIdTRKNzJqM1hoZ0VPMEVrbngySWt2ME5JZFplazZyUDk2Rk0ranVHZGZya3RSNmJkbXFpZHJHWXdMWgpLQnVLa0N3b1h0bDVtNWg5eURTRzVuYWRBcWg4VzhEdUhuUFhpZ25HLzk0UmcwRWxVUEw2ZTV4MHNHVUpVVEVXCkYrNzNiajE3RFV0b0RDd0JEY20yK1kxMTVsYzMySEhGTnRYaTFvTUYvRVpaL3F1bGQ3NDJzYUQ4Uk5ta0p5N1EKT3BIK1ZFSnNOUktpZHcyQVdTUW9idEYzbVIvbWFpTktMNExGUldISFNjNTduUkVlOGFUNEQvUFBmcVJKYndxOApLNEZ4TzNmQzRlbFpZaTFHVm5UbnR5RUVLM2JBS2pOblcyOGNBcTNIbkJZPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCi0tLS0tQkVHSU4gQ0VSVElGSUNBVEUtLS0tLQpNSUlETWpDQ0FocWdBd0lCQWdJSVZkUWFwZnowN1dZd0RRWUpLb1pJaHZjTkFRRUxCUUF3TnpFU01CQUdBMVVFCkN4TUpiM0JsYm5Ob2FXWjBNU0V3SHdZRFZRUURFeGhyZFdKbExXRndhWE5sY25abGNpMXNZaTF6YVdkdVpYSXcKSGhjTk1qTXdOREU0TVRNd09ERXdXaGNOTXpNd05ERTFNVE13T0RFd1dqQTNNUkl3RUFZRFZRUUxFd2x2Y0dWdQpjMmhwWm5ReElUQWZCZ05WQkFNVEdHdDFZbVV0WVhCcGMyVnlkbVZ5TFd4aUxYTnBaMjVsY2pDQ0FTSXdEUVlKCktvWklodmNOQVFFQkJRQURnZ0VQQURDQ0FRb0NnZ0VCQU9qZTNnc2U4M2MwMndvVVZPYVFxcDRWVVMyMHBPMXgKSWxISmRydGJNTmx2Q1o1a2ZCM1pxVlJMRUpDUjN2L2dCQzcyUnYxMEJVUUxPRjdwNGU2TExDSTNteE9nUllNbApFc20vbXJxbHlwYi9XNjl3NzV1YVhXRFZNNGNnSTdxLzhrS3ppT3RrTGJHWm12WVNFR1hQK29uelU5UFBIUFpBCkVnUVZWRUREdFFNaWt4eWlxZGdCN3BNbFV2alhmZ1o0dkI3NGZzeVd1RFZpQy9GYnVFSmxQRk0vdDFHenhKQm0KRDh5NTl1MXRobW8xY1ZOajRBcWRaWVlLaEhxdkZQNUhQYisvdEFvU0dNTTJzeXcwc3VrczAvRWpVSmx5M3ovdgpEcElCemxhRjFuNnVVS3BCQ3lyeittbnArSWxvWjFMd25hdzkvTlhwMW5kdlZIVy9Objd4SDNrQ0F3RUFBYU5DCk1FQXdEZ1lEVlIwUEFRSC9CQVFEQWdLa01BOEdBMVVkRXdFQi93UUZNQU1CQWY4d0hRWURWUjBPQkJZRUZPYm4KR09xRnRQM3RyUG1QakFtT0EyN1k1dTAzTUEwR0NTcUdTSWIzRFFFQkN3VUFBNElCQVFDTFJtbmZKd21LMituLwp2UUpyVUtIVk01SW1YOFJUWk5PbllsNUVYWFV4RXJJcnJCSEZJcnpVTTA4U2VLV3BCaHREalgzZzJaVVhnUjRCCkQzWXdKOXhkS1hHeDhBWmtUQXE4U3gyR09pb0Q3amhIU3NUV1pRODZFVVhhSUprbW9najFRcXh5RVFJRmdCZFUKbnpKekRWb1RwNzgzYVNCUC9FL3JpWndLTHVISCswUjhwOUNmM1k2dlE1aE94RDNOcjk4VmZvaVJXWEFVd2hlSAplTVMwTklUdDhNakhwVjdCRDgwamJNYXFtd3JoU2VQZ2FqaXBDdFl1d0lCQk94cHdmNlQ1WGZYZDh2RTZrNUhGCm1sZENyOTdJYTF2VEZpb2htSGhvcjI5cXhWb2Yxbno3VlMwLyt4cERPN0ZXcVhKWTNBa3VFZm1rcVcySE1QUnAKR2ZCSVRSOE8KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=",
        "FileList": [
            {
                "Filename": "tls/kube-apiserver-complete-server-ca-bundle.crt",
                "Data": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURRRENDQWlpZ0F3SUJBZ0lJVXdMTkJjaHNZT1l3RFFZSktvWklodmNOQVFFTEJRQXdQakVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1TZ3dKZ1lEVlFRREV4OXJkV0psTFdGd2FYTmxjblpsY2kxc2IyTmhiR2h2YzNRdApjMmxuYm1WeU1CNFhEVEl6TURReE9ERXpNRGd4TUZvWERUTXpNRFF4TlRFek1EZ3hNRm93UGpFU01CQUdBMVVFCkN4TUpiM0JsYm5Ob2FXWjBNU2d3SmdZRFZRUURFeDlyZFdKbExXRndhWE5sY25abGNpMXNiMk5oYkdodmMzUXQKYzJsbmJtVnlNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DQVE4QU1JSUJDZ0tDQVFFQXVrQXFycmwrWHROcwpNQm1JMkRnZmlwUmMvNEluLytGZ2txSWZmaENTYzU3eXhGaXZBRXR5VTM3WERlQmNkeHNFMDRLQ1RuSDEram5PCm5VZkxlWFVKMmlHcFF6R1FSZ2FjV3VkeERBdUc1VmZmYkN0RkpxRGQvKzRTT3J6SlRQellvditUTGxPc296QlMKSHc5WWN4K1JmZUw0R3NlaXVhQVdmaFcreHdkQVFHWVg0eFJNcVBkcmlCY1JQUkprd2Q2K21xZ3FuM0t4UjI3VgpWeU85NnNlYWdjME5IR3h0dUlBUTF2eWgzeThvM2E3bURUdWJ6VDNRMXhTeDZTUUljd0I5K0RaUkRjMGwwUlBwClhzYVBuMVhMMzVYcHR0MHkxQTBZKzlKTXM5SWxTNkpCbzVNYzBERnNQWVNFZlNoeXZ5TVBDZFZ5bXdPcVRkbEcKdEpaZUxWazFKd0lEQVFBQm8wSXdRREFPQmdOVkhROEJBZjhFQkFNQ0FxUXdEd1lEVlIwVEFRSC9CQVV3QXdFQgovekFkQmdOVkhRNEVGZ1FVa01iUHN5YU5OaGg0bXlZZ3FOelJ5QmUzc21Rd0RRWUpLb1pJaHZjTkFRRUxCUUFECmdnRUJBR1FEMTZNdTAybEVaY1BodTNxcjFHRnVVQUZFWWh5T0hRSFVFcklUOU9rQ2hvczU4eUZ0WThPRFlwelYKdS83MllMVDBoSkdrY0diREVEN2dNTzNGMXhvWEc2bFh4Y2htb0FhOFZhWlpxTUJBckdVQXE4aXppUUdPUUMzawpaYVh4SjcrMGhhNTA0Q2xnUDJJd3hIMTlBOFhRVi8rS0hPU05YbjFGaDlSMXdNM2tHRG9JSFQ2bFZ4R1RlMTNZCldEMEN2NTRxZCtMWElSOCsrbVFVSXdMd1cwd3NKUEUybG5MYVhvSzQ5MHp6WDJvWWMxUWJ1WGNqeUxWY3pVUG0KVWFxY29IeDVjS3pabytjM2I5QVpvaDZzRjRvMG1LOWdJT2RWZXFzTitkbWlKSFJIeElhT0hYSzg2SFJpczRWWQpPM0VhTTlxWnViOS9vQ3BSRVcrN25CWWVDemM9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0KLS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURURENDQWpTZ0F3SUJBZ0lJUjhMVUtrdnFZdFF3RFFZSktvWklodmNOQVFFTEJRQXdSREVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1TNHdMQVlEVlFRREV5VnJkV0psTFdGd2FYTmxjblpsY2kxelpYSjJhV05sTFc1bApkSGR2Y21zdGMybG5ibVZ5TUI0WERUSXpNRFF4T0RFek1EZ3hNRm9YRFRNek1EUXhOVEV6TURneE1Gb3dSREVTCk1CQUdBMVVFQ3hNSmIzQmxibk5vYVdaME1TNHdMQVlEVlFRREV5VnJkV0psTFdGd2FYTmxjblpsY2kxelpYSjIKYVdObExXNWxkSGR2Y21zdGMybG5ibVZ5TUlJQklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQwpBUUVBNW9wNGpiL25wMW5OZURMSEp5K3EvcVByY1Z5bmNDLzg0ZDFiemp6dDlPTUpicnJ0TkEyTHlvNTBPblZaCmRIMTk5MklIbERTYnJLZFJacE9OR2Q1ZVRNT2hjZUNudVp3MWJ5K0ZBL0FJSHZ6alR4eXV5ZUNqajdQS0xQYm0KSlRsQm5nSjNSVnozV0dRai9MMEdJRWZYV0QwMndkdHJaYmY3dFBtUHEwQWYxYlY5MlM5U21XTWovcWoyTnVYaApLeWZ5aFU0ckI2b0NPQjlDY0M1VENtQW9DdzFJQjBFUEo3UmpxbFFnUVpCTTlwT1BYYTFDWFlleFZ6TFV4ZUZMClFTcHRiUW1UWnp6Yms0cUZrdkVRUlA1VFZEK3VKUXdkNlIvbUhseTZ6ZWRTUEh4SWpzYXVOYzE3bG8xamg5dkgKZkptUUQ5RElpSnU0dW9aaEErejQxQW9sZVFJREFRQUJvMEl3UURBT0JnTlZIUThCQWY4RUJBTUNBcVF3RHdZRApWUjBUQVFIL0JBVXdBd0VCL3pBZEJnTlZIUTRFRmdRVUFpU251cjQ0bVBvT1NsbUlrbE13aWhnMHFnd3dEUVlKCktvWklodmNOQVFFTEJRQURnZ0VCQUxKY2xtaVVKRnhHR0V2TWFwcGNKUXp0UTY0MFhvS0dxeXZVY2xnR0NKK3UKb0MzZmVIdTRKNzJqM1hoZ0VPMEVrbngySWt2ME5JZFplazZyUDk2Rk0ranVHZGZya3RSNmJkbXFpZHJHWXdMWgpLQnVLa0N3b1h0bDVtNWg5eURTRzVuYWRBcWg4VzhEdUhuUFhpZ25HLzk0UmcwRWxVUEw2ZTV4MHNHVUpVVEVXCkYrNzNiajE3RFV0b0RDd0JEY20yK1kxMTVsYzMySEhGTnRYaTFvTUYvRVpaL3F1bGQ3NDJzYUQ4Uk5ta0p5N1EKT3BIK1ZFSnNOUktpZHcyQVdTUW9idEYzbVIvbWFpTktMNExGUldISFNjNTduUkVlOGFUNEQvUFBmcVJKYndxOApLNEZ4TzNmQzRlbFpZaTFHVm5UbnR5RUVLM2JBS2pOblcyOGNBcTNIbkJZPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCi0tLS0tQkVHSU4gQ0VSVElGSUNBVEUtLS0tLQpNSUlETWpDQ0FocWdBd0lCQWdJSVZkUWFwZnowN1dZd0RRWUpLb1pJaHZjTkFRRUxCUUF3TnpFU01CQUdBMVVFCkN4TUpiM0JsYm5Ob2FXWjBNU0V3SHdZRFZRUURFeGhyZFdKbExXRndhWE5sY25abGNpMXNZaTF6YVdkdVpYSXcKSGhjTk1qTXdOREU0TVRNd09ERXdXaGNOTXpNd05ERTFNVE13T0RFd1dqQTNNUkl3RUFZRFZRUUxFd2x2Y0dWdQpjMmhwWm5ReElUQWZCZ05WQkFNVEdHdDFZbVV0WVhCcGMyVnlkbVZ5TFd4aUxYTnBaMjVsY2pDQ0FTSXdEUVlKCktvWklodmNOQVFFQkJRQURnZ0VQQURDQ0FRb0NnZ0VCQU9qZTNnc2U4M2MwMndvVVZPYVFxcDRWVVMyMHBPMXgKSWxISmRydGJNTmx2Q1o1a2ZCM1pxVlJMRUpDUjN2L2dCQzcyUnYxMEJVUUxPRjdwNGU2TExDSTNteE9nUllNbApFc20vbXJxbHlwYi9XNjl3NzV1YVhXRFZNNGNnSTdxLzhrS3ppT3RrTGJHWm12WVNFR1hQK29uelU5UFBIUFpBCkVnUVZWRUREdFFNaWt4eWlxZGdCN3BNbFV2alhmZ1o0dkI3NGZzeVd1RFZpQy9GYnVFSmxQRk0vdDFHenhKQm0KRDh5NTl1MXRobW8xY1ZOajRBcWRaWVlLaEhxdkZQNUhQYisvdEFvU0dNTTJzeXcwc3VrczAvRWpVSmx5M3ovdgpEcElCemxhRjFuNnVVS3BCQ3lyeittbnArSWxvWjFMd25hdzkvTlhwMW5kdlZIVy9Objd4SDNrQ0F3RUFBYU5DCk1FQXdEZ1lEVlIwUEFRSC9CQVFEQWdLa01BOEdBMVVkRXdFQi93UUZNQU1CQWY4d0hRWURWUjBPQkJZRUZPYm4KR09xRnRQM3RyUG1QakFtT0EyN1k1dTAzTUEwR0NTcUdTSWIzRFFFQkN3VUFBNElCQVFDTFJtbmZKd21LMituLwp2UUpyVUtIVk01SW1YOFJUWk5PbllsNUVYWFV4RXJJcnJCSEZJcnpVTTA4U2VLV3BCaHREalgzZzJaVVhnUjRCCkQzWXdKOXhkS1hHeDhBWmtUQXE4U3gyR09pb0Q3amhIU3NUV1pRODZFVVhhSUprbW9najFRcXh5RVFJRmdCZFUKbnpKekRWb1RwNzgzYVNCUC9FL3JpWndLTHVISCswUjhwOUNmM1k2dlE1aE94RDNOcjk4VmZvaVJXWEFVd2hlSAplTVMwTklUdDhNakhwVjdCRDgwamJNYXFtd3JoU2VQZ2FqaXBDdFl1d0lCQk94cHdmNlQ1WGZYZDh2RTZrNUhGCm1sZENyOTdJYTF2VEZpb2htSGhvcjI5cXhWb2Yxbno3VlMwLyt4cERPN0ZXcVhKWTNBa3VFZm1rcVcySE1QUnAKR2ZCSVRSOE8KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo="
            }
        ]
    },
    "*tls.KubeAPIServerCompleteClientCABundle": {
        "BundleRaw": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURNRENDQWhpZ0F3SUJBZ0lJWXhvRDk1bWk0YlV3RFFZSktvWklodmNOQVFFTEJRQXdOakVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1TQXdIZ1lEVlFRREV4ZGhaRzFwYmkxcmRXSmxZMjl1Wm1sbkxYTnBaMjVsY2pBZQpGdzB5TXpBME1UZ3hNekE0TURsYUZ3MHpNekEwTVRVeE16QTRNRGxhTURZeEVqQVFCZ05WQkFzVENXOXdaVzV6CmFHbG1kREVnTUI0R0ExVUVBeE1YWVdSdGFXNHRhM1ZpWldOdmJtWnBaeTF6YVdkdVpYSXdnZ0VpTUEwR0NTcUcKU0liM0RRRUJBUVVBQTRJQkR3QXdnZ0VLQW9JQkFRRE9Kb0FzTUN6WUFUZXZta0pUQ28rK3UvL3Y3QkFFTU9LUwp5bmhFM2RaTTMvVlViUnlBUnppU01iTDVpSXdGSGJzZHN6V2VVa1l6UElSRzliWDJzSXh6d2Q5OURMRzM4YkU3ClpTYUYySE91WFIwMFdCajI3ZEJjcFlyTmVzNFA0ODBublZ0WmsxWlQrVlUyMHhEaFVQWGpyakFoM2E2Y3dkYmQKWkduKzJBZVlveEplU2wvKzJUZzBXcEdnUm5PdVI3azV4WmpGVDJVNnhnNEt3c0d2eWRyZHVoVVFDVkxBT1hVZQpVcW5XMnJxY3gzeTVSYWd3cVVsMVZKZWxFQzBVbXJVeFRlQWlnelhGOVVHRmpFOXkvY29maEh1QmtXTGs0cCs5CmRPVXJ3cXQ2VE9Nd2d4Mk1pQXN6WS9IQ0FGcjc1ek9Ua1BaQTFCeEpyTHpEYUVHT0ZsVVZBZ01CQUFHalFqQkEKTUE0R0ExVWREd0VCL3dRRUF3SUNwREFQQmdOVkhSTUJBZjhFQlRBREFRSC9NQjBHQTFVZERnUVdCQlIrUHBwdAoyTS9LNUNZNitucFZmalNKckYyMUlUQU5CZ2txaGtpRzl3MEJBUXNGQUFPQ0FRRUFVTWFoc1pLcFpJVUh4MWI1Cm9CQnI1b0RsckdKUFZvSEh6M1pWL0M0K0NTMjNlaVFiTDhQc2Z4OU5DQ0VHLzV2akxSekVtL2ZCL1ZnZFVlaUMKdUxuUWdtQmUwWDBQNDIzdndmTzJKZGV3d0ZLSTdRZVRTWmw0VHoxK3FKOGt1YmlUYjBUcnhTd2FyQ3ZHbk5kYwpkYTBsTzBsbUpyNDA0Y091MUtqM1hWZXNDM2RnQnJpTXpiWmxCaDlyNzdLaytJYmNXY0ZIY1lxWFB1MDB5eVM4CmVoRHpNelRoZVI4ekVtZUNQdkxNa2toSzBpYXpLVmNDNVJlY3BvbDI3Uk80SmhkMDFjUUpXKy9xRUdKb0M3VlgKTlFwbVNhaTNOQkpwU0o2NWlPaGVmOVZSblVyamRxVVZDeEplMEpOVWJjSGtTZHpyWlBGK0NuYlRqOW9QcGROLwpxdjc3ZkE9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCi0tLS0tQkVHSU4gQ0VSVElGSUNBVEUtLS0tLQpNSUlESGpDQ0FnYWdBd0lCQWdJSUlTRmFZZUNGK3pFd0RRWUpLb1pJaHZjTkFRRUxCUUF3TFRFU01CQUdBMVVFCkN4TUpiM0JsYm5Ob2FXWjBNUmN3RlFZRFZRUURFdzVyZFdKbGJHVjBMWE5wWjI1bGNqQWVGdzB5TXpBME1UZ3gKTXpBNE1UUmFGdzB5TXpBME1Ua3hNekE0TVRSYU1DMHhFakFRQmdOVkJBc1RDVzl3Wlc1emFHbG1kREVYTUJVRwpBMVVFQXhNT2EzVmlaV3hsZEMxemFXZHVaWEl3Z2dFaU1BMEdDU3FHU0liM0RRRUJBUVVBQTRJQkR3QXdnZ0VLCkFvSUJBUUNZbVRTRElYdXlTTWw4VThJZHpsTlRTU2hYL1h0Z1U4V08xWmF4NDRLRC9LbW51Um1qZ0hFQ1ltNW0Kc0JhRDRTVGdxemtQT0ZpbWdVZ1dJcEkyd3orYVZWcVFOOU1LeVRYMVZ5YmhjbzdWajdSSUg0bkYxWTByMkZBZgovZC85WGI2ZUZhUjl2SklRVGIzMC9uU056Zk81dU02MkJwMCsxb1Z5b2lMdGRpYzJaSjgzQzZxbHlSNWI2SHdSClJ5djgzU3hjTFlpYXpDb0tCTWF3UEE3NWFsVTRoTUFSb0Zza1ZMRDI3VllvMi9KcnlISDdkMTc3RzVuUUtja1AKSk42ZG1EVmVzdUlrQ3czaUZKc0srdDZXejVucU50bVUvbGhNYVlTcStJVzB5VkRUVnB2TGp0SmI2cGdyWWdycQpGQjNJcFdpLy92TkJ6bDIxeUJPYkgvaW5oQ29aQWdNQkFBR2pRakJBTUE0R0ExVWREd0VCL3dRRUF3SUNwREFQCkJnTlZIUk1CQWY4RUJUQURBUUgvTUIwR0ExVWREZ1FXQkJTNmphd3FqU29NcjRMS21JMzFYU1doU1ZZSnRqQU4KQmdrcWhraUc5dzBCQVFzRkFBT0NBUUVBaGFVdEJHY0YyYnIzb1hjTjlHRUNHMDFrZWd2d3NNb3RFL2ZKQ1R4VworLzdMc2dSSWN2SWJ2ak5NRlRWVjNSRlcvWmF6YnY0RG1ibXUzSXRtRVNEYllybXVNWDVTWWQyUzZ4MjRjQnVDCk5iTlVRNkJGemUxekNkS0ZsVUx3R3hOTWEvc3p3QWtwZkVHek85K1owVEFGOXlPcjNrUS9tOEdqc2U5RUZDbFgKSy9uQVU4WHpKN1NVa2VxNUtGdG94eTRxb0dYTVlqYTZLQ1hjbmFKanJSU3Fnb2NDQi9XcHp5TC83NlRXK2J2dAozQnQxM3lLNmNsdHEyZlVnTHVMYmwyeVl1OTF0ZmpMd2FINWZSNlBNcG92NGEwQnlLdysrVWtlQWx6dnJjTE1zCmN4aVVmUVVVdWpPb3RiQ0c5cUhrQTZpODRMQkdmNkZwS0l5VlFidnkycUljL3c9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCi0tLS0tQkVHSU4gQ0VSVElGSUNBVEUtLS0tLQpNSUlETkRDQ0FoeWdBd0lCQWdJSVZlY01VSmFRcVZNd0RRWUpLb1pJaHZjTkFRRUxCUUF3T0RFU01CQUdBMVVFCkN4TUpiM0JsYm5Ob2FXWjBNU0l3SUFZRFZRUURFeGxyZFdKbExXTnZiblJ5YjJ3dGNHeGhibVV0YzJsbmJtVnkKTUI0WERUSXpNRFF4T0RFek1EZ3hORm9YRFRJME1EUXhOekV6TURneE5Gb3dPREVTTUJBR0ExVUVDeE1KYjNCbApibk5vYVdaME1TSXdJQVlEVlFRREV4bHJkV0psTFdOdmJuUnliMnd0Y0d4aGJtVXRjMmxuYm1WeU1JSUJJakFOCkJna3Foa2lHOXcwQkFRRUZBQU9DQVE4QU1JSUJDZ0tDQVFFQTJkNWl2N3R5Z2YzbEFWdkRKaVRTTkhkTEp0SG4KZWJNVkpEdjQ3U2Vid2hMckZveGkzSFZFYVhzb1BhZzA4bTA5UnJHT2NSNERkZ3hwUW9iakxnTng4VkF1MkpRUApLVEpyQXpRTzdoT2dFc3JIa0JjQ1o1bDVuTzBVUWcyTFg4bDM3akNyTEFhTHYrRkFMdi9mc2hPRjlGSzBMc3gzClhNeHgwMTJza1YwZnMwaThydnVBNGprbTBLMXBGak83TGx2OHNFUC8wS3FsckFBNjN4Wmx0dEZ6N0JGelhneVkKek5vZ2tGeVdGVThma29NNjJSM0RvMlB4VHBvVFBqeW5seWVyeVMvSk5pQlBXWVhva0RZUHVna3JjMmhxd2VtNAp5aUs0QjFybzNEcHJQWjFsbjFoR2xrQUlYaUJIbmJiZ1V3QW9TQyszalpRc0FKSG9kZE5wa3E3MWNRSURBUUFCCm8wSXdRREFPQmdOVkhROEJBZjhFQkFNQ0FxUXdEd1lEVlIwVEFRSC9CQVV3QXdFQi96QWRCZ05WSFE0RUZnUVUKWWRDWkZBb2tySlA5ZFg3SnZoTmtpeEFqNmIwd0RRWUpLb1pJaHZjTkFRRUxCUUFEZ2dFQkFIMmdOZ1JDb3Ywcwp2Nng5QXk0MHcxUnIyY0NaelF2cE9oVzUyRStNVnpVTEl5WlpFYnQ5cHFaN1VLamZsajE0bHJSWHdCYnpTSDFsCjNuSUMzTWdVT2RUWjRBNUZOcithU3ViVmkxdmczOFl3a2xVWjJGalp5YXVoOG5Tb1RLc1FqL3U3d1lWcmd4d3QKYll3NlpQQkh2eWtQVEhJU1JibXB6RDczYmF2ZVYvWHE2eW9Ta0JVNzk2RUF4ak9wOXVBUklqbXZINDBSeEsycwpTRW5NZUZNSWVpZzB1OFU1bzdCNkdDMWN5M2xwV2p2Yk1xZ1U0MzF3K3N3UnZyV05mbCtZZGE0c3JVNkxDZnJHCjY1bHFRTXFJMHB2Yks2QjlFZHdTNGwvN2l0WVd3OFM1eXlQNXNzTGdaK3JzNTFvS2xRUnRIS0IvV3lWTDQxQnkKVEsrWFZPRGZFLzQ9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0KLS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURRakNDQWlxZ0F3SUJBZ0lJT1lBbEJMd25EWUV3RFFZSktvWklodmNOQVFFTEJRQXdQekVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1Ta3dKd1lEVlFRREV5QnJkV0psTFdGd2FYTmxjblpsY2kxMGJ5MXJkV0psYkdWMApMWE5wWjI1bGNqQWVGdzB5TXpBME1UZ3hNekE0TVRSYUZ3MHlOREEwTVRjeE16QTRNVFJhTUQ4eEVqQVFCZ05WCkJBc1RDVzl3Wlc1emFHbG1kREVwTUNjR0ExVUVBeE1nYTNWaVpTMWhjR2x6WlhKMlpYSXRkRzh0YTNWaVpXeGwKZEMxemFXZHVaWEl3Z2dFaU1BMEdDU3FHU0liM0RRRUJBUVVBQTRJQkR3QXdnZ0VLQW9JQkFRRG1tcW1XVS9uUAp5azk5RkRnRjNmYmRTZTNwd1dCYW0zejRrdVhwbmJmN2FGVFZPWE1JYU4zdlUxQWhMMGt4U0FtR0dzblppekpWClFKNTdNMG42ckJFajdRNDMyUzNENUU4ajVPQnRweThRLytXMXFXWmJsRFNxeVRjQm4vWTZIcjUzbFZIdjNEWTEKczJqRXBxWnJ2NnBaY3dtQldqTCthTlQybTVxSS9pSkFVN0tlaU0zQlM4Y1lmWjlUYVc1OE4weUxqWlRNQnJzeApxRXVWOC9teXJMRmlKa05RRGtvcERUSFExWTVFSWZVVG9yR3BNQXR6aHVIczRkd3J2ZWNmMlhxUFQ3NHRaU1p0ClZsY0t1R1J5bmJONUIyV0ZHL0NpaGZ6a1V2STFONGsvak1YNU9ZN2x0YThnbHNGN00wSWdEVkVSNCtvZk9GS1YKZFBIWFhYMjJ0SldMQWdNQkFBR2pRakJBTUE0R0ExVWREd0VCL3dRRUF3SUNwREFQQmdOVkhSTUJBZjhFQlRBRApBUUgvTUIwR0ExVWREZ1FXQkJURmEwckEwWHcvV3QzSC9rNTVRKy9GeW9YbEN6QU5CZ2txaGtpRzl3MEJBUXNGCkFBT0NBUUVBM1pRM0RLR2NIOWJ6N3VpTytXYWFOQkswUk1nTmJBb0MxVEJaUjhUNklVMUZ3Y25WM0NtOGltZ0YKMVRPdzZ2UytBclFiVHcyOVgvZTgzalBrL05xSDlGVURqVkFEcSthWjVLRVMzY1Q1TlpsZzEzV25mSktNenBGbApCZWRnMW4vZ1RVSitmVnlEZE5SaXVncTFGV3RzWGw2M2Y0OVdPQ2REQk5IcVVtK3VMNFpRSEh3a09kaWg3YTdVCnQ3T2lDNU9xSDh1YklDaUUzV3MrbTgrdndRM0MzZVdLVHJXOEg3YTV1NVJJMmJpT2dYZndNbFhqVGFRNWRsTHgKaGlYMXI0dW5mTHp5cUxxTEpvVTRvRmhMUVduZS83NDJOeTUrbENNSzVBQzhSZHI4aXpuTWhKbC9TekdYcDhhaAo3U2F1bTRMZ1JyenJ0NSthNTd2V3NMd0h1bW9vdGc9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCi0tLS0tQkVHSU4gQ0VSVElGSUNBVEUtLS0tLQpNSUlEU0RDQ0FqQ2dBd0lCQWdJSUhKL3RVQ2YxS3o4d0RRWUpLb1pJaHZjTkFRRUxCUUF3UWpFU01CQUdBMVVFCkN4TUpiM0JsYm5Ob2FXWjBNU3d3S2dZRFZRUURFeU5yZFdKbGJHVjBMV0p2YjNSemRISmhjQzFyZFdKbFkyOXUKWm1sbkxYTnBaMjVsY2pBZUZ3MHlNekEwTVRneE16QTRNVEJhRncwek16QTBNVFV4TXpBNE1UQmFNRUl4RWpBUQpCZ05WQkFzVENXOXdaVzV6YUdsbWRERXNNQ29HQTFVRUF4TWphM1ZpWld4bGRDMWliMjkwYzNSeVlYQXRhM1ZpClpXTnZibVpwWnkxemFXZHVaWEl3Z2dFaU1BMEdDU3FHU0liM0RRRUJBUVVBQTRJQkR3QXdnZ0VLQW9JQkFRQ20KWTYrKzhmbjA5dGZpd3BRY2RkTElQblVjOWMyS2I2V1hvcHNLNnRLQVplMTNjS1hXN2hwQ1Y1UW5FcE1UVDNzRApXb3N1QzdyRTJVTUF1c2pCV25EeDl3RHFTZVlCUi9jVzFGSlI0bnlvZ1B3MkJZbEdvTERHeXF2UXpBRVFEUXIrCjJENEpjYUFBL1JsTHZwc1F0RGR5cEdEY3Jya2xKdXJmb1BrTXh4UEVlODdEc0tpUU52dmxPWlVubGppakhObHkKU0RuQmJtenVQUktQb0VZU1RwWGkyeTdKWmw5WTZwQW9RdEJHWktQSHVlcS9xRVMvUVp2eW5jZ3krTEt6QmNXbgpOcWpJT0FTZERxdXptY2NJa1BhaXRTZHdnR0JWQy9McVZadWtsNzRSZS8rZjFQYW9WNC9aN3dpZDFqaDRBMGd4CkJoRWduQkRDbFh0MVdxSVhXS1AzQWdNQkFBR2pRakJBTUE0R0ExVWREd0VCL3dRRUF3SUNwREFQQmdOVkhSTUIKQWY4RUJUQURBUUgvTUIwR0ExVWREZ1FXQkJSRll1dlUrbTNzM2FqV2U2cnhiK3oyUjVlSGxUQU5CZ2txaGtpRwo5dzBCQVFzRkFBT0NBUUVBSkYwcm9mWmxjelFkV2ppSGEwYlZPY0F3ZHNUckI4QWo5akdwRndldFRheE5aanpMCjN0c3FLV3dpNVRGRHJzaXRrd2tVb2cvY1pMVmgwRWEzZm15Rm9qWTNKbFZYVGtVQzlsNnpFMUhvOVNBNW4yNUcKdmJuTjNGbHN1KzBxQ3FLdVcyc0t0M0x6U3VNNHRkSjRGTlBvZ285c2dMU2V5S2NUanFXVlV0ZnUrNUViWDdZUwpxbXdPaE9OVUM0OEZNRnpxUXc4MnNHcUxHV0RUVlJaK0g4ZFJzdjBJYjd4N1lPSXpjaUFxMndCRmZ3ZW1ENmRmClkwbkl5S1FnS1FOTGhCdzZoaXYzRHo2RGdsdU02RUtKVDQxRWF3MjMrZDlya1h4ZFYvVExNK3pxUDlHbHNwT3EKNVhMcmlkQVYzVGw1TGZyRS9ROU1zT3NWdDdhbXRLMGZ3WlcwMUE9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==",
        "FileList": [
            {
                "Filename": "tls/kube-apiserver-complete-client-ca-bundle.crt",
                "Data": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURNRENDQWhpZ0F3SUJBZ0lJWXhvRDk1bWk0YlV3RFFZSktvWklodmNOQVFFTEJRQXdOakVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1TQXdIZ1lEVlFRREV4ZGhaRzFwYmkxcmRXSmxZMjl1Wm1sbkxYTnBaMjVsY2pBZQpGdzB5TXpBME1UZ3hNekE0TURsYUZ3MHpNekEwTVRVeE16QTRNRGxhTURZeEVqQVFCZ05WQkFzVENXOXdaVzV6CmFHbG1kREVnTUI0R0ExVUVBeE1YWVdSdGFXNHRhM1ZpWldOdmJtWnBaeTF6YVdkdVpYSXdnZ0VpTUEwR0NTcUcKU0liM0RRRUJBUVVBQTRJQkR3QXdnZ0VLQW9JQkFRRE9Kb0FzTUN6WUFUZXZta0pUQ28rK3UvL3Y3QkFFTU9LUwp5bmhFM2RaTTMvVlViUnlBUnppU01iTDVpSXdGSGJzZHN6V2VVa1l6UElSRzliWDJzSXh6d2Q5OURMRzM4YkU3ClpTYUYySE91WFIwMFdCajI3ZEJjcFlyTmVzNFA0ODBublZ0WmsxWlQrVlUyMHhEaFVQWGpyakFoM2E2Y3dkYmQKWkduKzJBZVlveEplU2wvKzJUZzBXcEdnUm5PdVI3azV4WmpGVDJVNnhnNEt3c0d2eWRyZHVoVVFDVkxBT1hVZQpVcW5XMnJxY3gzeTVSYWd3cVVsMVZKZWxFQzBVbXJVeFRlQWlnelhGOVVHRmpFOXkvY29maEh1QmtXTGs0cCs5CmRPVXJ3cXQ2VE9Nd2d4Mk1pQXN6WS9IQ0FGcjc1ek9Ua1BaQTFCeEpyTHpEYUVHT0ZsVVZBZ01CQUFHalFqQkEKTUE0R0ExVWREd0VCL3dRRUF3SUNwREFQQmdOVkhSTUJBZjhFQlRBREFRSC9NQjBHQTFVZERnUVdCQlIrUHBwdAoyTS9LNUNZNitucFZmalNKckYyMUlUQU5CZ2txaGtpRzl3MEJBUXNGQUFPQ0FRRUFVTWFoc1pLcFpJVUh4MWI1Cm9CQnI1b0RsckdKUFZvSEh6M1pWL0M0K0NTMjNlaVFiTDhQc2Z4OU5DQ0VHLzV2akxSekVtL2ZCL1ZnZFVlaUMKdUxuUWdtQmUwWDBQNDIzdndmTzJKZGV3d0ZLSTdRZVRTWmw0VHoxK3FKOGt1YmlUYjBUcnhTd2FyQ3ZHbk5kYwpkYTBsTzBsbUpyNDA0Y091MUtqM1hWZXNDM2RnQnJpTXpiWmxCaDlyNzdLaytJYmNXY0ZIY1lxWFB1MDB5eVM4CmVoRHpNelRoZVI4ekVtZUNQdkxNa2toSzBpYXpLVmNDNVJlY3BvbDI3Uk80SmhkMDFjUUpXKy9xRUdKb0M3VlgKTlFwbVNhaTNOQkpwU0o2NWlPaGVmOVZSblVyamRxVVZDeEplMEpOVWJjSGtTZHpyWlBGK0NuYlRqOW9QcGROLwpxdjc3ZkE9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCi0tLS0tQkVHSU4gQ0VSVElGSUNBVEUtLS0tLQpNSUlESGpDQ0FnYWdBd0lCQWdJSUlTRmFZZUNGK3pFd0RRWUpLb1pJaHZjTkFRRUxCUUF3TFRFU01CQUdBMVVFCkN4TUpiM0JsYm5Ob2FXWjBNUmN3RlFZRFZRUURFdzVyZFdKbGJHVjBMWE5wWjI1bGNqQWVGdzB5TXpBME1UZ3gKTXpBNE1UUmFGdzB5TXpBME1Ua3hNekE0TVRSYU1DMHhFakFRQmdOVkJBc1RDVzl3Wlc1emFHbG1kREVYTUJVRwpBMVVFQXhNT2EzVmlaV3hsZEMxemFXZHVaWEl3Z2dFaU1BMEdDU3FHU0liM0RRRUJBUVVBQTRJQkR3QXdnZ0VLCkFvSUJBUUNZbVRTRElYdXlTTWw4VThJZHpsTlRTU2hYL1h0Z1U4V08xWmF4NDRLRC9LbW51Um1qZ0hFQ1ltNW0Kc0JhRDRTVGdxemtQT0ZpbWdVZ1dJcEkyd3orYVZWcVFOOU1LeVRYMVZ5YmhjbzdWajdSSUg0bkYxWTByMkZBZgovZC85WGI2ZUZhUjl2SklRVGIzMC9uU056Zk81dU02MkJwMCsxb1Z5b2lMdGRpYzJaSjgzQzZxbHlSNWI2SHdSClJ5djgzU3hjTFlpYXpDb0tCTWF3UEE3NWFsVTRoTUFSb0Zza1ZMRDI3VllvMi9KcnlISDdkMTc3RzVuUUtja1AKSk42ZG1EVmVzdUlrQ3czaUZKc0srdDZXejVucU50bVUvbGhNYVlTcStJVzB5VkRUVnB2TGp0SmI2cGdyWWdycQpGQjNJcFdpLy92TkJ6bDIxeUJPYkgvaW5oQ29aQWdNQkFBR2pRakJBTUE0R0ExVWREd0VCL3dRRUF3SUNwREFQCkJnTlZIUk1CQWY4RUJUQURBUUgvTUIwR0ExVWREZ1FXQkJTNmphd3FqU29NcjRMS21JMzFYU1doU1ZZSnRqQU4KQmdrcWhraUc5dzBCQVFzRkFBT0NBUUVBaGFVdEJHY0YyYnIzb1hjTjlHRUNHMDFrZWd2d3NNb3RFL2ZKQ1R4VworLzdMc2dSSWN2SWJ2ak5NRlRWVjNSRlcvWmF6YnY0RG1ibXUzSXRtRVNEYllybXVNWDVTWWQyUzZ4MjRjQnVDCk5iTlVRNkJGemUxekNkS0ZsVUx3R3hOTWEvc3p3QWtwZkVHek85K1owVEFGOXlPcjNrUS9tOEdqc2U5RUZDbFgKSy9uQVU4WHpKN1NVa2VxNUtGdG94eTRxb0dYTVlqYTZLQ1hjbmFKanJSU3Fnb2NDQi9XcHp5TC83NlRXK2J2dAozQnQxM3lLNmNsdHEyZlVnTHVMYmwyeVl1OTF0ZmpMd2FINWZSNlBNcG92NGEwQnlLdysrVWtlQWx6dnJjTE1zCmN4aVVmUVVVdWpPb3RiQ0c5cUhrQTZpODRMQkdmNkZwS0l5VlFidnkycUljL3c9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCi0tLS0tQkVHSU4gQ0VSVElGSUNBVEUtLS0tLQpNSUlETkRDQ0FoeWdBd0lCQWdJSVZlY01VSmFRcVZNd0RRWUpLb1pJaHZjTkFRRUxCUUF3T0RFU01CQUdBMVVFCkN4TUpiM0JsYm5Ob2FXWjBNU0l3SUFZRFZRUURFeGxyZFdKbExXTnZiblJ5YjJ3dGNHeGhibVV0YzJsbmJtVnkKTUI0WERUSXpNRFF4T0RFek1EZ3hORm9YRFRJME1EUXhOekV6TURneE5Gb3dPREVTTUJBR0ExVUVDeE1KYjNCbApibk5vYVdaME1TSXdJQVlEVlFRREV4bHJkV0psTFdOdmJuUnliMnd0Y0d4aGJtVXRjMmxuYm1WeU1JSUJJakFOCkJna3Foa2lHOXcwQkFRRUZBQU9DQVE4QU1JSUJDZ0tDQVFFQTJkNWl2N3R5Z2YzbEFWdkRKaVRTTkhkTEp0SG4KZWJNVkpEdjQ3U2Vid2hMckZveGkzSFZFYVhzb1BhZzA4bTA5UnJHT2NSNERkZ3hwUW9iakxnTng4VkF1MkpRUApLVEpyQXpRTzdoT2dFc3JIa0JjQ1o1bDVuTzBVUWcyTFg4bDM3akNyTEFhTHYrRkFMdi9mc2hPRjlGSzBMc3gzClhNeHgwMTJza1YwZnMwaThydnVBNGprbTBLMXBGak83TGx2OHNFUC8wS3FsckFBNjN4Wmx0dEZ6N0JGelhneVkKek5vZ2tGeVdGVThma29NNjJSM0RvMlB4VHBvVFBqeW5seWVyeVMvSk5pQlBXWVhva0RZUHVna3JjMmhxd2VtNAp5aUs0QjFybzNEcHJQWjFsbjFoR2xrQUlYaUJIbmJiZ1V3QW9TQyszalpRc0FKSG9kZE5wa3E3MWNRSURBUUFCCm8wSXdRREFPQmdOVkhROEJBZjhFQkFNQ0FxUXdEd1lEVlIwVEFRSC9CQVV3QXdFQi96QWRCZ05WSFE0RUZnUVUKWWRDWkZBb2tySlA5ZFg3SnZoTmtpeEFqNmIwd0RRWUpLb1pJaHZjTkFRRUxCUUFEZ2dFQkFIMmdOZ1JDb3Ywcwp2Nng5QXk0MHcxUnIyY0NaelF2cE9oVzUyRStNVnpVTEl5WlpFYnQ5cHFaN1VLamZsajE0bHJSWHdCYnpTSDFsCjNuSUMzTWdVT2RUWjRBNUZOcithU3ViVmkxdmczOFl3a2xVWjJGalp5YXVoOG5Tb1RLc1FqL3U3d1lWcmd4d3QKYll3NlpQQkh2eWtQVEhJU1JibXB6RDczYmF2ZVYvWHE2eW9Ta0JVNzk2RUF4ak9wOXVBUklqbXZINDBSeEsycwpTRW5NZUZNSWVpZzB1OFU1bzdCNkdDMWN5M2xwV2p2Yk1xZ1U0MzF3K3N3UnZyV05mbCtZZGE0c3JVNkxDZnJHCjY1bHFRTXFJMHB2Yks2QjlFZHdTNGwvN2l0WVd3OFM1eXlQNXNzTGdaK3JzNTFvS2xRUnRIS0IvV3lWTDQxQnkKVEsrWFZPRGZFLzQ9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0KLS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURRakNDQWlxZ0F3SUJBZ0lJT1lBbEJMd25EWUV3RFFZSktvWklodmNOQVFFTEJRQXdQekVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1Ta3dKd1lEVlFRREV5QnJkV0psTFdGd2FYTmxjblpsY2kxMGJ5MXJkV0psYkdWMApMWE5wWjI1bGNqQWVGdzB5TXpBME1UZ3hNekE0TVRSYUZ3MHlOREEwTVRjeE16QTRNVFJhTUQ4eEVqQVFCZ05WCkJBc1RDVzl3Wlc1emFHbG1kREVwTUNjR0ExVUVBeE1nYTNWaVpTMWhjR2x6WlhKMlpYSXRkRzh0YTNWaVpXeGwKZEMxemFXZHVaWEl3Z2dFaU1BMEdDU3FHU0liM0RRRUJBUVVBQTRJQkR3QXdnZ0VLQW9JQkFRRG1tcW1XVS9uUAp5azk5RkRnRjNmYmRTZTNwd1dCYW0zejRrdVhwbmJmN2FGVFZPWE1JYU4zdlUxQWhMMGt4U0FtR0dzblppekpWClFKNTdNMG42ckJFajdRNDMyUzNENUU4ajVPQnRweThRLytXMXFXWmJsRFNxeVRjQm4vWTZIcjUzbFZIdjNEWTEKczJqRXBxWnJ2NnBaY3dtQldqTCthTlQybTVxSS9pSkFVN0tlaU0zQlM4Y1lmWjlUYVc1OE4weUxqWlRNQnJzeApxRXVWOC9teXJMRmlKa05RRGtvcERUSFExWTVFSWZVVG9yR3BNQXR6aHVIczRkd3J2ZWNmMlhxUFQ3NHRaU1p0ClZsY0t1R1J5bmJONUIyV0ZHL0NpaGZ6a1V2STFONGsvak1YNU9ZN2x0YThnbHNGN00wSWdEVkVSNCtvZk9GS1YKZFBIWFhYMjJ0SldMQWdNQkFBR2pRakJBTUE0R0ExVWREd0VCL3dRRUF3SUNwREFQQmdOVkhSTUJBZjhFQlRBRApBUUgvTUIwR0ExVWREZ1FXQkJURmEwckEwWHcvV3QzSC9rNTVRKy9GeW9YbEN6QU5CZ2txaGtpRzl3MEJBUXNGCkFBT0NBUUVBM1pRM0RLR2NIOWJ6N3VpTytXYWFOQkswUk1nTmJBb0MxVEJaUjhUNklVMUZ3Y25WM0NtOGltZ0YKMVRPdzZ2UytBclFiVHcyOVgvZTgzalBrL05xSDlGVURqVkFEcSthWjVLRVMzY1Q1TlpsZzEzV25mSktNenBGbApCZWRnMW4vZ1RVSitmVnlEZE5SaXVncTFGV3RzWGw2M2Y0OVdPQ2REQk5IcVVtK3VMNFpRSEh3a09kaWg3YTdVCnQ3T2lDNU9xSDh1YklDaUUzV3MrbTgrdndRM0MzZVdLVHJXOEg3YTV1NVJJMmJpT2dYZndNbFhqVGFRNWRsTHgKaGlYMXI0dW5mTHp5cUxxTEpvVTRvRmhMUVduZS83NDJOeTUrbENNSzVBQzhSZHI4aXpuTWhKbC9TekdYcDhhaAo3U2F1bTRMZ1JyenJ0NSthNTd2V3NMd0h1bW9vdGc9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCi0tLS0tQkVHSU4gQ0VSVElGSUNBVEUtLS0tLQpNSUlEU0RDQ0FqQ2dBd0lCQWdJSUhKL3RVQ2YxS3o4d0RRWUpLb1pJaHZjTkFRRUxCUUF3UWpFU01CQUdBMVVFCkN4TUpiM0JsYm5Ob2FXWjBNU3d3S2dZRFZRUURFeU5yZFdKbGJHVjBMV0p2YjNSemRISmhjQzFyZFdKbFkyOXUKWm1sbkxYTnBaMjVsY2pBZUZ3MHlNekEwTVRneE16QTRNVEJhRncwek16QTBNVFV4TXpBNE1UQmFNRUl4RWpBUQpCZ05WQkFzVENXOXdaVzV6YUdsbWRERXNNQ29HQTFVRUF4TWphM1ZpWld4bGRDMWliMjkwYzNSeVlYQXRhM1ZpClpXTnZibVpwWnkxemFXZHVaWEl3Z2dFaU1BMEdDU3FHU0liM0RRRUJBUVVBQTRJQkR3QXdnZ0VLQW9JQkFRQ20KWTYrKzhmbjA5dGZpd3BRY2RkTElQblVjOWMyS2I2V1hvcHNLNnRLQVplMTNjS1hXN2hwQ1Y1UW5FcE1UVDNzRApXb3N1QzdyRTJVTUF1c2pCV25EeDl3RHFTZVlCUi9jVzFGSlI0bnlvZ1B3MkJZbEdvTERHeXF2UXpBRVFEUXIrCjJENEpjYUFBL1JsTHZwc1F0RGR5cEdEY3Jya2xKdXJmb1BrTXh4UEVlODdEc0tpUU52dmxPWlVubGppakhObHkKU0RuQmJtenVQUktQb0VZU1RwWGkyeTdKWmw5WTZwQW9RdEJHWktQSHVlcS9xRVMvUVp2eW5jZ3krTEt6QmNXbgpOcWpJT0FTZERxdXptY2NJa1BhaXRTZHdnR0JWQy9McVZadWtsNzRSZS8rZjFQYW9WNC9aN3dpZDFqaDRBMGd4CkJoRWduQkRDbFh0MVdxSVhXS1AzQWdNQkFBR2pRakJBTUE0R0ExVWREd0VCL3dRRUF3SUNwREFQQmdOVkhSTUIKQWY4RUJUQURBUUgvTUIwR0ExVWREZ1FXQkJSRll1dlUrbTNzM2FqV2U2cnhiK3oyUjVlSGxUQU5CZ2txaGtpRwo5dzBCQVFzRkFBT0NBUUVBSkYwcm9mWmxjelFkV2ppSGEwYlZPY0F3ZHNUckI4QWo5akdwRndldFRheE5aanpMCjN0c3FLV3dpNVRGRHJzaXRrd2tVb2cvY1pMVmgwRWEzZm15Rm9qWTNKbFZYVGtVQzlsNnpFMUhvOVNBNW4yNUcKdmJuTjNGbHN1KzBxQ3FLdVcyc0t0M0x6U3VNNHRkSjRGTlBvZ285c2dMU2V5S2NUanFXVlV0ZnUrNUViWDdZUwpxbXdPaE9OVUM0OEZNRnpxUXc4MnNHcUxHV0RUVlJaK0g4ZFJzdjBJYjd4N1lPSXpjaUFxMndCRmZ3ZW1ENmRmClkwbkl5S1FnS1FOTGhCdzZoaXYzRHo2RGdsdU02RUtKVDQxRWF3MjMrZDlya1h4ZFYvVExNK3pxUDlHbHNwT3EKNVhMcmlkQVYzVGw1TGZyRS9ROU1zT3NWdDdhbXRLMGZ3WlcwMUE9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg=="
            }
        ]
    },
    "*tls.KubeAPIServerExternalLBServerCertKey": {
        "CertRaw": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURuakNDQW9hZ0F3SUJBZ0lJZGFnQUZSaVB0SDh3RFFZSktvWklodmNOQVFFTEJRQXdOekVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1TRXdId1lEVlFRREV4aHJkV0psTFdGd2FYTmxjblpsY2kxc1lpMXphV2R1WlhJdwpIaGNOTWpNd05ERTRNVE13T0RFd1doY05Nak13TkRFNU1UTXdPREV6V2pBMk1SUXdFZ1lEVlFRS0V3dHJkV0psCkxXMWhjM1JsY2pFZU1Cd0dBMVVFQXhNVmMzbHpkR1Z0T210MVltVXRZWEJwYzJWeWRtVnlNSUlCSWpBTkJna3EKaGtpRzl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQ0FRRUF6dldZa01xYldlUXRtc1pFTUdYMkQyaW5qR0YxZ0NJZQpwUEI2VjBSUVZLUERubm43cHpnWXFUeE9EbUo0MnBKZ0dmNm53Vk1jQm9neUxDWmZVNmh3T09HOGZ2R0RTWU0xClFKT2NWTGZqU3BsWTVlQVl3V005aGVxUEdOdTZqbytHUXhDM3B2TGtxMTZpWmpzM250dVMyRWp3cVk4cE1zTi8KSHZvUEtvMm96TzU0dGZ2bXN1V3RBNVdLbFNBdEx6VG9oSlBFY0ZadnZVRXVUOU9QeU5DUkw3NUx2a00zdG41eQpqYzBPY2FEYXFRQ2I3RkdtVmJFVzdRZFIydWwyLzBVRit1a3YxQ1hOQVBGL2p4MzdxbkJnYXVHVkt0bHE2Sm9hCkYweEI3dFRaQU01ZS9FbjhYM1ZXb05kNFdMMUpLNmxvb2NDdTRxb205QURacGhIVDhUai9Bd0lEQVFBQm80R3UKTUlHck1BNEdBMVVkRHdFQi93UUVBd0lGb0RBVEJnTlZIU1VFRERBS0JnZ3JCZ0VGQlFjREFUQU1CZ05WSFJNQgpBZjhFQWpBQU1CMEdBMVVkRGdRV0JCUlpyR3JQNlRMdHRiaWIyVzRwdWRqbjM3ai9kekFmQmdOVkhTTUVHREFXCmdCVG01eGpxaGJUOTdhejVqNHdKamdOdTJPYnROekEyQmdOVkhSRUVMekF0Z2l0aGNHa3VjbVZrY0c5a0xXRjMKY3kxemJtOHVaR1YyWTJ4MWMzUmxjaTV2Y0dWdWMyaHBablF1WTI5dE1BMEdDU3FHU0liM0RRRUJDd1VBQTRJQgpBUUIycmpDbjlibTFCeHRJU0dmd09wTTk0ZUZERXcxNnBRdUxNZzBFeGx4YUZwNEFGY1VobU0vbG85QUZCNmozCjVINWZHUkFlVm1JbkxJZHEwZWxhYThXekQ2ZnYrLzFaM2xBaHFxZmtxRnpzcytjTzJ1M1RzSXBZV3Y0b0UzeXoKVkczbGhCMldwVGh5Vnc0cmkzYnNoTnJDbmF4VTdvQzNRSCtQUUpERitCZEk5UVBHVHBzMlRDOFlCRGZNbVVYVwpLRzRUdmVldlp2SWhjVXVQZmxoazY2alNpK0pML2xSV2RhREQvaU16c3l3MGw4M3FkZUtjcEg1MFdwOFZJWW5yCmJIV3EzbEVRREFvLzBHcE9uTGtFQTVEOU1YNFVxQnpZV3oyUzQ0NVoxc2ZtdzF3eVE0NVJwN3dBbmd0ckc4eDEKRi9FTGQ2QzRoSXJiNlFBZmVjWHd6b1N3Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0KCi0tLS0tQkVHSU4gQ0VSVElGSUNBVEUtLS0tLQpNSUlETWpDQ0FocWdBd0lCQWdJSVZkUWFwZnowN1dZd0RRWUpLb1pJaHZjTkFRRUxCUUF3TnpFU01CQUdBMVVFCkN4TUpiM0JsYm5Ob2FXWjBNU0V3SHdZRFZRUURFeGhyZFdKbExXRndhWE5sY25abGNpMXNZaTF6YVdkdVpYSXcKSGhjTk1qTXdOREU0TVRNd09ERXdXaGNOTXpNd05ERTFNVE13T0RFd1dqQTNNUkl3RUFZRFZRUUxFd2x2Y0dWdQpjMmhwWm5ReElUQWZCZ05WQkFNVEdHdDFZbVV0WVhCcGMyVnlkbVZ5TFd4aUxYTnBaMjVsY2pDQ0FTSXdEUVlKCktvWklodmNOQVFFQkJRQURnZ0VQQURDQ0FRb0NnZ0VCQU9qZTNnc2U4M2MwMndvVVZPYVFxcDRWVVMyMHBPMXgKSWxISmRydGJNTmx2Q1o1a2ZCM1pxVlJMRUpDUjN2L2dCQzcyUnYxMEJVUUxPRjdwNGU2TExDSTNteE9nUllNbApFc20vbXJxbHlwYi9XNjl3NzV1YVhXRFZNNGNnSTdxLzhrS3ppT3RrTGJHWm12WVNFR1hQK29uelU5UFBIUFpBCkVnUVZWRUREdFFNaWt4eWlxZGdCN3BNbFV2alhmZ1o0dkI3NGZzeVd1RFZpQy9GYnVFSmxQRk0vdDFHenhKQm0KRDh5NTl1MXRobW8xY1ZOajRBcWRaWVlLaEhxdkZQNUhQYisvdEFvU0dNTTJzeXcwc3VrczAvRWpVSmx5M3ovdgpEcElCemxhRjFuNnVVS3BCQ3lyeittbnArSWxvWjFMd25hdzkvTlhwMW5kdlZIVy9Objd4SDNrQ0F3RUFBYU5DCk1FQXdEZ1lEVlIwUEFRSC9CQVFEQWdLa01BOEdBMVVkRXdFQi93UUZNQU1CQWY4d0hRWURWUjBPQkJZRUZPYm4KR09xRnRQM3RyUG1QakFtT0EyN1k1dTAzTUEwR0NTcUdTSWIzRFFFQkN3VUFBNElCQVFDTFJtbmZKd21LMituLwp2UUpyVUtIVk01SW1YOFJUWk5PbllsNUVYWFV4RXJJcnJCSEZJcnpVTTA4U2VLV3BCaHREalgzZzJaVVhnUjRCCkQzWXdKOXhkS1hHeDhBWmtUQXE4U3gyR09pb0Q3amhIU3NUV1pRODZFVVhhSUprbW9najFRcXh5RVFJRmdCZFUKbnpKekRWb1RwNzgzYVNCUC9FL3JpWndLTHVISCswUjhwOUNmM1k2dlE1aE94RDNOcjk4VmZvaVJXWEFVd2hlSAplTVMwTklUdDhNakhwVjdCRDgwamJNYXFtd3JoU2VQZ2FqaXBDdFl1d0lCQk94cHdmNlQ1WGZYZDh2RTZrNUhGCm1sZENyOTdJYTF2VEZpb2htSGhvcjI5cXhWb2Yxbno3VlMwLyt4cERPN0ZXcVhKWTNBa3VFZm1rcVcySE1QUnAKR2ZCSVRSOE8KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=",
        "KeyRaw": "LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb2dJQkFBS0NBUUVBenZXWWtNcWJXZVF0bXNaRU1HWDJEMmluakdGMWdDSWVwUEI2VjBSUVZLUERubm43CnB6Z1lxVHhPRG1KNDJwSmdHZjZud1ZNY0JvZ3lMQ1pmVTZod09PRzhmdkdEU1lNMVFKT2NWTGZqU3BsWTVlQVkKd1dNOWhlcVBHTnU2am8rR1F4QzNwdkxrcTE2aVpqczNudHVTMkVqd3FZOHBNc04vSHZvUEtvMm96TzU0dGZ2bQpzdVd0QTVXS2xTQXRMelRvaEpQRWNGWnZ2VUV1VDlPUHlOQ1JMNzVMdmtNM3RuNXlqYzBPY2FEYXFRQ2I3RkdtClZiRVc3UWRSMnVsMi8wVUYrdWt2MUNYTkFQRi9qeDM3cW5CZ2F1R1ZLdGxxNkpvYUYweEI3dFRaQU01ZS9FbjgKWDNWV29OZDRXTDFKSzZsb29jQ3U0cW9tOUFEWnBoSFQ4VGovQXdJREFRQUJBb0lCQUhqNFB6UXE2VUZTeVlGVgpjSmdsa1AwU3ZCU25Cc3BkcHpIYnluYmwzRnFNMnBQd1V6TTc2OVpJQkl3TjdQdzlZT1R3MzlkMW44VUZxT1g3CmkrN1hYcmt3NFVBR0pTbzhBazE3dW40ZWVrR3BmcmZuRkRFOXM4RnFDRGlNZnZCRFhrUW5LbUh3U2M4TllybUUKMVk4S1l6dis3b1Q5eENRQzkzUUEwQXFjZ05VL1pjTmxxTEZKbDM4WEYzSnBNZEcxS2o2Mzl1eE84RmNGbmZsKwprT0NZS0NvZXVhNXI2YVU4TS9NVXBsTmNwU01PRDlUV2lwSEZhWEhFRmQ5eFFVU0FFN3laYWpyM2lBTC96a3RCCmYydlNUY0MwOG4rT2lMdk5jQ3doeVNnKzhVOGlnMFM2WHM1cEE3NU9FeDh2bUV4ZFZpdVJlTXI5SHdKbC9BTW8KWUV4Mkhta0NnWUVBNWZlOVJ2K2s1clp3WjNPUmJoRGJ2T1NyUjZjd0ZjQUZmbDJUeXMvTUdkR1Y3YVMwcmhDQworTlBVT05iZkNUN3ZRQkdxMU9WZXVmNGcyYnZ4YmFWNXhCV1JrRDFjcFdpS1Vab2U2a2YzTWdrVEhLa3ZLck5qCjNwNFBOaDA4d0JSNHNWTVVRNDdkVXBnUURIM3dOcnBMd1pXazFIZ1NoUUlIRVdUbHY1RVZNZGNDZ1lFQTVtTVkKS2RYSndTVHhtOTNuSG5vUVdyZ3ZnSGRXMmZCNEhSaTMrbU0vY2EzSTI0cnJzKys4UEFQZDhsSVdoUlAvZncybwp5eVEwUk1sd2VQZFd0dVNIRllSb0VIa2lzc2FKTnB4ankwUWJ1eVNVaXRxdjVWaDJkaHlmQUdDaUdzUml3cnl4CldlTHBwd2Jqa3NSbTYrSVBxckNwdmJlV0JhU3BibnVlS05VMURyVUNnWUJMejdrSlA5dTM1eXIxSDhjd3RzUUoKNklTQ2taNHJmV3NTTm4welhmK1YvMTdpd2VxQ2U1VUJ2S3Q0dFhVL2tnekRYVStvOFppaHppSThSVllZNUhWWQo3QmRacXJEeElwNSt1a1U0ek5LMEh3TzY3aGRMaDJvRUNLMVJGS0JqWGh4UHNPaThRTXU3bjcraXJwM1RIT1UrCmd6dWNnNXp2VmpUSVNpL25VRWZoYndLQmdBa3MxUitGWmgyTkRSbzZBaVJTbENnb3dhdUtGU2xrekVQTVlqZFUKa0loRWRZVll5UDVIZytXWCtkVFd0Qkxrc3Y0cVd4aUwvcERtdk5YMGM3Mmc2RWhSRjV2Z1Z5TnJpTGRtRHd0ZgpVUU5vOTRsNElCMHdJcmVkZUMrWnFac0xTeXVhUEMzcVBZZnJYRkRTQlk5TFYzaGl4TC9MZWV3TG5MdkxySWJQCnh1Y3BBb0dBTWhyQ0dyNGpycDBRdmFyLzdwb1B5SytERjJkd1I0VEw4UTNYVkY0QkxqNlQvVFN2aDB1bmRPd2cKVWtpRkhEVlUxV204cnduWFRTZjJ5RFdKa3U3SVB2UDY4dTRHMHJZV0lFbW0xT2M0Uk9hWHBJemtxNi95WjFWdgpGdXpJckx5MnVPcDdyUUloQ3pRVExNZHVBWjdqOW5FeFFEVmR0QlNwVGR2QmFkU2k4elU9Ci0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==",
        "FileList": [
            {
                "Filename": "tls/kube-apiserver-lb-server.key",
                "Data": "LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb2dJQkFBS0NBUUVBenZXWWtNcWJXZVF0bXNaRU1HWDJEMmluakdGMWdDSWVwUEI2VjBSUVZLUERubm43CnB6Z1lxVHhPRG1KNDJwSmdHZjZud1ZNY0JvZ3lMQ1pmVTZod09PRzhmdkdEU1lNMVFKT2NWTGZqU3BsWTVlQVkKd1dNOWhlcVBHTnU2am8rR1F4QzNwdkxrcTE2aVpqczNudHVTMkVqd3FZOHBNc04vSHZvUEtvMm96TzU0dGZ2bQpzdVd0QTVXS2xTQXRMelRvaEpQRWNGWnZ2VUV1VDlPUHlOQ1JMNzVMdmtNM3RuNXlqYzBPY2FEYXFRQ2I3RkdtClZiRVc3UWRSMnVsMi8wVUYrdWt2MUNYTkFQRi9qeDM3cW5CZ2F1R1ZLdGxxNkpvYUYweEI3dFRaQU01ZS9FbjgKWDNWV29OZDRXTDFKSzZsb29jQ3U0cW9tOUFEWnBoSFQ4VGovQXdJREFRQUJBb0lCQUhqNFB6UXE2VUZTeVlGVgpjSmdsa1AwU3ZCU25Cc3BkcHpIYnluYmwzRnFNMnBQd1V6TTc2OVpJQkl3TjdQdzlZT1R3MzlkMW44VUZxT1g3CmkrN1hYcmt3NFVBR0pTbzhBazE3dW40ZWVrR3BmcmZuRkRFOXM4RnFDRGlNZnZCRFhrUW5LbUh3U2M4TllybUUKMVk4S1l6dis3b1Q5eENRQzkzUUEwQXFjZ05VL1pjTmxxTEZKbDM4WEYzSnBNZEcxS2o2Mzl1eE84RmNGbmZsKwprT0NZS0NvZXVhNXI2YVU4TS9NVXBsTmNwU01PRDlUV2lwSEZhWEhFRmQ5eFFVU0FFN3laYWpyM2lBTC96a3RCCmYydlNUY0MwOG4rT2lMdk5jQ3doeVNnKzhVOGlnMFM2WHM1cEE3NU9FeDh2bUV4ZFZpdVJlTXI5SHdKbC9BTW8KWUV4Mkhta0NnWUVBNWZlOVJ2K2s1clp3WjNPUmJoRGJ2T1NyUjZjd0ZjQUZmbDJUeXMvTUdkR1Y3YVMwcmhDQworTlBVT05iZkNUN3ZRQkdxMU9WZXVmNGcyYnZ4YmFWNXhCV1JrRDFjcFdpS1Vab2U2a2YzTWdrVEhLa3ZLck5qCjNwNFBOaDA4d0JSNHNWTVVRNDdkVXBnUURIM3dOcnBMd1pXazFIZ1NoUUlIRVdUbHY1RVZNZGNDZ1lFQTVtTVkKS2RYSndTVHhtOTNuSG5vUVdyZ3ZnSGRXMmZCNEhSaTMrbU0vY2EzSTI0cnJzKys4UEFQZDhsSVdoUlAvZncybwp5eVEwUk1sd2VQZFd0dVNIRllSb0VIa2lzc2FKTnB4ankwUWJ1eVNVaXRxdjVWaDJkaHlmQUdDaUdzUml3cnl4CldlTHBwd2Jqa3NSbTYrSVBxckNwdmJlV0JhU3BibnVlS05VMURyVUNnWUJMejdrSlA5dTM1eXIxSDhjd3RzUUoKNklTQ2taNHJmV3NTTm4welhmK1YvMTdpd2VxQ2U1VUJ2S3Q0dFhVL2tnekRYVStvOFppaHppSThSVllZNUhWWQo3QmRacXJEeElwNSt1a1U0ek5LMEh3TzY3aGRMaDJvRUNLMVJGS0JqWGh4UHNPaThRTXU3bjcraXJwM1RIT1UrCmd6dWNnNXp2VmpUSVNpL25VRWZoYndLQmdBa3MxUitGWmgyTkRSbzZBaVJTbENnb3dhdUtGU2xrekVQTVlqZFUKa0loRWRZVll5UDVIZytXWCtkVFd0Qkxrc3Y0cVd4aUwvcERtdk5YMGM3Mmc2RWhSRjV2Z1Z5TnJpTGRtRHd0ZgpVUU5vOTRsNElCMHdJcmVkZUMrWnFac0xTeXVhUEMzcVBZZnJYRkRTQlk5TFYzaGl4TC9MZWV3TG5MdkxySWJQCnh1Y3BBb0dBTWhyQ0dyNGpycDBRdmFyLzdwb1B5SytERjJkd1I0VEw4UTNYVkY0QkxqNlQvVFN2aDB1bmRPd2cKVWtpRkhEVlUxV204cnduWFRTZjJ5RFdKa3U3SVB2UDY4dTRHMHJZV0lFbW0xT2M0Uk9hWHBJemtxNi95WjFWdgpGdXpJckx5MnVPcDdyUUloQ3pRVExNZHVBWjdqOW5FeFFEVmR0QlNwVGR2QmFkU2k4elU9Ci0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg=="
            },
            {
                "Filename": "tls/kube-apiserver-lb-server.crt",
                "Data": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURuakNDQW9hZ0F3SUJBZ0lJZGFnQUZSaVB0SDh3RFFZSktvWklodmNOQVFFTEJRQXdOekVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1TRXdId1lEVlFRREV4aHJkV0psTFdGd2FYTmxjblpsY2kxc1lpMXphV2R1WlhJdwpIaGNOTWpNd05ERTRNVE13T0RFd1doY05Nak13TkRFNU1UTXdPREV6V2pBMk1SUXdFZ1lEVlFRS0V3dHJkV0psCkxXMWhjM1JsY2pFZU1Cd0dBMVVFQXhNVmMzbHpkR1Z0T210MVltVXRZWEJwYzJWeWRtVnlNSUlCSWpBTkJna3EKaGtpRzl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQ0FRRUF6dldZa01xYldlUXRtc1pFTUdYMkQyaW5qR0YxZ0NJZQpwUEI2VjBSUVZLUERubm43cHpnWXFUeE9EbUo0MnBKZ0dmNm53Vk1jQm9neUxDWmZVNmh3T09HOGZ2R0RTWU0xClFKT2NWTGZqU3BsWTVlQVl3V005aGVxUEdOdTZqbytHUXhDM3B2TGtxMTZpWmpzM250dVMyRWp3cVk4cE1zTi8KSHZvUEtvMm96TzU0dGZ2bXN1V3RBNVdLbFNBdEx6VG9oSlBFY0ZadnZVRXVUOU9QeU5DUkw3NUx2a00zdG41eQpqYzBPY2FEYXFRQ2I3RkdtVmJFVzdRZFIydWwyLzBVRit1a3YxQ1hOQVBGL2p4MzdxbkJnYXVHVkt0bHE2Sm9hCkYweEI3dFRaQU01ZS9FbjhYM1ZXb05kNFdMMUpLNmxvb2NDdTRxb205QURacGhIVDhUai9Bd0lEQVFBQm80R3UKTUlHck1BNEdBMVVkRHdFQi93UUVBd0lGb0RBVEJnTlZIU1VFRERBS0JnZ3JCZ0VGQlFjREFUQU1CZ05WSFJNQgpBZjhFQWpBQU1CMEdBMVVkRGdRV0JCUlpyR3JQNlRMdHRiaWIyVzRwdWRqbjM3ai9kekFmQmdOVkhTTUVHREFXCmdCVG01eGpxaGJUOTdhejVqNHdKamdOdTJPYnROekEyQmdOVkhSRUVMekF0Z2l0aGNHa3VjbVZrY0c5a0xXRjMKY3kxemJtOHVaR1YyWTJ4MWMzUmxjaTV2Y0dWdWMyaHBablF1WTI5dE1BMEdDU3FHU0liM0RRRUJDd1VBQTRJQgpBUUIycmpDbjlibTFCeHRJU0dmd09wTTk0ZUZERXcxNnBRdUxNZzBFeGx4YUZwNEFGY1VobU0vbG85QUZCNmozCjVINWZHUkFlVm1JbkxJZHEwZWxhYThXekQ2ZnYrLzFaM2xBaHFxZmtxRnpzcytjTzJ1M1RzSXBZV3Y0b0UzeXoKVkczbGhCMldwVGh5Vnc0cmkzYnNoTnJDbmF4VTdvQzNRSCtQUUpERitCZEk5UVBHVHBzMlRDOFlCRGZNbVVYVwpLRzRUdmVldlp2SWhjVXVQZmxoazY2alNpK0pML2xSV2RhREQvaU16c3l3MGw4M3FkZUtjcEg1MFdwOFZJWW5yCmJIV3EzbEVRREFvLzBHcE9uTGtFQTVEOU1YNFVxQnpZV3oyUzQ0NVoxc2ZtdzF3eVE0NVJwN3dBbmd0ckc4eDEKRi9FTGQ2QzRoSXJiNlFBZmVjWHd6b1N3Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0KCi0tLS0tQkVHSU4gQ0VSVElGSUNBVEUtLS0tLQpNSUlETWpDQ0FocWdBd0lCQWdJSVZkUWFwZnowN1dZd0RRWUpLb1pJaHZjTkFRRUxCUUF3TnpFU01CQUdBMVVFCkN4TUpiM0JsYm5Ob2FXWjBNU0V3SHdZRFZRUURFeGhyZFdKbExXRndhWE5sY25abGNpMXNZaTF6YVdkdVpYSXcKSGhjTk1qTXdOREU0TVRNd09ERXdXaGNOTXpNd05ERTFNVE13T0RFd1dqQTNNUkl3RUFZRFZRUUxFd2x2Y0dWdQpjMmhwWm5ReElUQWZCZ05WQkFNVEdHdDFZbVV0WVhCcGMyVnlkbVZ5TFd4aUxYTnBaMjVsY2pDQ0FTSXdEUVlKCktvWklodmNOQVFFQkJRQURnZ0VQQURDQ0FRb0NnZ0VCQU9qZTNnc2U4M2MwMndvVVZPYVFxcDRWVVMyMHBPMXgKSWxISmRydGJNTmx2Q1o1a2ZCM1pxVlJMRUpDUjN2L2dCQzcyUnYxMEJVUUxPRjdwNGU2TExDSTNteE9nUllNbApFc20vbXJxbHlwYi9XNjl3NzV1YVhXRFZNNGNnSTdxLzhrS3ppT3RrTGJHWm12WVNFR1hQK29uelU5UFBIUFpBCkVnUVZWRUREdFFNaWt4eWlxZGdCN3BNbFV2alhmZ1o0dkI3NGZzeVd1RFZpQy9GYnVFSmxQRk0vdDFHenhKQm0KRDh5NTl1MXRobW8xY1ZOajRBcWRaWVlLaEhxdkZQNUhQYisvdEFvU0dNTTJzeXcwc3VrczAvRWpVSmx5M3ovdgpEcElCemxhRjFuNnVVS3BCQ3lyeittbnArSWxvWjFMd25hdzkvTlhwMW5kdlZIVy9Objd4SDNrQ0F3RUFBYU5DCk1FQXdEZ1lEVlIwUEFRSC9CQVFEQWdLa01BOEdBMVVkRXdFQi93UUZNQU1CQWY4d0hRWURWUjBPQkJZRUZPYm4KR09xRnRQM3RyUG1QakFtT0EyN1k1dTAzTUEwR0NTcUdTSWIzRFFFQkN3VUFBNElCQVFDTFJtbmZKd21LMituLwp2UUpyVUtIVk01SW1YOFJUWk5PbllsNUVYWFV4RXJJcnJCSEZJcnpVTTA4U2VLV3BCaHREalgzZzJaVVhnUjRCCkQzWXdKOXhkS1hHeDhBWmtUQXE4U3gyR09pb0Q3amhIU3NUV1pRODZFVVhhSUprbW9najFRcXh5RVFJRmdCZFUKbnpKekRWb1RwNzgzYVNCUC9FL3JpWndLTHVISCswUjhwOUNmM1k2dlE1aE94RDNOcjk4VmZvaVJXWEFVd2hlSAplTVMwTklUdDhNakhwVjdCRDgwamJNYXFtd3JoU2VQZ2FqaXBDdFl1d0lCQk94cHdmNlQ1WGZYZDh2RTZrNUhGCm1sZENyOTdJYTF2VEZpb2htSGhvcjI5cXhWb2Yxbno3VlMwLyt4cERPN0ZXcVhKWTNBa3VFZm1rcVcySE1QUnAKR2ZCSVRSOE8KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo="
            }
        ]
    },
    "*tls.KubeAPIServerInternalLBServerCertKey": {
        "CertRaw": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURvakNDQW9xZ0F3SUJBZ0lJWDR4TWZrL2FmYlF3RFFZSktvWklodmNOQVFFTEJRQXdOekVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1TRXdId1lEVlFRREV4aHJkV0psTFdGd2FYTmxjblpsY2kxc1lpMXphV2R1WlhJdwpIaGNOTWpNd05ERTRNVE13T0RFd1doY05Nak13TkRFNU1UTXdPREV6V2pBMk1SUXdFZ1lEVlFRS0V3dHJkV0psCkxXMWhjM1JsY2pFZU1Cd0dBMVVFQXhNVmMzbHpkR1Z0T210MVltVXRZWEJwYzJWeWRtVnlNSUlCSWpBTkJna3EKaGtpRzl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQ0FRRUF3eUxkR0hKSVFjVHI1elp5SHN0cnNNQVpadDIwZXpaUAp2ZkNYbEMvK2U1VU1HNGxubUdkNlcwVmVESDNJODYzTFVNNzR6c1ZGSWUrN0VQNmZuTXJNdjdqcnF6VkMwam1JCkFxY3Nac1FjTGRCdUxTRFJPbEZUYWJVSkdlTnJTcnZWWFpwazJOa25ueXo1YzYzNzdjS1AvVEVGejZxcCtpRkgKUHM2bnV0Rk0wSTcyenA4eVB6TGZOaERET0J2RkNwRkVaNlhxUUE2YjVpaFhJY2U3MVpTQ3d4dXBtaHdPU2x3NAo3M0ZqZ0pwQVVPSkxzVTY4eWJpRHRmdW0rL0kxdjZKN2FQSXl3M21JNGZDUnY5cjc0cDUydzZKaG5keTd6VTc0CmVUOG5TK0xUVnZ2L0Nmb3dvSXpud091M3NpZjgyZE9zYUFyZTdwS2hZbVZyS0V6VHVOWDlqd0lEQVFBQm80R3kKTUlHdk1BNEdBMVVkRHdFQi93UUVBd0lGb0RBVEJnTlZIU1VFRERBS0JnZ3JCZ0VGQlFjREFUQU1CZ05WSFJNQgpBZjhFQWpBQU1CMEdBMVVkRGdRV0JCUkJLVEJuWXRWYU5MbEdEaEpJM3dlLzN1N2lzekFmQmdOVkhTTUVHREFXCmdCVG01eGpxaGJUOTdhejVqNHdKamdOdTJPYnROekE2QmdOVkhSRUVNekF4Z2k5aGNHa3RhVzUwTG5KbFpIQnYKWkMxaGQzTXRjMjV2TG1SbGRtTnNkWE4wWlhJdWIzQmxibk5vYVdaMExtTnZiVEFOQmdrcWhraUc5dzBCQVFzRgpBQU9DQVFFQUJvVmtuZmRFQTRzT1RjWHVKWHZhTVArOXFwdWY0RERwb3JaUDVIaHJ6N21USXZubVcrYmVyb1czCjNxYTBuT3RJNDFlQnIrV0l4QlEvaDVIVS93M210czJSRSs1bUFWempUbGZUTTRONHlDdGFRbVJubE9wbVNvSngKMkk2NTcvc0YxRHZ2cm9XbWtRWkpWNzA4TFFrVmRJUlRHTm9oeEdtZEJCTnpFeGtuaCtKY2hOYk1vRHpCcXRHRwptdWZIQTF3UGMycWF0ODJWK3JIYTBadHMxdDloaEZ1SkxxRytVbFdpb01KWlZmZHdaSUZtRC85QnZDZVdaMURLCklJU1poOHdUb0kvV01heXZRM1ZZWkNabDRyME5WQWhMTlRpU3pPWlNIclZVU2N0M01aa2JObURNK0ZsL3V0bFAKdGJUb2E5cGVYWnlBL1BoaFg5ZWF4Nmhxc0dFa3JBPT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQoKLS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURNakNDQWhxZ0F3SUJBZ0lJVmRRYXBmejA3V1l3RFFZSktvWklodmNOQVFFTEJRQXdOekVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1TRXdId1lEVlFRREV4aHJkV0psTFdGd2FYTmxjblpsY2kxc1lpMXphV2R1WlhJdwpIaGNOTWpNd05ERTRNVE13T0RFd1doY05Nek13TkRFMU1UTXdPREV3V2pBM01SSXdFQVlEVlFRTEV3bHZjR1Z1CmMyaHBablF4SVRBZkJnTlZCQU1UR0d0MVltVXRZWEJwYzJWeWRtVnlMV3hpTFhOcFoyNWxjakNDQVNJd0RRWUoKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBT2plM2dzZTgzYzAyd29VVk9hUXFwNFZVUzIwcE8xeApJbEhKZHJ0Yk1ObHZDWjVrZkIzWnFWUkxFSkNSM3YvZ0JDNzJSdjEwQlVRTE9GN3A0ZTZMTENJM214T2dSWU1sCkVzbS9tcnFseXBiL1c2OXc3NXVhWFdEVk00Y2dJN3EvOGtLemlPdGtMYkdabXZZU0VHWFArb256VTlQUEhQWkEKRWdRVlZFRER0UU1pa3h5aXFkZ0I3cE1sVXZqWGZnWjR2Qjc0ZnN5V3VEVmlDL0ZidUVKbFBGTS90MUd6eEpCbQpEOHk1OXUxdGhtbzFjVk5qNEFxZFpZWUtoSHF2RlA1SFBiKy90QW9TR01NMnN5dzBzdWtzMC9FalVKbHkzei92CkRwSUJ6bGFGMW42dVVLcEJDeXJ6K21ucCtJbG9aMUx3bmF3OS9OWHAxbmR2VkhXL05uN3hIM2tDQXdFQUFhTkMKTUVBd0RnWURWUjBQQVFIL0JBUURBZ0trTUE4R0ExVWRFd0VCL3dRRk1BTUJBZjh3SFFZRFZSME9CQllFRk9ibgpHT3FGdFAzdHJQbVBqQW1PQTI3WTV1MDNNQTBHQ1NxR1NJYjNEUUVCQ3dVQUE0SUJBUUNMUm1uZkp3bUsyK24vCnZRSnJVS0hWTTVJbVg4UlRaTk9uWWw1RVhYVXhFcklyckJIRklyelVNMDhTZUtXcEJodERqWDNnMlpVWGdSNEIKRDNZd0o5eGRLWEd4OEFaa1RBcThTeDJHT2lvRDdqaEhTc1RXWlE4NkVVWGFJSmttb2dqMVFxeHlFUUlGZ0JkVQpuekp6RFZvVHA3ODNhU0JQL0Uvcmlad0tMdUhIKzBSOHA5Q2YzWTZ2UTVoT3hEM05yOThWZm9pUldYQVV3aGVICmVNUzBOSVR0OE1qSHBWN0JEODBqYk1hcW13cmhTZVBnYWppcEN0WXV3SUJCT3hwd2Y2VDVYZlhkOHZFNms1SEYKbWxkQ3I5N0lhMXZURmlvaG1IaG9yMjlxeFZvZjFuejdWUzAvK3hwRE83RldxWEpZM0FrdUVmbWtxVzJITVBScApHZkJJVFI4TwotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==",
        "KeyRaw": "LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcFFJQkFBS0NBUUVBd3lMZEdISklRY1RyNXpaeUhzdHJzTUFaWnQyMGV6WlB2ZkNYbEMvK2U1VU1HNGxuCm1HZDZXMFZlREgzSTg2M0xVTTc0enNWRkllKzdFUDZmbk1yTXY3anJxelZDMGptSUFxY3Nac1FjTGRCdUxTRFIKT2xGVGFiVUpHZU5yU3J2VlhacGsyTmtubnl6NWM2Mzc3Y0tQL1RFRno2cXAraUZIUHM2bnV0Rk0wSTcyenA4eQpQekxmTmhERE9CdkZDcEZFWjZYcVFBNmI1aWhYSWNlNzFaU0N3eHVwbWh3T1NsdzQ3M0ZqZ0pwQVVPSkxzVTY4CnliaUR0ZnVtKy9JMXY2SjdhUEl5dzNtSTRmQ1J2OXI3NHA1Mnc2SmhuZHk3elU3NGVUOG5TK0xUVnZ2L0Nmb3cKb0l6bndPdTNzaWY4MmRPc2FBcmU3cEtoWW1WcktFelR1Tlg5andJREFRQUJBb0lCQVFDSzgybHl2ZlliOXlodwpWUUhBVWVQV1VZUUZEcncwdklEZDVOTmE3eTRNUEI4S0FMYm0vRkJSYTd6RHNsSUV5dTJyRmladnZtTXkvaTA3CnRjUmNkc0NEaVI4dm85WjRNZ1ZhdGtYVXk3S3hJT2xEYzBucGQvMm9tUVBwRGxyWk5aV0NlSzExQ0hUQlVObzAKZUdDYmRsN24wUit0TjM2Z0lWQkZOZ3lUNS9RRjBYWjk5TGluaHd2ZmM4K1ZIMktla3ZBelhhWGdVWkV0aHBlRAplR0RBa0wzVk5jZWJkcVQremMxVUVZc2M4UElsNmJkZ1JMOUdaWkh6dlNoRW9JR0RDbmo2RTVkTGZrUHkvZ3NSClRlU1RYUGFsREFaM3BtUzdSN1BiMkM4S0JYSUxVYVZWTEMyTllGQUltTTdQQlBXRWZnQytHTXhSVU05V2VXTDYKQ3JEenhXMlJBb0dCQVA3QTdERlE4VlVmUTh1eFBkNzh1YUtDMkdieitKZFd0aU9GcytaRmdpRFBocmlWSFMweApmdHoxSGE4MDNSVW9uakNzOTI4cVJVTU1WbVhWa2xGb0tFVE5jVUdRTkN2L1plbG1vODJ4cUNNZDlUSWNOc1FpCjQzVjg1NHJ2WWVDSGJadTYweXJMMi9ObzVLdUZvVDU5cUdKUWFlT3pLbmpodnlSUkNibVdvcHJYQW9HQkFNUVgKUlVQTXVVWG1Qa0hDWkZ3RXJEV0MrTnFYUi8xVnp6TTFlVmh0NmxBbEwzYUY1dkZaUmVwZ0xpSEQ3SjBiUkFiegpVQlRCN3hzekJjN05YQm5Bc3I0N2RSWHFXaThjYlRBd09LZ2dITjBUQWdDVUNYeUpPVWk0SjdHdGRBSGx6V1NQCm1HaGZXUStNUGJYSDdtb1hsQzlxTjl0cmhXSGV3MlhQaGc0R01GUUpBb0dCQUlEeC9adG9zUDY0K0lQZGpzZVQKZkJLNXovY3NmaU44REcwbWU4eU9Xak5wVjNPT1psbzl0MHozOUxKK08zaytPZlBCV095M3BKOHZXM3ZvQWt1YQpRT2V5WlNVZWJJbm9tQmp2anZIS2ZxUm53WGcvdDZqSFVBSmoybjhFYzdKR1drQjg2KzI1aWZkR25KZ0U1M3pOCjliRHRxdXRLQUxGMjhsemJkK1NzVGxtNUFvR0JBSTVKb0g0aEdMT0s3ZFFEdlpVejRzMzFtcVByTUZhNHBHQXgKUmpzUGp2M1c3Y2pnUXdNUVYzWkpray8zL2tMR0hTZTUrSHNIZW54UEdzREVMVGVXcDF6NGdlNkVIaXFmUXUrNwpuZkVKVkVocTJZSVg2WVpQZ0p5dTNFYkdhUzVUVlNYS09McExyYkZsZndYZjdMVlpKTEwvTFVidmoxckVMUjg4ClpiYlpjTW9aQW9HQVQ5WmdKdlptWFVyR1YzZDh4R3dXYU9jU1RTK1NSR3F4NHNZd3grZE5FTzBEMXoxcmZZbjAKYXpNQXFpbzVZQ3ZPcEZBb3JrTkQ0QjNrY3BhRWZSUTFmQklXMGp4aXMwckkvbnFCaEs0SXd1bWdlVUgwTVQyVApBUnRaWEt0cWxXMnQvSXVpaTNJcVFzTlI0VTFjSFNCR25salJZUW5uNUFycGJKZDVMa0xoamRRPQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=",
        "FileList": [
            {
                "Filename": "tls/kube-apiserver-internal-lb-server.key",
                "Data": "LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcFFJQkFBS0NBUUVBd3lMZEdISklRY1RyNXpaeUhzdHJzTUFaWnQyMGV6WlB2ZkNYbEMvK2U1VU1HNGxuCm1HZDZXMFZlREgzSTg2M0xVTTc0enNWRkllKzdFUDZmbk1yTXY3anJxelZDMGptSUFxY3Nac1FjTGRCdUxTRFIKT2xGVGFiVUpHZU5yU3J2VlhacGsyTmtubnl6NWM2Mzc3Y0tQL1RFRno2cXAraUZIUHM2bnV0Rk0wSTcyenA4eQpQekxmTmhERE9CdkZDcEZFWjZYcVFBNmI1aWhYSWNlNzFaU0N3eHVwbWh3T1NsdzQ3M0ZqZ0pwQVVPSkxzVTY4CnliaUR0ZnVtKy9JMXY2SjdhUEl5dzNtSTRmQ1J2OXI3NHA1Mnc2SmhuZHk3elU3NGVUOG5TK0xUVnZ2L0Nmb3cKb0l6bndPdTNzaWY4MmRPc2FBcmU3cEtoWW1WcktFelR1Tlg5andJREFRQUJBb0lCQVFDSzgybHl2ZlliOXlodwpWUUhBVWVQV1VZUUZEcncwdklEZDVOTmE3eTRNUEI4S0FMYm0vRkJSYTd6RHNsSUV5dTJyRmladnZtTXkvaTA3CnRjUmNkc0NEaVI4dm85WjRNZ1ZhdGtYVXk3S3hJT2xEYzBucGQvMm9tUVBwRGxyWk5aV0NlSzExQ0hUQlVObzAKZUdDYmRsN24wUit0TjM2Z0lWQkZOZ3lUNS9RRjBYWjk5TGluaHd2ZmM4K1ZIMktla3ZBelhhWGdVWkV0aHBlRAplR0RBa0wzVk5jZWJkcVQremMxVUVZc2M4UElsNmJkZ1JMOUdaWkh6dlNoRW9JR0RDbmo2RTVkTGZrUHkvZ3NSClRlU1RYUGFsREFaM3BtUzdSN1BiMkM4S0JYSUxVYVZWTEMyTllGQUltTTdQQlBXRWZnQytHTXhSVU05V2VXTDYKQ3JEenhXMlJBb0dCQVA3QTdERlE4VlVmUTh1eFBkNzh1YUtDMkdieitKZFd0aU9GcytaRmdpRFBocmlWSFMweApmdHoxSGE4MDNSVW9uakNzOTI4cVJVTU1WbVhWa2xGb0tFVE5jVUdRTkN2L1plbG1vODJ4cUNNZDlUSWNOc1FpCjQzVjg1NHJ2WWVDSGJadTYweXJMMi9ObzVLdUZvVDU5cUdKUWFlT3pLbmpodnlSUkNibVdvcHJYQW9HQkFNUVgKUlVQTXVVWG1Qa0hDWkZ3RXJEV0MrTnFYUi8xVnp6TTFlVmh0NmxBbEwzYUY1dkZaUmVwZ0xpSEQ3SjBiUkFiegpVQlRCN3hzekJjN05YQm5Bc3I0N2RSWHFXaThjYlRBd09LZ2dITjBUQWdDVUNYeUpPVWk0SjdHdGRBSGx6V1NQCm1HaGZXUStNUGJYSDdtb1hsQzlxTjl0cmhXSGV3MlhQaGc0R01GUUpBb0dCQUlEeC9adG9zUDY0K0lQZGpzZVQKZkJLNXovY3NmaU44REcwbWU4eU9Xak5wVjNPT1psbzl0MHozOUxKK08zaytPZlBCV095M3BKOHZXM3ZvQWt1YQpRT2V5WlNVZWJJbm9tQmp2anZIS2ZxUm53WGcvdDZqSFVBSmoybjhFYzdKR1drQjg2KzI1aWZkR25KZ0U1M3pOCjliRHRxdXRLQUxGMjhsemJkK1NzVGxtNUFvR0JBSTVKb0g0aEdMT0s3ZFFEdlpVejRzMzFtcVByTUZhNHBHQXgKUmpzUGp2M1c3Y2pnUXdNUVYzWkpray8zL2tMR0hTZTUrSHNIZW54UEdzREVMVGVXcDF6NGdlNkVIaXFmUXUrNwpuZkVKVkVocTJZSVg2WVpQZ0p5dTNFYkdhUzVUVlNYS09McExyYkZsZndYZjdMVlpKTEwvTFVidmoxckVMUjg4ClpiYlpjTW9aQW9HQVQ5WmdKdlptWFVyR1YzZDh4R3dXYU9jU1RTK1NSR3F4NHNZd3grZE5FTzBEMXoxcmZZbjAKYXpNQXFpbzVZQ3ZPcEZBb3JrTkQ0QjNrY3BhRWZSUTFmQklXMGp4aXMwckkvbnFCaEs0SXd1bWdlVUgwTVQyVApBUnRaWEt0cWxXMnQvSXVpaTNJcVFzTlI0VTFjSFNCR25salJZUW5uNUFycGJKZDVMa0xoamRRPQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo="
            },
            {
                "Filename": "tls/kube-apiserver-internal-lb-server.crt",
                "Data": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURvakNDQW9xZ0F3SUJBZ0lJWDR4TWZrL2FmYlF3RFFZSktvWklodmNOQVFFTEJRQXdOekVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1TRXdId1lEVlFRREV4aHJkV0psTFdGd2FYTmxjblpsY2kxc1lpMXphV2R1WlhJdwpIaGNOTWpNd05ERTRNVE13T0RFd1doY05Nak13TkRFNU1UTXdPREV6V2pBMk1SUXdFZ1lEVlFRS0V3dHJkV0psCkxXMWhjM1JsY2pFZU1Cd0dBMVVFQXhNVmMzbHpkR1Z0T210MVltVXRZWEJwYzJWeWRtVnlNSUlCSWpBTkJna3EKaGtpRzl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQ0FRRUF3eUxkR0hKSVFjVHI1elp5SHN0cnNNQVpadDIwZXpaUAp2ZkNYbEMvK2U1VU1HNGxubUdkNlcwVmVESDNJODYzTFVNNzR6c1ZGSWUrN0VQNmZuTXJNdjdqcnF6VkMwam1JCkFxY3Nac1FjTGRCdUxTRFJPbEZUYWJVSkdlTnJTcnZWWFpwazJOa25ueXo1YzYzNzdjS1AvVEVGejZxcCtpRkgKUHM2bnV0Rk0wSTcyenA4eVB6TGZOaERET0J2RkNwRkVaNlhxUUE2YjVpaFhJY2U3MVpTQ3d4dXBtaHdPU2x3NAo3M0ZqZ0pwQVVPSkxzVTY4eWJpRHRmdW0rL0kxdjZKN2FQSXl3M21JNGZDUnY5cjc0cDUydzZKaG5keTd6VTc0CmVUOG5TK0xUVnZ2L0Nmb3dvSXpud091M3NpZjgyZE9zYUFyZTdwS2hZbVZyS0V6VHVOWDlqd0lEQVFBQm80R3kKTUlHdk1BNEdBMVVkRHdFQi93UUVBd0lGb0RBVEJnTlZIU1VFRERBS0JnZ3JCZ0VGQlFjREFUQU1CZ05WSFJNQgpBZjhFQWpBQU1CMEdBMVVkRGdRV0JCUkJLVEJuWXRWYU5MbEdEaEpJM3dlLzN1N2lzekFmQmdOVkhTTUVHREFXCmdCVG01eGpxaGJUOTdhejVqNHdKamdOdTJPYnROekE2QmdOVkhSRUVNekF4Z2k5aGNHa3RhVzUwTG5KbFpIQnYKWkMxaGQzTXRjMjV2TG1SbGRtTnNkWE4wWlhJdWIzQmxibk5vYVdaMExtTnZiVEFOQmdrcWhraUc5dzBCQVFzRgpBQU9DQVFFQUJvVmtuZmRFQTRzT1RjWHVKWHZhTVArOXFwdWY0RERwb3JaUDVIaHJ6N21USXZubVcrYmVyb1czCjNxYTBuT3RJNDFlQnIrV0l4QlEvaDVIVS93M210czJSRSs1bUFWempUbGZUTTRONHlDdGFRbVJubE9wbVNvSngKMkk2NTcvc0YxRHZ2cm9XbWtRWkpWNzA4TFFrVmRJUlRHTm9oeEdtZEJCTnpFeGtuaCtKY2hOYk1vRHpCcXRHRwptdWZIQTF3UGMycWF0ODJWK3JIYTBadHMxdDloaEZ1SkxxRytVbFdpb01KWlZmZHdaSUZtRC85QnZDZVdaMURLCklJU1poOHdUb0kvV01heXZRM1ZZWkNabDRyME5WQWhMTlRpU3pPWlNIclZVU2N0M01aa2JObURNK0ZsL3V0bFAKdGJUb2E5cGVYWnlBL1BoaFg5ZWF4Nmhxc0dFa3JBPT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQoKLS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURNakNDQWhxZ0F3SUJBZ0lJVmRRYXBmejA3V1l3RFFZSktvWklodmNOQVFFTEJRQXdOekVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1TRXdId1lEVlFRREV4aHJkV0psTFdGd2FYTmxjblpsY2kxc1lpMXphV2R1WlhJdwpIaGNOTWpNd05ERTRNVE13T0RFd1doY05Nek13TkRFMU1UTXdPREV3V2pBM01SSXdFQVlEVlFRTEV3bHZjR1Z1CmMyaHBablF4SVRBZkJnTlZCQU1UR0d0MVltVXRZWEJwYzJWeWRtVnlMV3hpTFhOcFoyNWxjakNDQVNJd0RRWUoKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBT2plM2dzZTgzYzAyd29VVk9hUXFwNFZVUzIwcE8xeApJbEhKZHJ0Yk1ObHZDWjVrZkIzWnFWUkxFSkNSM3YvZ0JDNzJSdjEwQlVRTE9GN3A0ZTZMTENJM214T2dSWU1sCkVzbS9tcnFseXBiL1c2OXc3NXVhWFdEVk00Y2dJN3EvOGtLemlPdGtMYkdabXZZU0VHWFArb256VTlQUEhQWkEKRWdRVlZFRER0UU1pa3h5aXFkZ0I3cE1sVXZqWGZnWjR2Qjc0ZnN5V3VEVmlDL0ZidUVKbFBGTS90MUd6eEpCbQpEOHk1OXUxdGhtbzFjVk5qNEFxZFpZWUtoSHF2RlA1SFBiKy90QW9TR01NMnN5dzBzdWtzMC9FalVKbHkzei92CkRwSUJ6bGFGMW42dVVLcEJDeXJ6K21ucCtJbG9aMUx3bmF3OS9OWHAxbmR2VkhXL05uN3hIM2tDQXdFQUFhTkMKTUVBd0RnWURWUjBQQVFIL0JBUURBZ0trTUE4R0ExVWRFd0VCL3dRRk1BTUJBZjh3SFFZRFZSME9CQllFRk9ibgpHT3FGdFAzdHJQbVBqQW1PQTI3WTV1MDNNQTBHQ1NxR1NJYjNEUUVCQ3dVQUE0SUJBUUNMUm1uZkp3bUsyK24vCnZRSnJVS0hWTTVJbVg4UlRaTk9uWWw1RVhYVXhFcklyckJIRklyelVNMDhTZUtXcEJodERqWDNnMlpVWGdSNEIKRDNZd0o5eGRLWEd4OEFaa1RBcThTeDJHT2lvRDdqaEhTc1RXWlE4NkVVWGFJSmttb2dqMVFxeHlFUUlGZ0JkVQpuekp6RFZvVHA3ODNhU0JQL0Uvcmlad0tMdUhIKzBSOHA5Q2YzWTZ2UTVoT3hEM05yOThWZm9pUldYQVV3aGVICmVNUzBOSVR0OE1qSHBWN0JEODBqYk1hcW13cmhTZVBnYWppcEN0WXV3SUJCT3hwd2Y2VDVYZlhkOHZFNms1SEYKbWxkQ3I5N0lhMXZURmlvaG1IaG9yMjlxeFZvZjFuejdWUzAvK3hwRE83RldxWEpZM0FrdUVmbWtxVzJITVBScApHZkJJVFI4TwotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg=="
            }
        ]
    },
    "*tls.KubeAPIServerLBCABundle": {
        "BundleRaw": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURNakNDQWhxZ0F3SUJBZ0lJVmRRYXBmejA3V1l3RFFZSktvWklodmNOQVFFTEJRQXdOekVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1TRXdId1lEVlFRREV4aHJkV0psTFdGd2FYTmxjblpsY2kxc1lpMXphV2R1WlhJdwpIaGNOTWpNd05ERTRNVE13T0RFd1doY05Nek13TkRFMU1UTXdPREV3V2pBM01SSXdFQVlEVlFRTEV3bHZjR1Z1CmMyaHBablF4SVRBZkJnTlZCQU1UR0d0MVltVXRZWEJwYzJWeWRtVnlMV3hpTFhOcFoyNWxjakNDQVNJd0RRWUoKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBT2plM2dzZTgzYzAyd29VVk9hUXFwNFZVUzIwcE8xeApJbEhKZHJ0Yk1ObHZDWjVrZkIzWnFWUkxFSkNSM3YvZ0JDNzJSdjEwQlVRTE9GN3A0ZTZMTENJM214T2dSWU1sCkVzbS9tcnFseXBiL1c2OXc3NXVhWFdEVk00Y2dJN3EvOGtLemlPdGtMYkdabXZZU0VHWFArb256VTlQUEhQWkEKRWdRVlZFRER0UU1pa3h5aXFkZ0I3cE1sVXZqWGZnWjR2Qjc0ZnN5V3VEVmlDL0ZidUVKbFBGTS90MUd6eEpCbQpEOHk1OXUxdGhtbzFjVk5qNEFxZFpZWUtoSHF2RlA1SFBiKy90QW9TR01NMnN5dzBzdWtzMC9FalVKbHkzei92CkRwSUJ6bGFGMW42dVVLcEJDeXJ6K21ucCtJbG9aMUx3bmF3OS9OWHAxbmR2VkhXL05uN3hIM2tDQXdFQUFhTkMKTUVBd0RnWURWUjBQQVFIL0JBUURBZ0trTUE4R0ExVWRFd0VCL3dRRk1BTUJBZjh3SFFZRFZSME9CQllFRk9ibgpHT3FGdFAzdHJQbVBqQW1PQTI3WTV1MDNNQTBHQ1NxR1NJYjNEUUVCQ3dVQUE0SUJBUUNMUm1uZkp3bUsyK24vCnZRSnJVS0hWTTVJbVg4UlRaTk9uWWw1RVhYVXhFcklyckJIRklyelVNMDhTZUtXcEJodERqWDNnMlpVWGdSNEIKRDNZd0o5eGRLWEd4OEFaa1RBcThTeDJHT2lvRDdqaEhTc1RXWlE4NkVVWGFJSmttb2dqMVFxeHlFUUlGZ0JkVQpuekp6RFZvVHA3ODNhU0JQL0Uvcmlad0tMdUhIKzBSOHA5Q2YzWTZ2UTVoT3hEM05yOThWZm9pUldYQVV3aGVICmVNUzBOSVR0OE1qSHBWN0JEODBqYk1hcW13cmhTZVBnYWppcEN0WXV3SUJCT3hwd2Y2VDVYZlhkOHZFNms1SEYKbWxkQ3I5N0lhMXZURmlvaG1IaG9yMjlxeFZvZjFuejdWUzAvK3hwRE83RldxWEpZM0FrdUVmbWtxVzJITVBScApHZkJJVFI4TwotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==",
        "FileList": [
            {
                "Filename": "tls/kube-apiserver-lb-ca-bundle.crt",
                "Data": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURNakNDQWhxZ0F3SUJBZ0lJVmRRYXBmejA3V1l3RFFZSktvWklodmNOQVFFTEJRQXdOekVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1TRXdId1lEVlFRREV4aHJkV0psTFdGd2FYTmxjblpsY2kxc1lpMXphV2R1WlhJdwpIaGNOTWpNd05ERTRNVE13T0RFd1doY05Nek13TkRFMU1UTXdPREV3V2pBM01SSXdFQVlEVlFRTEV3bHZjR1Z1CmMyaHBablF4SVRBZkJnTlZCQU1UR0d0MVltVXRZWEJwYzJWeWRtVnlMV3hpTFhOcFoyNWxjakNDQVNJd0RRWUoKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBT2plM2dzZTgzYzAyd29VVk9hUXFwNFZVUzIwcE8xeApJbEhKZHJ0Yk1ObHZDWjVrZkIzWnFWUkxFSkNSM3YvZ0JDNzJSdjEwQlVRTE9GN3A0ZTZMTENJM214T2dSWU1sCkVzbS9tcnFseXBiL1c2OXc3NXVhWFdEVk00Y2dJN3EvOGtLemlPdGtMYkdabXZZU0VHWFArb256VTlQUEhQWkEKRWdRVlZFRER0UU1pa3h5aXFkZ0I3cE1sVXZqWGZnWjR2Qjc0ZnN5V3VEVmlDL0ZidUVKbFBGTS90MUd6eEpCbQpEOHk1OXUxdGhtbzFjVk5qNEFxZFpZWUtoSHF2RlA1SFBiKy90QW9TR01NMnN5dzBzdWtzMC9FalVKbHkzei92CkRwSUJ6bGFGMW42dVVLcEJDeXJ6K21ucCtJbG9aMUx3bmF3OS9OWHAxbmR2VkhXL05uN3hIM2tDQXdFQUFhTkMKTUVBd0RnWURWUjBQQVFIL0JBUURBZ0trTUE4R0ExVWRFd0VCL3dRRk1BTUJBZjh3SFFZRFZSME9CQllFRk9ibgpHT3FGdFAzdHJQbVBqQW1PQTI3WTV1MDNNQTBHQ1NxR1NJYjNEUUVCQ3dVQUE0SUJBUUNMUm1uZkp3bUsyK24vCnZRSnJVS0hWTTVJbVg4UlRaTk9uWWw1RVhYVXhFcklyckJIRklyelVNMDhTZUtXcEJodERqWDNnMlpVWGdSNEIKRDNZd0o5eGRLWEd4OEFaa1RBcThTeDJHT2lvRDdqaEhTc1RXWlE4NkVVWGFJSmttb2dqMVFxeHlFUUlGZ0JkVQpuekp6RFZvVHA3ODNhU0JQL0Uvcmlad0tMdUhIKzBSOHA5Q2YzWTZ2UTVoT3hEM05yOThWZm9pUldYQVV3aGVICmVNUzBOSVR0OE1qSHBWN0JEODBqYk1hcW13cmhTZVBnYWppcEN0WXV3SUJCT3hwd2Y2VDVYZlhkOHZFNms1SEYKbWxkQ3I5N0lhMXZURmlvaG1IaG9yMjlxeFZvZjFuejdWUzAvK3hwRE83RldxWEpZM0FrdUVmbWtxVzJITVBScApHZkJJVFI4TwotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg=="
            }
        ]
    },
    "*tls.KubeAPIServerLBSignerCertKey": {
        "CertRaw": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURNakNDQWhxZ0F3SUJBZ0lJVmRRYXBmejA3V1l3RFFZSktvWklodmNOQVFFTEJRQXdOekVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1TRXdId1lEVlFRREV4aHJkV0psTFdGd2FYTmxjblpsY2kxc1lpMXphV2R1WlhJdwpIaGNOTWpNd05ERTRNVE13T0RFd1doY05Nek13TkRFMU1UTXdPREV3V2pBM01SSXdFQVlEVlFRTEV3bHZjR1Z1CmMyaHBablF4SVRBZkJnTlZCQU1UR0d0MVltVXRZWEJwYzJWeWRtVnlMV3hpTFhOcFoyNWxjakNDQVNJd0RRWUoKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBT2plM2dzZTgzYzAyd29VVk9hUXFwNFZVUzIwcE8xeApJbEhKZHJ0Yk1ObHZDWjVrZkIzWnFWUkxFSkNSM3YvZ0JDNzJSdjEwQlVRTE9GN3A0ZTZMTENJM214T2dSWU1sCkVzbS9tcnFseXBiL1c2OXc3NXVhWFdEVk00Y2dJN3EvOGtLemlPdGtMYkdabXZZU0VHWFArb256VTlQUEhQWkEKRWdRVlZFRER0UU1pa3h5aXFkZ0I3cE1sVXZqWGZnWjR2Qjc0ZnN5V3VEVmlDL0ZidUVKbFBGTS90MUd6eEpCbQpEOHk1OXUxdGhtbzFjVk5qNEFxZFpZWUtoSHF2RlA1SFBiKy90QW9TR01NMnN5dzBzdWtzMC9FalVKbHkzei92CkRwSUJ6bGFGMW42dVVLcEJDeXJ6K21ucCtJbG9aMUx3bmF3OS9OWHAxbmR2VkhXL05uN3hIM2tDQXdFQUFhTkMKTUVBd0RnWURWUjBQQVFIL0JBUURBZ0trTUE4R0ExVWRFd0VCL3dRRk1BTUJBZjh3SFFZRFZSME9CQllFRk9ibgpHT3FGdFAzdHJQbVBqQW1PQTI3WTV1MDNNQTBHQ1NxR1NJYjNEUUVCQ3dVQUE0SUJBUUNMUm1uZkp3bUsyK24vCnZRSnJVS0hWTTVJbVg4UlRaTk9uWWw1RVhYVXhFcklyckJIRklyelVNMDhTZUtXcEJodERqWDNnMlpVWGdSNEIKRDNZd0o5eGRLWEd4OEFaa1RBcThTeDJHT2lvRDdqaEhTc1RXWlE4NkVVWGFJSmttb2dqMVFxeHlFUUlGZ0JkVQpuekp6RFZvVHA3ODNhU0JQL0Uvcmlad0tMdUhIKzBSOHA5Q2YzWTZ2UTVoT3hEM05yOThWZm9pUldYQVV3aGVICmVNUzBOSVR0OE1qSHBWN0JEODBqYk1hcW13cmhTZVBnYWppcEN0WXV3SUJCT3hwd2Y2VDVYZlhkOHZFNms1SEYKbWxkQ3I5N0lhMXZURmlvaG1IaG9yMjlxeFZvZjFuejdWUzAvK3hwRE83RldxWEpZM0FrdUVmbWtxVzJITVBScApHZkJJVFI4TwotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==",
        "KeyRaw": "LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBNk43ZUN4N3pkelRiQ2hSVTVwQ3FuaFZSTGJTazdYRWlVY2wydTFzdzJXOEpubVI4CkhkbXBWRXNRa0pIZS8rQUVMdlpHL1hRRlJBczRYdW5oN29zc0lqZWJFNkJGZ3lVU3liK2F1cVhLbHY5YnIzRHYKbTVwZFlOVXpoeUFqdXIveVFyT0k2MlF0c1ptYTloSVFaYy82aWZOVDA4OGM5a0FTQkJWVVFNTzFBeUtUSEtLcAoyQUh1a3lWUytOZCtCbmk4SHZoK3pKYTROV0lMOFZ1NFFtVThVeiszVWJQRWtHWVB6TG4yN1cyR2FqVnhVMlBnCkNwMWxoZ3FFZXE4VS9rYzl2NyswQ2hJWXd6YXpMRFN5NlN6VDhTTlFtWExmUCs4T2tnSE9Wb1hXZnE1UXFrRUwKS3ZQNmFlbjRpV2huVXZDZHJEMzgxZW5XZDI5VWRiODJmdkVmZVFJREFRQUJBb0lCQUUvSEttSzg4OE8vQTl0cwpJN25wamNvaW0zRUJGZytTVnFPV1ZXclNUdVh1dUdqZkcvWk4vMGkxZnJOSWhoRTYrYlB0QTEwSlJsU05VMzZRCnVhb3pXNmROVFg5bnhPaXM1c2JmTVc4SUpXT2RrQmVHcFUrMWpwQUIrbWtzaFpFUStUb0lyN3VVMG1LcHNRRGsKSjJINTRtY29TV3VpNU5Vb0ZnUDRHcWtsWXZuelV3NVVEWFpveW1uN1NXb09pelV4TDVvU2V1dm1tVnI2aDQ1bwoxZWVYL0pHcisrc2pVVUtFWDhpMGJrV3MrZ05wQjBIS0t1bGhBWFZQSkxoTDAvRE5BbEZ5WGJVb3p5TjZ3anY3ClROUkV5eWNMNkh3UUY2ZkxlNHJvcEo0ZnhyanZvZ3NpRnhTaXhVVEtRZ0xnZU5ZalUvejMvbUpMRjNpRC9naDcKVGE0M2g1RUNnWUVBOWVGQTdNcTNpTGdoaEZFdm41ZklMMkpuS2ZiemFRayt2TVFLZU9FR2hzMXlXdzRZZzI2NwpBWGcvOS9qbU5LNS9rbHdNaVNJMkhsR2pZTjBNL0dBcHlnWTJCTSthaUtsdjUrcTJzTThXckdBSEpwQTNrTHVzCjJHUkpaVjBoSGo2TXZYMGVhOEtEaGZoTlgza2paVkFPYlBKMW5CZHBzRThZYXltb1dsOVRZRDhDZ1lFQThuU0sKRHdjYm1DRkhMWUZNcnVsVGYrSXJ3QWhoKzlQdXZVK0U2eGRUY1NNQ0VNck1hbTZMbXdVR05UU0dsOVEyakNlZgp6YUcyR2t5MGp4OEVtNDFkcmNHYVM2dXZIRXd5bzJpUHBrQmhETmVWOGFvV0FKSzU4UGFmanhJKzJ1ZWZ2VWwwCjRBRUdIclI2b2lCdXBzOXZkZ0JpZndDR1ZPa2g0cUlMd0pxekVrY0NnWUEvb3pjc2tpTUNiYld2QzF3cUVCeXQKdHVoQWdqdnBtWXoxU2ovem5Ub1ZOYU05VWQ2aVZjeHN5dlN6ZDJZTmlJUllHeDdiZDFGT2M0NjNpVDdOS3c1bAp6VW01NFFsOENXNS9OYzVtNEpKYnR0Ymk4anlQWnlPTE5obVE5Sk9Yd2xTbXpuVkxLcUxqejZvbTViRjFqVXpPCmdjcFN4ZlNDdjFYd2xtMk9SbEhML1FLQmdRRE1pdWJDQU5RVnh0VmVuWHVOQUlrU0ZVT2xrU3pnb0E0RUplYlQKMG16eHdJQUluSjVSbUFzczc5TXA1Yk02dWF4L0Z4cXBCeWt6RE0wekJROEZFQUVkQ256YUkrL3FKcHA5NDBOMQpGVkVLM1lIQlRDV2R2Q3NrRDF2Uy9xaUtVdWdmYjY0cklKSUNLMjVlQXBCM0ovODNoT0dUbFdTK2s2T2pwK1BVClRHNlFGd0tCZ0FockU3NVExNk9qdFBiWU0xSktZQ3FBc1BjZW1FNTdSV3dtN1J1Si9MblNpand3SWVvdlFFM2sKTzA0MklSZW9IUVJOaTJESis0VVNaaFk2MnJkZWpRaVpRbEtPWktJcDFsdEl4eDBzQ2tTNkwzODVrdUdYOElaRApESER4UXd4TS83QXhjdTdLY1BMWnRvRnlNVUx0Y3l3czkvcEt1NWpyVExtalR2ZlVsSEYrCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==",
        "FileList": [
            {
                "Filename": "tls/kube-apiserver-lb-signer.key",
                "Data": "LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBNk43ZUN4N3pkelRiQ2hSVTVwQ3FuaFZSTGJTazdYRWlVY2wydTFzdzJXOEpubVI4CkhkbXBWRXNRa0pIZS8rQUVMdlpHL1hRRlJBczRYdW5oN29zc0lqZWJFNkJGZ3lVU3liK2F1cVhLbHY5YnIzRHYKbTVwZFlOVXpoeUFqdXIveVFyT0k2MlF0c1ptYTloSVFaYy82aWZOVDA4OGM5a0FTQkJWVVFNTzFBeUtUSEtLcAoyQUh1a3lWUytOZCtCbmk4SHZoK3pKYTROV0lMOFZ1NFFtVThVeiszVWJQRWtHWVB6TG4yN1cyR2FqVnhVMlBnCkNwMWxoZ3FFZXE4VS9rYzl2NyswQ2hJWXd6YXpMRFN5NlN6VDhTTlFtWExmUCs4T2tnSE9Wb1hXZnE1UXFrRUwKS3ZQNmFlbjRpV2huVXZDZHJEMzgxZW5XZDI5VWRiODJmdkVmZVFJREFRQUJBb0lCQUUvSEttSzg4OE8vQTl0cwpJN25wamNvaW0zRUJGZytTVnFPV1ZXclNUdVh1dUdqZkcvWk4vMGkxZnJOSWhoRTYrYlB0QTEwSlJsU05VMzZRCnVhb3pXNmROVFg5bnhPaXM1c2JmTVc4SUpXT2RrQmVHcFUrMWpwQUIrbWtzaFpFUStUb0lyN3VVMG1LcHNRRGsKSjJINTRtY29TV3VpNU5Vb0ZnUDRHcWtsWXZuelV3NVVEWFpveW1uN1NXb09pelV4TDVvU2V1dm1tVnI2aDQ1bwoxZWVYL0pHcisrc2pVVUtFWDhpMGJrV3MrZ05wQjBIS0t1bGhBWFZQSkxoTDAvRE5BbEZ5WGJVb3p5TjZ3anY3ClROUkV5eWNMNkh3UUY2ZkxlNHJvcEo0ZnhyanZvZ3NpRnhTaXhVVEtRZ0xnZU5ZalUvejMvbUpMRjNpRC9naDcKVGE0M2g1RUNnWUVBOWVGQTdNcTNpTGdoaEZFdm41ZklMMkpuS2ZiemFRayt2TVFLZU9FR2hzMXlXdzRZZzI2NwpBWGcvOS9qbU5LNS9rbHdNaVNJMkhsR2pZTjBNL0dBcHlnWTJCTSthaUtsdjUrcTJzTThXckdBSEpwQTNrTHVzCjJHUkpaVjBoSGo2TXZYMGVhOEtEaGZoTlgza2paVkFPYlBKMW5CZHBzRThZYXltb1dsOVRZRDhDZ1lFQThuU0sKRHdjYm1DRkhMWUZNcnVsVGYrSXJ3QWhoKzlQdXZVK0U2eGRUY1NNQ0VNck1hbTZMbXdVR05UU0dsOVEyakNlZgp6YUcyR2t5MGp4OEVtNDFkcmNHYVM2dXZIRXd5bzJpUHBrQmhETmVWOGFvV0FKSzU4UGFmanhJKzJ1ZWZ2VWwwCjRBRUdIclI2b2lCdXBzOXZkZ0JpZndDR1ZPa2g0cUlMd0pxekVrY0NnWUEvb3pjc2tpTUNiYld2QzF3cUVCeXQKdHVoQWdqdnBtWXoxU2ovem5Ub1ZOYU05VWQ2aVZjeHN5dlN6ZDJZTmlJUllHeDdiZDFGT2M0NjNpVDdOS3c1bAp6VW01NFFsOENXNS9OYzVtNEpKYnR0Ymk4anlQWnlPTE5obVE5Sk9Yd2xTbXpuVkxLcUxqejZvbTViRjFqVXpPCmdjcFN4ZlNDdjFYd2xtMk9SbEhML1FLQmdRRE1pdWJDQU5RVnh0VmVuWHVOQUlrU0ZVT2xrU3pnb0E0RUplYlQKMG16eHdJQUluSjVSbUFzczc5TXA1Yk02dWF4L0Z4cXBCeWt6RE0wekJROEZFQUVkQ256YUkrL3FKcHA5NDBOMQpGVkVLM1lIQlRDV2R2Q3NrRDF2Uy9xaUtVdWdmYjY0cklKSUNLMjVlQXBCM0ovODNoT0dUbFdTK2s2T2pwK1BVClRHNlFGd0tCZ0FockU3NVExNk9qdFBiWU0xSktZQ3FBc1BjZW1FNTdSV3dtN1J1Si9MblNpand3SWVvdlFFM2sKTzA0MklSZW9IUVJOaTJESis0VVNaaFk2MnJkZWpRaVpRbEtPWktJcDFsdEl4eDBzQ2tTNkwzODVrdUdYOElaRApESER4UXd4TS83QXhjdTdLY1BMWnRvRnlNVUx0Y3l3czkvcEt1NWpyVExtalR2ZlVsSEYrCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg=="
            },
            {
                "Filename": "tls/kube-apiserver-lb-signer.crt",
                "Data": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURNakNDQWhxZ0F3SUJBZ0lJVmRRYXBmejA3V1l3RFFZSktvWklodmNOQVFFTEJRQXdOekVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1TRXdId1lEVlFRREV4aHJkV0psTFdGd2FYTmxjblpsY2kxc1lpMXphV2R1WlhJdwpIaGNOTWpNd05ERTRNVE13T0RFd1doY05Nek13TkRFMU1UTXdPREV3V2pBM01SSXdFQVlEVlFRTEV3bHZjR1Z1CmMyaHBablF4SVRBZkJnTlZCQU1UR0d0MVltVXRZWEJwYzJWeWRtVnlMV3hpTFhOcFoyNWxjakNDQVNJd0RRWUoKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBT2plM2dzZTgzYzAyd29VVk9hUXFwNFZVUzIwcE8xeApJbEhKZHJ0Yk1ObHZDWjVrZkIzWnFWUkxFSkNSM3YvZ0JDNzJSdjEwQlVRTE9GN3A0ZTZMTENJM214T2dSWU1sCkVzbS9tcnFseXBiL1c2OXc3NXVhWFdEVk00Y2dJN3EvOGtLemlPdGtMYkdabXZZU0VHWFArb256VTlQUEhQWkEKRWdRVlZFRER0UU1pa3h5aXFkZ0I3cE1sVXZqWGZnWjR2Qjc0ZnN5V3VEVmlDL0ZidUVKbFBGTS90MUd6eEpCbQpEOHk1OXUxdGhtbzFjVk5qNEFxZFpZWUtoSHF2RlA1SFBiKy90QW9TR01NMnN5dzBzdWtzMC9FalVKbHkzei92CkRwSUJ6bGFGMW42dVVLcEJDeXJ6K21ucCtJbG9aMUx3bmF3OS9OWHAxbmR2VkhXL05uN3hIM2tDQXdFQUFhTkMKTUVBd0RnWURWUjBQQVFIL0JBUURBZ0trTUE4R0ExVWRFd0VCL3dRRk1BTUJBZjh3SFFZRFZSME9CQllFRk9ibgpHT3FGdFAzdHJQbVBqQW1PQTI3WTV1MDNNQTBHQ1NxR1NJYjNEUUVCQ3dVQUE0SUJBUUNMUm1uZkp3bUsyK24vCnZRSnJVS0hWTTVJbVg4UlRaTk9uWWw1RVhYVXhFcklyckJIRklyelVNMDhTZUtXcEJodERqWDNnMlpVWGdSNEIKRDNZd0o5eGRLWEd4OEFaa1RBcThTeDJHT2lvRDdqaEhTc1RXWlE4NkVVWGFJSmttb2dqMVFxeHlFUUlGZ0JkVQpuekp6RFZvVHA3ODNhU0JQL0Uvcmlad0tMdUhIKzBSOHA5Q2YzWTZ2UTVoT3hEM05yOThWZm9pUldYQVV3aGVICmVNUzBOSVR0OE1qSHBWN0JEODBqYk1hcW13cmhTZVBnYWppcEN0WXV3SUJCT3hwd2Y2VDVYZlhkOHZFNms1SEYKbWxkQ3I5N0lhMXZURmlvaG1IaG9yMjlxeFZvZjFuejdWUzAvK3hwRE83RldxWEpZM0FrdUVmbWtxVzJITVBScApHZkJJVFI4TwotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg=="
            }
        ]
    },
    "*tls.KubeAPIServerLocalhostCABundle": {
        "BundleRaw": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURRRENDQWlpZ0F3SUJBZ0lJVXdMTkJjaHNZT1l3RFFZSktvWklodmNOQVFFTEJRQXdQakVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1TZ3dKZ1lEVlFRREV4OXJkV0psTFdGd2FYTmxjblpsY2kxc2IyTmhiR2h2YzNRdApjMmxuYm1WeU1CNFhEVEl6TURReE9ERXpNRGd4TUZvWERUTXpNRFF4TlRFek1EZ3hNRm93UGpFU01CQUdBMVVFCkN4TUpiM0JsYm5Ob2FXWjBNU2d3SmdZRFZRUURFeDlyZFdKbExXRndhWE5sY25abGNpMXNiMk5oYkdodmMzUXQKYzJsbmJtVnlNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DQVE4QU1JSUJDZ0tDQVFFQXVrQXFycmwrWHROcwpNQm1JMkRnZmlwUmMvNEluLytGZ2txSWZmaENTYzU3eXhGaXZBRXR5VTM3WERlQmNkeHNFMDRLQ1RuSDEram5PCm5VZkxlWFVKMmlHcFF6R1FSZ2FjV3VkeERBdUc1VmZmYkN0RkpxRGQvKzRTT3J6SlRQellvditUTGxPc296QlMKSHc5WWN4K1JmZUw0R3NlaXVhQVdmaFcreHdkQVFHWVg0eFJNcVBkcmlCY1JQUkprd2Q2K21xZ3FuM0t4UjI3VgpWeU85NnNlYWdjME5IR3h0dUlBUTF2eWgzeThvM2E3bURUdWJ6VDNRMXhTeDZTUUljd0I5K0RaUkRjMGwwUlBwClhzYVBuMVhMMzVYcHR0MHkxQTBZKzlKTXM5SWxTNkpCbzVNYzBERnNQWVNFZlNoeXZ5TVBDZFZ5bXdPcVRkbEcKdEpaZUxWazFKd0lEQVFBQm8wSXdRREFPQmdOVkhROEJBZjhFQkFNQ0FxUXdEd1lEVlIwVEFRSC9CQVV3QXdFQgovekFkQmdOVkhRNEVGZ1FVa01iUHN5YU5OaGg0bXlZZ3FOelJ5QmUzc21Rd0RRWUpLb1pJaHZjTkFRRUxCUUFECmdnRUJBR1FEMTZNdTAybEVaY1BodTNxcjFHRnVVQUZFWWh5T0hRSFVFcklUOU9rQ2hvczU4eUZ0WThPRFlwelYKdS83MllMVDBoSkdrY0diREVEN2dNTzNGMXhvWEc2bFh4Y2htb0FhOFZhWlpxTUJBckdVQXE4aXppUUdPUUMzawpaYVh4SjcrMGhhNTA0Q2xnUDJJd3hIMTlBOFhRVi8rS0hPU05YbjFGaDlSMXdNM2tHRG9JSFQ2bFZ4R1RlMTNZCldEMEN2NTRxZCtMWElSOCsrbVFVSXdMd1cwd3NKUEUybG5MYVhvSzQ5MHp6WDJvWWMxUWJ1WGNqeUxWY3pVUG0KVWFxY29IeDVjS3pabytjM2I5QVpvaDZzRjRvMG1LOWdJT2RWZXFzTitkbWlKSFJIeElhT0hYSzg2SFJpczRWWQpPM0VhTTlxWnViOS9vQ3BSRVcrN25CWWVDemM9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K",
        "FileList": [
            {
                "Filename": "tls/kube-apiserver-localhost-ca-bundle.crt",
                "Data": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURRRENDQWlpZ0F3SUJBZ0lJVXdMTkJjaHNZT1l3RFFZSktvWklodmNOQVFFTEJRQXdQakVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1TZ3dKZ1lEVlFRREV4OXJkV0psTFdGd2FYTmxjblpsY2kxc2IyTmhiR2h2YzNRdApjMmxuYm1WeU1CNFhEVEl6TURReE9ERXpNRGd4TUZvWERUTXpNRFF4TlRFek1EZ3hNRm93UGpFU01CQUdBMVVFCkN4TUpiM0JsYm5Ob2FXWjBNU2d3SmdZRFZRUURFeDlyZFdKbExXRndhWE5sY25abGNpMXNiMk5oYkdodmMzUXQKYzJsbmJtVnlNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DQVE4QU1JSUJDZ0tDQVFFQXVrQXFycmwrWHROcwpNQm1JMkRnZmlwUmMvNEluLytGZ2txSWZmaENTYzU3eXhGaXZBRXR5VTM3WERlQmNkeHNFMDRLQ1RuSDEram5PCm5VZkxlWFVKMmlHcFF6R1FSZ2FjV3VkeERBdUc1VmZmYkN0RkpxRGQvKzRTT3J6SlRQellvditUTGxPc296QlMKSHc5WWN4K1JmZUw0R3NlaXVhQVdmaFcreHdkQVFHWVg0eFJNcVBkcmlCY1JQUkprd2Q2K21xZ3FuM0t4UjI3VgpWeU85NnNlYWdjME5IR3h0dUlBUTF2eWgzeThvM2E3bURUdWJ6VDNRMXhTeDZTUUljd0I5K0RaUkRjMGwwUlBwClhzYVBuMVhMMzVYcHR0MHkxQTBZKzlKTXM5SWxTNkpCbzVNYzBERnNQWVNFZlNoeXZ5TVBDZFZ5bXdPcVRkbEcKdEpaZUxWazFKd0lEQVFBQm8wSXdRREFPQmdOVkhROEJBZjhFQkFNQ0FxUXdEd1lEVlIwVEFRSC9CQVV3QXdFQgovekFkQmdOVkhRNEVGZ1FVa01iUHN5YU5OaGg0bXlZZ3FOelJ5QmUzc21Rd0RRWUpLb1pJaHZjTkFRRUxCUUFECmdnRUJBR1FEMTZNdTAybEVaY1BodTNxcjFHRnVVQUZFWWh5T0hRSFVFcklUOU9rQ2hvczU4eUZ0WThPRFlwelYKdS83MllMVDBoSkdrY0diREVEN2dNTzNGMXhvWEc2bFh4Y2htb0FhOFZhWlpxTUJBckdVQXE4aXppUUdPUUMzawpaYVh4SjcrMGhhNTA0Q2xnUDJJd3hIMTlBOFhRVi8rS0hPU05YbjFGaDlSMXdNM2tHRG9JSFQ2bFZ4R1RlMTNZCldEMEN2NTRxZCtMWElSOCsrbVFVSXdMd1cwd3NKUEUybG5MYVhvSzQ5MHp6WDJvWWMxUWJ1WGNqeUxWY3pVUG0KVWFxY29IeDVjS3pabytjM2I5QVpvaDZzRjRvMG1LOWdJT2RWZXFzTitkbWlKSFJIeElhT0hYSzg2SFJpczRWWQpPM0VhTTlxWnViOS9vQ3BSRVcrN25CWWVDemM9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K"
            }
        ]
    },
    "*tls.KubeAPIServerLocalhostServerCertKey": {
        "CertRaw": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURtekNDQW9PZ0F3SUJBZ0lJQTg1OVozWGxSOVV3RFFZSktvWklodmNOQVFFTEJRQXdQakVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1TZ3dKZ1lEVlFRREV4OXJkV0psTFdGd2FYTmxjblpsY2kxc2IyTmhiR2h2YzNRdApjMmxuYm1WeU1CNFhEVEl6TURReE9ERXpNRGd4TUZvWERUSXpNRFF4T1RFek1EZ3hNMW93TmpFVU1CSUdBMVVFCkNoTUxhM1ZpWlMxdFlYTjBaWEl4SGpBY0JnTlZCQU1URlhONWMzUmxiVHByZFdKbExXRndhWE5sY25abGNqQ0MKQVNJd0RRWUpLb1pJaHZjTkFRRUJCUUFEZ2dFUEFEQ0NBUW9DZ2dFQkFLdkJkMXhWODg1Skh2bEZlL1NVWmVyOQpPZjh0NmRnck1aVG8rdVBtQ01JSGNMbTM2L2FWc1VxSURkRVBBRUwvcHN2bi9BZ2hvaUphUld6MVVUMW9mSytQCjhqS3p6UnBNWHk5QUFVUnVCTmhqUkNXa3R1cDlaVW5IclI0NWloM0FtTXRFNDZoNk9ZY0h1Zm5sUHFlcGJHdmcKOFVoZGNadGw2a3VzNkdvODJ4ZnpRcUR3U1ZkajJQRDJQdndqdDFEYi9POWU3aEpVQk9CaFNiUGF6K2RiSmRuZwozSE9XUVFkMGhWM2Jyd2hpK3VTYnlTNXYrNnFSNkNwbnJOUlZ2SkpKdkNISE5xVU11SEpkNU5Fd21aeDJXTDZ0Cm0xL1U0eTVWRHdzZHUxQ3FHY1lpTjczSEkveXV6Q0JlM2xjYnN1NzA0bCtNZ1dCNkRFN25SV2NJZXVqVXcwY0MKQXdFQUFhT0JwRENCb1RBT0JnTlZIUThCQWY4RUJBTUNCYUF3RXdZRFZSMGxCQXd3Q2dZSUt3WUJCUVVIQXdFdwpEQVlEVlIwVEFRSC9CQUl3QURBZEJnTlZIUTRFRmdRVWFQdE9tNDNibkpSSWp5RFp4aXpPUThQQ2phZ3dId1lEClZSMGpCQmd3Rm9BVWtNYlBzeWFOTmhoNG15WWdxTnpSeUJlM3NtUXdMQVlEVlIwUkJDVXdJNElKYkc5allXeG8KYjNOMGh3Ui9BQUFCaHhBQUFBQUFBQUFBQUFBQUFBQUFBQUFCTUEwR0NTcUdTSWIzRFFFQkN3VUFBNElCQVFDMgpMSHVjaXdXK1ZmRFFOVkZlT2RtNTJkY1QrUjJINFpxSFJUZGY2S0luWkFldk50LzRvRVdicTU3MnNBK0hQRlFiCnNXY3d0V1FYcVVWelc1aFFSYjdvWkR4NUZKKzRtdm9nSzZrWHdiQnRqQStXT1lyWjR0NEVDL3NoSzd4cUQ2QWEKMXN0Qjh4WUxWdzIyaDViU1Fyc0N6b3gyTEJ6UmxZNXkzY2lIR2pDc1ZyajgxQURCVVJGQjNmVkFMU0dnR3NwcwpLUFRlWjZod2MxZEdTNm10OUdSNjREQjd5ci9tZXRwZXM5ZUh5WHpQVTRHV3dJMll6TnpBQlFkZ0tWdjJXa0luCksyVnFXSjk2VStwWVhycFFsR0ptMmdnRmhjblpTK3c3ZVJ1Nm4vMFFjOU9KdzQyeHVNQllaalF2OENJcVc1TDYKUXNhRFRwYlJlOFVmamhZOFo1cXMKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQoKLS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURRRENDQWlpZ0F3SUJBZ0lJVXdMTkJjaHNZT1l3RFFZSktvWklodmNOQVFFTEJRQXdQakVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1TZ3dKZ1lEVlFRREV4OXJkV0psTFdGd2FYTmxjblpsY2kxc2IyTmhiR2h2YzNRdApjMmxuYm1WeU1CNFhEVEl6TURReE9ERXpNRGd4TUZvWERUTXpNRFF4TlRFek1EZ3hNRm93UGpFU01CQUdBMVVFCkN4TUpiM0JsYm5Ob2FXWjBNU2d3SmdZRFZRUURFeDlyZFdKbExXRndhWE5sY25abGNpMXNiMk5oYkdodmMzUXQKYzJsbmJtVnlNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DQVE4QU1JSUJDZ0tDQVFFQXVrQXFycmwrWHROcwpNQm1JMkRnZmlwUmMvNEluLytGZ2txSWZmaENTYzU3eXhGaXZBRXR5VTM3WERlQmNkeHNFMDRLQ1RuSDEram5PCm5VZkxlWFVKMmlHcFF6R1FSZ2FjV3VkeERBdUc1VmZmYkN0RkpxRGQvKzRTT3J6SlRQellvditUTGxPc296QlMKSHc5WWN4K1JmZUw0R3NlaXVhQVdmaFcreHdkQVFHWVg0eFJNcVBkcmlCY1JQUkprd2Q2K21xZ3FuM0t4UjI3VgpWeU85NnNlYWdjME5IR3h0dUlBUTF2eWgzeThvM2E3bURUdWJ6VDNRMXhTeDZTUUljd0I5K0RaUkRjMGwwUlBwClhzYVBuMVhMMzVYcHR0MHkxQTBZKzlKTXM5SWxTNkpCbzVNYzBERnNQWVNFZlNoeXZ5TVBDZFZ5bXdPcVRkbEcKdEpaZUxWazFKd0lEQVFBQm8wSXdRREFPQmdOVkhROEJBZjhFQkFNQ0FxUXdEd1lEVlIwVEFRSC9CQVV3QXdFQgovekFkQmdOVkhRNEVGZ1FVa01iUHN5YU5OaGg0bXlZZ3FOelJ5QmUzc21Rd0RRWUpLb1pJaHZjTkFRRUxCUUFECmdnRUJBR1FEMTZNdTAybEVaY1BodTNxcjFHRnVVQUZFWWh5T0hRSFVFcklUOU9rQ2hvczU4eUZ0WThPRFlwelYKdS83MllMVDBoSkdrY0diREVEN2dNTzNGMXhvWEc2bFh4Y2htb0FhOFZhWlpxTUJBckdVQXE4aXppUUdPUUMzawpaYVh4SjcrMGhhNTA0Q2xnUDJJd3hIMTlBOFhRVi8rS0hPU05YbjFGaDlSMXdNM2tHRG9JSFQ2bFZ4R1RlMTNZCldEMEN2NTRxZCtMWElSOCsrbVFVSXdMd1cwd3NKUEUybG5MYVhvSzQ5MHp6WDJvWWMxUWJ1WGNqeUxWY3pVUG0KVWFxY29IeDVjS3pabytjM2I5QVpvaDZzRjRvMG1LOWdJT2RWZXFzTitkbWlKSFJIeElhT0hYSzg2SFJpczRWWQpPM0VhTTlxWnViOS9vQ3BSRVcrN25CWWVDemM9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K",
        "KeyRaw": "LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb2dJQkFBS0NBUUVBcThGM1hGWHp6a2tlK1VWNzlKUmw2djA1L3kzcDJDc3hsT2o2NCtZSXdnZHd1YmZyCjlwV3hTb2dOMFE4QVF2K215K2Y4Q0NHaUlscEZiUFZSUFdoOHI0L3lNclBOR2t4ZkwwQUJSRzRFMkdORUphUzIKNm4xbFNjZXRIam1LSGNDWXkwVGpxSG81aHdlNStlVStwNmxzYStEeFNGMXhtMlhxUzZ6b2FqemJGL05Db1BCSgpWMlBZOFBZKy9DTzNVTnY4NzE3dUVsUUU0R0ZKczlyUDUxc2wyZURjYzVaQkIzU0ZYZHV2Q0dMNjVKdkpMbS83CnFwSG9LbWVzMUZXOGtrbThJY2MycFF5NGNsM2swVENabkhaWXZxMmJYOVRqTGxVUEN4MjdVS29aeGlJM3ZjY2oKL0s3TUlGN2VWeHV5N3ZUaVg0eUJZSG9NVHVkRlp3aDY2TlREUndJREFRQUJBb0lCQUFycHErL045a094R2FxMAo0MzlTdm5jRHg5K1N4enpZNGJtWVkvaCs4U2VDMllLelVPYkY5QkhNT3pTQlEzNytSMWJGVXBvaHFPK04xTU5yCmd0SG9CYVFSL1UyRFp4QzRzWU9MQ1ltVGcvTkx1MVM0OW5aSHFWdmF1QUVubnNMdExjZ2NoR3A3K1pPK3hlNCsKeHBCWWoyNzdSOWxWTnBhdER3bm4zb3lCZVZvNEcrTk9mYkxDMFR5a3RZSG1RR1BseTRiWGQwTzl1MXduMEV5UgpJTVZHMjl2WWR3VXJZSnFBMzZDYjhzYWVmekxLMlhsYjc4MkJEcEVJQWd6bWNjL2YvZVhPaU5XazJaRkk4QUZKCm9vWGliNm4xVVE2SzhrekgwbzdPU3QreXltNG56VlRseTJzM3NMOWF6R3ErSEM3YlEwZGdIYWRSclBHVk1hbWUKdjFNRUpJRUNnWUVBeUhna2llbFdpeDA3eGtpMjBmMHRPbjI4VWh0YW1nTmd0TEFub2ROUVRac1F3d1QzYXhabgp4RlppdSt6VGJtVkJGbk52aWphYUpFMDgvTHp4MG1QbXVUbUVCTHJ3NHVEMExXMGJkaVdLOXdUOVJWNXhBL0E2CnhkSmVUbW40VHhwczhOVGx3MFpKdWpsQlVYd2FBeTJwaE10ejMxYURmL21qTys3ZzVLY2VTYkVDZ1lFQTIxVXAKSW5VbTRTb3I4LzIxRGdSYzU0bk1DaTg2WlJkVjR6RmFVbE9EQjB1VXFEV3FoOTdDMlFtMk9JdGYrWnNFWFdKaQpmaWJ4WGV6K083ZHp1NDlweWI1dUVYRkNmZVBqSHNrTnhjeXZoMU9Tby9oS2ZhRlNwRXVoa08yNVNNU25pWUtoCjZXRmN0ZjBIclhlL0crWTNVS0RyMEE5cUhQcGtEWG9ZeGhvbkluY0NnWUF5QS8raHhPekpzcFo2UnlRTnlpdmgKbndOQVBRRGkwaHJybWRPWmhWNVFybktGSlpVUlM3ckIrb2VSdVdtYTducEp2cTFDZjVML29hR29zUDlvYlhKZwpIaUI1Q2FjV0ErZ0grV1BUbTFSTGd4d3BsWUYrNlEzUTAwYWlLOEEvQkNuUUFGMysxV2VKcGNWTkxqaFRPSzVGCnFua1RiTU5NUjUxWlU2VWFoek9BVVFLQmdGc2UzeThFa3JsNnhyWGdFa2NYZ3UxaWJ4VlFGNmVGOFZXbzNFaFYKajVzSlNHSTFvWG8vRHA0U2pkU2grcVo5UTJ2MGdzeThLd3lGZC8yaE1vQ2FqUzJXWXEzMmF0UllSN1F6ZlBoUApHQ0ZWbEJkeEFLbCt5eEdjcGl2S3gyNDIzUStnNk5sSGJMZml2anpRQWVKNlcwS3hDQ2J4TUhtSGdPZWtjUVJrCk94dnpBb0dBVStUUVZWNXZhNVRZbEU5Y2VGWGNtM1lqNUpFeUVtWnVuR2Q2SzVuNUFKUGNCZDdYanZYM1ZRaHAKRm55OW5hWGZlOTFHQ0hOZUcwdDZwMWdHdHhUSkhyRFowenlqSXNvZjVvcCtSREg4Tm1CWGdRNEhYNFB3NFRmTgo2cnlsaVJEWFJBOWl6WWdacGJDSkt3OEJNNDQ2c2tabUJOL1BSWEpDdHRhalFRSVJLTE09Ci0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==",
        "FileList": [
            {
                "Filename": "tls/kube-apiserver-localhost-server.key",
                "Data": "LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb2dJQkFBS0NBUUVBcThGM1hGWHp6a2tlK1VWNzlKUmw2djA1L3kzcDJDc3hsT2o2NCtZSXdnZHd1YmZyCjlwV3hTb2dOMFE4QVF2K215K2Y4Q0NHaUlscEZiUFZSUFdoOHI0L3lNclBOR2t4ZkwwQUJSRzRFMkdORUphUzIKNm4xbFNjZXRIam1LSGNDWXkwVGpxSG81aHdlNStlVStwNmxzYStEeFNGMXhtMlhxUzZ6b2FqemJGL05Db1BCSgpWMlBZOFBZKy9DTzNVTnY4NzE3dUVsUUU0R0ZKczlyUDUxc2wyZURjYzVaQkIzU0ZYZHV2Q0dMNjVKdkpMbS83CnFwSG9LbWVzMUZXOGtrbThJY2MycFF5NGNsM2swVENabkhaWXZxMmJYOVRqTGxVUEN4MjdVS29aeGlJM3ZjY2oKL0s3TUlGN2VWeHV5N3ZUaVg0eUJZSG9NVHVkRlp3aDY2TlREUndJREFRQUJBb0lCQUFycHErL045a094R2FxMAo0MzlTdm5jRHg5K1N4enpZNGJtWVkvaCs4U2VDMllLelVPYkY5QkhNT3pTQlEzNytSMWJGVXBvaHFPK04xTU5yCmd0SG9CYVFSL1UyRFp4QzRzWU9MQ1ltVGcvTkx1MVM0OW5aSHFWdmF1QUVubnNMdExjZ2NoR3A3K1pPK3hlNCsKeHBCWWoyNzdSOWxWTnBhdER3bm4zb3lCZVZvNEcrTk9mYkxDMFR5a3RZSG1RR1BseTRiWGQwTzl1MXduMEV5UgpJTVZHMjl2WWR3VXJZSnFBMzZDYjhzYWVmekxLMlhsYjc4MkJEcEVJQWd6bWNjL2YvZVhPaU5XazJaRkk4QUZKCm9vWGliNm4xVVE2SzhrekgwbzdPU3QreXltNG56VlRseTJzM3NMOWF6R3ErSEM3YlEwZGdIYWRSclBHVk1hbWUKdjFNRUpJRUNnWUVBeUhna2llbFdpeDA3eGtpMjBmMHRPbjI4VWh0YW1nTmd0TEFub2ROUVRac1F3d1QzYXhabgp4RlppdSt6VGJtVkJGbk52aWphYUpFMDgvTHp4MG1QbXVUbUVCTHJ3NHVEMExXMGJkaVdLOXdUOVJWNXhBL0E2CnhkSmVUbW40VHhwczhOVGx3MFpKdWpsQlVYd2FBeTJwaE10ejMxYURmL21qTys3ZzVLY2VTYkVDZ1lFQTIxVXAKSW5VbTRTb3I4LzIxRGdSYzU0bk1DaTg2WlJkVjR6RmFVbE9EQjB1VXFEV3FoOTdDMlFtMk9JdGYrWnNFWFdKaQpmaWJ4WGV6K083ZHp1NDlweWI1dUVYRkNmZVBqSHNrTnhjeXZoMU9Tby9oS2ZhRlNwRXVoa08yNVNNU25pWUtoCjZXRmN0ZjBIclhlL0crWTNVS0RyMEE5cUhQcGtEWG9ZeGhvbkluY0NnWUF5QS8raHhPekpzcFo2UnlRTnlpdmgKbndOQVBRRGkwaHJybWRPWmhWNVFybktGSlpVUlM3ckIrb2VSdVdtYTducEp2cTFDZjVML29hR29zUDlvYlhKZwpIaUI1Q2FjV0ErZ0grV1BUbTFSTGd4d3BsWUYrNlEzUTAwYWlLOEEvQkNuUUFGMysxV2VKcGNWTkxqaFRPSzVGCnFua1RiTU5NUjUxWlU2VWFoek9BVVFLQmdGc2UzeThFa3JsNnhyWGdFa2NYZ3UxaWJ4VlFGNmVGOFZXbzNFaFYKajVzSlNHSTFvWG8vRHA0U2pkU2grcVo5UTJ2MGdzeThLd3lGZC8yaE1vQ2FqUzJXWXEzMmF0UllSN1F6ZlBoUApHQ0ZWbEJkeEFLbCt5eEdjcGl2S3gyNDIzUStnNk5sSGJMZml2anpRQWVKNlcwS3hDQ2J4TUhtSGdPZWtjUVJrCk94dnpBb0dBVStUUVZWNXZhNVRZbEU5Y2VGWGNtM1lqNUpFeUVtWnVuR2Q2SzVuNUFKUGNCZDdYanZYM1ZRaHAKRm55OW5hWGZlOTFHQ0hOZUcwdDZwMWdHdHhUSkhyRFowenlqSXNvZjVvcCtSREg4Tm1CWGdRNEhYNFB3NFRmTgo2cnlsaVJEWFJBOWl6WWdacGJDSkt3OEJNNDQ2c2tabUJOL1BSWEpDdHRhalFRSVJLTE09Ci0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg=="
            },
            {
                "Filename": "tls/kube-apiserver-localhost-server.crt",
                "Data": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURtekNDQW9PZ0F3SUJBZ0lJQTg1OVozWGxSOVV3RFFZSktvWklodmNOQVFFTEJRQXdQakVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1TZ3dKZ1lEVlFRREV4OXJkV0psTFdGd2FYTmxjblpsY2kxc2IyTmhiR2h2YzNRdApjMmxuYm1WeU1CNFhEVEl6TURReE9ERXpNRGd4TUZvWERUSXpNRFF4T1RFek1EZ3hNMW93TmpFVU1CSUdBMVVFCkNoTUxhM1ZpWlMxdFlYTjBaWEl4SGpBY0JnTlZCQU1URlhONWMzUmxiVHByZFdKbExXRndhWE5sY25abGNqQ0MKQVNJd0RRWUpLb1pJaHZjTkFRRUJCUUFEZ2dFUEFEQ0NBUW9DZ2dFQkFLdkJkMXhWODg1Skh2bEZlL1NVWmVyOQpPZjh0NmRnck1aVG8rdVBtQ01JSGNMbTM2L2FWc1VxSURkRVBBRUwvcHN2bi9BZ2hvaUphUld6MVVUMW9mSytQCjhqS3p6UnBNWHk5QUFVUnVCTmhqUkNXa3R1cDlaVW5IclI0NWloM0FtTXRFNDZoNk9ZY0h1Zm5sUHFlcGJHdmcKOFVoZGNadGw2a3VzNkdvODJ4ZnpRcUR3U1ZkajJQRDJQdndqdDFEYi9POWU3aEpVQk9CaFNiUGF6K2RiSmRuZwozSE9XUVFkMGhWM2Jyd2hpK3VTYnlTNXYrNnFSNkNwbnJOUlZ2SkpKdkNISE5xVU11SEpkNU5Fd21aeDJXTDZ0Cm0xL1U0eTVWRHdzZHUxQ3FHY1lpTjczSEkveXV6Q0JlM2xjYnN1NzA0bCtNZ1dCNkRFN25SV2NJZXVqVXcwY0MKQXdFQUFhT0JwRENCb1RBT0JnTlZIUThCQWY4RUJBTUNCYUF3RXdZRFZSMGxCQXd3Q2dZSUt3WUJCUVVIQXdFdwpEQVlEVlIwVEFRSC9CQUl3QURBZEJnTlZIUTRFRmdRVWFQdE9tNDNibkpSSWp5RFp4aXpPUThQQ2phZ3dId1lEClZSMGpCQmd3Rm9BVWtNYlBzeWFOTmhoNG15WWdxTnpSeUJlM3NtUXdMQVlEVlIwUkJDVXdJNElKYkc5allXeG8KYjNOMGh3Ui9BQUFCaHhBQUFBQUFBQUFBQUFBQUFBQUFBQUFCTUEwR0NTcUdTSWIzRFFFQkN3VUFBNElCQVFDMgpMSHVjaXdXK1ZmRFFOVkZlT2RtNTJkY1QrUjJINFpxSFJUZGY2S0luWkFldk50LzRvRVdicTU3MnNBK0hQRlFiCnNXY3d0V1FYcVVWelc1aFFSYjdvWkR4NUZKKzRtdm9nSzZrWHdiQnRqQStXT1lyWjR0NEVDL3NoSzd4cUQ2QWEKMXN0Qjh4WUxWdzIyaDViU1Fyc0N6b3gyTEJ6UmxZNXkzY2lIR2pDc1ZyajgxQURCVVJGQjNmVkFMU0dnR3NwcwpLUFRlWjZod2MxZEdTNm10OUdSNjREQjd5ci9tZXRwZXM5ZUh5WHpQVTRHV3dJMll6TnpBQlFkZ0tWdjJXa0luCksyVnFXSjk2VStwWVhycFFsR0ptMmdnRmhjblpTK3c3ZVJ1Nm4vMFFjOU9KdzQyeHVNQllaalF2OENJcVc1TDYKUXNhRFRwYlJlOFVmamhZOFo1cXMKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQoKLS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURRRENDQWlpZ0F3SUJBZ0lJVXdMTkJjaHNZT1l3RFFZSktvWklodmNOQVFFTEJRQXdQakVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1TZ3dKZ1lEVlFRREV4OXJkV0psTFdGd2FYTmxjblpsY2kxc2IyTmhiR2h2YzNRdApjMmxuYm1WeU1CNFhEVEl6TURReE9ERXpNRGd4TUZvWERUTXpNRFF4TlRFek1EZ3hNRm93UGpFU01CQUdBMVVFCkN4TUpiM0JsYm5Ob2FXWjBNU2d3SmdZRFZRUURFeDlyZFdKbExXRndhWE5sY25abGNpMXNiMk5oYkdodmMzUXQKYzJsbmJtVnlNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DQVE4QU1JSUJDZ0tDQVFFQXVrQXFycmwrWHROcwpNQm1JMkRnZmlwUmMvNEluLytGZ2txSWZmaENTYzU3eXhGaXZBRXR5VTM3WERlQmNkeHNFMDRLQ1RuSDEram5PCm5VZkxlWFVKMmlHcFF6R1FSZ2FjV3VkeERBdUc1VmZmYkN0RkpxRGQvKzRTT3J6SlRQellvditUTGxPc296QlMKSHc5WWN4K1JmZUw0R3NlaXVhQVdmaFcreHdkQVFHWVg0eFJNcVBkcmlCY1JQUkprd2Q2K21xZ3FuM0t4UjI3VgpWeU85NnNlYWdjME5IR3h0dUlBUTF2eWgzeThvM2E3bURUdWJ6VDNRMXhTeDZTUUljd0I5K0RaUkRjMGwwUlBwClhzYVBuMVhMMzVYcHR0MHkxQTBZKzlKTXM5SWxTNkpCbzVNYzBERnNQWVNFZlNoeXZ5TVBDZFZ5bXdPcVRkbEcKdEpaZUxWazFKd0lEQVFBQm8wSXdRREFPQmdOVkhROEJBZjhFQkFNQ0FxUXdEd1lEVlIwVEFRSC9CQVV3QXdFQgovekFkQmdOVkhRNEVGZ1FVa01iUHN5YU5OaGg0bXlZZ3FOelJ5QmUzc21Rd0RRWUpLb1pJaHZjTkFRRUxCUUFECmdnRUJBR1FEMTZNdTAybEVaY1BodTNxcjFHRnVVQUZFWWh5T0hRSFVFcklUOU9rQ2hvczU4eUZ0WThPRFlwelYKdS83MllMVDBoSkdrY0diREVEN2dNTzNGMXhvWEc2bFh4Y2htb0FhOFZhWlpxTUJBckdVQXE4aXppUUdPUUMzawpaYVh4SjcrMGhhNTA0Q2xnUDJJd3hIMTlBOFhRVi8rS0hPU05YbjFGaDlSMXdNM2tHRG9JSFQ2bFZ4R1RlMTNZCldEMEN2NTRxZCtMWElSOCsrbVFVSXdMd1cwd3NKUEUybG5MYVhvSzQ5MHp6WDJvWWMxUWJ1WGNqeUxWY3pVUG0KVWFxY29IeDVjS3pabytjM2I5QVpvaDZzRjRvMG1LOWdJT2RWZXFzTitkbWlKSFJIeElhT0hYSzg2SFJpczRWWQpPM0VhTTlxWnViOS9vQ3BSRVcrN25CWWVDemM9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K"
            }
        ]
    },
    "*tls.KubeAPIServerLocalhostSignerCertKey": {
        "CertRaw": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURRRENDQWlpZ0F3SUJBZ0lJVXdMTkJjaHNZT1l3RFFZSktvWklodmNOQVFFTEJRQXdQakVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1TZ3dKZ1lEVlFRREV4OXJkV0psTFdGd2FYTmxjblpsY2kxc2IyTmhiR2h2YzNRdApjMmxuYm1WeU1CNFhEVEl6TURReE9ERXpNRGd4TUZvWERUTXpNRFF4TlRFek1EZ3hNRm93UGpFU01CQUdBMVVFCkN4TUpiM0JsYm5Ob2FXWjBNU2d3SmdZRFZRUURFeDlyZFdKbExXRndhWE5sY25abGNpMXNiMk5oYkdodmMzUXQKYzJsbmJtVnlNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DQVE4QU1JSUJDZ0tDQVFFQXVrQXFycmwrWHROcwpNQm1JMkRnZmlwUmMvNEluLytGZ2txSWZmaENTYzU3eXhGaXZBRXR5VTM3WERlQmNkeHNFMDRLQ1RuSDEram5PCm5VZkxlWFVKMmlHcFF6R1FSZ2FjV3VkeERBdUc1VmZmYkN0RkpxRGQvKzRTT3J6SlRQellvditUTGxPc296QlMKSHc5WWN4K1JmZUw0R3NlaXVhQVdmaFcreHdkQVFHWVg0eFJNcVBkcmlCY1JQUkprd2Q2K21xZ3FuM0t4UjI3VgpWeU85NnNlYWdjME5IR3h0dUlBUTF2eWgzeThvM2E3bURUdWJ6VDNRMXhTeDZTUUljd0I5K0RaUkRjMGwwUlBwClhzYVBuMVhMMzVYcHR0MHkxQTBZKzlKTXM5SWxTNkpCbzVNYzBERnNQWVNFZlNoeXZ5TVBDZFZ5bXdPcVRkbEcKdEpaZUxWazFKd0lEQVFBQm8wSXdRREFPQmdOVkhROEJBZjhFQkFNQ0FxUXdEd1lEVlIwVEFRSC9CQVV3QXdFQgovekFkQmdOVkhRNEVGZ1FVa01iUHN5YU5OaGg0bXlZZ3FOelJ5QmUzc21Rd0RRWUpLb1pJaHZjTkFRRUxCUUFECmdnRUJBR1FEMTZNdTAybEVaY1BodTNxcjFHRnVVQUZFWWh5T0hRSFVFcklUOU9rQ2hvczU4eUZ0WThPRFlwelYKdS83MllMVDBoSkdrY0diREVEN2dNTzNGMXhvWEc2bFh4Y2htb0FhOFZhWlpxTUJBckdVQXE4aXppUUdPUUMzawpaYVh4SjcrMGhhNTA0Q2xnUDJJd3hIMTlBOFhRVi8rS0hPU05YbjFGaDlSMXdNM2tHRG9JSFQ2bFZ4R1RlMTNZCldEMEN2NTRxZCtMWElSOCsrbVFVSXdMd1cwd3NKUEUybG5MYVhvSzQ5MHp6WDJvWWMxUWJ1WGNqeUxWY3pVUG0KVWFxY29IeDVjS3pabytjM2I5QVpvaDZzRjRvMG1LOWdJT2RWZXFzTitkbWlKSFJIeElhT0hYSzg2SFJpczRWWQpPM0VhTTlxWnViOS9vQ3BSRVcrN25CWWVDemM9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K",
        "KeyRaw": "LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb2dJQkFBS0NBUUVBdWtBcXJybCtYdE5zTUJtSTJEZ2ZpcFJjLzRJbi8rRmdrcUlmZmhDU2M1N3l4Rml2CkFFdHlVMzdYRGVCY2R4c0UwNEtDVG5IMStqbk9uVWZMZVhVSjJpR3BRekdRUmdhY1d1ZHhEQXVHNVZmZmJDdEYKSnFEZC8rNFNPcnpKVFB6WW92K1RMbE9zb3pCU0h3OVljeCtSZmVMNEdzZWl1YUFXZmhXK3h3ZEFRR1lYNHhSTQpxUGRyaUJjUlBSSmt3ZDYrbXFncW4zS3hSMjdWVnlPOTZzZWFnYzBOSEd4dHVJQVExdnloM3k4bzNhN21EVHViCnpUM1ExeFN4NlNRSWN3QjkrRFpSRGMwbDBSUHBYc2FQbjFYTDM1WHB0dDB5MUEwWSs5Sk1zOUlsUzZKQm81TWMKMERGc1BZU0VmU2h5dnlNUENkVnltd09xVGRsR3RKWmVMVmsxSndJREFRQUJBb0lCQUNYNnQ3bHhjZWQ4VFc5eApoWW94eDV6R3JFQWVGbklEVDJJWFZUeXJ2SEYvVkJuZHk3SFBzTHg5L1BTRGI5ZUoxdTRhaXQvY05VQ1ZVU0NaCloxQ1pJUzB0K0FvUHJVL2FRVC80T2dFdXlJOHo0QWQ2dTFzcEtwdnB2Q1htSVZabHFQZDBEbHRBRE5BcUpsVFgKR0Q1QmpiV1I5dTNmRDd1eWZXT3dvM3FLYS91MWZEWXB4N3o1TDRDSGxPTGxEUGRBK2M3VDRTRFFwOFM4WWlITApHdUNwZUY0SUxqQ2t4dmVJOERCVW80YjBCcHhCV091aHJXQ1dWb0xsYXZWUGpUVTByVkdnL0xkMzlnOWJjQmNzCktVNkM4eDNvU2lBYXpra2NuMTd4NUZGNGMxdnVpSHp1djVUYlZwKzlUR1l6Mit2V0Q1SEJETDBwNkU1SE9tSzEKZGFEL0cwRUNnWUVBd2ltR1RVSUZGbU81cDkvR1BHMFJZeFEvTzJiTDNGc3lqWkFjZ3BEcnJWSGpIWmpDdllQcApXY3pJWlE4T2pLVGNuUXZiT2Z1by9PZ3lBMmVYZnJUVXBIVzVwMDFHV0ttcmd6UXkraG9BYjRqNnBsdWIxSXZWCkd1cFpMdGVxNVRSWXFydVR6enplQTNCbmNmOHpJcXJjbEViSkhRZ3B4WVhBb2lQeE5WVnlpSjhDZ1lFQTlaR1kKZFcwMlNld1FZS2lVNEV5UTlTalI2T3pDanZCTEtzV2dGVm1mWDcvTmdRSE9LeTQ3RkFsc0JicHprRmNERW00MQpoN1E5YXR1N0c3Z2lObkExZExTT0F3S1FNbU1ScSt1cDMxVyt3NGk2MU51QmRPTS80QjNjcWo4Mmp5ak1UVFJVClJOa1MrbzZxcTVpS3NEOTBBV1MyWkNxWGxnSkRPNkZHaGRGTUhua0NnWUJVQWl0OTJnYmhmUnlqS2d0WHNjbEkKR1VhU3FST2pzRUhiUm5OUGV1eTkvU1JMZGdFc2hwcThwQUpBMTVidis1VUl6a3g0ZGc3VC9wTkZMZGs2bFhzNwovVVBxdzJDZ2xDa0ZoOXhXb2xGMThNcWltQmlBaWxBV2FUZFZNVE5jSUo0TW9VUis4bE1OSWVGZ1RZOE9mT2NiCnNOVHJudENVQ2g4akNISWhKV3Q4K1FLQmdIVU1yd1RaeDVTNHBwM0wvUnBrcEh1V3QyYzA0dy9LemFsWGhaUm4Kb2FXOEFMSkxNQUE1Q3dQajhjOVJMaUJRdVRBaHcvWXBIVlUvNHhHMVZPbHAxckVJRnVDc2FocjZTY1FPa212WApyUlA2cWtNblZhOW5XbHp6SHVrdk5FeE1nQVVVdWs0T3doTVh5Wlg5SWE0Y3NLaXhYcGFrRHBqNy94di9KV1JICmZPYlJBb0dBRHZjL3NMUW40eU5yMjh2d1RpZWZPeUpoRWN6NXQ3ZEE1amJVZk5oMm4zSUp2SVN1c083c3F0dEkKMDk0dWdsZDREazNLUTR0Q3F0cjBqSEJyOHQ3dkc4NHcrbU1aTlFqQVYyQWREN1RRY2sxdDFsMVlrc2Nyc0o5QgpYQ1NpMVF5N2ROWGtOTXNIUzNWSXVJblkxb294YjVvVDBMWGhDc0dpeU10ZkNPS2Q1UXc9Ci0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==",
        "FileList": [
            {
                "Filename": "tls/kube-apiserver-localhost-signer.key",
                "Data": "LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb2dJQkFBS0NBUUVBdWtBcXJybCtYdE5zTUJtSTJEZ2ZpcFJjLzRJbi8rRmdrcUlmZmhDU2M1N3l4Rml2CkFFdHlVMzdYRGVCY2R4c0UwNEtDVG5IMStqbk9uVWZMZVhVSjJpR3BRekdRUmdhY1d1ZHhEQXVHNVZmZmJDdEYKSnFEZC8rNFNPcnpKVFB6WW92K1RMbE9zb3pCU0h3OVljeCtSZmVMNEdzZWl1YUFXZmhXK3h3ZEFRR1lYNHhSTQpxUGRyaUJjUlBSSmt3ZDYrbXFncW4zS3hSMjdWVnlPOTZzZWFnYzBOSEd4dHVJQVExdnloM3k4bzNhN21EVHViCnpUM1ExeFN4NlNRSWN3QjkrRFpSRGMwbDBSUHBYc2FQbjFYTDM1WHB0dDB5MUEwWSs5Sk1zOUlsUzZKQm81TWMKMERGc1BZU0VmU2h5dnlNUENkVnltd09xVGRsR3RKWmVMVmsxSndJREFRQUJBb0lCQUNYNnQ3bHhjZWQ4VFc5eApoWW94eDV6R3JFQWVGbklEVDJJWFZUeXJ2SEYvVkJuZHk3SFBzTHg5L1BTRGI5ZUoxdTRhaXQvY05VQ1ZVU0NaCloxQ1pJUzB0K0FvUHJVL2FRVC80T2dFdXlJOHo0QWQ2dTFzcEtwdnB2Q1htSVZabHFQZDBEbHRBRE5BcUpsVFgKR0Q1QmpiV1I5dTNmRDd1eWZXT3dvM3FLYS91MWZEWXB4N3o1TDRDSGxPTGxEUGRBK2M3VDRTRFFwOFM4WWlITApHdUNwZUY0SUxqQ2t4dmVJOERCVW80YjBCcHhCV091aHJXQ1dWb0xsYXZWUGpUVTByVkdnL0xkMzlnOWJjQmNzCktVNkM4eDNvU2lBYXpra2NuMTd4NUZGNGMxdnVpSHp1djVUYlZwKzlUR1l6Mit2V0Q1SEJETDBwNkU1SE9tSzEKZGFEL0cwRUNnWUVBd2ltR1RVSUZGbU81cDkvR1BHMFJZeFEvTzJiTDNGc3lqWkFjZ3BEcnJWSGpIWmpDdllQcApXY3pJWlE4T2pLVGNuUXZiT2Z1by9PZ3lBMmVYZnJUVXBIVzVwMDFHV0ttcmd6UXkraG9BYjRqNnBsdWIxSXZWCkd1cFpMdGVxNVRSWXFydVR6enplQTNCbmNmOHpJcXJjbEViSkhRZ3B4WVhBb2lQeE5WVnlpSjhDZ1lFQTlaR1kKZFcwMlNld1FZS2lVNEV5UTlTalI2T3pDanZCTEtzV2dGVm1mWDcvTmdRSE9LeTQ3RkFsc0JicHprRmNERW00MQpoN1E5YXR1N0c3Z2lObkExZExTT0F3S1FNbU1ScSt1cDMxVyt3NGk2MU51QmRPTS80QjNjcWo4Mmp5ak1UVFJVClJOa1MrbzZxcTVpS3NEOTBBV1MyWkNxWGxnSkRPNkZHaGRGTUhua0NnWUJVQWl0OTJnYmhmUnlqS2d0WHNjbEkKR1VhU3FST2pzRUhiUm5OUGV1eTkvU1JMZGdFc2hwcThwQUpBMTVidis1VUl6a3g0ZGc3VC9wTkZMZGs2bFhzNwovVVBxdzJDZ2xDa0ZoOXhXb2xGMThNcWltQmlBaWxBV2FUZFZNVE5jSUo0TW9VUis4bE1OSWVGZ1RZOE9mT2NiCnNOVHJudENVQ2g4akNISWhKV3Q4K1FLQmdIVU1yd1RaeDVTNHBwM0wvUnBrcEh1V3QyYzA0dy9LemFsWGhaUm4Kb2FXOEFMSkxNQUE1Q3dQajhjOVJMaUJRdVRBaHcvWXBIVlUvNHhHMVZPbHAxckVJRnVDc2FocjZTY1FPa212WApyUlA2cWtNblZhOW5XbHp6SHVrdk5FeE1nQVVVdWs0T3doTVh5Wlg5SWE0Y3NLaXhYcGFrRHBqNy94di9KV1JICmZPYlJBb0dBRHZjL3NMUW40eU5yMjh2d1RpZWZPeUpoRWN6NXQ3ZEE1amJVZk5oMm4zSUp2SVN1c083c3F0dEkKMDk0dWdsZDREazNLUTR0Q3F0cjBqSEJyOHQ3dkc4NHcrbU1aTlFqQVYyQWREN1RRY2sxdDFsMVlrc2Nyc0o5QgpYQ1NpMVF5N2ROWGtOTXNIUzNWSXVJblkxb294YjVvVDBMWGhDc0dpeU10ZkNPS2Q1UXc9Ci0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg=="
            },
            {
                "Filename": "tls/kube-apiserver-localhost-signer.crt",
                "Data": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURRRENDQWlpZ0F3SUJBZ0lJVXdMTkJjaHNZT1l3RFFZSktvWklodmNOQVFFTEJRQXdQakVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1TZ3dKZ1lEVlFRREV4OXJkV0psTFdGd2FYTmxjblpsY2kxc2IyTmhiR2h2YzNRdApjMmxuYm1WeU1CNFhEVEl6TURReE9ERXpNRGd4TUZvWERUTXpNRFF4TlRFek1EZ3hNRm93UGpFU01CQUdBMVVFCkN4TUpiM0JsYm5Ob2FXWjBNU2d3SmdZRFZRUURFeDlyZFdKbExXRndhWE5sY25abGNpMXNiMk5oYkdodmMzUXQKYzJsbmJtVnlNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DQVE4QU1JSUJDZ0tDQVFFQXVrQXFycmwrWHROcwpNQm1JMkRnZmlwUmMvNEluLytGZ2txSWZmaENTYzU3eXhGaXZBRXR5VTM3WERlQmNkeHNFMDRLQ1RuSDEram5PCm5VZkxlWFVKMmlHcFF6R1FSZ2FjV3VkeERBdUc1VmZmYkN0RkpxRGQvKzRTT3J6SlRQellvditUTGxPc296QlMKSHc5WWN4K1JmZUw0R3NlaXVhQVdmaFcreHdkQVFHWVg0eFJNcVBkcmlCY1JQUkprd2Q2K21xZ3FuM0t4UjI3VgpWeU85NnNlYWdjME5IR3h0dUlBUTF2eWgzeThvM2E3bURUdWJ6VDNRMXhTeDZTUUljd0I5K0RaUkRjMGwwUlBwClhzYVBuMVhMMzVYcHR0MHkxQTBZKzlKTXM5SWxTNkpCbzVNYzBERnNQWVNFZlNoeXZ5TVBDZFZ5bXdPcVRkbEcKdEpaZUxWazFKd0lEQVFBQm8wSXdRREFPQmdOVkhROEJBZjhFQkFNQ0FxUXdEd1lEVlIwVEFRSC9CQVV3QXdFQgovekFkQmdOVkhRNEVGZ1FVa01iUHN5YU5OaGg0bXlZZ3FOelJ5QmUzc21Rd0RRWUpLb1pJaHZjTkFRRUxCUUFECmdnRUJBR1FEMTZNdTAybEVaY1BodTNxcjFHRnVVQUZFWWh5T0hRSFVFcklUOU9rQ2hvczU4eUZ0WThPRFlwelYKdS83MllMVDBoSkdrY0diREVEN2dNTzNGMXhvWEc2bFh4Y2htb0FhOFZhWlpxTUJBckdVQXE4aXppUUdPUUMzawpaYVh4SjcrMGhhNTA0Q2xnUDJJd3hIMTlBOFhRVi8rS0hPU05YbjFGaDlSMXdNM2tHRG9JSFQ2bFZ4R1RlMTNZCldEMEN2NTRxZCtMWElSOCsrbVFVSXdMd1cwd3NKUEUybG5MYVhvSzQ5MHp6WDJvWWMxUWJ1WGNqeUxWY3pVUG0KVWFxY29IeDVjS3pabytjM2I5QVpvaDZzRjRvMG1LOWdJT2RWZXFzTitkbWlKSFJIeElhT0hYSzg2SFJpczRWWQpPM0VhTTlxWnViOS9vQ3BSRVcrN25CWWVDemM9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K"
            }
        ]
    },
    "*tls.KubeAPIServerServiceNetworkCABundle": {
        "BundleRaw": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURURENDQWpTZ0F3SUJBZ0lJUjhMVUtrdnFZdFF3RFFZSktvWklodmNOQVFFTEJRQXdSREVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1TNHdMQVlEVlFRREV5VnJkV0psTFdGd2FYTmxjblpsY2kxelpYSjJhV05sTFc1bApkSGR2Y21zdGMybG5ibVZ5TUI0WERUSXpNRFF4T0RFek1EZ3hNRm9YRFRNek1EUXhOVEV6TURneE1Gb3dSREVTCk1CQUdBMVVFQ3hNSmIzQmxibk5vYVdaME1TNHdMQVlEVlFRREV5VnJkV0psTFdGd2FYTmxjblpsY2kxelpYSjIKYVdObExXNWxkSGR2Y21zdGMybG5ibVZ5TUlJQklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQwpBUUVBNW9wNGpiL25wMW5OZURMSEp5K3EvcVByY1Z5bmNDLzg0ZDFiemp6dDlPTUpicnJ0TkEyTHlvNTBPblZaCmRIMTk5MklIbERTYnJLZFJacE9OR2Q1ZVRNT2hjZUNudVp3MWJ5K0ZBL0FJSHZ6alR4eXV5ZUNqajdQS0xQYm0KSlRsQm5nSjNSVnozV0dRai9MMEdJRWZYV0QwMndkdHJaYmY3dFBtUHEwQWYxYlY5MlM5U21XTWovcWoyTnVYaApLeWZ5aFU0ckI2b0NPQjlDY0M1VENtQW9DdzFJQjBFUEo3UmpxbFFnUVpCTTlwT1BYYTFDWFlleFZ6TFV4ZUZMClFTcHRiUW1UWnp6Yms0cUZrdkVRUlA1VFZEK3VKUXdkNlIvbUhseTZ6ZWRTUEh4SWpzYXVOYzE3bG8xamg5dkgKZkptUUQ5RElpSnU0dW9aaEErejQxQW9sZVFJREFRQUJvMEl3UURBT0JnTlZIUThCQWY4RUJBTUNBcVF3RHdZRApWUjBUQVFIL0JBVXdBd0VCL3pBZEJnTlZIUTRFRmdRVUFpU251cjQ0bVBvT1NsbUlrbE13aWhnMHFnd3dEUVlKCktvWklodmNOQVFFTEJRQURnZ0VCQUxKY2xtaVVKRnhHR0V2TWFwcGNKUXp0UTY0MFhvS0dxeXZVY2xnR0NKK3UKb0MzZmVIdTRKNzJqM1hoZ0VPMEVrbngySWt2ME5JZFplazZyUDk2Rk0ranVHZGZya3RSNmJkbXFpZHJHWXdMWgpLQnVLa0N3b1h0bDVtNWg5eURTRzVuYWRBcWg4VzhEdUhuUFhpZ25HLzk0UmcwRWxVUEw2ZTV4MHNHVUpVVEVXCkYrNzNiajE3RFV0b0RDd0JEY20yK1kxMTVsYzMySEhGTnRYaTFvTUYvRVpaL3F1bGQ3NDJzYUQ4Uk5ta0p5N1EKT3BIK1ZFSnNOUktpZHcyQVdTUW9idEYzbVIvbWFpTktMNExGUldISFNjNTduUkVlOGFUNEQvUFBmcVJKYndxOApLNEZ4TzNmQzRlbFpZaTFHVm5UbnR5RUVLM2JBS2pOblcyOGNBcTNIbkJZPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==",
        "FileList": [
            {
                "Filename": "tls/kube-apiserver-service-network-ca-bundle.crt",
                "Data": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURURENDQWpTZ0F3SUJBZ0lJUjhMVUtrdnFZdFF3RFFZSktvWklodmNOQVFFTEJRQXdSREVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1TNHdMQVlEVlFRREV5VnJkV0psTFdGd2FYTmxjblpsY2kxelpYSjJhV05sTFc1bApkSGR2Y21zdGMybG5ibVZ5TUI0WERUSXpNRFF4T0RFek1EZ3hNRm9YRFRNek1EUXhOVEV6TURneE1Gb3dSREVTCk1CQUdBMVVFQ3hNSmIzQmxibk5vYVdaME1TNHdMQVlEVlFRREV5VnJkV0psTFdGd2FYTmxjblpsY2kxelpYSjIKYVdObExXNWxkSGR2Y21zdGMybG5ibVZ5TUlJQklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQwpBUUVBNW9wNGpiL25wMW5OZURMSEp5K3EvcVByY1Z5bmNDLzg0ZDFiemp6dDlPTUpicnJ0TkEyTHlvNTBPblZaCmRIMTk5MklIbERTYnJLZFJacE9OR2Q1ZVRNT2hjZUNudVp3MWJ5K0ZBL0FJSHZ6alR4eXV5ZUNqajdQS0xQYm0KSlRsQm5nSjNSVnozV0dRai9MMEdJRWZYV0QwMndkdHJaYmY3dFBtUHEwQWYxYlY5MlM5U21XTWovcWoyTnVYaApLeWZ5aFU0ckI2b0NPQjlDY0M1VENtQW9DdzFJQjBFUEo3UmpxbFFnUVpCTTlwT1BYYTFDWFlleFZ6TFV4ZUZMClFTcHRiUW1UWnp6Yms0cUZrdkVRUlA1VFZEK3VKUXdkNlIvbUhseTZ6ZWRTUEh4SWpzYXVOYzE3bG8xamg5dkgKZkptUUQ5RElpSnU0dW9aaEErejQxQW9sZVFJREFRQUJvMEl3UURBT0JnTlZIUThCQWY4RUJBTUNBcVF3RHdZRApWUjBUQVFIL0JBVXdBd0VCL3pBZEJnTlZIUTRFRmdRVUFpU251cjQ0bVBvT1NsbUlrbE13aWhnMHFnd3dEUVlKCktvWklodmNOQVFFTEJRQURnZ0VCQUxKY2xtaVVKRnhHR0V2TWFwcGNKUXp0UTY0MFhvS0dxeXZVY2xnR0NKK3UKb0MzZmVIdTRKNzJqM1hoZ0VPMEVrbngySWt2ME5JZFplazZyUDk2Rk0ranVHZGZya3RSNmJkbXFpZHJHWXdMWgpLQnVLa0N3b1h0bDVtNWg5eURTRzVuYWRBcWg4VzhEdUhuUFhpZ25HLzk0UmcwRWxVUEw2ZTV4MHNHVUpVVEVXCkYrNzNiajE3RFV0b0RDd0JEY20yK1kxMTVsYzMySEhGTnRYaTFvTUYvRVpaL3F1bGQ3NDJzYUQ4Uk5ta0p5N1EKT3BIK1ZFSnNOUktpZHcyQVdTUW9idEYzbVIvbWFpTktMNExGUldISFNjNTduUkVlOGFUNEQvUFBmcVJKYndxOApLNEZ4TzNmQzRlbFpZaTFHVm5UbnR5RUVLM2JBS2pOblcyOGNBcTNIbkJZPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg=="
            }
        ]
    },
    "*tls.KubeAPIServerServiceNetworkServerCertKey": {
        "CertRaw": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUVRVENDQXltZ0F3SUJBZ0lJQmJoelVpZ2YrcG93RFFZSktvWklodmNOQVFFTEJRQXdSREVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1TNHdMQVlEVlFRREV5VnJkV0psTFdGd2FYTmxjblpsY2kxelpYSjJhV05sTFc1bApkSGR2Y21zdGMybG5ibVZ5TUI0WERUSXpNRFF4T0RFek1EZ3hNRm9YRFRJek1EUXhPVEV6TURneE0xb3dOakVVCk1CSUdBMVVFQ2hNTGEzVmlaUzF0WVhOMFpYSXhIakFjQmdOVkJBTVRGWE41YzNSbGJUcHJkV0psTFdGd2FYTmwKY25abGNqQ0NBU0l3RFFZSktvWklodmNOQVFFQkJRQURnZ0VQQURDQ0FRb0NnZ0VCQUxWTkI1SjAramt4SHZNaAovM0xONjJpcWd6NXZpTHlUMUV6WGhCdUJCS21MOE5GczR1YTVkM01uUEQ3all4czdsbFlScUJLcGpzZ3NZVXZ2CjdOMjc3V1MyVk9oT2VxMXRVOTJDYjV6V1lwQ0U1dk12REpFNmpWQlFEOHp4ZHEycFAveHd1eng1S1gxSmZzN0cKZ3M5UU1ZUXoxa2dLZXZZRlMwYkY5bmM5eEtSQ3pKdm9rMWxrT1RqenN5TDlGdFBYODg5YWpHVWR1S0R2SkVzdApSalNldWw5Uzc0UkxINkt5ZGxnZ3gxZ3lvaGZPSS8wQ3BVSUwyREtYQmJDKzVGSGU4OHVwdkNvcjJSbjk5L1dMCjAxcDhmSXJpLzJVblh5TDM3QTR3SVBBeHpmRE90VjNDTW1oK0szSjVIMWl2SC9DQkM2VWZ0b3VoaGFPYWtUMGUKZTZQRVo4MENBd0VBQWFPQ0FVTXdnZ0UvTUE0R0ExVWREd0VCL3dRRUF3SUZvREFUQmdOVkhTVUVEREFLQmdncgpCZ0VGQlFjREFUQU1CZ05WSFJNQkFmOEVBakFBTUIwR0ExVWREZ1FXQkJSN0FnVlQvN2xGUTRlUWtrbEFQblJDCmRJcjFXakFmQmdOVkhTTUVHREFXZ0JRQ0pLZTZ2amlZK2c1S1dZaVNVekNLR0RTcUREQ0J5UVlEVlIwUkJJSEIKTUlHK2dncHJkV0psY201bGRHVnpnaEpyZFdKbGNtNWxkR1Z6TG1SbFptRjFiSFNDRm10MVltVnlibVYwWlhNdQpaR1ZtWVhWc2RDNXpkbU9DSkd0MVltVnlibVYwWlhNdVpHVm1ZWFZzZEM1emRtTXVZMngxYzNSbGNpNXNiMk5oCmJJSUpiM0JsYm5Ob2FXWjBnaEZ2Y0dWdWMyaHBablF1WkdWbVlYVnNkSUlWYjNCbGJuTm9hV1owTG1SbFptRjEKYkhRdWMzWmpnaU52Y0dWdWMyaHBablF1WkdWbVlYVnNkQzV6ZG1NdVkyeDFjM1JsY2k1c2IyTmhiSWNFckI0QQpBVEFOQmdrcWhraUc5dzBCQVFzRkFBT0NBUUVBNFJ5K3AyVmlHY25UNlIvc015NS83VEs0emsydEhzaUVwVTV0ClVzblJEei9DRzM4WHlXRytMYlVBYWlCV012RTdSSDh4b3hDemQydmp2OUF6WnFyTDBJam9iNks5MFRic3VtYkkKM1hBVmRnMU0wQUx5cWJBKzB1NklsWWRXTTdXUWRWK25GVFpkN1g5MTlBUVNlK0tMNmswUEh1ZzVoNFdadHpEMQp2ZWROZHRvQ0FhclZOTjI0QStpMUhXbnBaejhndFhSRlBNbS9zZ1h5QzhaMW1Ob003K2tMM2xQUnJoOEVHNUNHCmg2b0RucXVyNkJFQWxYRmRlMDc5Z2ZnS1kwcGtDNGpjTFpGdWNCaklvODAzOWloU2hPa3RGN2VUUmN5NzNGMlMKRktRUm1iSnRWVnYrWnZZNlFZaVRWc2crSlpYc0Y4Q0F4NWIxc2k0VS8zSm5Kckx6Mmc9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCgotLS0tLUJFR0lOIENFUlRJRklDQVRFLS0tLS0KTUlJRFREQ0NBalNnQXdJQkFnSUlSOExVS2t2cVl0UXdEUVlKS29aSWh2Y05BUUVMQlFBd1JERVNNQkFHQTFVRQpDeE1KYjNCbGJuTm9hV1owTVM0d0xBWURWUVFERXlWcmRXSmxMV0Z3YVhObGNuWmxjaTF6WlhKMmFXTmxMVzVsCmRIZHZjbXN0YzJsbmJtVnlNQjRYRFRJek1EUXhPREV6TURneE1Gb1hEVE16TURReE5URXpNRGd4TUZvd1JERVMKTUJBR0ExVUVDeE1KYjNCbGJuTm9hV1owTVM0d0xBWURWUVFERXlWcmRXSmxMV0Z3YVhObGNuWmxjaTF6WlhKMgphV05sTFc1bGRIZHZjbXN0YzJsbmJtVnlNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DQVE4QU1JSUJDZ0tDCkFRRUE1b3A0amIvbnAxbk5lRExISnkrcS9xUHJjVnluY0MvODRkMWJ6anp0OU9NSmJycnROQTJMeW81ME9uVloKZEgxOTkySUhsRFNicktkUlpwT05HZDVlVE1PaGNlQ251WncxYnkrRkEvQUlIdnpqVHh5dXllQ2pqN1BLTFBibQpKVGxCbmdKM1JWejNXR1FqL0wwR0lFZlhXRDAyd2R0clpiZjd0UG1QcTBBZjFiVjkyUzlTbVdNai9xajJOdVhoCkt5ZnloVTRyQjZvQ09COUNjQzVUQ21Bb0N3MUlCMEVQSjdSanFsUWdRWkJNOXBPUFhhMUNYWWV4VnpMVXhlRkwKUVNwdGJRbVRaenpiazRxRmt2RVFSUDVUVkQrdUpRd2Q2Ui9tSGx5NnplZFNQSHhJanNhdU5jMTdsbzFqaDl2SApmSm1RRDlESWlKdTR1b1poQSt6NDFBb2xlUUlEQVFBQm8wSXdRREFPQmdOVkhROEJBZjhFQkFNQ0FxUXdEd1lEClZSMFRBUUgvQkFVd0F3RUIvekFkQmdOVkhRNEVGZ1FVQWlTbnVyNDRtUG9PU2xtSWtsTXdpaGcwcWd3d0RRWUoKS29aSWh2Y05BUUVMQlFBRGdnRUJBTEpjbG1pVUpGeEdHRXZNYXBwY0pRenRRNjQwWG9LR3F5dlVjbGdHQ0ordQpvQzNmZUh1NEo3MmozWGhnRU8wRWtueDJJa3YwTklkWmVrNnJQOTZGTStqdUdkZnJrdFI2YmRtcWlkckdZd0xaCktCdUtrQ3dvWHRsNW01aDl5RFNHNW5hZEFxaDhXOER1SG5QWGlnbkcvOTRSZzBFbFVQTDZlNXgwc0dVSlVURVcKRis3M2JqMTdEVXRvREN3QkRjbTIrWTExNWxjMzJISEZOdFhpMW9NRi9FWlovcXVsZDc0MnNhRDhSTm1rSnk3UQpPcEgrVkVKc05SS2lkdzJBV1NRb2J0RjNtUi9tYWlOS0w0TEZSV0hIU2M1N25SRWU4YVQ0RC9QUGZxUkpid3E4Cks0RnhPM2ZDNGVsWllpMUdWblRudHlFRUszYkFLak5uVzI4Y0FxM0huQlk9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K",
        "KeyRaw": "LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBdFUwSGtuVDZPVEVlOHlIL2NzM3JhS3FEUG0rSXZKUFVUTmVFRzRFRXFZdncwV3ppCjVybDNjeWM4UHVOakd6dVdWaEdvRXFtT3lDeGhTKy9zM2J2dFpMWlU2RTU2clcxVDNZSnZuTlppa0lUbTh5OE0Ka1RxTlVGQVB6UEYycmFrLy9IQzdQSGtwZlVsK3pzYUN6MUF4aERQV1NBcDY5Z1ZMUnNYMmR6M0VwRUxNbStpVApXV1E1T1BPekl2MFcwOWZ6ejFxTVpSMjRvTzhrU3kxR05KNjZYMUx2aEVzZm9ySjJXQ0RIV0RLaUY4NGovUUtsClFndllNcGNGc0w3a1VkN3p5Nm04S2l2WkdmMzM5WXZUV254OGl1TC9aU2RmSXZmc0RqQWc4REhOOE02MVhjSXkKYUg0cmNua2ZXSzhmOElFTHBSKzJpNkdGbzVxUlBSNTdvOFJuelFJREFRQUJBb0lCQUVSMzJMbzRyeDdXTENnSgoyTnpVWTJqZHJEN3lCQ09qZUhPa21HR0NzZTROeVY1dHpxcnZzK3FyRUpkM2JFQW1tcm5hWlN6WEYvTUV2NkhiCjlBb3hKSS82UThxUGlNamlGdC82bUlnVWRwaTVlRGF5dC81SXJJRitHdGw4L3lMS1hqM0puUXhUZlpXeElkQ1oKSzJGN21aZWhzL1QwOEViazdPN0hhRExVQXVVOUtpdGg4SnRZTXVBK1BLQi9GNWNhVzU0Z2FGRFpzRC9xQTJIcApCMk03Zy9jQ2R5cGlQTTBNbk5rT2FFVWFueWxmZDI5YmtBdUZCMjhsSTNPdTVOK29QUFYwL29jVXBudUtZY0FICmlWdkxIeWNSYmJ6d0xLTStJODNRUkhrZkNNeHNYUWxSZG4rc0Y2ZHNhMm1Xd3hRTXlGYkJQTnBJcFVtVlNpN1MKZXZ3VFVRa0NnWUVBMXE1MTR3bEZzUXc2VzNYZUYzOFVaTkQwbUl5UmFvSHdseWpJYm1CODNMTnRKZENKbmpFTQpuSHdlSlZ1dklIYVlCeVN0Nm5RbDVSc3d6WVNPeXF5YkJMcXI2dkF4NEdFbVRMZ1hwRzNka3NpWU9uM0V6R2prClNqcnBpVkZiQmFpSWxCREIrMXc4NVNlMDJueU5MY2hUZjJsc0NSaVlJdmUvbTVqS0JGWkJhWk1DZ1lFQTJESGgKQ0ZmT2MyYUlRNlRPMEc2VTV2aFE2TTZKRzZZemRIU3BUWjN4ckg1TW50blRiY3g5YmhCRjVJcUZFMmovcUE4awpEMGM4ZmxxRnN0dWhNSVVBeHlUVXBveDJwK1YvR0ZhZHo4V0p6WCtzb1dGMWpDSS9hbGYxNlJkNEhyMEV3K0hXCmN6d2prMENST2RBaDVjeHBrN29GTUJlRjdNRDRlMnc0WlZ5TVJSOENnWUVBb2UzYis5RXRvUnJoRmNXMUxMSHQKRnhKSnZKc2l3RnljdGRmTVB2MUdrVTVCZ09sb05FczVBUHZaM1VIbnVhdmFobURUVWVvai8wamdLZFRYdytZbgowNHhlU29xOGhFdWpFUEUyM0E4R3QwWFpGUjF5aU9DQmVjQXdFU1N0YkhvdjhzY2xHa3o3bmJteWY2Njg2cENVCjhxRDVIVzlRcWVlSHZueWp2RnUzWVVNQ2dZRUF6blFUYVZ3d2twTS9YUmx0UmkzVGxCMWRablNWQ2dwVTZNamYKUkhlbjZnbFNNZi9obitDL2h2T1RTd1Bjd1FScjM1bFYzaUV3NjVpV1JJN29CdVY4TUxCRFFpaXd4dlNwd2h3MAo1OHpFSTdIZ3NOdlkzTkYzclo0Qi8yMmlEL2lCTEczbDFIV0JvNFR0S2tCUG5wcnQxMXkweDVBdkhEL0xDbEgyCktSV1AvaEVDZ1lBZVNraDU4dm4rLzE3MnBnWXNqU05NVXNZUzA1dTkwRVJZU0p1QU4xaW1VSzBTNW51ZHhzYlAKdzFXUFlUdFVWS2ZBY29IN3ZKZnZiVnBQcnpCemxpR0tINjhRcmJQK0VzeTZDK1krQjZiTUxVcGFra1ZWb2VpWgo0UUZiOEpWSVBBaXFMM0VFVVFlU1BERTZCT1R3R0UxTmlYc3FLSTF0RTJsaFVIVEJUdnQvekE9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=",
        "FileList": [
            {
                "Filename": "tls/kube-apiserver-service-network-server.key",
                "Data": "LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBdFUwSGtuVDZPVEVlOHlIL2NzM3JhS3FEUG0rSXZKUFVUTmVFRzRFRXFZdncwV3ppCjVybDNjeWM4UHVOakd6dVdWaEdvRXFtT3lDeGhTKy9zM2J2dFpMWlU2RTU2clcxVDNZSnZuTlppa0lUbTh5OE0Ka1RxTlVGQVB6UEYycmFrLy9IQzdQSGtwZlVsK3pzYUN6MUF4aERQV1NBcDY5Z1ZMUnNYMmR6M0VwRUxNbStpVApXV1E1T1BPekl2MFcwOWZ6ejFxTVpSMjRvTzhrU3kxR05KNjZYMUx2aEVzZm9ySjJXQ0RIV0RLaUY4NGovUUtsClFndllNcGNGc0w3a1VkN3p5Nm04S2l2WkdmMzM5WXZUV254OGl1TC9aU2RmSXZmc0RqQWc4REhOOE02MVhjSXkKYUg0cmNua2ZXSzhmOElFTHBSKzJpNkdGbzVxUlBSNTdvOFJuelFJREFRQUJBb0lCQUVSMzJMbzRyeDdXTENnSgoyTnpVWTJqZHJEN3lCQ09qZUhPa21HR0NzZTROeVY1dHpxcnZzK3FyRUpkM2JFQW1tcm5hWlN6WEYvTUV2NkhiCjlBb3hKSS82UThxUGlNamlGdC82bUlnVWRwaTVlRGF5dC81SXJJRitHdGw4L3lMS1hqM0puUXhUZlpXeElkQ1oKSzJGN21aZWhzL1QwOEViazdPN0hhRExVQXVVOUtpdGg4SnRZTXVBK1BLQi9GNWNhVzU0Z2FGRFpzRC9xQTJIcApCMk03Zy9jQ2R5cGlQTTBNbk5rT2FFVWFueWxmZDI5YmtBdUZCMjhsSTNPdTVOK29QUFYwL29jVXBudUtZY0FICmlWdkxIeWNSYmJ6d0xLTStJODNRUkhrZkNNeHNYUWxSZG4rc0Y2ZHNhMm1Xd3hRTXlGYkJQTnBJcFVtVlNpN1MKZXZ3VFVRa0NnWUVBMXE1MTR3bEZzUXc2VzNYZUYzOFVaTkQwbUl5UmFvSHdseWpJYm1CODNMTnRKZENKbmpFTQpuSHdlSlZ1dklIYVlCeVN0Nm5RbDVSc3d6WVNPeXF5YkJMcXI2dkF4NEdFbVRMZ1hwRzNka3NpWU9uM0V6R2prClNqcnBpVkZiQmFpSWxCREIrMXc4NVNlMDJueU5MY2hUZjJsc0NSaVlJdmUvbTVqS0JGWkJhWk1DZ1lFQTJESGgKQ0ZmT2MyYUlRNlRPMEc2VTV2aFE2TTZKRzZZemRIU3BUWjN4ckg1TW50blRiY3g5YmhCRjVJcUZFMmovcUE4awpEMGM4ZmxxRnN0dWhNSVVBeHlUVXBveDJwK1YvR0ZhZHo4V0p6WCtzb1dGMWpDSS9hbGYxNlJkNEhyMEV3K0hXCmN6d2prMENST2RBaDVjeHBrN29GTUJlRjdNRDRlMnc0WlZ5TVJSOENnWUVBb2UzYis5RXRvUnJoRmNXMUxMSHQKRnhKSnZKc2l3RnljdGRmTVB2MUdrVTVCZ09sb05FczVBUHZaM1VIbnVhdmFobURUVWVvai8wamdLZFRYdytZbgowNHhlU29xOGhFdWpFUEUyM0E4R3QwWFpGUjF5aU9DQmVjQXdFU1N0YkhvdjhzY2xHa3o3bmJteWY2Njg2cENVCjhxRDVIVzlRcWVlSHZueWp2RnUzWVVNQ2dZRUF6blFUYVZ3d2twTS9YUmx0UmkzVGxCMWRablNWQ2dwVTZNamYKUkhlbjZnbFNNZi9obitDL2h2T1RTd1Bjd1FScjM1bFYzaUV3NjVpV1JJN29CdVY4TUxCRFFpaXd4dlNwd2h3MAo1OHpFSTdIZ3NOdlkzTkYzclo0Qi8yMmlEL2lCTEczbDFIV0JvNFR0S2tCUG5wcnQxMXkweDVBdkhEL0xDbEgyCktSV1AvaEVDZ1lBZVNraDU4dm4rLzE3MnBnWXNqU05NVXNZUzA1dTkwRVJZU0p1QU4xaW1VSzBTNW51ZHhzYlAKdzFXUFlUdFVWS2ZBY29IN3ZKZnZiVnBQcnpCemxpR0tINjhRcmJQK0VzeTZDK1krQjZiTUxVcGFra1ZWb2VpWgo0UUZiOEpWSVBBaXFMM0VFVVFlU1BERTZCT1R3R0UxTmlYc3FLSTF0RTJsaFVIVEJUdnQvekE9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo="
            },
            {
                "Filename": "tls/kube-apiserver-service-network-server.crt",
                "Data": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUVRVENDQXltZ0F3SUJBZ0lJQmJoelVpZ2YrcG93RFFZSktvWklodmNOQVFFTEJRQXdSREVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1TNHdMQVlEVlFRREV5VnJkV0psTFdGd2FYTmxjblpsY2kxelpYSjJhV05sTFc1bApkSGR2Y21zdGMybG5ibVZ5TUI0WERUSXpNRFF4T0RFek1EZ3hNRm9YRFRJek1EUXhPVEV6TURneE0xb3dOakVVCk1CSUdBMVVFQ2hNTGEzVmlaUzF0WVhOMFpYSXhIakFjQmdOVkJBTVRGWE41YzNSbGJUcHJkV0psTFdGd2FYTmwKY25abGNqQ0NBU0l3RFFZSktvWklodmNOQVFFQkJRQURnZ0VQQURDQ0FRb0NnZ0VCQUxWTkI1SjAramt4SHZNaAovM0xONjJpcWd6NXZpTHlUMUV6WGhCdUJCS21MOE5GczR1YTVkM01uUEQ3all4czdsbFlScUJLcGpzZ3NZVXZ2CjdOMjc3V1MyVk9oT2VxMXRVOTJDYjV6V1lwQ0U1dk12REpFNmpWQlFEOHp4ZHEycFAveHd1eng1S1gxSmZzN0cKZ3M5UU1ZUXoxa2dLZXZZRlMwYkY5bmM5eEtSQ3pKdm9rMWxrT1RqenN5TDlGdFBYODg5YWpHVWR1S0R2SkVzdApSalNldWw5Uzc0UkxINkt5ZGxnZ3gxZ3lvaGZPSS8wQ3BVSUwyREtYQmJDKzVGSGU4OHVwdkNvcjJSbjk5L1dMCjAxcDhmSXJpLzJVblh5TDM3QTR3SVBBeHpmRE90VjNDTW1oK0szSjVIMWl2SC9DQkM2VWZ0b3VoaGFPYWtUMGUKZTZQRVo4MENBd0VBQWFPQ0FVTXdnZ0UvTUE0R0ExVWREd0VCL3dRRUF3SUZvREFUQmdOVkhTVUVEREFLQmdncgpCZ0VGQlFjREFUQU1CZ05WSFJNQkFmOEVBakFBTUIwR0ExVWREZ1FXQkJSN0FnVlQvN2xGUTRlUWtrbEFQblJDCmRJcjFXakFmQmdOVkhTTUVHREFXZ0JRQ0pLZTZ2amlZK2c1S1dZaVNVekNLR0RTcUREQ0J5UVlEVlIwUkJJSEIKTUlHK2dncHJkV0psY201bGRHVnpnaEpyZFdKbGNtNWxkR1Z6TG1SbFptRjFiSFNDRm10MVltVnlibVYwWlhNdQpaR1ZtWVhWc2RDNXpkbU9DSkd0MVltVnlibVYwWlhNdVpHVm1ZWFZzZEM1emRtTXVZMngxYzNSbGNpNXNiMk5oCmJJSUpiM0JsYm5Ob2FXWjBnaEZ2Y0dWdWMyaHBablF1WkdWbVlYVnNkSUlWYjNCbGJuTm9hV1owTG1SbFptRjEKYkhRdWMzWmpnaU52Y0dWdWMyaHBablF1WkdWbVlYVnNkQzV6ZG1NdVkyeDFjM1JsY2k1c2IyTmhiSWNFckI0QQpBVEFOQmdrcWhraUc5dzBCQVFzRkFBT0NBUUVBNFJ5K3AyVmlHY25UNlIvc015NS83VEs0emsydEhzaUVwVTV0ClVzblJEei9DRzM4WHlXRytMYlVBYWlCV012RTdSSDh4b3hDemQydmp2OUF6WnFyTDBJam9iNks5MFRic3VtYkkKM1hBVmRnMU0wQUx5cWJBKzB1NklsWWRXTTdXUWRWK25GVFpkN1g5MTlBUVNlK0tMNmswUEh1ZzVoNFdadHpEMQp2ZWROZHRvQ0FhclZOTjI0QStpMUhXbnBaejhndFhSRlBNbS9zZ1h5QzhaMW1Ob003K2tMM2xQUnJoOEVHNUNHCmg2b0RucXVyNkJFQWxYRmRlMDc5Z2ZnS1kwcGtDNGpjTFpGdWNCaklvODAzOWloU2hPa3RGN2VUUmN5NzNGMlMKRktRUm1iSnRWVnYrWnZZNlFZaVRWc2crSlpYc0Y4Q0F4NWIxc2k0VS8zSm5Kckx6Mmc9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCgotLS0tLUJFR0lOIENFUlRJRklDQVRFLS0tLS0KTUlJRFREQ0NBalNnQXdJQkFnSUlSOExVS2t2cVl0UXdEUVlKS29aSWh2Y05BUUVMQlFBd1JERVNNQkFHQTFVRQpDeE1KYjNCbGJuTm9hV1owTVM0d0xBWURWUVFERXlWcmRXSmxMV0Z3YVhObGNuWmxjaTF6WlhKMmFXTmxMVzVsCmRIZHZjbXN0YzJsbmJtVnlNQjRYRFRJek1EUXhPREV6TURneE1Gb1hEVE16TURReE5URXpNRGd4TUZvd1JERVMKTUJBR0ExVUVDeE1KYjNCbGJuTm9hV1owTVM0d0xBWURWUVFERXlWcmRXSmxMV0Z3YVhObGNuWmxjaTF6WlhKMgphV05sTFc1bGRIZHZjbXN0YzJsbmJtVnlNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DQVE4QU1JSUJDZ0tDCkFRRUE1b3A0amIvbnAxbk5lRExISnkrcS9xUHJjVnluY0MvODRkMWJ6anp0OU9NSmJycnROQTJMeW81ME9uVloKZEgxOTkySUhsRFNicktkUlpwT05HZDVlVE1PaGNlQ251WncxYnkrRkEvQUlIdnpqVHh5dXllQ2pqN1BLTFBibQpKVGxCbmdKM1JWejNXR1FqL0wwR0lFZlhXRDAyd2R0clpiZjd0UG1QcTBBZjFiVjkyUzlTbVdNai9xajJOdVhoCkt5ZnloVTRyQjZvQ09COUNjQzVUQ21Bb0N3MUlCMEVQSjdSanFsUWdRWkJNOXBPUFhhMUNYWWV4VnpMVXhlRkwKUVNwdGJRbVRaenpiazRxRmt2RVFSUDVUVkQrdUpRd2Q2Ui9tSGx5NnplZFNQSHhJanNhdU5jMTdsbzFqaDl2SApmSm1RRDlESWlKdTR1b1poQSt6NDFBb2xlUUlEQVFBQm8wSXdRREFPQmdOVkhROEJBZjhFQkFNQ0FxUXdEd1lEClZSMFRBUUgvQkFVd0F3RUIvekFkQmdOVkhRNEVGZ1FVQWlTbnVyNDRtUG9PU2xtSWtsTXdpaGcwcWd3d0RRWUoKS29aSWh2Y05BUUVMQlFBRGdnRUJBTEpjbG1pVUpGeEdHRXZNYXBwY0pRenRRNjQwWG9LR3F5dlVjbGdHQ0ordQpvQzNmZUh1NEo3MmozWGhnRU8wRWtueDJJa3YwTklkWmVrNnJQOTZGTStqdUdkZnJrdFI2YmRtcWlkckdZd0xaCktCdUtrQ3dvWHRsNW01aDl5RFNHNW5hZEFxaDhXOER1SG5QWGlnbkcvOTRSZzBFbFVQTDZlNXgwc0dVSlVURVcKRis3M2JqMTdEVXRvREN3QkRjbTIrWTExNWxjMzJISEZOdFhpMW9NRi9FWlovcXVsZDc0MnNhRDhSTm1rSnk3UQpPcEgrVkVKc05SS2lkdzJBV1NRb2J0RjNtUi9tYWlOS0w0TEZSV0hIU2M1N25SRWU4YVQ0RC9QUGZxUkpid3E4Cks0RnhPM2ZDNGVsWllpMUdWblRudHlFRUszYkFLak5uVzI4Y0FxM0huQlk9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K"
            }
        ]
    },
    "*tls.KubeAPIServerServiceNetworkSignerCertKey": {
        "CertRaw": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURURENDQWpTZ0F3SUJBZ0lJUjhMVUtrdnFZdFF3RFFZSktvWklodmNOQVFFTEJRQXdSREVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1TNHdMQVlEVlFRREV5VnJkV0psTFdGd2FYTmxjblpsY2kxelpYSjJhV05sTFc1bApkSGR2Y21zdGMybG5ibVZ5TUI0WERUSXpNRFF4T0RFek1EZ3hNRm9YRFRNek1EUXhOVEV6TURneE1Gb3dSREVTCk1CQUdBMVVFQ3hNSmIzQmxibk5vYVdaME1TNHdMQVlEVlFRREV5VnJkV0psTFdGd2FYTmxjblpsY2kxelpYSjIKYVdObExXNWxkSGR2Y21zdGMybG5ibVZ5TUlJQklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQwpBUUVBNW9wNGpiL25wMW5OZURMSEp5K3EvcVByY1Z5bmNDLzg0ZDFiemp6dDlPTUpicnJ0TkEyTHlvNTBPblZaCmRIMTk5MklIbERTYnJLZFJacE9OR2Q1ZVRNT2hjZUNudVp3MWJ5K0ZBL0FJSHZ6alR4eXV5ZUNqajdQS0xQYm0KSlRsQm5nSjNSVnozV0dRai9MMEdJRWZYV0QwMndkdHJaYmY3dFBtUHEwQWYxYlY5MlM5U21XTWovcWoyTnVYaApLeWZ5aFU0ckI2b0NPQjlDY0M1VENtQW9DdzFJQjBFUEo3UmpxbFFnUVpCTTlwT1BYYTFDWFlleFZ6TFV4ZUZMClFTcHRiUW1UWnp6Yms0cUZrdkVRUlA1VFZEK3VKUXdkNlIvbUhseTZ6ZWRTUEh4SWpzYXVOYzE3bG8xamg5dkgKZkptUUQ5RElpSnU0dW9aaEErejQxQW9sZVFJREFRQUJvMEl3UURBT0JnTlZIUThCQWY4RUJBTUNBcVF3RHdZRApWUjBUQVFIL0JBVXdBd0VCL3pBZEJnTlZIUTRFRmdRVUFpU251cjQ0bVBvT1NsbUlrbE13aWhnMHFnd3dEUVlKCktvWklodmNOQVFFTEJRQURnZ0VCQUxKY2xtaVVKRnhHR0V2TWFwcGNKUXp0UTY0MFhvS0dxeXZVY2xnR0NKK3UKb0MzZmVIdTRKNzJqM1hoZ0VPMEVrbngySWt2ME5JZFplazZyUDk2Rk0ranVHZGZya3RSNmJkbXFpZHJHWXdMWgpLQnVLa0N3b1h0bDVtNWg5eURTRzVuYWRBcWg4VzhEdUhuUFhpZ25HLzk0UmcwRWxVUEw2ZTV4MHNHVUpVVEVXCkYrNzNiajE3RFV0b0RDd0JEY20yK1kxMTVsYzMySEhGTnRYaTFvTUYvRVpaL3F1bGQ3NDJzYUQ4Uk5ta0p5N1EKT3BIK1ZFSnNOUktpZHcyQVdTUW9idEYzbVIvbWFpTktMNExGUldISFNjNTduUkVlOGFUNEQvUFBmcVJKYndxOApLNEZ4TzNmQzRlbFpZaTFHVm5UbnR5RUVLM2JBS2pOblcyOGNBcTNIbkJZPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==",
        "KeyRaw": "LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBNW9wNGpiL25wMW5OZURMSEp5K3EvcVByY1Z5bmNDLzg0ZDFiemp6dDlPTUpicnJ0Ck5BMkx5bzUwT25WWmRIMTk5MklIbERTYnJLZFJacE9OR2Q1ZVRNT2hjZUNudVp3MWJ5K0ZBL0FJSHZ6alR4eXUKeWVDamo3UEtMUGJtSlRsQm5nSjNSVnozV0dRai9MMEdJRWZYV0QwMndkdHJaYmY3dFBtUHEwQWYxYlY5MlM5UwptV01qL3FqMk51WGhLeWZ5aFU0ckI2b0NPQjlDY0M1VENtQW9DdzFJQjBFUEo3UmpxbFFnUVpCTTlwT1BYYTFDClhZZXhWekxVeGVGTFFTcHRiUW1UWnp6Yms0cUZrdkVRUlA1VFZEK3VKUXdkNlIvbUhseTZ6ZWRTUEh4SWpzYXUKTmMxN2xvMWpoOXZIZkptUUQ5RElpSnU0dW9aaEErejQxQW9sZVFJREFRQUJBb0lCQUgzU1pTazM2MzV5aktsbApUVHdkei8xYUNVMjllOFRHN0FWNWdubDAxNG9udnlZbjd2M1J4dEd1SGRFcDZzQ2hIUGEvRWRQWlFuMWdkQlMvCnd1cXphbFFMRVRuTm1yeTZmSTlLS0JhV0VsaVhQSmdZMTJ4bXBkM3dDZyt3VUx0UUhIZlljSy95cFN3Z3UyTmMKNXRNSFlvaE9JR3g5REloZmVZaTBDNjB6T2l5djc1bkI0OUd3OTlkVTRxVkFLdm9TQnM2dTBaZnZiUndOcEdYZApjaExHbWdMcXNLRTlSTWlaazFKNWdqQ1RkbVU0UE9wR1ZKTXd6M1FTa2VkRUI3TW5lenR6OGVUOFc1SzczdU4yCmVMSER5RnVRQWFLL2FhSW4valYxTDd0eS9RVzlZQk1yOXBOUUlwbXZwcm5adm1pcUpZc3FaWENUM04wOHRRMmsKUGQ4dFg0RUNnWUVBNTI1U3hEUGNUZjBWSy90ZnUxa3puZDlLOHdHcVhsRUpqcEJNNXFWWkl1Q25LSnJFU3N6SApMVVU0dGlUWjBmRFV1MUFnTXlTU3NtRHJVbnE0b1hJdWRwbjRDOEdudlpaR3c4bjVyeW9xQ21ITDFESnBJYWJmCm1udHBqVi82OEluRm9iaGo0UGhDR1JYRjRhMUVFSHQ3cnZnRk00YUNCdDJDejNEa0plUTVHQ1VDZ1lFQS93UDEKWGNKT3RsY2szZ2RJNFZMZEJUb0tpNzVON3RRT010andiT2lMUUdxcWRwbHpLVzQ3K0tSWHJIV0pYbU44Z2lmNwpIZ3FZeXJVNFN2Z21Vcm1pQmdpNW1jcDRGVm1SZ0dhN0RwZ3hKRjB0dXdKQ3RCcEdCTVQrZWpVcFRQY3RQNWo2CkFkMlc2SmFGYmI3Z1g0M283YlY3MysvL1g5eTNaamFjYU43bS9jVUNnWUJ4QXlPeG9lMkx1L0dSeDYvbzZkZFYKMll0Yy9VdzN3SFRkUkVQNVFYYzBtK1drNDJiRmJCZzdXQmtvZ1BoSkY4U2FMN2Q1b2Z0czFmMDBDcStNVHhpMwpXOXFQeXlKaFp6ZnBOZ0VTYzVHUi9rMnRzbXc2UGFYbFp5eVZGL0NQYzRlcHdFUXR3SzF1V0g2SUJMYy9JVDIxCnBISE54bnBLWmZNUjMzdlpzUWZjYlFLQmdRREFFV3NzUXJ5bCtOeDduV0QyMUVKRFBZUFQzSEUxLytEeHl4TEoKOUJ0dFdPa3Fpa2lDVzlRdllSZm5mRjhLQ0VRdWc0NVBBZ3d5SUd0Vmk3RFJmWjdhakplOWpSRUVnNEZqQS95Kwo4VUdSOGR3UGpaUlBzYm9xdlhRczl2MDBTclo1dis0TW1haWZaVDc1ZVZua25pMWhXOThBdXZITWNhQndDNUdpCktzQXZRUUtCZ1FDWmtxcVJJNlNRVmp6eHk0ZmZwaUFiWTJaZXRhcFI2Y1hHSTF3YTU1VkFQMlp6UE9YclRiSlAKT2ZzSGp5UjBmSHRtbituWHBadXQ4bG9NQnVBNVlPTTlTaTduSXpzRENsdXFzdXNPd0M1UzVrN2xuckd4UmFRZwpIZG5IcEhUSjgzNEg5am8yVkhwU09DS1JFcFRnS1BDTVZtUFQ5ZFVkZHFseDdDdnpRQ25DQkE9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=",
        "FileList": [
            {
                "Filename": "tls/kube-apiserver-service-network-signer.key",
                "Data": "LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBNW9wNGpiL25wMW5OZURMSEp5K3EvcVByY1Z5bmNDLzg0ZDFiemp6dDlPTUpicnJ0Ck5BMkx5bzUwT25WWmRIMTk5MklIbERTYnJLZFJacE9OR2Q1ZVRNT2hjZUNudVp3MWJ5K0ZBL0FJSHZ6alR4eXUKeWVDamo3UEtMUGJtSlRsQm5nSjNSVnozV0dRai9MMEdJRWZYV0QwMndkdHJaYmY3dFBtUHEwQWYxYlY5MlM5UwptV01qL3FqMk51WGhLeWZ5aFU0ckI2b0NPQjlDY0M1VENtQW9DdzFJQjBFUEo3UmpxbFFnUVpCTTlwT1BYYTFDClhZZXhWekxVeGVGTFFTcHRiUW1UWnp6Yms0cUZrdkVRUlA1VFZEK3VKUXdkNlIvbUhseTZ6ZWRTUEh4SWpzYXUKTmMxN2xvMWpoOXZIZkptUUQ5RElpSnU0dW9aaEErejQxQW9sZVFJREFRQUJBb0lCQUgzU1pTazM2MzV5aktsbApUVHdkei8xYUNVMjllOFRHN0FWNWdubDAxNG9udnlZbjd2M1J4dEd1SGRFcDZzQ2hIUGEvRWRQWlFuMWdkQlMvCnd1cXphbFFMRVRuTm1yeTZmSTlLS0JhV0VsaVhQSmdZMTJ4bXBkM3dDZyt3VUx0UUhIZlljSy95cFN3Z3UyTmMKNXRNSFlvaE9JR3g5REloZmVZaTBDNjB6T2l5djc1bkI0OUd3OTlkVTRxVkFLdm9TQnM2dTBaZnZiUndOcEdYZApjaExHbWdMcXNLRTlSTWlaazFKNWdqQ1RkbVU0UE9wR1ZKTXd6M1FTa2VkRUI3TW5lenR6OGVUOFc1SzczdU4yCmVMSER5RnVRQWFLL2FhSW4valYxTDd0eS9RVzlZQk1yOXBOUUlwbXZwcm5adm1pcUpZc3FaWENUM04wOHRRMmsKUGQ4dFg0RUNnWUVBNTI1U3hEUGNUZjBWSy90ZnUxa3puZDlLOHdHcVhsRUpqcEJNNXFWWkl1Q25LSnJFU3N6SApMVVU0dGlUWjBmRFV1MUFnTXlTU3NtRHJVbnE0b1hJdWRwbjRDOEdudlpaR3c4bjVyeW9xQ21ITDFESnBJYWJmCm1udHBqVi82OEluRm9iaGo0UGhDR1JYRjRhMUVFSHQ3cnZnRk00YUNCdDJDejNEa0plUTVHQ1VDZ1lFQS93UDEKWGNKT3RsY2szZ2RJNFZMZEJUb0tpNzVON3RRT010andiT2lMUUdxcWRwbHpLVzQ3K0tSWHJIV0pYbU44Z2lmNwpIZ3FZeXJVNFN2Z21Vcm1pQmdpNW1jcDRGVm1SZ0dhN0RwZ3hKRjB0dXdKQ3RCcEdCTVQrZWpVcFRQY3RQNWo2CkFkMlc2SmFGYmI3Z1g0M283YlY3MysvL1g5eTNaamFjYU43bS9jVUNnWUJ4QXlPeG9lMkx1L0dSeDYvbzZkZFYKMll0Yy9VdzN3SFRkUkVQNVFYYzBtK1drNDJiRmJCZzdXQmtvZ1BoSkY4U2FMN2Q1b2Z0czFmMDBDcStNVHhpMwpXOXFQeXlKaFp6ZnBOZ0VTYzVHUi9rMnRzbXc2UGFYbFp5eVZGL0NQYzRlcHdFUXR3SzF1V0g2SUJMYy9JVDIxCnBISE54bnBLWmZNUjMzdlpzUWZjYlFLQmdRREFFV3NzUXJ5bCtOeDduV0QyMUVKRFBZUFQzSEUxLytEeHl4TEoKOUJ0dFdPa3Fpa2lDVzlRdllSZm5mRjhLQ0VRdWc0NVBBZ3d5SUd0Vmk3RFJmWjdhakplOWpSRUVnNEZqQS95Kwo4VUdSOGR3UGpaUlBzYm9xdlhRczl2MDBTclo1dis0TW1haWZaVDc1ZVZua25pMWhXOThBdXZITWNhQndDNUdpCktzQXZRUUtCZ1FDWmtxcVJJNlNRVmp6eHk0ZmZwaUFiWTJaZXRhcFI2Y1hHSTF3YTU1VkFQMlp6UE9YclRiSlAKT2ZzSGp5UjBmSHRtbituWHBadXQ4bG9NQnVBNVlPTTlTaTduSXpzRENsdXFzdXNPd0M1UzVrN2xuckd4UmFRZwpIZG5IcEhUSjgzNEg5am8yVkhwU09DS1JFcFRnS1BDTVZtUFQ5ZFVkZHFseDdDdnpRQ25DQkE9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo="
            },
            {
                "Filename": "tls/kube-apiserver-service-network-signer.crt",
                "Data": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURURENDQWpTZ0F3SUJBZ0lJUjhMVUtrdnFZdFF3RFFZSktvWklodmNOQVFFTEJRQXdSREVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1TNHdMQVlEVlFRREV5VnJkV0psTFdGd2FYTmxjblpsY2kxelpYSjJhV05sTFc1bApkSGR2Y21zdGMybG5ibVZ5TUI0WERUSXpNRFF4T0RFek1EZ3hNRm9YRFRNek1EUXhOVEV6TURneE1Gb3dSREVTCk1CQUdBMVVFQ3hNSmIzQmxibk5vYVdaME1TNHdMQVlEVlFRREV5VnJkV0psTFdGd2FYTmxjblpsY2kxelpYSjIKYVdObExXNWxkSGR2Y21zdGMybG5ibVZ5TUlJQklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQwpBUUVBNW9wNGpiL25wMW5OZURMSEp5K3EvcVByY1Z5bmNDLzg0ZDFiemp6dDlPTUpicnJ0TkEyTHlvNTBPblZaCmRIMTk5MklIbERTYnJLZFJacE9OR2Q1ZVRNT2hjZUNudVp3MWJ5K0ZBL0FJSHZ6alR4eXV5ZUNqajdQS0xQYm0KSlRsQm5nSjNSVnozV0dRai9MMEdJRWZYV0QwMndkdHJaYmY3dFBtUHEwQWYxYlY5MlM5U21XTWovcWoyTnVYaApLeWZ5aFU0ckI2b0NPQjlDY0M1VENtQW9DdzFJQjBFUEo3UmpxbFFnUVpCTTlwT1BYYTFDWFlleFZ6TFV4ZUZMClFTcHRiUW1UWnp6Yms0cUZrdkVRUlA1VFZEK3VKUXdkNlIvbUhseTZ6ZWRTUEh4SWpzYXVOYzE3bG8xamg5dkgKZkptUUQ5RElpSnU0dW9aaEErejQxQW9sZVFJREFRQUJvMEl3UURBT0JnTlZIUThCQWY4RUJBTUNBcVF3RHdZRApWUjBUQVFIL0JBVXdBd0VCL3pBZEJnTlZIUTRFRmdRVUFpU251cjQ0bVBvT1NsbUlrbE13aWhnMHFnd3dEUVlKCktvWklodmNOQVFFTEJRQURnZ0VCQUxKY2xtaVVKRnhHR0V2TWFwcGNKUXp0UTY0MFhvS0dxeXZVY2xnR0NKK3UKb0MzZmVIdTRKNzJqM1hoZ0VPMEVrbngySWt2ME5JZFplazZyUDk2Rk0ranVHZGZya3RSNmJkbXFpZHJHWXdMWgpLQnVLa0N3b1h0bDVtNWg5eURTRzVuYWRBcWg4VzhEdUhuUFhpZ25HLzk0UmcwRWxVUEw2ZTV4MHNHVUpVVEVXCkYrNzNiajE3RFV0b0RDd0JEY20yK1kxMTVsYzMySEhGTnRYaTFvTUYvRVpaL3F1bGQ3NDJzYUQ4Uk5ta0p5N1EKT3BIK1ZFSnNOUktpZHcyQVdTUW9idEYzbVIvbWFpTktMNExGUldISFNjNTduUkVlOGFUNEQvUFBmcVJKYndxOApLNEZ4TzNmQzRlbFpZaTFHVm5UbnR5RUVLM2JBS2pOblcyOGNBcTNIbkJZPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg=="
            }
        ]
    },
    "*tls.KubeAPIServerToKubeletCABundle": {
        "BundleRaw": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURRakNDQWlxZ0F3SUJBZ0lJT1lBbEJMd25EWUV3RFFZSktvWklodmNOQVFFTEJRQXdQekVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1Ta3dKd1lEVlFRREV5QnJkV0psTFdGd2FYTmxjblpsY2kxMGJ5MXJkV0psYkdWMApMWE5wWjI1bGNqQWVGdzB5TXpBME1UZ3hNekE0TVRSYUZ3MHlOREEwTVRjeE16QTRNVFJhTUQ4eEVqQVFCZ05WCkJBc1RDVzl3Wlc1emFHbG1kREVwTUNjR0ExVUVBeE1nYTNWaVpTMWhjR2x6WlhKMlpYSXRkRzh0YTNWaVpXeGwKZEMxemFXZHVaWEl3Z2dFaU1BMEdDU3FHU0liM0RRRUJBUVVBQTRJQkR3QXdnZ0VLQW9JQkFRRG1tcW1XVS9uUAp5azk5RkRnRjNmYmRTZTNwd1dCYW0zejRrdVhwbmJmN2FGVFZPWE1JYU4zdlUxQWhMMGt4U0FtR0dzblppekpWClFKNTdNMG42ckJFajdRNDMyUzNENUU4ajVPQnRweThRLytXMXFXWmJsRFNxeVRjQm4vWTZIcjUzbFZIdjNEWTEKczJqRXBxWnJ2NnBaY3dtQldqTCthTlQybTVxSS9pSkFVN0tlaU0zQlM4Y1lmWjlUYVc1OE4weUxqWlRNQnJzeApxRXVWOC9teXJMRmlKa05RRGtvcERUSFExWTVFSWZVVG9yR3BNQXR6aHVIczRkd3J2ZWNmMlhxUFQ3NHRaU1p0ClZsY0t1R1J5bmJONUIyV0ZHL0NpaGZ6a1V2STFONGsvak1YNU9ZN2x0YThnbHNGN00wSWdEVkVSNCtvZk9GS1YKZFBIWFhYMjJ0SldMQWdNQkFBR2pRakJBTUE0R0ExVWREd0VCL3dRRUF3SUNwREFQQmdOVkhSTUJBZjhFQlRBRApBUUgvTUIwR0ExVWREZ1FXQkJURmEwckEwWHcvV3QzSC9rNTVRKy9GeW9YbEN6QU5CZ2txaGtpRzl3MEJBUXNGCkFBT0NBUUVBM1pRM0RLR2NIOWJ6N3VpTytXYWFOQkswUk1nTmJBb0MxVEJaUjhUNklVMUZ3Y25WM0NtOGltZ0YKMVRPdzZ2UytBclFiVHcyOVgvZTgzalBrL05xSDlGVURqVkFEcSthWjVLRVMzY1Q1TlpsZzEzV25mSktNenBGbApCZWRnMW4vZ1RVSitmVnlEZE5SaXVncTFGV3RzWGw2M2Y0OVdPQ2REQk5IcVVtK3VMNFpRSEh3a09kaWg3YTdVCnQ3T2lDNU9xSDh1YklDaUUzV3MrbTgrdndRM0MzZVdLVHJXOEg3YTV1NVJJMmJpT2dYZndNbFhqVGFRNWRsTHgKaGlYMXI0dW5mTHp5cUxxTEpvVTRvRmhMUVduZS83NDJOeTUrbENNSzVBQzhSZHI4aXpuTWhKbC9TekdYcDhhaAo3U2F1bTRMZ1JyenJ0NSthNTd2V3NMd0h1bW9vdGc9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==",
        "FileList": [
            {
                "Filename": "tls/kube-apiserver-to-kubelet-ca-bundle.crt",
                "Data": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURRakNDQWlxZ0F3SUJBZ0lJT1lBbEJMd25EWUV3RFFZSktvWklodmNOQVFFTEJRQXdQekVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1Ta3dKd1lEVlFRREV5QnJkV0psTFdGd2FYTmxjblpsY2kxMGJ5MXJkV0psYkdWMApMWE5wWjI1bGNqQWVGdzB5TXpBME1UZ3hNekE0TVRSYUZ3MHlOREEwTVRjeE16QTRNVFJhTUQ4eEVqQVFCZ05WCkJBc1RDVzl3Wlc1emFHbG1kREVwTUNjR0ExVUVBeE1nYTNWaVpTMWhjR2x6WlhKMlpYSXRkRzh0YTNWaVpXeGwKZEMxemFXZHVaWEl3Z2dFaU1BMEdDU3FHU0liM0RRRUJBUVVBQTRJQkR3QXdnZ0VLQW9JQkFRRG1tcW1XVS9uUAp5azk5RkRnRjNmYmRTZTNwd1dCYW0zejRrdVhwbmJmN2FGVFZPWE1JYU4zdlUxQWhMMGt4U0FtR0dzblppekpWClFKNTdNMG42ckJFajdRNDMyUzNENUU4ajVPQnRweThRLytXMXFXWmJsRFNxeVRjQm4vWTZIcjUzbFZIdjNEWTEKczJqRXBxWnJ2NnBaY3dtQldqTCthTlQybTVxSS9pSkFVN0tlaU0zQlM4Y1lmWjlUYVc1OE4weUxqWlRNQnJzeApxRXVWOC9teXJMRmlKa05RRGtvcERUSFExWTVFSWZVVG9yR3BNQXR6aHVIczRkd3J2ZWNmMlhxUFQ3NHRaU1p0ClZsY0t1R1J5bmJONUIyV0ZHL0NpaGZ6a1V2STFONGsvak1YNU9ZN2x0YThnbHNGN00wSWdEVkVSNCtvZk9GS1YKZFBIWFhYMjJ0SldMQWdNQkFBR2pRakJBTUE0R0ExVWREd0VCL3dRRUF3SUNwREFQQmdOVkhSTUJBZjhFQlRBRApBUUgvTUIwR0ExVWREZ1FXQkJURmEwckEwWHcvV3QzSC9rNTVRKy9GeW9YbEN6QU5CZ2txaGtpRzl3MEJBUXNGCkFBT0NBUUVBM1pRM0RLR2NIOWJ6N3VpTytXYWFOQkswUk1nTmJBb0MxVEJaUjhUNklVMUZ3Y25WM0NtOGltZ0YKMVRPdzZ2UytBclFiVHcyOVgvZTgzalBrL05xSDlGVURqVkFEcSthWjVLRVMzY1Q1TlpsZzEzV25mSktNenBGbApCZWRnMW4vZ1RVSitmVnlEZE5SaXVncTFGV3RzWGw2M2Y0OVdPQ2REQk5IcVVtK3VMNFpRSEh3a09kaWg3YTdVCnQ3T2lDNU9xSDh1YklDaUUzV3MrbTgrdndRM0MzZVdLVHJXOEg3YTV1NVJJMmJpT2dYZndNbFhqVGFRNWRsTHgKaGlYMXI0dW5mTHp5cUxxTEpvVTRvRmhMUVduZS83NDJOeTUrbENNSzVBQzhSZHI4aXpuTWhKbC9TekdYcDhhaAo3U2F1bTRMZ1JyenJ0NSthNTd2V3NMd0h1bW9vdGc9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg=="
            }
        ]
    },
    "*tls.KubeAPIServerToKubeletClientCertKey": {
        "CertRaw": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURiRENDQWxTZ0F3SUJBZ0lJRGh3RHRYemF4UWt3RFFZSktvWklodmNOQVFFTEJRQXdQekVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1Ta3dKd1lEVlFRREV5QnJkV0psTFdGd2FYTmxjblpsY2kxMGJ5MXJkV0psYkdWMApMWE5wWjI1bGNqQWVGdzB5TXpBME1UZ3hNekE0TVRSYUZ3MHlOREEwTVRjeE16QTRNVFJhTURZeEZEQVNCZ05WCkJBb1RDMnQxWW1VdGJXRnpkR1Z5TVI0d0hBWURWUVFERXhWemVYTjBaVzA2YTNWaVpTMWhjR2x6WlhKMlpYSXcKZ2dFaU1BMEdDU3FHU0liM0RRRUJBUVVBQTRJQkR3QXdnZ0VLQW9JQkFRRHlybVh6UnlraDdUZGpObUdoYVRBWQp0MjhmYnRXQmJkZ1Q0OHJOdjBMaDhQcHhYdHVEL2xhbW56Tzh5TlQySVhjQjVVMDdTMkRrSGRDbEszZUlpekRoCkoxanBoMW42anZYczZWbitaM3hwVitrayt2T0hPMktNQW1leWZSY1E4SElhWmNRQldvNllnaG1QM1FZRHRmS2sKSUZmQlR5UEdPUlZ4azF3bUl3WnVjZEdibklEYUdoRVRpQjg0UmxMc3NwNnFURnFETG0wdTJWN2t5MUhoSkFLdwpFMVhLUjU4L1l1akNBRzJZQnJmVzV6THhxY2sreHVpREpYV2p4YzVQMUlHM21oZ0RWMEtCanA0VFZGTGtRckJtCkdmYmV6NTErSDBQaFJWOHhQRUhoNDhWeUpNSFA3WTRlTytmUWZCc2FCZkZDYWh6YmYxVm5Ya2JTei96VEp4WlAKQWdNQkFBR2pkVEJ6TUE0R0ExVWREd0VCL3dRRUF3SUZvREFUQmdOVkhTVUVEREFLQmdnckJnRUZCUWNEQWpBTQpCZ05WSFJNQkFmOEVBakFBTUIwR0ExVWREZ1FXQkJUNFIzQzA3TWlaYW9WQkpNdDhReFJJOUNlSllEQWZCZ05WCkhTTUVHREFXZ0JURmEwckEwWHcvV3QzSC9rNTVRKy9GeW9YbEN6QU5CZ2txaGtpRzl3MEJBUXNGQUFPQ0FRRUEKdVQxTmdQTGVmMi9JdTViaWNhL3h0RklUeThqSE92Vk1aaUZDTmwwZDZZN2p4blpWUlo2dDY0cXQxWFFEZW42RwpkNkFKRTNuVnNSQkRtVlJLQWJFRnJESkNWUFRBTG41UzVQcVdhOVcxTjhtU0RndWhuNklCUzY2b1p6QWlMV0JPClpaaHpya0wyM3FVS0xNeThaMXUySzdpcE9vQ3ZTSzFLenM4WW1hWVJaaG1QUHpZU05jck8waDE2ajkwQTNxU0MKTC83a3o5bkpDTTRONm9RMVIvSkJ5Wlo5QnczakVwbStCQ3NjRlVxL3hhTE1UUnV1ZDd4MlM5RzQxNXFSeERlMAp4V0xYdlNxeXY3YlJPOXZXelFDRWp5YndJYUs2T1hjRlp0bE5UaW1FY2RxeEhBbU1LVHJiSFQ1Sy9kMEJZMUtyCnJGb09Gc1ZQTDB3RnAxaVFFNnVyeXc9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==",
        "KeyRaw": "LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBOHE1bDgwY3BJZTAzWXpaaG9Xa3dHTGR2SDI3VmdXM1lFK1BLemI5QzRmRDZjVjdiCmcvNVdwcDh6dk1qVTlpRjNBZVZOTzB0ZzVCM1FwU3QzaUlzdzRTZFk2WWRaK283MTdPbFovbWQ4YVZmcEpQcnoKaHp0aWpBSm5zbjBYRVBCeUdtWEVBVnFPbUlJWmo5MEdBN1h5cENCWHdVOGp4amtWY1pOY0ppTUdibkhSbTV5QQoyaG9SRTRnZk9FWlM3TEtlcWt4YWd5NXRMdGxlNU10UjRTUUNzQk5WeWtlZlAyTG93Z0J0bUFhMzF1Y3k4YW5KClBzYm9neVYxbzhYT1Q5U0J0NW9ZQTFkQ2dZNmVFMVJTNUVLd1pobjIzcytkZmg5RDRVVmZNVHhCNGVQRmNpVEIKeisyT0hqdm4wSHdiR2dYeFFtb2MyMzlWWjE1RzBzLzgweWNXVHdJREFRQUJBb0lCQUFnUHRRRkV6dC82b2tsZwphQlBWaTZ4MmczRjIzQTdGbUZUb3p6YlFjS2RTdXU4REtLV1UwRW9PcGNoU240aGhpak44NjNqWnd5a3d1RnFVClBBOUVHR2FTU1FqUTN6Tk1obXpOUDVrTTFQd20yRzdMQzBYbHVodE9oU1ZQdEhGeW0wZTNNN0NiMG5yTWI0N3cKMTU5Tjd2WjJ3Sk9DVG56cUxvVXNVUFpQV1lwWG13Q2wxMlgxazBDUTQ0ejdJRlpvV3NOM2IxdUt0dDB1RnFubQpLMy81VTRUVVB6ZXJxSzYxMXg2cDhyNUVzNHRHVWNWdUUrRUtKbm0xZ21NTEZJWDBjc3R2N05PaWk5YXZHU1lzCm5kYWRzOVlZeEhqeG9VVlFLbysyaDc2aVI5V3lwaDViRHBqQ2VyTTRsTUNDQlVXbk0va1cwVUI5VEQ1Y1JFVVEKVndFd045RUNnWUVBK05EbEY4S0xCZ0Jtb2xCYlNTMWlZOWxJZ1JVYnlWRXg0S3NXY3llZXcrKytxY3VuRmIrRwpLUWNBMlhuSUM5cEZ3Wjd1TXVrZjhOSkpncEFWNmxjMU5OQ1ozY2pOVHgrYU5PNk8xRjd5M3k5THJ5MDk1VkdWCjgyREhoelE3cW1rRTdlMHRJTXFGd3lIVWdQQThUYXRZWjNCcUFVWCtJS21QYUFYMmtXc0liZmtDZ1lFQStiQW8KcGEwRnlZOE9xTWlQQ3ZwaG5RY1ZvR1pydWxhcHZ1Y3RBTTlMcnlibVB4ejdDczd3NEpqamJRMUNWdG94SXN6dAovNUVJZ2xsOVJwN2N2cEtPQ3k1cHJXZHFZVTRXeEhzNjJiN2VaNFdGcUlHeVlwS3NYemNhVG1LWmhteDNZYkRQCkVLTnhCMWl1Ym1RM0lGK3dEVUZFbjljT2xZK0l0ZlRnZDVNRDJJY0NnWUJuRkt3RWx1MWZ0Q1RSRS9kdHJxYTMKZFJwTG1BSWwra1J1cnBLamJJT2k2eDBUWFRMQW1OTXRCaUM4K0czL014TjVMcTNDVzhDRzFhZnN0bUxON2drMQo4MEg3bHlndm9va1Jhcyt6Zmc2aWxnYUY4WGxXR3VIRHJaR2NHdkNwSGM4VC94R1dKekVaY1ZlSGYzK01NZk56CkR5aHJsS0sreDJDSkdRZFlvWDRoaVFLQmdHNU13bmdGeWhPekxaK2tFWVNnL1BRWVNCWjJpRXBsdEZEUDROS0YKd0lKY1pjUWxza1NoREVtN1lHUXhRa2dKMVVEeFZJWGNkT3pZU1g0aitaSDZQZU4wbWx4dTNkQ2taV3hnbjZ2SApKSXFJc25XdzdiT2I1YWVlT1BHOW51S0NFZTdHNDRJUElZUkVTYkljZFRuSTY0Vy9lbWc5NFlSeVJzdFNwTUpOCjRKb0xBb0dCQUxyNWZWa0hDelBJWkhLZ2xRb1Z0cUM0LzFuQlJGdTBmUlNYY2JYTGdldE5Cc3dVL0VHV3F5Y3kKeldtMnBQV1JyWU5Od2RTL2RDdk5jR21rKzMwckgwOTVFSWEyUEJLTDdrSTlvVWNtREdZVHRzdUJaL0wvN094SQpxa0Nkc2k5ZkxRWElxcTZiTDNjVmhOcy95TXZjUGlpUXZyb0RLRW9OSlcrVE5ONG1nOXovCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==",
        "FileList": [
            {
                "Filename": "tls/kube-apiserver-to-kubelet-client.key",
                "Data": "LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBOHE1bDgwY3BJZTAzWXpaaG9Xa3dHTGR2SDI3VmdXM1lFK1BLemI5QzRmRDZjVjdiCmcvNVdwcDh6dk1qVTlpRjNBZVZOTzB0ZzVCM1FwU3QzaUlzdzRTZFk2WWRaK283MTdPbFovbWQ4YVZmcEpQcnoKaHp0aWpBSm5zbjBYRVBCeUdtWEVBVnFPbUlJWmo5MEdBN1h5cENCWHdVOGp4amtWY1pOY0ppTUdibkhSbTV5QQoyaG9SRTRnZk9FWlM3TEtlcWt4YWd5NXRMdGxlNU10UjRTUUNzQk5WeWtlZlAyTG93Z0J0bUFhMzF1Y3k4YW5KClBzYm9neVYxbzhYT1Q5U0J0NW9ZQTFkQ2dZNmVFMVJTNUVLd1pobjIzcytkZmg5RDRVVmZNVHhCNGVQRmNpVEIKeisyT0hqdm4wSHdiR2dYeFFtb2MyMzlWWjE1RzBzLzgweWNXVHdJREFRQUJBb0lCQUFnUHRRRkV6dC82b2tsZwphQlBWaTZ4MmczRjIzQTdGbUZUb3p6YlFjS2RTdXU4REtLV1UwRW9PcGNoU240aGhpak44NjNqWnd5a3d1RnFVClBBOUVHR2FTU1FqUTN6Tk1obXpOUDVrTTFQd20yRzdMQzBYbHVodE9oU1ZQdEhGeW0wZTNNN0NiMG5yTWI0N3cKMTU5Tjd2WjJ3Sk9DVG56cUxvVXNVUFpQV1lwWG13Q2wxMlgxazBDUTQ0ejdJRlpvV3NOM2IxdUt0dDB1RnFubQpLMy81VTRUVVB6ZXJxSzYxMXg2cDhyNUVzNHRHVWNWdUUrRUtKbm0xZ21NTEZJWDBjc3R2N05PaWk5YXZHU1lzCm5kYWRzOVlZeEhqeG9VVlFLbysyaDc2aVI5V3lwaDViRHBqQ2VyTTRsTUNDQlVXbk0va1cwVUI5VEQ1Y1JFVVEKVndFd045RUNnWUVBK05EbEY4S0xCZ0Jtb2xCYlNTMWlZOWxJZ1JVYnlWRXg0S3NXY3llZXcrKytxY3VuRmIrRwpLUWNBMlhuSUM5cEZ3Wjd1TXVrZjhOSkpncEFWNmxjMU5OQ1ozY2pOVHgrYU5PNk8xRjd5M3k5THJ5MDk1VkdWCjgyREhoelE3cW1rRTdlMHRJTXFGd3lIVWdQQThUYXRZWjNCcUFVWCtJS21QYUFYMmtXc0liZmtDZ1lFQStiQW8KcGEwRnlZOE9xTWlQQ3ZwaG5RY1ZvR1pydWxhcHZ1Y3RBTTlMcnlibVB4ejdDczd3NEpqamJRMUNWdG94SXN6dAovNUVJZ2xsOVJwN2N2cEtPQ3k1cHJXZHFZVTRXeEhzNjJiN2VaNFdGcUlHeVlwS3NYemNhVG1LWmhteDNZYkRQCkVLTnhCMWl1Ym1RM0lGK3dEVUZFbjljT2xZK0l0ZlRnZDVNRDJJY0NnWUJuRkt3RWx1MWZ0Q1RSRS9kdHJxYTMKZFJwTG1BSWwra1J1cnBLamJJT2k2eDBUWFRMQW1OTXRCaUM4K0czL014TjVMcTNDVzhDRzFhZnN0bUxON2drMQo4MEg3bHlndm9va1Jhcyt6Zmc2aWxnYUY4WGxXR3VIRHJaR2NHdkNwSGM4VC94R1dKekVaY1ZlSGYzK01NZk56CkR5aHJsS0sreDJDSkdRZFlvWDRoaVFLQmdHNU13bmdGeWhPekxaK2tFWVNnL1BRWVNCWjJpRXBsdEZEUDROS0YKd0lKY1pjUWxza1NoREVtN1lHUXhRa2dKMVVEeFZJWGNkT3pZU1g0aitaSDZQZU4wbWx4dTNkQ2taV3hnbjZ2SApKSXFJc25XdzdiT2I1YWVlT1BHOW51S0NFZTdHNDRJUElZUkVTYkljZFRuSTY0Vy9lbWc5NFlSeVJzdFNwTUpOCjRKb0xBb0dCQUxyNWZWa0hDelBJWkhLZ2xRb1Z0cUM0LzFuQlJGdTBmUlNYY2JYTGdldE5Cc3dVL0VHV3F5Y3kKeldtMnBQV1JyWU5Od2RTL2RDdk5jR21rKzMwckgwOTVFSWEyUEJLTDdrSTlvVWNtREdZVHRzdUJaL0wvN094SQpxa0Nkc2k5ZkxRWElxcTZiTDNjVmhOcy95TXZjUGlpUXZyb0RLRW9OSlcrVE5ONG1nOXovCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg=="
            },
            {
                "Filename": "tls/kube-apiserver-to-kubelet-client.crt",
                "Data": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURiRENDQWxTZ0F3SUJBZ0lJRGh3RHRYemF4UWt3RFFZSktvWklodmNOQVFFTEJRQXdQekVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1Ta3dKd1lEVlFRREV5QnJkV0psTFdGd2FYTmxjblpsY2kxMGJ5MXJkV0psYkdWMApMWE5wWjI1bGNqQWVGdzB5TXpBME1UZ3hNekE0TVRSYUZ3MHlOREEwTVRjeE16QTRNVFJhTURZeEZEQVNCZ05WCkJBb1RDMnQxWW1VdGJXRnpkR1Z5TVI0d0hBWURWUVFERXhWemVYTjBaVzA2YTNWaVpTMWhjR2x6WlhKMlpYSXcKZ2dFaU1BMEdDU3FHU0liM0RRRUJBUVVBQTRJQkR3QXdnZ0VLQW9JQkFRRHlybVh6UnlraDdUZGpObUdoYVRBWQp0MjhmYnRXQmJkZ1Q0OHJOdjBMaDhQcHhYdHVEL2xhbW56Tzh5TlQySVhjQjVVMDdTMkRrSGRDbEszZUlpekRoCkoxanBoMW42anZYczZWbitaM3hwVitrayt2T0hPMktNQW1leWZSY1E4SElhWmNRQldvNllnaG1QM1FZRHRmS2sKSUZmQlR5UEdPUlZ4azF3bUl3WnVjZEdibklEYUdoRVRpQjg0UmxMc3NwNnFURnFETG0wdTJWN2t5MUhoSkFLdwpFMVhLUjU4L1l1akNBRzJZQnJmVzV6THhxY2sreHVpREpYV2p4YzVQMUlHM21oZ0RWMEtCanA0VFZGTGtRckJtCkdmYmV6NTErSDBQaFJWOHhQRUhoNDhWeUpNSFA3WTRlTytmUWZCc2FCZkZDYWh6YmYxVm5Ya2JTei96VEp4WlAKQWdNQkFBR2pkVEJ6TUE0R0ExVWREd0VCL3dRRUF3SUZvREFUQmdOVkhTVUVEREFLQmdnckJnRUZCUWNEQWpBTQpCZ05WSFJNQkFmOEVBakFBTUIwR0ExVWREZ1FXQkJUNFIzQzA3TWlaYW9WQkpNdDhReFJJOUNlSllEQWZCZ05WCkhTTUVHREFXZ0JURmEwckEwWHcvV3QzSC9rNTVRKy9GeW9YbEN6QU5CZ2txaGtpRzl3MEJBUXNGQUFPQ0FRRUEKdVQxTmdQTGVmMi9JdTViaWNhL3h0RklUeThqSE92Vk1aaUZDTmwwZDZZN2p4blpWUlo2dDY0cXQxWFFEZW42RwpkNkFKRTNuVnNSQkRtVlJLQWJFRnJESkNWUFRBTG41UzVQcVdhOVcxTjhtU0RndWhuNklCUzY2b1p6QWlMV0JPClpaaHpya0wyM3FVS0xNeThaMXUySzdpcE9vQ3ZTSzFLenM4WW1hWVJaaG1QUHpZU05jck8waDE2ajkwQTNxU0MKTC83a3o5bkpDTTRONm9RMVIvSkJ5Wlo5QnczakVwbStCQ3NjRlVxL3hhTE1UUnV1ZDd4MlM5RzQxNXFSeERlMAp4V0xYdlNxeXY3YlJPOXZXelFDRWp5YndJYUs2T1hjRlp0bE5UaW1FY2RxeEhBbU1LVHJiSFQ1Sy9kMEJZMUtyCnJGb09Gc1ZQTDB3RnAxaVFFNnVyeXc9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg=="
            }
        ]
    },
    "*tls.KubeAPIServerToKubeletSignerCertKey": {
        "CertRaw": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURRakNDQWlxZ0F3SUJBZ0lJT1lBbEJMd25EWUV3RFFZSktvWklodmNOQVFFTEJRQXdQekVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1Ta3dKd1lEVlFRREV5QnJkV0psTFdGd2FYTmxjblpsY2kxMGJ5MXJkV0psYkdWMApMWE5wWjI1bGNqQWVGdzB5TXpBME1UZ3hNekE0TVRSYUZ3MHlOREEwTVRjeE16QTRNVFJhTUQ4eEVqQVFCZ05WCkJBc1RDVzl3Wlc1emFHbG1kREVwTUNjR0ExVUVBeE1nYTNWaVpTMWhjR2x6WlhKMlpYSXRkRzh0YTNWaVpXeGwKZEMxemFXZHVaWEl3Z2dFaU1BMEdDU3FHU0liM0RRRUJBUVVBQTRJQkR3QXdnZ0VLQW9JQkFRRG1tcW1XVS9uUAp5azk5RkRnRjNmYmRTZTNwd1dCYW0zejRrdVhwbmJmN2FGVFZPWE1JYU4zdlUxQWhMMGt4U0FtR0dzblppekpWClFKNTdNMG42ckJFajdRNDMyUzNENUU4ajVPQnRweThRLytXMXFXWmJsRFNxeVRjQm4vWTZIcjUzbFZIdjNEWTEKczJqRXBxWnJ2NnBaY3dtQldqTCthTlQybTVxSS9pSkFVN0tlaU0zQlM4Y1lmWjlUYVc1OE4weUxqWlRNQnJzeApxRXVWOC9teXJMRmlKa05RRGtvcERUSFExWTVFSWZVVG9yR3BNQXR6aHVIczRkd3J2ZWNmMlhxUFQ3NHRaU1p0ClZsY0t1R1J5bmJONUIyV0ZHL0NpaGZ6a1V2STFONGsvak1YNU9ZN2x0YThnbHNGN00wSWdEVkVSNCtvZk9GS1YKZFBIWFhYMjJ0SldMQWdNQkFBR2pRakJBTUE0R0ExVWREd0VCL3dRRUF3SUNwREFQQmdOVkhSTUJBZjhFQlRBRApBUUgvTUIwR0ExVWREZ1FXQkJURmEwckEwWHcvV3QzSC9rNTVRKy9GeW9YbEN6QU5CZ2txaGtpRzl3MEJBUXNGCkFBT0NBUUVBM1pRM0RLR2NIOWJ6N3VpTytXYWFOQkswUk1nTmJBb0MxVEJaUjhUNklVMUZ3Y25WM0NtOGltZ0YKMVRPdzZ2UytBclFiVHcyOVgvZTgzalBrL05xSDlGVURqVkFEcSthWjVLRVMzY1Q1TlpsZzEzV25mSktNenBGbApCZWRnMW4vZ1RVSitmVnlEZE5SaXVncTFGV3RzWGw2M2Y0OVdPQ2REQk5IcVVtK3VMNFpRSEh3a09kaWg3YTdVCnQ3T2lDNU9xSDh1YklDaUUzV3MrbTgrdndRM0MzZVdLVHJXOEg3YTV1NVJJMmJpT2dYZndNbFhqVGFRNWRsTHgKaGlYMXI0dW5mTHp5cUxxTEpvVTRvRmhMUVduZS83NDJOeTUrbENNSzVBQzhSZHI4aXpuTWhKbC9TekdYcDhhaAo3U2F1bTRMZ1JyenJ0NSthNTd2V3NMd0h1bW9vdGc9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==",
        "KeyRaw": "LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBNXBxcGxsUDV6OHBQZlJRNEJkMzIzVW50NmNGZ1dwdDgrSkxsNloyMysyaFUxVGx6CkNHamQ3MU5RSVM5Sk1VZ0poaHJKMllzeVZVQ2Vlek5KK3F3UkkrME9OOWt0dytSUEkrVGdiYWN2RVAvbHRhbG0KVzVRMHFzazNBWi8yT2g2K2Q1VlI3OXcyTmJOb3hLYW1hNytxV1hNSmdWb3kvbWpVOXB1YWlQNGlRRk95bm9qTgp3VXZIR0gyZlUybHVmRGRNaTQyVXpBYTdNYWhMbGZQNXNxeXhZaVpEVUE1S0tRMHgwTldPUkNIMUU2S3hxVEFMCmM0Ymg3T0hjSzczbkg5bDZqMCsrTFdVbWJWWlhDcmhrY3AyemVRZGxoUnZ3b29YODVGTHlOVGVKUDR6RitUbU8KNWJXdklKYkJlek5DSUExUkVlUHFIemhTbFhUeDExMTl0clNWaXdJREFRQUJBb0lCQVFDbE04dW1QRWJNeTV5aQplS2VoM0dBTUsvaGE3QVFCSlQ4a1BPaWtzaTZwMXhaZklxYjhNVlE5TGF4TCtib3ZxZkhZdHJ4QU11NCtFT3I0ClM4Z0Y0dHJzcDlqMXZZcUJ1Yi9RY1JrdXRRU000eVpIUERKdURRQ21FVHhzMTVIb0ZUcFNKUkRzQ3hCeTdESjAKSHdjK1RiTFdIZ21ETjRFc3JTRlVBaWwxVnNwbTFiTUp1NXByenNvRGUyVHFzcTRZUm9RUnQrK0ZIU2E0b3lncgpydmJ0Rm9PTnpHWW5zRDArYWpvUXYvZGdtR2Q3YlhncmEyNmlwN2FkMWI4QXNaRnJ4M2hRK21WMDc2RlpRbm5ICllKVGYwN3hCL1hlVStIQ2FFRkl6SUNHdGNKK2IwUFM5ektXejBYZk5YUTlsNFlxeFBLT3pmV3Q1eW1PMm83UzEKL0Q2SWl2VHhBb0dCQU8rd0hLbm1FWjk3T3doVisyUW0venh5bE4xYlkvb1BQY0pDQ3Mxalp2ZXJxR2VDRGhZWAppWHpDMURVNTRIdUNGNVkweWlpMDhUWjQ5N1R1L0VVSGtwMjIrc3BMZzEyRXhoaUpEbEZJOStURDB5V0EvSFlZClRGalpybEpoMUxnVHhHcUx2SHpSelE4d0xocUFmZmxzcFJjclk3STFFMU9TbGVOa2ZBRXBYTk1kQW9HQkFQWk0KU29IdGtDcEkyMkZ4NE1KSnJZM0hab1o5M0RGd0FlaEpMSVU0T01jR3crUmx4RDNObnhrNWh4OFdML0JaWFl3awo5S1ZJUFVQZDJKSEtNYWFsVjRPeFEvWEFNMk1TRjJ0cVBPeFR0SzZFWWdoU0hmR0FrYXFRMzZPVVYxOHRKMVBnCmpZZUFxOFBLZWNxR2RCRlI0cW96bmM5V2Y5ODlHN3lTOVhDMGEwTEhBb0dBS21SRWZZd1NXOW1JdEUyNHU1cm0KRTRQVWJsNEdqYWg2Yk13UGF3b0VvUk04SXFwdTRWdGlWcTJDcUxOR3o3RlBpS0puaXRHTncrdWJLK1lFdWhTLwp5cU1kTWdBdkNMQTk5UUx3aEZIYWZoeGdVTWJDWUFTbUpDVEQzeEFzZGk0UTFDTkl2KzYvVE10aHJCQkR0NFNPCm9rMXJRWTUvajQxaWN5aEhnbEVWZU1VQ2dZQkpWaW9SU2VWVlVlQlF3WkhGQ0I4dlNpSlRCWUxkRFpianpYWCsKTE9GckVhNmVnVmJQZUR4WlRISFpaY2ZjYngrVnJTTlRXNUV5ZGdvWVR2WTl3cG11VXNnRGtyazZWSmE0bXllTQp6dGZMNXdzeG94SGJhUWIybkxDYWluOEJqZlpaMlZFSytkc3JMMHpZYXZTQWU3dGNKb1preUVMRysvRVlVMEhWCnowTG8zUUtCZ0E5SVB5bThvdUtHaTFEOU8yWXlCSkxMczVNdkh4ZXpaM2s1cjhzNHFrZHFPbkNhdStrNzd3MDgKK2V4ZzZFa0R4VUliRGxCUHZMYkNQSkVldk1Jenp5cmNLRGxDcnhNeFBKdmg1OFczWTZBTFRJV2Frd3ZESmp6MApWZ2szT0RZT2duRTNxZGNxTnVyVno0Rm1KeG5zRUtPN1cvNGNCdXpOTCtqSmlhSFlqWkVRCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==",
        "FileList": [
            {
                "Filename": "tls/kube-apiserver-to-kubelet-signer.key",
                "Data": "LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBNXBxcGxsUDV6OHBQZlJRNEJkMzIzVW50NmNGZ1dwdDgrSkxsNloyMysyaFUxVGx6CkNHamQ3MU5RSVM5Sk1VZ0poaHJKMllzeVZVQ2Vlek5KK3F3UkkrME9OOWt0dytSUEkrVGdiYWN2RVAvbHRhbG0KVzVRMHFzazNBWi8yT2g2K2Q1VlI3OXcyTmJOb3hLYW1hNytxV1hNSmdWb3kvbWpVOXB1YWlQNGlRRk95bm9qTgp3VXZIR0gyZlUybHVmRGRNaTQyVXpBYTdNYWhMbGZQNXNxeXhZaVpEVUE1S0tRMHgwTldPUkNIMUU2S3hxVEFMCmM0Ymg3T0hjSzczbkg5bDZqMCsrTFdVbWJWWlhDcmhrY3AyemVRZGxoUnZ3b29YODVGTHlOVGVKUDR6RitUbU8KNWJXdklKYkJlek5DSUExUkVlUHFIemhTbFhUeDExMTl0clNWaXdJREFRQUJBb0lCQVFDbE04dW1QRWJNeTV5aQplS2VoM0dBTUsvaGE3QVFCSlQ4a1BPaWtzaTZwMXhaZklxYjhNVlE5TGF4TCtib3ZxZkhZdHJ4QU11NCtFT3I0ClM4Z0Y0dHJzcDlqMXZZcUJ1Yi9RY1JrdXRRU000eVpIUERKdURRQ21FVHhzMTVIb0ZUcFNKUkRzQ3hCeTdESjAKSHdjK1RiTFdIZ21ETjRFc3JTRlVBaWwxVnNwbTFiTUp1NXByenNvRGUyVHFzcTRZUm9RUnQrK0ZIU2E0b3lncgpydmJ0Rm9PTnpHWW5zRDArYWpvUXYvZGdtR2Q3YlhncmEyNmlwN2FkMWI4QXNaRnJ4M2hRK21WMDc2RlpRbm5ICllKVGYwN3hCL1hlVStIQ2FFRkl6SUNHdGNKK2IwUFM5ektXejBYZk5YUTlsNFlxeFBLT3pmV3Q1eW1PMm83UzEKL0Q2SWl2VHhBb0dCQU8rd0hLbm1FWjk3T3doVisyUW0venh5bE4xYlkvb1BQY0pDQ3Mxalp2ZXJxR2VDRGhZWAppWHpDMURVNTRIdUNGNVkweWlpMDhUWjQ5N1R1L0VVSGtwMjIrc3BMZzEyRXhoaUpEbEZJOStURDB5V0EvSFlZClRGalpybEpoMUxnVHhHcUx2SHpSelE4d0xocUFmZmxzcFJjclk3STFFMU9TbGVOa2ZBRXBYTk1kQW9HQkFQWk0KU29IdGtDcEkyMkZ4NE1KSnJZM0hab1o5M0RGd0FlaEpMSVU0T01jR3crUmx4RDNObnhrNWh4OFdML0JaWFl3awo5S1ZJUFVQZDJKSEtNYWFsVjRPeFEvWEFNMk1TRjJ0cVBPeFR0SzZFWWdoU0hmR0FrYXFRMzZPVVYxOHRKMVBnCmpZZUFxOFBLZWNxR2RCRlI0cW96bmM5V2Y5ODlHN3lTOVhDMGEwTEhBb0dBS21SRWZZd1NXOW1JdEUyNHU1cm0KRTRQVWJsNEdqYWg2Yk13UGF3b0VvUk04SXFwdTRWdGlWcTJDcUxOR3o3RlBpS0puaXRHTncrdWJLK1lFdWhTLwp5cU1kTWdBdkNMQTk5UUx3aEZIYWZoeGdVTWJDWUFTbUpDVEQzeEFzZGk0UTFDTkl2KzYvVE10aHJCQkR0NFNPCm9rMXJRWTUvajQxaWN5aEhnbEVWZU1VQ2dZQkpWaW9SU2VWVlVlQlF3WkhGQ0I4dlNpSlRCWUxkRFpianpYWCsKTE9GckVhNmVnVmJQZUR4WlRISFpaY2ZjYngrVnJTTlRXNUV5ZGdvWVR2WTl3cG11VXNnRGtyazZWSmE0bXllTQp6dGZMNXdzeG94SGJhUWIybkxDYWluOEJqZlpaMlZFSytkc3JMMHpZYXZTQWU3dGNKb1preUVMRysvRVlVMEhWCnowTG8zUUtCZ0E5SVB5bThvdUtHaTFEOU8yWXlCSkxMczVNdkh4ZXpaM2s1cjhzNHFrZHFPbkNhdStrNzd3MDgKK2V4ZzZFa0R4VUliRGxCUHZMYkNQSkVldk1Jenp5cmNLRGxDcnhNeFBKdmg1OFczWTZBTFRJV2Frd3ZESmp6MApWZ2szT0RZT2duRTNxZGNxTnVyVno0Rm1KeG5zRUtPN1cvNGNCdXpOTCtqSmlhSFlqWkVRCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg=="
            },
            {
                "Filename": "tls/kube-apiserver-to-kubelet-signer.crt",
                "Data": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURRakNDQWlxZ0F3SUJBZ0lJT1lBbEJMd25EWUV3RFFZSktvWklodmNOQVFFTEJRQXdQekVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1Ta3dKd1lEVlFRREV5QnJkV0psTFdGd2FYTmxjblpsY2kxMGJ5MXJkV0psYkdWMApMWE5wWjI1bGNqQWVGdzB5TXpBME1UZ3hNekE0TVRSYUZ3MHlOREEwTVRjeE16QTRNVFJhTUQ4eEVqQVFCZ05WCkJBc1RDVzl3Wlc1emFHbG1kREVwTUNjR0ExVUVBeE1nYTNWaVpTMWhjR2x6WlhKMlpYSXRkRzh0YTNWaVpXeGwKZEMxemFXZHVaWEl3Z2dFaU1BMEdDU3FHU0liM0RRRUJBUVVBQTRJQkR3QXdnZ0VLQW9JQkFRRG1tcW1XVS9uUAp5azk5RkRnRjNmYmRTZTNwd1dCYW0zejRrdVhwbmJmN2FGVFZPWE1JYU4zdlUxQWhMMGt4U0FtR0dzblppekpWClFKNTdNMG42ckJFajdRNDMyUzNENUU4ajVPQnRweThRLytXMXFXWmJsRFNxeVRjQm4vWTZIcjUzbFZIdjNEWTEKczJqRXBxWnJ2NnBaY3dtQldqTCthTlQybTVxSS9pSkFVN0tlaU0zQlM4Y1lmWjlUYVc1OE4weUxqWlRNQnJzeApxRXVWOC9teXJMRmlKa05RRGtvcERUSFExWTVFSWZVVG9yR3BNQXR6aHVIczRkd3J2ZWNmMlhxUFQ3NHRaU1p0ClZsY0t1R1J5bmJONUIyV0ZHL0NpaGZ6a1V2STFONGsvak1YNU9ZN2x0YThnbHNGN00wSWdEVkVSNCtvZk9GS1YKZFBIWFhYMjJ0SldMQWdNQkFBR2pRakJBTUE0R0ExVWREd0VCL3dRRUF3SUNwREFQQmdOVkhSTUJBZjhFQlRBRApBUUgvTUIwR0ExVWREZ1FXQkJURmEwckEwWHcvV3QzSC9rNTVRKy9GeW9YbEN6QU5CZ2txaGtpRzl3MEJBUXNGCkFBT0NBUUVBM1pRM0RLR2NIOWJ6N3VpTytXYWFOQkswUk1nTmJBb0MxVEJaUjhUNklVMUZ3Y25WM0NtOGltZ0YKMVRPdzZ2UytBclFiVHcyOVgvZTgzalBrL05xSDlGVURqVkFEcSthWjVLRVMzY1Q1TlpsZzEzV25mSktNenBGbApCZWRnMW4vZ1RVSitmVnlEZE5SaXVncTFGV3RzWGw2M2Y0OVdPQ2REQk5IcVVtK3VMNFpRSEh3a09kaWg3YTdVCnQ3T2lDNU9xSDh1YklDaUUzV3MrbTgrdndRM0MzZVdLVHJXOEg3YTV1NVJJMmJpT2dYZndNbFhqVGFRNWRsTHgKaGlYMXI0dW5mTHp5cUxxTEpvVTRvRmhMUVduZS83NDJOeTUrbENNSzVBQzhSZHI4aXpuTWhKbC9TekdYcDhhaAo3U2F1bTRMZ1JyenJ0NSthNTd2V3NMd0h1bW9vdGc9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg=="
            }
        ]
    },
    "*tls.KubeControlPlaneCABundle": {
        "BundleRaw": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURORENDQWh5Z0F3SUJBZ0lJVmVjTVVKYVFxVk13RFFZSktvWklodmNOQVFFTEJRQXdPREVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1TSXdJQVlEVlFRREV4bHJkV0psTFdOdmJuUnliMnd0Y0d4aGJtVXRjMmxuYm1WeQpNQjRYRFRJek1EUXhPREV6TURneE5Gb1hEVEkwTURReE56RXpNRGd4TkZvd09ERVNNQkFHQTFVRUN4TUpiM0JsCmJuTm9hV1owTVNJd0lBWURWUVFERXhscmRXSmxMV052Ym5SeWIyd3RjR3hoYm1VdGMybG5ibVZ5TUlJQklqQU4KQmdrcWhraUc5dzBCQVFFRkFBT0NBUThBTUlJQkNnS0NBUUVBMmQ1aXY3dHlnZjNsQVZ2REppVFNOSGRMSnRIbgplYk1WSkR2NDdTZWJ3aExyRm94aTNIVkVhWHNvUGFnMDhtMDlSckdPY1I0RGRneHBRb2JqTGdOeDhWQXUySlFQCktUSnJBelFPN2hPZ0VzckhrQmNDWjVsNW5PMFVRZzJMWDhsMzdqQ3JMQWFMditGQUx2L2ZzaE9GOUZLMExzeDMKWE14eDAxMnNrVjBmczBpOHJ2dUE0amttMEsxcEZqTzdMbHY4c0VQLzBLcWxyQUE2M3habHR0Rno3QkZ6WGd5WQp6Tm9na0Z5V0ZVOGZrb002MlIzRG8yUHhUcG9UUGp5bmx5ZXJ5Uy9KTmlCUFdZWG9rRFlQdWdrcmMyaHF3ZW00CnlpSzRCMXJvM0RwclBaMWxuMWhHbGtBSVhpQkhuYmJnVXdBb1NDKzNqWlFzQUpIb2RkTnBrcTcxY1FJREFRQUIKbzBJd1FEQU9CZ05WSFE4QkFmOEVCQU1DQXFRd0R3WURWUjBUQVFIL0JBVXdBd0VCL3pBZEJnTlZIUTRFRmdRVQpZZENaRkFva3JKUDlkWDdKdmhOa2l4QWo2YjB3RFFZSktvWklodmNOQVFFTEJRQURnZ0VCQUgyZ05nUkNvdjBzCnY2eDlBeTQwdzFScjJjQ1p6UXZwT2hXNTJFK01WelVMSXlaWkVidDlwcVo3VUtqZmxqMTRsclJYd0JielNIMWwKM25JQzNNZ1VPZFRaNEE1Rk5yK2FTdWJWaTF2ZzM4WXdrbFVaMkZqWnlhdWg4blNvVEtzUWovdTd3WVZyZ3h3dApiWXc2WlBCSHZ5a1BUSElTUmJtcHpENzNiYXZlVi9YcTZ5b1NrQlU3OTZFQXhqT3A5dUFSSWptdkg0MFJ4SzJzClNFbk1lRk1JZWlnMHU4VTVvN0I2R0MxY3kzbHBXanZiTXFnVTQzMXcrc3dSdnJXTmZsK1lkYTRzclU2TENmckcKNjVscVFNcUkwcHZiSzZCOUVkd1M0bC83aXRZV3c4UzV5eVA1c3NMZ1orcnM1MW9LbFFSdEhLQi9XeVZMNDFCeQpUSytYVk9EZkUvND0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQotLS0tLUJFR0lOIENFUlRJRklDQVRFLS0tLS0KTUlJRE1qQ0NBaHFnQXdJQkFnSUlWZFFhcGZ6MDdXWXdEUVlKS29aSWh2Y05BUUVMQlFBd056RVNNQkFHQTFVRQpDeE1KYjNCbGJuTm9hV1owTVNFd0h3WURWUVFERXhocmRXSmxMV0Z3YVhObGNuWmxjaTFzWWkxemFXZHVaWEl3CkhoY05Nak13TkRFNE1UTXdPREV3V2hjTk16TXdOREUxTVRNd09ERXdXakEzTVJJd0VBWURWUVFMRXdsdmNHVnUKYzJocFpuUXhJVEFmQmdOVkJBTVRHR3QxWW1VdFlYQnBjMlZ5ZG1WeUxXeGlMWE5wWjI1bGNqQ0NBU0l3RFFZSgpLb1pJaHZjTkFRRUJCUUFEZ2dFUEFEQ0NBUW9DZ2dFQkFPamUzZ3NlODNjMDJ3b1VWT2FRcXA0VlVTMjBwTzF4CklsSEpkcnRiTU5sdkNaNWtmQjNacVZSTEVKQ1Izdi9nQkM3MlJ2MTBCVVFMT0Y3cDRlNkxMQ0kzbXhPZ1JZTWwKRXNtL21ycWx5cGIvVzY5dzc1dWFYV0RWTTRjZ0k3cS84a0t6aU90a0xiR1ptdllTRUdYUCtvbnpVOVBQSFBaQQpFZ1FWVkVERHRRTWlreHlpcWRnQjdwTWxVdmpYZmdaNHZCNzRmc3lXdURWaUMvRmJ1RUpsUEZNL3QxR3p4SkJtCkQ4eTU5dTF0aG1vMWNWTmo0QXFkWllZS2hIcXZGUDVIUGIrL3RBb1NHTU0yc3l3MHN1a3MwL0VqVUpseTN6L3YKRHBJQnpsYUYxbjZ1VUtwQkN5cnorbW5wK0lsb1oxTHduYXc5L05YcDFuZHZWSFcvTm43eEgza0NBd0VBQWFOQwpNRUF3RGdZRFZSMFBBUUgvQkFRREFnS2tNQThHQTFVZEV3RUIvd1FGTUFNQkFmOHdIUVlEVlIwT0JCWUVGT2JuCkdPcUZ0UDN0clBtUGpBbU9BMjdZNXUwM01BMEdDU3FHU0liM0RRRUJDd1VBQTRJQkFRQ0xSbW5mSndtSzIrbi8KdlFKclVLSFZNNUltWDhSVFpOT25ZbDVFWFhVeEVySXJyQkhGSXJ6VU0wOFNlS1dwQmh0RGpYM2cyWlVYZ1I0QgpEM1l3Sjl4ZEtYR3g4QVprVEFxOFN4MkdPaW9EN2poSFNzVFdaUTg2RVVYYUlKa21vZ2oxUXF4eUVRSUZnQmRVCm56SnpEVm9UcDc4M2FTQlAvRS9yaVp3S0x1SEgrMFI4cDlDZjNZNnZRNWhPeEQzTnI5OFZmb2lSV1hBVXdoZUgKZU1TME5JVHQ4TWpIcFY3QkQ4MGpiTWFxbXdyaFNlUGdhamlwQ3RZdXdJQkJPeHB3ZjZUNVhmWGQ4dkU2azVIRgptbGRDcjk3SWExdlRGaW9obUhob3IyOXF4Vm9mMW56N1ZTMC8reHBETzdGV3FYSlkzQWt1RWZta3FXMkhNUFJwCkdmQklUUjhPCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0KLS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURRRENDQWlpZ0F3SUJBZ0lJVXdMTkJjaHNZT1l3RFFZSktvWklodmNOQVFFTEJRQXdQakVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1TZ3dKZ1lEVlFRREV4OXJkV0psTFdGd2FYTmxjblpsY2kxc2IyTmhiR2h2YzNRdApjMmxuYm1WeU1CNFhEVEl6TURReE9ERXpNRGd4TUZvWERUTXpNRFF4TlRFek1EZ3hNRm93UGpFU01CQUdBMVVFCkN4TUpiM0JsYm5Ob2FXWjBNU2d3SmdZRFZRUURFeDlyZFdKbExXRndhWE5sY25abGNpMXNiMk5oYkdodmMzUXQKYzJsbmJtVnlNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DQVE4QU1JSUJDZ0tDQVFFQXVrQXFycmwrWHROcwpNQm1JMkRnZmlwUmMvNEluLytGZ2txSWZmaENTYzU3eXhGaXZBRXR5VTM3WERlQmNkeHNFMDRLQ1RuSDEram5PCm5VZkxlWFVKMmlHcFF6R1FSZ2FjV3VkeERBdUc1VmZmYkN0RkpxRGQvKzRTT3J6SlRQellvditUTGxPc296QlMKSHc5WWN4K1JmZUw0R3NlaXVhQVdmaFcreHdkQVFHWVg0eFJNcVBkcmlCY1JQUkprd2Q2K21xZ3FuM0t4UjI3VgpWeU85NnNlYWdjME5IR3h0dUlBUTF2eWgzeThvM2E3bURUdWJ6VDNRMXhTeDZTUUljd0I5K0RaUkRjMGwwUlBwClhzYVBuMVhMMzVYcHR0MHkxQTBZKzlKTXM5SWxTNkpCbzVNYzBERnNQWVNFZlNoeXZ5TVBDZFZ5bXdPcVRkbEcKdEpaZUxWazFKd0lEQVFBQm8wSXdRREFPQmdOVkhROEJBZjhFQkFNQ0FxUXdEd1lEVlIwVEFRSC9CQVV3QXdFQgovekFkQmdOVkhRNEVGZ1FVa01iUHN5YU5OaGg0bXlZZ3FOelJ5QmUzc21Rd0RRWUpLb1pJaHZjTkFRRUxCUUFECmdnRUJBR1FEMTZNdTAybEVaY1BodTNxcjFHRnVVQUZFWWh5T0hRSFVFcklUOU9rQ2hvczU4eUZ0WThPRFlwelYKdS83MllMVDBoSkdrY0diREVEN2dNTzNGMXhvWEc2bFh4Y2htb0FhOFZhWlpxTUJBckdVQXE4aXppUUdPUUMzawpaYVh4SjcrMGhhNTA0Q2xnUDJJd3hIMTlBOFhRVi8rS0hPU05YbjFGaDlSMXdNM2tHRG9JSFQ2bFZ4R1RlMTNZCldEMEN2NTRxZCtMWElSOCsrbVFVSXdMd1cwd3NKUEUybG5MYVhvSzQ5MHp6WDJvWWMxUWJ1WGNqeUxWY3pVUG0KVWFxY29IeDVjS3pabytjM2I5QVpvaDZzRjRvMG1LOWdJT2RWZXFzTitkbWlKSFJIeElhT0hYSzg2SFJpczRWWQpPM0VhTTlxWnViOS9vQ3BSRVcrN25CWWVDemM9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0KLS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURURENDQWpTZ0F3SUJBZ0lJUjhMVUtrdnFZdFF3RFFZSktvWklodmNOQVFFTEJRQXdSREVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1TNHdMQVlEVlFRREV5VnJkV0psTFdGd2FYTmxjblpsY2kxelpYSjJhV05sTFc1bApkSGR2Y21zdGMybG5ibVZ5TUI0WERUSXpNRFF4T0RFek1EZ3hNRm9YRFRNek1EUXhOVEV6TURneE1Gb3dSREVTCk1CQUdBMVVFQ3hNSmIzQmxibk5vYVdaME1TNHdMQVlEVlFRREV5VnJkV0psTFdGd2FYTmxjblpsY2kxelpYSjIKYVdObExXNWxkSGR2Y21zdGMybG5ibVZ5TUlJQklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQwpBUUVBNW9wNGpiL25wMW5OZURMSEp5K3EvcVByY1Z5bmNDLzg0ZDFiemp6dDlPTUpicnJ0TkEyTHlvNTBPblZaCmRIMTk5MklIbERTYnJLZFJacE9OR2Q1ZVRNT2hjZUNudVp3MWJ5K0ZBL0FJSHZ6alR4eXV5ZUNqajdQS0xQYm0KSlRsQm5nSjNSVnozV0dRai9MMEdJRWZYV0QwMndkdHJaYmY3dFBtUHEwQWYxYlY5MlM5U21XTWovcWoyTnVYaApLeWZ5aFU0ckI2b0NPQjlDY0M1VENtQW9DdzFJQjBFUEo3UmpxbFFnUVpCTTlwT1BYYTFDWFlleFZ6TFV4ZUZMClFTcHRiUW1UWnp6Yms0cUZrdkVRUlA1VFZEK3VKUXdkNlIvbUhseTZ6ZWRTUEh4SWpzYXVOYzE3bG8xamg5dkgKZkptUUQ5RElpSnU0dW9aaEErejQxQW9sZVFJREFRQUJvMEl3UURBT0JnTlZIUThCQWY4RUJBTUNBcVF3RHdZRApWUjBUQVFIL0JBVXdBd0VCL3pBZEJnTlZIUTRFRmdRVUFpU251cjQ0bVBvT1NsbUlrbE13aWhnMHFnd3dEUVlKCktvWklodmNOQVFFTEJRQURnZ0VCQUxKY2xtaVVKRnhHR0V2TWFwcGNKUXp0UTY0MFhvS0dxeXZVY2xnR0NKK3UKb0MzZmVIdTRKNzJqM1hoZ0VPMEVrbngySWt2ME5JZFplazZyUDk2Rk0ranVHZGZya3RSNmJkbXFpZHJHWXdMWgpLQnVLa0N3b1h0bDVtNWg5eURTRzVuYWRBcWg4VzhEdUhuUFhpZ25HLzk0UmcwRWxVUEw2ZTV4MHNHVUpVVEVXCkYrNzNiajE3RFV0b0RDd0JEY20yK1kxMTVsYzMySEhGTnRYaTFvTUYvRVpaL3F1bGQ3NDJzYUQ4Uk5ta0p5N1EKT3BIK1ZFSnNOUktpZHcyQVdTUW9idEYzbVIvbWFpTktMNExGUldISFNjNTduUkVlOGFUNEQvUFBmcVJKYndxOApLNEZ4TzNmQzRlbFpZaTFHVm5UbnR5RUVLM2JBS2pOblcyOGNBcTNIbkJZPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==",
        "FileList": [
            {
                "Filename": "tls/kube-control-plane-ca-bundle.crt",
                "Data": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURORENDQWh5Z0F3SUJBZ0lJVmVjTVVKYVFxVk13RFFZSktvWklodmNOQVFFTEJRQXdPREVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1TSXdJQVlEVlFRREV4bHJkV0psTFdOdmJuUnliMnd0Y0d4aGJtVXRjMmxuYm1WeQpNQjRYRFRJek1EUXhPREV6TURneE5Gb1hEVEkwTURReE56RXpNRGd4TkZvd09ERVNNQkFHQTFVRUN4TUpiM0JsCmJuTm9hV1owTVNJd0lBWURWUVFERXhscmRXSmxMV052Ym5SeWIyd3RjR3hoYm1VdGMybG5ibVZ5TUlJQklqQU4KQmdrcWhraUc5dzBCQVFFRkFBT0NBUThBTUlJQkNnS0NBUUVBMmQ1aXY3dHlnZjNsQVZ2REppVFNOSGRMSnRIbgplYk1WSkR2NDdTZWJ3aExyRm94aTNIVkVhWHNvUGFnMDhtMDlSckdPY1I0RGRneHBRb2JqTGdOeDhWQXUySlFQCktUSnJBelFPN2hPZ0VzckhrQmNDWjVsNW5PMFVRZzJMWDhsMzdqQ3JMQWFMditGQUx2L2ZzaE9GOUZLMExzeDMKWE14eDAxMnNrVjBmczBpOHJ2dUE0amttMEsxcEZqTzdMbHY4c0VQLzBLcWxyQUE2M3habHR0Rno3QkZ6WGd5WQp6Tm9na0Z5V0ZVOGZrb002MlIzRG8yUHhUcG9UUGp5bmx5ZXJ5Uy9KTmlCUFdZWG9rRFlQdWdrcmMyaHF3ZW00CnlpSzRCMXJvM0RwclBaMWxuMWhHbGtBSVhpQkhuYmJnVXdBb1NDKzNqWlFzQUpIb2RkTnBrcTcxY1FJREFRQUIKbzBJd1FEQU9CZ05WSFE4QkFmOEVCQU1DQXFRd0R3WURWUjBUQVFIL0JBVXdBd0VCL3pBZEJnTlZIUTRFRmdRVQpZZENaRkFva3JKUDlkWDdKdmhOa2l4QWo2YjB3RFFZSktvWklodmNOQVFFTEJRQURnZ0VCQUgyZ05nUkNvdjBzCnY2eDlBeTQwdzFScjJjQ1p6UXZwT2hXNTJFK01WelVMSXlaWkVidDlwcVo3VUtqZmxqMTRsclJYd0JielNIMWwKM25JQzNNZ1VPZFRaNEE1Rk5yK2FTdWJWaTF2ZzM4WXdrbFVaMkZqWnlhdWg4blNvVEtzUWovdTd3WVZyZ3h3dApiWXc2WlBCSHZ5a1BUSElTUmJtcHpENzNiYXZlVi9YcTZ5b1NrQlU3OTZFQXhqT3A5dUFSSWptdkg0MFJ4SzJzClNFbk1lRk1JZWlnMHU4VTVvN0I2R0MxY3kzbHBXanZiTXFnVTQzMXcrc3dSdnJXTmZsK1lkYTRzclU2TENmckcKNjVscVFNcUkwcHZiSzZCOUVkd1M0bC83aXRZV3c4UzV5eVA1c3NMZ1orcnM1MW9LbFFSdEhLQi9XeVZMNDFCeQpUSytYVk9EZkUvND0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQotLS0tLUJFR0lOIENFUlRJRklDQVRFLS0tLS0KTUlJRE1qQ0NBaHFnQXdJQkFnSUlWZFFhcGZ6MDdXWXdEUVlKS29aSWh2Y05BUUVMQlFBd056RVNNQkFHQTFVRQpDeE1KYjNCbGJuTm9hV1owTVNFd0h3WURWUVFERXhocmRXSmxMV0Z3YVhObGNuWmxjaTFzWWkxemFXZHVaWEl3CkhoY05Nak13TkRFNE1UTXdPREV3V2hjTk16TXdOREUxTVRNd09ERXdXakEzTVJJd0VBWURWUVFMRXdsdmNHVnUKYzJocFpuUXhJVEFmQmdOVkJBTVRHR3QxWW1VdFlYQnBjMlZ5ZG1WeUxXeGlMWE5wWjI1bGNqQ0NBU0l3RFFZSgpLb1pJaHZjTkFRRUJCUUFEZ2dFUEFEQ0NBUW9DZ2dFQkFPamUzZ3NlODNjMDJ3b1VWT2FRcXA0VlVTMjBwTzF4CklsSEpkcnRiTU5sdkNaNWtmQjNacVZSTEVKQ1Izdi9nQkM3MlJ2MTBCVVFMT0Y3cDRlNkxMQ0kzbXhPZ1JZTWwKRXNtL21ycWx5cGIvVzY5dzc1dWFYV0RWTTRjZ0k3cS84a0t6aU90a0xiR1ptdllTRUdYUCtvbnpVOVBQSFBaQQpFZ1FWVkVERHRRTWlreHlpcWRnQjdwTWxVdmpYZmdaNHZCNzRmc3lXdURWaUMvRmJ1RUpsUEZNL3QxR3p4SkJtCkQ4eTU5dTF0aG1vMWNWTmo0QXFkWllZS2hIcXZGUDVIUGIrL3RBb1NHTU0yc3l3MHN1a3MwL0VqVUpseTN6L3YKRHBJQnpsYUYxbjZ1VUtwQkN5cnorbW5wK0lsb1oxTHduYXc5L05YcDFuZHZWSFcvTm43eEgza0NBd0VBQWFOQwpNRUF3RGdZRFZSMFBBUUgvQkFRREFnS2tNQThHQTFVZEV3RUIvd1FGTUFNQkFmOHdIUVlEVlIwT0JCWUVGT2JuCkdPcUZ0UDN0clBtUGpBbU9BMjdZNXUwM01BMEdDU3FHU0liM0RRRUJDd1VBQTRJQkFRQ0xSbW5mSndtSzIrbi8KdlFKclVLSFZNNUltWDhSVFpOT25ZbDVFWFhVeEVySXJyQkhGSXJ6VU0wOFNlS1dwQmh0RGpYM2cyWlVYZ1I0QgpEM1l3Sjl4ZEtYR3g4QVprVEFxOFN4MkdPaW9EN2poSFNzVFdaUTg2RVVYYUlKa21vZ2oxUXF4eUVRSUZnQmRVCm56SnpEVm9UcDc4M2FTQlAvRS9yaVp3S0x1SEgrMFI4cDlDZjNZNnZRNWhPeEQzTnI5OFZmb2lSV1hBVXdoZUgKZU1TME5JVHQ4TWpIcFY3QkQ4MGpiTWFxbXdyaFNlUGdhamlwQ3RZdXdJQkJPeHB3ZjZUNVhmWGQ4dkU2azVIRgptbGRDcjk3SWExdlRGaW9obUhob3IyOXF4Vm9mMW56N1ZTMC8reHBETzdGV3FYSlkzQWt1RWZta3FXMkhNUFJwCkdmQklUUjhPCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0KLS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURRRENDQWlpZ0F3SUJBZ0lJVXdMTkJjaHNZT1l3RFFZSktvWklodmNOQVFFTEJRQXdQakVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1TZ3dKZ1lEVlFRREV4OXJkV0psTFdGd2FYTmxjblpsY2kxc2IyTmhiR2h2YzNRdApjMmxuYm1WeU1CNFhEVEl6TURReE9ERXpNRGd4TUZvWERUTXpNRFF4TlRFek1EZ3hNRm93UGpFU01CQUdBMVVFCkN4TUpiM0JsYm5Ob2FXWjBNU2d3SmdZRFZRUURFeDlyZFdKbExXRndhWE5sY25abGNpMXNiMk5oYkdodmMzUXQKYzJsbmJtVnlNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DQVE4QU1JSUJDZ0tDQVFFQXVrQXFycmwrWHROcwpNQm1JMkRnZmlwUmMvNEluLytGZ2txSWZmaENTYzU3eXhGaXZBRXR5VTM3WERlQmNkeHNFMDRLQ1RuSDEram5PCm5VZkxlWFVKMmlHcFF6R1FSZ2FjV3VkeERBdUc1VmZmYkN0RkpxRGQvKzRTT3J6SlRQellvditUTGxPc296QlMKSHc5WWN4K1JmZUw0R3NlaXVhQVdmaFcreHdkQVFHWVg0eFJNcVBkcmlCY1JQUkprd2Q2K21xZ3FuM0t4UjI3VgpWeU85NnNlYWdjME5IR3h0dUlBUTF2eWgzeThvM2E3bURUdWJ6VDNRMXhTeDZTUUljd0I5K0RaUkRjMGwwUlBwClhzYVBuMVhMMzVYcHR0MHkxQTBZKzlKTXM5SWxTNkpCbzVNYzBERnNQWVNFZlNoeXZ5TVBDZFZ5bXdPcVRkbEcKdEpaZUxWazFKd0lEQVFBQm8wSXdRREFPQmdOVkhROEJBZjhFQkFNQ0FxUXdEd1lEVlIwVEFRSC9CQVV3QXdFQgovekFkQmdOVkhRNEVGZ1FVa01iUHN5YU5OaGg0bXlZZ3FOelJ5QmUzc21Rd0RRWUpLb1pJaHZjTkFRRUxCUUFECmdnRUJBR1FEMTZNdTAybEVaY1BodTNxcjFHRnVVQUZFWWh5T0hRSFVFcklUOU9rQ2hvczU4eUZ0WThPRFlwelYKdS83MllMVDBoSkdrY0diREVEN2dNTzNGMXhvWEc2bFh4Y2htb0FhOFZhWlpxTUJBckdVQXE4aXppUUdPUUMzawpaYVh4SjcrMGhhNTA0Q2xnUDJJd3hIMTlBOFhRVi8rS0hPU05YbjFGaDlSMXdNM2tHRG9JSFQ2bFZ4R1RlMTNZCldEMEN2NTRxZCtMWElSOCsrbVFVSXdMd1cwd3NKUEUybG5MYVhvSzQ5MHp6WDJvWWMxUWJ1WGNqeUxWY3pVUG0KVWFxY29IeDVjS3pabytjM2I5QVpvaDZzRjRvMG1LOWdJT2RWZXFzTitkbWlKSFJIeElhT0hYSzg2SFJpczRWWQpPM0VhTTlxWnViOS9vQ3BSRVcrN25CWWVDemM9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0KLS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURURENDQWpTZ0F3SUJBZ0lJUjhMVUtrdnFZdFF3RFFZSktvWklodmNOQVFFTEJRQXdSREVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1TNHdMQVlEVlFRREV5VnJkV0psTFdGd2FYTmxjblpsY2kxelpYSjJhV05sTFc1bApkSGR2Y21zdGMybG5ibVZ5TUI0WERUSXpNRFF4T0RFek1EZ3hNRm9YRFRNek1EUXhOVEV6TURneE1Gb3dSREVTCk1CQUdBMVVFQ3hNSmIzQmxibk5vYVdaME1TNHdMQVlEVlFRREV5VnJkV0psTFdGd2FYTmxjblpsY2kxelpYSjIKYVdObExXNWxkSGR2Y21zdGMybG5ibVZ5TUlJQklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQwpBUUVBNW9wNGpiL25wMW5OZURMSEp5K3EvcVByY1Z5bmNDLzg0ZDFiemp6dDlPTUpicnJ0TkEyTHlvNTBPblZaCmRIMTk5MklIbERTYnJLZFJacE9OR2Q1ZVRNT2hjZUNudVp3MWJ5K0ZBL0FJSHZ6alR4eXV5ZUNqajdQS0xQYm0KSlRsQm5nSjNSVnozV0dRai9MMEdJRWZYV0QwMndkdHJaYmY3dFBtUHEwQWYxYlY5MlM5U21XTWovcWoyTnVYaApLeWZ5aFU0ckI2b0NPQjlDY0M1VENtQW9DdzFJQjBFUEo3UmpxbFFnUVpCTTlwT1BYYTFDWFlleFZ6TFV4ZUZMClFTcHRiUW1UWnp6Yms0cUZrdkVRUlA1VFZEK3VKUXdkNlIvbUhseTZ6ZWRTUEh4SWpzYXVOYzE3bG8xamg5dkgKZkptUUQ5RElpSnU0dW9aaEErejQxQW9sZVFJREFRQUJvMEl3UURBT0JnTlZIUThCQWY4RUJBTUNBcVF3RHdZRApWUjBUQVFIL0JBVXdBd0VCL3pBZEJnTlZIUTRFRmdRVUFpU251cjQ0bVBvT1NsbUlrbE13aWhnMHFnd3dEUVlKCktvWklodmNOQVFFTEJRQURnZ0VCQUxKY2xtaVVKRnhHR0V2TWFwcGNKUXp0UTY0MFhvS0dxeXZVY2xnR0NKK3UKb0MzZmVIdTRKNzJqM1hoZ0VPMEVrbngySWt2ME5JZFplazZyUDk2Rk0ranVHZGZya3RSNmJkbXFpZHJHWXdMWgpLQnVLa0N3b1h0bDVtNWg5eURTRzVuYWRBcWg4VzhEdUhuUFhpZ25HLzk0UmcwRWxVUEw2ZTV4MHNHVUpVVEVXCkYrNzNiajE3RFV0b0RDd0JEY20yK1kxMTVsYzMySEhGTnRYaTFvTUYvRVpaL3F1bGQ3NDJzYUQ4Uk5ta0p5N1EKT3BIK1ZFSnNOUktpZHcyQVdTUW9idEYzbVIvbWFpTktMNExGUldISFNjNTduUkVlOGFUNEQvUFBmcVJKYndxOApLNEZ4TzNmQzRlbFpZaTFHVm5UbnR5RUVLM2JBS2pOblcyOGNBcTNIbkJZPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg=="
            }
        ]
    },
    "*tls.KubeControlPlaneKubeControllerManagerClientCertKey": {
        "CertRaw": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURYekNDQWtlZ0F3SUJBZ0lJTFJHWHExT2pnYmN3RFFZSktvWklodmNOQVFFTEJRQXdPREVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1TSXdJQVlEVlFRREV4bHJkV0psTFdOdmJuUnliMnd0Y0d4aGJtVXRjMmxuYm1WeQpNQjRYRFRJek1EUXhPREV6TURneE5Gb1hEVEkwTURReE56RXpNRGd4TlZvd01ERVhNQlVHQTFVRUNoTU9jM2x6CmRHVnRPbTFoYzNSbGNuTXhGVEFUQmdOVkJBTVRESE41YzNSbGJUcGhaRzFwYmpDQ0FTSXdEUVlKS29aSWh2Y04KQVFFQkJRQURnZ0VQQURDQ0FRb0NnZ0VCQUxvQ3pDRU9aaVl1cWxaQllXQjZwTEh0N29ZQnBoQXBVdkZQTEJOMQpQaEI2Mjk2dEcycitQOFdnUXkzMm1iNk1ZL1RibGIydHU1S0dmb0xLcGRZS2JlQ1owSjVjenRJZ1FLbGZtdkl0CkFoMy9ETmgrV2J3bFgvY01zMUhRNWh1c2NydytZa2taOEJBK2p5bWlXWVVXVFgzTkJwS01NY05uL3JpODV6RjMKT0Y5WjRtQzJrZDJvR0crZmJieXMzR2Vmdk1EV1huKzhiQTlXWXJpcytUYXJIa01URFJGNHh1NkREZlZJODk0dAo3Zk5OUkVUT0pqM1NQd1BhbFJ2ajZ5UHdYVlBXRTFXbllhK1RnVE5rNVZJRVU3a3ZXSnF4SDBiUU15VWlNU2xGClVJNEpBSEVnNTcvQUgvRDliQjFGdG4wWE5RUzFGVUlkZDRrMkFJVERzOFErazkwQ0F3RUFBYU4xTUhNd0RnWUQKVlIwUEFRSC9CQVFEQWdXZ01CTUdBMVVkSlFRTU1Bb0dDQ3NHQVFVRkJ3TUNNQXdHQTFVZEV3RUIvd1FDTUFBdwpIUVlEVlIwT0JCWUVGTXQ3ODVoK0krZWVlRXF0cWNJVFVEeHVEbzRWTUI4R0ExVWRJd1FZTUJhQUZHSFFtUlFLCkpLeVQvWFYreWI0VFpJc1FJK205TUEwR0NTcUdTSWIzRFFFQkN3VUFBNElCQVFBV3BqazZkYVYzNjlvK01vMDQKckM3QTJPdGxkNnJYblpENFM2cmlUcWNORjRZL01IaXNsRTFONE9OYytGUFRzaUxSNFhETzBKaWo0aGNrNlJuRgpJRlRYeVNKYS9aM3lIOVF3RVFEOWUzZTlSUWFFMm8vTnBWR0NYRlNWU05rUHc4Y3NNMXhBRU85YnNHcmdNTlFaCnpEWkZ0UnZpQm1ZcENzWDcxU0YvZkdKTU85OXVwakhVeHN6SFBvRC9kWkd3b05ORVU2T01Cb0pZNjlmRVBLTWYKUEJ5U1F1L2tVNTNydW1vOHNGUlpKOGc4L0xVMWhiUnlTWTRORE1XRVhGY1RxUjdmZnlxd0owL29YR1RCYkorZgora2o2U3NUdmh6cklzcVUydk9SUEJSL1lKb2Y4UmR4YkR6U2RvY1Q2WmtjSWJPVnVJd3JoUmx4RVUrbkRxeEF4CjFRdFUKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=",
        "KeyRaw": "LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBdWdMTUlRNW1KaTZxVmtGaFlIcWtzZTN1aGdHbUVDbFM4VThzRTNVK0VIcmIzcTBiCmF2NC94YUJETGZhWnZveGo5TnVWdmEyN2tvWitnc3FsMWdwdDRKblFubHpPMGlCQXFWK2E4aTBDSGY4TTJINVoKdkNWZjl3eXpVZERtRzZ4eXZENWlTUm53RUQ2UEthSlpoUlpOZmMwR2tvd3h3MmYrdUx6bk1YYzRYMW5pWUxhUgozYWdZYjU5dHZLemNaNSs4d05aZWY3eHNEMVppdUt6NU5xc2VReE1ORVhqRzdvTU45VWp6M2kzdDgwMUVSTTRtClBkSS9BOXFWRytQckkvQmRVOVlUVmFkaHI1T0JNMlRsVWdSVHVTOVltckVmUnRBekpTSXhLVVZRamdrQWNTRG4KdjhBZjhQMXNIVVcyZlJjMUJMVVZRaDEzaVRZQWhNT3p4RDZUM1FJREFRQUJBb0lCQUJzS1F4QmZIbnhZZGt5Wgpyb1V1N3ZncXBXejNtbU5wRG5TajFMMXpZclZVbHRmVkJGSldhWURhSGtuMU9qNVgvRVBoRS9DQjYrMk4vYUFYCncybk5GRkg5S2pXTE9rbVRoTExhZ2hUSWRERldIVkR2ZFM0RHBPS3VCdmRTemRDaURmL05kYzQ0cGd4R2U5dEsKallicVNoT0tsWFVDU2sya3RZTzNla2hYazJ0UXpzczJva1dsVldaQkJHL0VkNDUxc2JDaUluKzJUMXZaTUxaeAp5aWRPYUQ0MWE0bUprL3BPNS9CTWpvd2tXaDVKa2NtMFRRUmlnM2h2OTQwTlBndkhSNyttVDl0OUVVNTZJK21RClh2ZU5vZm15aTlBNFFsNVd5c3pseVNqeThnR0VKelhDdDdMOXoyRTcxM1lrRnpDcHArVTJkdkdkNFoxUUt0SXkKTHFNYnlFVUNnWUVBd1JXYlJLWktpTFJ4OEQyeDArYTlUMFJkUlNuRkFENkpGZW1odmNpckJwUUlnK0k0ckdTNgpsV1lBeEIrdVg0MUhSTHAxVExESzQrWXRkbzMzWXhENGRyRmt1RFFXU3NTeTdNOUg3YmRBMnBhUTRZaU95NXVIClBVNklVZEV1UnZCdWhVZHh1ekNRRnFHSWpIVFFFcjVSNG1lYVFLRUU1V24zbHhXM0J5L3hxUHNDZ1lFQTlwOGwKeTQ1aVphS28vMlZ0eW1FeVpFbWNaMlp4akVXRHl2TjNxdHh6dENNVVJSOFpDOWZFRHJXV01uZFl1SHo2eW4xZApzYTdLazk1cEFHNTJyRGNNSHVDZTQ0RzlkWVFBeVpxRThaWms5Q1JNUU1WVnR4cENCaHFENC9JNEhmSFFHSm94CjhWN09ZSTh3UjdyWjhLNzVpNERNeXdIYzl2YXppZmI5WTVjQXp3Y0NnWUVBb3E0Q3FQOTJrdUY5a2cxWTg1RlgKOVI1RGUwOXJCUDZyWDRQOTJ6bmtKdUc0bnUyT0ZHbTE3c1FIWnpiT0l3R1VoMnFXQSt4OHRURXRJdE1RR1M2bQpPTkxUYW9Pd09JU3J2K3dRelU5MTIvVzUwZHZOZSt6cE1CVW5zOCtMcndkS0J3OGYycmhhM2taeEZ1NGdsWG8yCjRZdXFva05JTGNadmJhTkZGMUFreXRzQ2dZRUE4d1JCMXdLWUhUU2F1UWYybHYwT0RkcW5YeENJaFVPZXFhY2QKM1dUY01yNTZZOTVQN09hUmtEa0pKdk9KbmtteFMwVWJ4VkhLMXNqTHlSd1Fub1NqMGUxZlJDbjlTa1pvREVEUwpEY2szODRldENBb3IrNERKWElCV1JKRFRFVmJOeXVCdXBEemF1alYreXIvcHNBeUxaQmJvTm9iQWVTOENIY29mClNEcHRGcE1DZ1lBdko4N1E5VmMwZDNWUmY2WHA3VW9BVVEybzNiYkNsNWRwUHRmQWdqQnVENnNzbFJkNDVYTFoKYVROajNSNE5LVDRCb1VOTVFVdmh0N3JQT3U4Yk04c3U4aDh4djBzdDhBclpxNDVTQXJCVGg0aS93RStrZkxETgpaQ0RrUlZDdzBINC9NZFh3MFpzdGZObjlKdGV0YklaVmF0SVVNL0l3cExEbVlFWXBsZkFQeXc9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=",
        "FileList": [
            {
                "Filename": "tls/kube-control-plane-kube-controller-manager-client.key",
                "Data": "LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBdWdMTUlRNW1KaTZxVmtGaFlIcWtzZTN1aGdHbUVDbFM4VThzRTNVK0VIcmIzcTBiCmF2NC94YUJETGZhWnZveGo5TnVWdmEyN2tvWitnc3FsMWdwdDRKblFubHpPMGlCQXFWK2E4aTBDSGY4TTJINVoKdkNWZjl3eXpVZERtRzZ4eXZENWlTUm53RUQ2UEthSlpoUlpOZmMwR2tvd3h3MmYrdUx6bk1YYzRYMW5pWUxhUgozYWdZYjU5dHZLemNaNSs4d05aZWY3eHNEMVppdUt6NU5xc2VReE1ORVhqRzdvTU45VWp6M2kzdDgwMUVSTTRtClBkSS9BOXFWRytQckkvQmRVOVlUVmFkaHI1T0JNMlRsVWdSVHVTOVltckVmUnRBekpTSXhLVVZRamdrQWNTRG4KdjhBZjhQMXNIVVcyZlJjMUJMVVZRaDEzaVRZQWhNT3p4RDZUM1FJREFRQUJBb0lCQUJzS1F4QmZIbnhZZGt5Wgpyb1V1N3ZncXBXejNtbU5wRG5TajFMMXpZclZVbHRmVkJGSldhWURhSGtuMU9qNVgvRVBoRS9DQjYrMk4vYUFYCncybk5GRkg5S2pXTE9rbVRoTExhZ2hUSWRERldIVkR2ZFM0RHBPS3VCdmRTemRDaURmL05kYzQ0cGd4R2U5dEsKallicVNoT0tsWFVDU2sya3RZTzNla2hYazJ0UXpzczJva1dsVldaQkJHL0VkNDUxc2JDaUluKzJUMXZaTUxaeAp5aWRPYUQ0MWE0bUprL3BPNS9CTWpvd2tXaDVKa2NtMFRRUmlnM2h2OTQwTlBndkhSNyttVDl0OUVVNTZJK21RClh2ZU5vZm15aTlBNFFsNVd5c3pseVNqeThnR0VKelhDdDdMOXoyRTcxM1lrRnpDcHArVTJkdkdkNFoxUUt0SXkKTHFNYnlFVUNnWUVBd1JXYlJLWktpTFJ4OEQyeDArYTlUMFJkUlNuRkFENkpGZW1odmNpckJwUUlnK0k0ckdTNgpsV1lBeEIrdVg0MUhSTHAxVExESzQrWXRkbzMzWXhENGRyRmt1RFFXU3NTeTdNOUg3YmRBMnBhUTRZaU95NXVIClBVNklVZEV1UnZCdWhVZHh1ekNRRnFHSWpIVFFFcjVSNG1lYVFLRUU1V24zbHhXM0J5L3hxUHNDZ1lFQTlwOGwKeTQ1aVphS28vMlZ0eW1FeVpFbWNaMlp4akVXRHl2TjNxdHh6dENNVVJSOFpDOWZFRHJXV01uZFl1SHo2eW4xZApzYTdLazk1cEFHNTJyRGNNSHVDZTQ0RzlkWVFBeVpxRThaWms5Q1JNUU1WVnR4cENCaHFENC9JNEhmSFFHSm94CjhWN09ZSTh3UjdyWjhLNzVpNERNeXdIYzl2YXppZmI5WTVjQXp3Y0NnWUVBb3E0Q3FQOTJrdUY5a2cxWTg1RlgKOVI1RGUwOXJCUDZyWDRQOTJ6bmtKdUc0bnUyT0ZHbTE3c1FIWnpiT0l3R1VoMnFXQSt4OHRURXRJdE1RR1M2bQpPTkxUYW9Pd09JU3J2K3dRelU5MTIvVzUwZHZOZSt6cE1CVW5zOCtMcndkS0J3OGYycmhhM2taeEZ1NGdsWG8yCjRZdXFva05JTGNadmJhTkZGMUFreXRzQ2dZRUE4d1JCMXdLWUhUU2F1UWYybHYwT0RkcW5YeENJaFVPZXFhY2QKM1dUY01yNTZZOTVQN09hUmtEa0pKdk9KbmtteFMwVWJ4VkhLMXNqTHlSd1Fub1NqMGUxZlJDbjlTa1pvREVEUwpEY2szODRldENBb3IrNERKWElCV1JKRFRFVmJOeXVCdXBEemF1alYreXIvcHNBeUxaQmJvTm9iQWVTOENIY29mClNEcHRGcE1DZ1lBdko4N1E5VmMwZDNWUmY2WHA3VW9BVVEybzNiYkNsNWRwUHRmQWdqQnVENnNzbFJkNDVYTFoKYVROajNSNE5LVDRCb1VOTVFVdmh0N3JQT3U4Yk04c3U4aDh4djBzdDhBclpxNDVTQXJCVGg0aS93RStrZkxETgpaQ0RrUlZDdzBINC9NZFh3MFpzdGZObjlKdGV0YklaVmF0SVVNL0l3cExEbVlFWXBsZkFQeXc9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo="
            },
            {
                "Filename": "tls/kube-control-plane-kube-controller-manager-client.crt",
                "Data": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURYekNDQWtlZ0F3SUJBZ0lJTFJHWHExT2pnYmN3RFFZSktvWklodmNOQVFFTEJRQXdPREVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1TSXdJQVlEVlFRREV4bHJkV0psTFdOdmJuUnliMnd0Y0d4aGJtVXRjMmxuYm1WeQpNQjRYRFRJek1EUXhPREV6TURneE5Gb1hEVEkwTURReE56RXpNRGd4TlZvd01ERVhNQlVHQTFVRUNoTU9jM2x6CmRHVnRPbTFoYzNSbGNuTXhGVEFUQmdOVkJBTVRESE41YzNSbGJUcGhaRzFwYmpDQ0FTSXdEUVlKS29aSWh2Y04KQVFFQkJRQURnZ0VQQURDQ0FRb0NnZ0VCQUxvQ3pDRU9aaVl1cWxaQllXQjZwTEh0N29ZQnBoQXBVdkZQTEJOMQpQaEI2Mjk2dEcycitQOFdnUXkzMm1iNk1ZL1RibGIydHU1S0dmb0xLcGRZS2JlQ1owSjVjenRJZ1FLbGZtdkl0CkFoMy9ETmgrV2J3bFgvY01zMUhRNWh1c2NydytZa2taOEJBK2p5bWlXWVVXVFgzTkJwS01NY05uL3JpODV6RjMKT0Y5WjRtQzJrZDJvR0crZmJieXMzR2Vmdk1EV1huKzhiQTlXWXJpcytUYXJIa01URFJGNHh1NkREZlZJODk0dAo3Zk5OUkVUT0pqM1NQd1BhbFJ2ajZ5UHdYVlBXRTFXbllhK1RnVE5rNVZJRVU3a3ZXSnF4SDBiUU15VWlNU2xGClVJNEpBSEVnNTcvQUgvRDliQjFGdG4wWE5RUzFGVUlkZDRrMkFJVERzOFErazkwQ0F3RUFBYU4xTUhNd0RnWUQKVlIwUEFRSC9CQVFEQWdXZ01CTUdBMVVkSlFRTU1Bb0dDQ3NHQVFVRkJ3TUNNQXdHQTFVZEV3RUIvd1FDTUFBdwpIUVlEVlIwT0JCWUVGTXQ3ODVoK0krZWVlRXF0cWNJVFVEeHVEbzRWTUI4R0ExVWRJd1FZTUJhQUZHSFFtUlFLCkpLeVQvWFYreWI0VFpJc1FJK205TUEwR0NTcUdTSWIzRFFFQkN3VUFBNElCQVFBV3BqazZkYVYzNjlvK01vMDQKckM3QTJPdGxkNnJYblpENFM2cmlUcWNORjRZL01IaXNsRTFONE9OYytGUFRzaUxSNFhETzBKaWo0aGNrNlJuRgpJRlRYeVNKYS9aM3lIOVF3RVFEOWUzZTlSUWFFMm8vTnBWR0NYRlNWU05rUHc4Y3NNMXhBRU85YnNHcmdNTlFaCnpEWkZ0UnZpQm1ZcENzWDcxU0YvZkdKTU85OXVwakhVeHN6SFBvRC9kWkd3b05ORVU2T01Cb0pZNjlmRVBLTWYKUEJ5U1F1L2tVNTNydW1vOHNGUlpKOGc4L0xVMWhiUnlTWTRORE1XRVhGY1RxUjdmZnlxd0owL29YR1RCYkorZgora2o2U3NUdmh6cklzcVUydk9SUEJSL1lKb2Y4UmR4YkR6U2RvY1Q2WmtjSWJPVnVJd3JoUmx4RVUrbkRxeEF4CjFRdFUKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo="
            }
        ]
    },
    "*tls.KubeControlPlaneKubeSchedulerClientCertKey": {
        "CertRaw": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURYekNDQWtlZ0F3SUJBZ0lJUm1VNTZnTkFjc2d3RFFZSktvWklodmNOQVFFTEJRQXdPREVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1TSXdJQVlEVlFRREV4bHJkV0psTFdOdmJuUnliMnd0Y0d4aGJtVXRjMmxuYm1WeQpNQjRYRFRJek1EUXhPREV6TURneE5Gb1hEVEkwTURReE56RXpNRGd4TlZvd01ERVhNQlVHQTFVRUNoTU9jM2x6CmRHVnRPbTFoYzNSbGNuTXhGVEFUQmdOVkJBTVRESE41YzNSbGJUcGhaRzFwYmpDQ0FTSXdEUVlKS29aSWh2Y04KQVFFQkJRQURnZ0VQQURDQ0FRb0NnZ0VCQUxEM0g4QU1GTlM2eVlMeTF4cHN0clBWUHpxOUtGamZkWVJTdDRrWgowN2k2VUN3bUNnL0kxNzJ5NmtVZS9rSFY0Z2E0NU1MTnA5NWVVZU0zcE04bVg4Rmx1Ym15TkxjdVQxZUNST3JsCjBPNGh4S2NoYmxjcElWSDUrS3RXTDFNRUIzVEs2dzNTOTQxTmhrNWtFNTR2VzlYUlB0NmFSb0M5RnFXTHZHcGMKcGg2elJ3Y011Ykw4SUY5dVVrU1lrT3VnazliM3F6dXJvWWlUVnA4Smg5cFd0Wm5nc1MxSE9uV1l6cUNXcVVrOQpxSnc5VWFMREcxaWJ5OURuWll2MWZIbjJVdDBLQVRqU25sN0RTbjRzbmd3R2dPN21xWHRjanErZWpJRjFNZkdnCnFFU3FockNucWkxVU9IZVlaREVrVmJMd0RIQTR4ZGl0ZTN0aTlIZWxsQ0xLVVk4Q0F3RUFBYU4xTUhNd0RnWUQKVlIwUEFRSC9CQVFEQWdXZ01CTUdBMVVkSlFRTU1Bb0dDQ3NHQVFVRkJ3TUNNQXdHQTFVZEV3RUIvd1FDTUFBdwpIUVlEVlIwT0JCWUVGTWdQVHdHR1pzWklid25KQmRzVS83blFwQm9ZTUI4R0ExVWRJd1FZTUJhQUZHSFFtUlFLCkpLeVQvWFYreWI0VFpJc1FJK205TUEwR0NTcUdTSWIzRFFFQkN3VUFBNElCQVFCOVZEL2NqdVpFWlY1dU5aRjAKQWNEYkUrYnVYbFRMUmdTVjlJZ0U0RVlFanhNZTFsWmt4d1VxemErcm1aYlFOazZtK2xrZkJlc0dIVlFUdkYwYwpYZVVRYWhJZ2ZpMmlPTk1TQUkzTmRKY1RRM0x3LzF5elp1MjJIeitQcVlBR25lbkxyTmUzSzJteHdNL2JLQW9pCm1Fem1wbW5kdGhvZVNRS2htWm1VeUZyaVFKN2NyNXlDSnRvQzAxemUvMnFWNWVNZ1R4M0s1RTF6b01IdlArMGIKdWVmRkZiV1kwTDBrQkFJWWNsWWJpajJMTFhRWUNRMzdKMnRRSkdKOC8yZDZwV2dWNGZ6dyt6UEZPc2dvS1VzSgp5UFBTYWtNOEplcmVZTkRxSkdGS015S1B6d3ZNMFNrSnRick1uY25zTithL01OYnJDU3JHZXpQUFpUNGsrRmRTCmgxRmYKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=",
        "KeyRaw": "LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBc1BjZndBd1UxTHJKZ3ZMWEdteTJzOVUvT3Iwb1dOOTFoRkszaVJuVHVMcFFMQ1lLCkQ4alh2YkxxUlI3K1FkWGlCcmprd3MybjNsNVI0emVrenlaZndXVzV1YkkwdHk1UFY0SkU2dVhRN2lIRXB5RnUKVnlraFVmbjRxMVl2VXdRSGRNcnJEZEwzalUyR1RtUVRuaTliMWRFKzNwcEdnTDBXcFl1OGFseW1Ick5IQnd5NQpzdndnWDI1U1JKaVE2NkNUMXZlck82dWhpSk5XbndtSDJsYTFtZUN4TFVjNmRaak9vSmFwU1Qyb25EMVJvc01iCldKdkwwT2RsaS9WOGVmWlMzUW9CT05LZVhzTktmaXllREFhQTd1YXBlMXlPcjU2TWdYVXg4YUNvUktxR3NLZXEKTFZRNGQ1aGtNU1JWc3ZBTWNEakYySzE3ZTJMMGQ2V1VJc3BSandJREFRQUJBb0lCQUZaT0Q0UC80R0RuUDhQSApYelNaOUhpNzlYeFdLRWsvb2ZhSXlNM3FkS0ZRN0N5NzJJaGVNU2xwQ212dmM1ejBES211bnBLSzdlVzdKa0NrCk1KSithcEROWmNpMHFwVHoxdW9jdERQREpTUWQvK1JxbjMrT3BadHZSK0YzeE5pOXpFMGZjWWRxYmlUUnZFQ2EKK2g1WmhuWSsrR1JqNVNLQUZYMWpLdDdNbEkrL213Z3hST3ZQR3NLU0VabnFhVWM5eXZxcCs5ZTVISjBnYk5lKwo2Qjgza1lEMytmNW5nbDM3YjQxS1BvckdUS2NpSmh5RHZmVTdaSFREMVBmMGQ1c0czVm5nWlhIcHlycVhIL0RsCkt0ZGxENEpkbmg2NHNVeVlTa1JKT045dFlWVFdkV3NuTFhJWUlrRTVMZUlFdGl1VkhHRWVLOEVhdEJJVXU4QkQKNHpFNjJNRUNnWUVBeEU2REo0dkRLcXhXNzY4VWVNcWlQNE83TEZmM3M0VVE4blNBNjBDV3pTcjdTVzNHdlg0cAp1R3RCT3ZMYVA4cG9aS3BQQUxGUXB2S2h4K2YyOVVJWXhXM0NXUTJHa0gxa1BRWGpHbVJjak1PMENOdlU1d2xGCmZ0VDdESUNkMVZjZzdRZVl2b01LUE1BZ2lOYTFsRlY0aDNJQ2ZGcTVxcnhZcEJxT2tOSndRNThDZ1lFQTVzYjcKOEJTREYxdXZWeFVmbU95eTVPQ01aUDB5anJMWVliS21OMGQrazV1d2dMUGdScFlHR2hBbnV1WjA2Q1MxTHBoYgpTVy92M3NCeE5LZFVxbjhFcHVJS3psc2kwT3pITEFpMHJ3T1EyRUNPNElsT0ZSVFpzZjRFbnhXdlB5SjNUZkVMCkFkTkkrS1ZyVms1QTRCWlZCK1lOREJDYVZ2cTRnWkRxRVdLNXJCRUNnWUVBbzBiaVU4d3R3cHFobks0MUN0c1AKNUdBL0dIejZhL2lyeGQ0ZE5JNytYeHYyOG5ZNkxYWjRZUW5rc1pFNDhvSDZIbkNCVVlRcUh4SUVlZTk0T3pxRQp2QUcwK3JrRFNiN2gxdGZFc3pqeXVhbzFYb0RxTGxoSjAxcDJqVW1VL2RPQWNXWTJKNDk2dmxqWE5yblBRZGR0CmJzcm5RbU43dG9UOS9WQ1JiK2Q0dE9VQ2dZQlI4ZUF0M0txNzFaT0tRWGJwejBxcW1NMWhZc0xjQnNkczBZblIKNFRJaDZjdWZ0Nzl3Y1A4VHJCN2ZiOHVkVHNPREd4aDNHQ2M5bW1uWVAzNkIxLzVuMzZYa3BsblRnL0FwUTZJYwo3eEEwcVovU1BROGJ6ejZKeEdBUnVScDBPYUhSYkVEelVmbjhTSWkzcWF2QnBreGxOSnYzWjhIV0Zzc0RQdGpPCmVaYmljUUtCZ1FDNStndGt5Q0QxWFM4QTM0bEhPMFRDSFNPT3NLd244cFYwbmxuRDJHaE9ndGRtbmZwVzByaEoKSE0yMElBd2VtN21xeUZJSFMxR1RRWG0xSk5JWlpOSEswdnNwZW0vVldIa2RraENHL1p0V3JZa0djZnhKSTU3UwpxOUpoL0M2WXM2V0c1K0Z5b0xzYThYL1Z6bHNucHZGNzMxNjZkZ0xJdi93RUx6OVlaNWgzcFE9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=",
        "FileList": [
            {
                "Filename": "tls/kube-control-plane-kube-scheduler-client.key",
                "Data": "LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBc1BjZndBd1UxTHJKZ3ZMWEdteTJzOVUvT3Iwb1dOOTFoRkszaVJuVHVMcFFMQ1lLCkQ4alh2YkxxUlI3K1FkWGlCcmprd3MybjNsNVI0emVrenlaZndXVzV1YkkwdHk1UFY0SkU2dVhRN2lIRXB5RnUKVnlraFVmbjRxMVl2VXdRSGRNcnJEZEwzalUyR1RtUVRuaTliMWRFKzNwcEdnTDBXcFl1OGFseW1Ick5IQnd5NQpzdndnWDI1U1JKaVE2NkNUMXZlck82dWhpSk5XbndtSDJsYTFtZUN4TFVjNmRaak9vSmFwU1Qyb25EMVJvc01iCldKdkwwT2RsaS9WOGVmWlMzUW9CT05LZVhzTktmaXllREFhQTd1YXBlMXlPcjU2TWdYVXg4YUNvUktxR3NLZXEKTFZRNGQ1aGtNU1JWc3ZBTWNEakYySzE3ZTJMMGQ2V1VJc3BSandJREFRQUJBb0lCQUZaT0Q0UC80R0RuUDhQSApYelNaOUhpNzlYeFdLRWsvb2ZhSXlNM3FkS0ZRN0N5NzJJaGVNU2xwQ212dmM1ejBES211bnBLSzdlVzdKa0NrCk1KSithcEROWmNpMHFwVHoxdW9jdERQREpTUWQvK1JxbjMrT3BadHZSK0YzeE5pOXpFMGZjWWRxYmlUUnZFQ2EKK2g1WmhuWSsrR1JqNVNLQUZYMWpLdDdNbEkrL213Z3hST3ZQR3NLU0VabnFhVWM5eXZxcCs5ZTVISjBnYk5lKwo2Qjgza1lEMytmNW5nbDM3YjQxS1BvckdUS2NpSmh5RHZmVTdaSFREMVBmMGQ1c0czVm5nWlhIcHlycVhIL0RsCkt0ZGxENEpkbmg2NHNVeVlTa1JKT045dFlWVFdkV3NuTFhJWUlrRTVMZUlFdGl1VkhHRWVLOEVhdEJJVXU4QkQKNHpFNjJNRUNnWUVBeEU2REo0dkRLcXhXNzY4VWVNcWlQNE83TEZmM3M0VVE4blNBNjBDV3pTcjdTVzNHdlg0cAp1R3RCT3ZMYVA4cG9aS3BQQUxGUXB2S2h4K2YyOVVJWXhXM0NXUTJHa0gxa1BRWGpHbVJjak1PMENOdlU1d2xGCmZ0VDdESUNkMVZjZzdRZVl2b01LUE1BZ2lOYTFsRlY0aDNJQ2ZGcTVxcnhZcEJxT2tOSndRNThDZ1lFQTVzYjcKOEJTREYxdXZWeFVmbU95eTVPQ01aUDB5anJMWVliS21OMGQrazV1d2dMUGdScFlHR2hBbnV1WjA2Q1MxTHBoYgpTVy92M3NCeE5LZFVxbjhFcHVJS3psc2kwT3pITEFpMHJ3T1EyRUNPNElsT0ZSVFpzZjRFbnhXdlB5SjNUZkVMCkFkTkkrS1ZyVms1QTRCWlZCK1lOREJDYVZ2cTRnWkRxRVdLNXJCRUNnWUVBbzBiaVU4d3R3cHFobks0MUN0c1AKNUdBL0dIejZhL2lyeGQ0ZE5JNytYeHYyOG5ZNkxYWjRZUW5rc1pFNDhvSDZIbkNCVVlRcUh4SUVlZTk0T3pxRQp2QUcwK3JrRFNiN2gxdGZFc3pqeXVhbzFYb0RxTGxoSjAxcDJqVW1VL2RPQWNXWTJKNDk2dmxqWE5yblBRZGR0CmJzcm5RbU43dG9UOS9WQ1JiK2Q0dE9VQ2dZQlI4ZUF0M0txNzFaT0tRWGJwejBxcW1NMWhZc0xjQnNkczBZblIKNFRJaDZjdWZ0Nzl3Y1A4VHJCN2ZiOHVkVHNPREd4aDNHQ2M5bW1uWVAzNkIxLzVuMzZYa3BsblRnL0FwUTZJYwo3eEEwcVovU1BROGJ6ejZKeEdBUnVScDBPYUhSYkVEelVmbjhTSWkzcWF2QnBreGxOSnYzWjhIV0Zzc0RQdGpPCmVaYmljUUtCZ1FDNStndGt5Q0QxWFM4QTM0bEhPMFRDSFNPT3NLd244cFYwbmxuRDJHaE9ndGRtbmZwVzByaEoKSE0yMElBd2VtN21xeUZJSFMxR1RRWG0xSk5JWlpOSEswdnNwZW0vVldIa2RraENHL1p0V3JZa0djZnhKSTU3UwpxOUpoL0M2WXM2V0c1K0Z5b0xzYThYL1Z6bHNucHZGNzMxNjZkZ0xJdi93RUx6OVlaNWgzcFE9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo="
            },
            {
                "Filename": "tls/kube-control-plane-kube-scheduler-client.crt",
                "Data": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURYekNDQWtlZ0F3SUJBZ0lJUm1VNTZnTkFjc2d3RFFZSktvWklodmNOQVFFTEJRQXdPREVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1TSXdJQVlEVlFRREV4bHJkV0psTFdOdmJuUnliMnd0Y0d4aGJtVXRjMmxuYm1WeQpNQjRYRFRJek1EUXhPREV6TURneE5Gb1hEVEkwTURReE56RXpNRGd4TlZvd01ERVhNQlVHQTFVRUNoTU9jM2x6CmRHVnRPbTFoYzNSbGNuTXhGVEFUQmdOVkJBTVRESE41YzNSbGJUcGhaRzFwYmpDQ0FTSXdEUVlKS29aSWh2Y04KQVFFQkJRQURnZ0VQQURDQ0FRb0NnZ0VCQUxEM0g4QU1GTlM2eVlMeTF4cHN0clBWUHpxOUtGamZkWVJTdDRrWgowN2k2VUN3bUNnL0kxNzJ5NmtVZS9rSFY0Z2E0NU1MTnA5NWVVZU0zcE04bVg4Rmx1Ym15TkxjdVQxZUNST3JsCjBPNGh4S2NoYmxjcElWSDUrS3RXTDFNRUIzVEs2dzNTOTQxTmhrNWtFNTR2VzlYUlB0NmFSb0M5RnFXTHZHcGMKcGg2elJ3Y011Ykw4SUY5dVVrU1lrT3VnazliM3F6dXJvWWlUVnA4Smg5cFd0Wm5nc1MxSE9uV1l6cUNXcVVrOQpxSnc5VWFMREcxaWJ5OURuWll2MWZIbjJVdDBLQVRqU25sN0RTbjRzbmd3R2dPN21xWHRjanErZWpJRjFNZkdnCnFFU3FockNucWkxVU9IZVlaREVrVmJMd0RIQTR4ZGl0ZTN0aTlIZWxsQ0xLVVk4Q0F3RUFBYU4xTUhNd0RnWUQKVlIwUEFRSC9CQVFEQWdXZ01CTUdBMVVkSlFRTU1Bb0dDQ3NHQVFVRkJ3TUNNQXdHQTFVZEV3RUIvd1FDTUFBdwpIUVlEVlIwT0JCWUVGTWdQVHdHR1pzWklid25KQmRzVS83blFwQm9ZTUI4R0ExVWRJd1FZTUJhQUZHSFFtUlFLCkpLeVQvWFYreWI0VFpJc1FJK205TUEwR0NTcUdTSWIzRFFFQkN3VUFBNElCQVFCOVZEL2NqdVpFWlY1dU5aRjAKQWNEYkUrYnVYbFRMUmdTVjlJZ0U0RVlFanhNZTFsWmt4d1VxemErcm1aYlFOazZtK2xrZkJlc0dIVlFUdkYwYwpYZVVRYWhJZ2ZpMmlPTk1TQUkzTmRKY1RRM0x3LzF5elp1MjJIeitQcVlBR25lbkxyTmUzSzJteHdNL2JLQW9pCm1Fem1wbW5kdGhvZVNRS2htWm1VeUZyaVFKN2NyNXlDSnRvQzAxemUvMnFWNWVNZ1R4M0s1RTF6b01IdlArMGIKdWVmRkZiV1kwTDBrQkFJWWNsWWJpajJMTFhRWUNRMzdKMnRRSkdKOC8yZDZwV2dWNGZ6dyt6UEZPc2dvS1VzSgp5UFBTYWtNOEplcmVZTkRxSkdGS015S1B6d3ZNMFNrSnRick1uY25zTithL01OYnJDU3JHZXpQUFpUNGsrRmRTCmgxRmYKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo="
            }
        ]
    },
    "*tls.KubeControlPlaneSignerCertKey": {
        "CertRaw": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURORENDQWh5Z0F3SUJBZ0lJVmVjTVVKYVFxVk13RFFZSktvWklodmNOQVFFTEJRQXdPREVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1TSXdJQVlEVlFRREV4bHJkV0psTFdOdmJuUnliMnd0Y0d4aGJtVXRjMmxuYm1WeQpNQjRYRFRJek1EUXhPREV6TURneE5Gb1hEVEkwTURReE56RXpNRGd4TkZvd09ERVNNQkFHQTFVRUN4TUpiM0JsCmJuTm9hV1owTVNJd0lBWURWUVFERXhscmRXSmxMV052Ym5SeWIyd3RjR3hoYm1VdGMybG5ibVZ5TUlJQklqQU4KQmdrcWhraUc5dzBCQVFFRkFBT0NBUThBTUlJQkNnS0NBUUVBMmQ1aXY3dHlnZjNsQVZ2REppVFNOSGRMSnRIbgplYk1WSkR2NDdTZWJ3aExyRm94aTNIVkVhWHNvUGFnMDhtMDlSckdPY1I0RGRneHBRb2JqTGdOeDhWQXUySlFQCktUSnJBelFPN2hPZ0VzckhrQmNDWjVsNW5PMFVRZzJMWDhsMzdqQ3JMQWFMditGQUx2L2ZzaE9GOUZLMExzeDMKWE14eDAxMnNrVjBmczBpOHJ2dUE0amttMEsxcEZqTzdMbHY4c0VQLzBLcWxyQUE2M3habHR0Rno3QkZ6WGd5WQp6Tm9na0Z5V0ZVOGZrb002MlIzRG8yUHhUcG9UUGp5bmx5ZXJ5Uy9KTmlCUFdZWG9rRFlQdWdrcmMyaHF3ZW00CnlpSzRCMXJvM0RwclBaMWxuMWhHbGtBSVhpQkhuYmJnVXdBb1NDKzNqWlFzQUpIb2RkTnBrcTcxY1FJREFRQUIKbzBJd1FEQU9CZ05WSFE4QkFmOEVCQU1DQXFRd0R3WURWUjBUQVFIL0JBVXdBd0VCL3pBZEJnTlZIUTRFRmdRVQpZZENaRkFva3JKUDlkWDdKdmhOa2l4QWo2YjB3RFFZSktvWklodmNOQVFFTEJRQURnZ0VCQUgyZ05nUkNvdjBzCnY2eDlBeTQwdzFScjJjQ1p6UXZwT2hXNTJFK01WelVMSXlaWkVidDlwcVo3VUtqZmxqMTRsclJYd0JielNIMWwKM25JQzNNZ1VPZFRaNEE1Rk5yK2FTdWJWaTF2ZzM4WXdrbFVaMkZqWnlhdWg4blNvVEtzUWovdTd3WVZyZ3h3dApiWXc2WlBCSHZ5a1BUSElTUmJtcHpENzNiYXZlVi9YcTZ5b1NrQlU3OTZFQXhqT3A5dUFSSWptdkg0MFJ4SzJzClNFbk1lRk1JZWlnMHU4VTVvN0I2R0MxY3kzbHBXanZiTXFnVTQzMXcrc3dSdnJXTmZsK1lkYTRzclU2TENmckcKNjVscVFNcUkwcHZiSzZCOUVkd1M0bC83aXRZV3c4UzV5eVA1c3NMZ1orcnM1MW9LbFFSdEhLQi9XeVZMNDFCeQpUSytYVk9EZkUvND0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=",
        "KeyRaw": "LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcFFJQkFBS0NBUUVBMmQ1aXY3dHlnZjNsQVZ2REppVFNOSGRMSnRIbmViTVZKRHY0N1NlYndoTHJGb3hpCjNIVkVhWHNvUGFnMDhtMDlSckdPY1I0RGRneHBRb2JqTGdOeDhWQXUySlFQS1RKckF6UU83aE9nRXNySGtCY0MKWjVsNW5PMFVRZzJMWDhsMzdqQ3JMQWFMditGQUx2L2ZzaE9GOUZLMExzeDNYTXh4MDEyc2tWMGZzMGk4cnZ1QQo0amttMEsxcEZqTzdMbHY4c0VQLzBLcWxyQUE2M3habHR0Rno3QkZ6WGd5WXpOb2drRnlXRlU4ZmtvTTYyUjNECm8yUHhUcG9UUGp5bmx5ZXJ5Uy9KTmlCUFdZWG9rRFlQdWdrcmMyaHF3ZW00eWlLNEIxcm8zRHByUFoxbG4xaEcKbGtBSVhpQkhuYmJnVXdBb1NDKzNqWlFzQUpIb2RkTnBrcTcxY1FJREFRQUJBb0lCQVFDb0xzcnVGV1owd0trcQpua3FNUkhwY2RBWjRoaXI1UUd3K2wyazJzWS9FaGxRaUNPYzhKZTVVdXZTNmZBRzdidWFSanZsVml3VEMrUnU4CmRtSWpJQmV5WCtKNTMvbkFKS0tGUzRlRzgzRnJjRXdUaUIrY0Y5YlFkQmRpVWhCWU5pODFtUzVhQXdlWWJPcmUKSFRueXZxMTJpTzE4L3V2Wm9CenlQR3E5b0RTYmNVc3Mxb1NTaTdFMDdqOXI4eDk1cmZBTUpnZHlMR2FzOGU3awpzOFN4R3JkYVNJd0V3b2lVc2dBT1FWazhzSzVVYjdoTUdoVlZrQlVQelZuUkdaMHNZRndMT0xxWFNoc3VmeGgwCjd3cTUwU1RyL3k2SElFcUxtNlRCWTUzYXVGZkRaWkN5MlB4cEVCMWhKenVrbk1wNGdBMHpaeVBjclVINWRIYXYKR3hWeGoxWVJBb0dCQU9YS3VSZFh6WmZPTGY5NWQ5b3VkcVdkUlJaaEdwS3h1ZlNzcHhlOCt0WlVRR05ITFlYUgo4eVNBT0llbEtDWjk0dDZteE9CODVUY1BCSm9vT1M0K21NaCs0dkprVFVrYkRGQUt1c1RaeGJFdHhqZUcyQWhQCi9LT2xkQjZ3RWVFWnkvM0orNTBxa081d25BVjB3WHBENXhUTWczOHBhVVlvMWwrNmdvRTNuaHJGQW9HQkFQSzMKaWYzYXdSNFg4MXJZZWc4UzJCdnZjcEhRQXNFQ3pZdENvNlBmandnbjBldnE1VUxTc09yeXZUWHNMRDJUSHVsbwpQY21za3A3OEV1V1JyLzFZbDBQeEpBb3ZmV3lCNVVHd1BOaXU5OGROYzNqQVNOZU90NnRtQmhER2pjZ0s0b0RrCisvN204OXlvWGJZQThMOTRsY2FkMVJSNFRTd1lRZ05TYjBmNjI0cTlBb0dBVGNiTjJ3N0c4WWpCbk9UYUlpanoKMDU1bGtldVArUExhdyt2a0ttNjJYL0RvVWpIM1FJSU5UOTl1UXNzdHljbDJEbkpYMUx1eFFXOTkyVWVnQXYwQQo3V3UxR09IR0h1WmV4b0M3TW9HYkhoc21LZ2tqK2J4SkFJS3h5T2xEUS9OZFRpc2RWTmJoY3pMK1BBS0dzZ0ZsCnAyNkpXM01DeE5KeHJMa09EdnBxTXhrQ2dZRUF3b2ZUOHovV3MvWGlONWQxREl1LzVYUGVVWHQwR1puVGY1L2oKWTc0VDl5ZGpHa0JqaTFFdU5zQmlZY3R1RWRQT1hLZ05qWXZnMzhlTXBhNUViVHNKMFl4OXBDUTMxRFd2dHh3MwpTRHZEbjFzMkJ6dWxwZzVlcXVMVVRiRzFoUFVrWU1ZbUtrQ1VodS95VzZNWlVYeW1Iay8xcmJoVnNkZW5ZTjQ3CkRtZkNlY2tDZ1lFQTNZUXhWbGpOTm5sMi95TkhGcmlZUUdWV2xzZVNpVHVNMUx1S1pCUC9kLzYycUxOTk1QWDQKZjJlenh1d1FsUllma0t2dkRiTEErVFdyT09BTG94MDF3a1NtZW9iUUtCdmh3VStPazdRZzZGVk94cHFJMWgvTQpLd1FoVDVHM0UwYmlBLzJyMkY0ZFM5NU5icFVIYjVUb1c2WEhnTXVpV2h0WmlDeGRUSFJLV3VVPQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=",
        "FileList": [
            {
                "Filename": "tls/kube-control-plane-signer.key",
                "Data": "LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcFFJQkFBS0NBUUVBMmQ1aXY3dHlnZjNsQVZ2REppVFNOSGRMSnRIbmViTVZKRHY0N1NlYndoTHJGb3hpCjNIVkVhWHNvUGFnMDhtMDlSckdPY1I0RGRneHBRb2JqTGdOeDhWQXUySlFQS1RKckF6UU83aE9nRXNySGtCY0MKWjVsNW5PMFVRZzJMWDhsMzdqQ3JMQWFMditGQUx2L2ZzaE9GOUZLMExzeDNYTXh4MDEyc2tWMGZzMGk4cnZ1QQo0amttMEsxcEZqTzdMbHY4c0VQLzBLcWxyQUE2M3habHR0Rno3QkZ6WGd5WXpOb2drRnlXRlU4ZmtvTTYyUjNECm8yUHhUcG9UUGp5bmx5ZXJ5Uy9KTmlCUFdZWG9rRFlQdWdrcmMyaHF3ZW00eWlLNEIxcm8zRHByUFoxbG4xaEcKbGtBSVhpQkhuYmJnVXdBb1NDKzNqWlFzQUpIb2RkTnBrcTcxY1FJREFRQUJBb0lCQVFDb0xzcnVGV1owd0trcQpua3FNUkhwY2RBWjRoaXI1UUd3K2wyazJzWS9FaGxRaUNPYzhKZTVVdXZTNmZBRzdidWFSanZsVml3VEMrUnU4CmRtSWpJQmV5WCtKNTMvbkFKS0tGUzRlRzgzRnJjRXdUaUIrY0Y5YlFkQmRpVWhCWU5pODFtUzVhQXdlWWJPcmUKSFRueXZxMTJpTzE4L3V2Wm9CenlQR3E5b0RTYmNVc3Mxb1NTaTdFMDdqOXI4eDk1cmZBTUpnZHlMR2FzOGU3awpzOFN4R3JkYVNJd0V3b2lVc2dBT1FWazhzSzVVYjdoTUdoVlZrQlVQelZuUkdaMHNZRndMT0xxWFNoc3VmeGgwCjd3cTUwU1RyL3k2SElFcUxtNlRCWTUzYXVGZkRaWkN5MlB4cEVCMWhKenVrbk1wNGdBMHpaeVBjclVINWRIYXYKR3hWeGoxWVJBb0dCQU9YS3VSZFh6WmZPTGY5NWQ5b3VkcVdkUlJaaEdwS3h1ZlNzcHhlOCt0WlVRR05ITFlYUgo4eVNBT0llbEtDWjk0dDZteE9CODVUY1BCSm9vT1M0K21NaCs0dkprVFVrYkRGQUt1c1RaeGJFdHhqZUcyQWhQCi9LT2xkQjZ3RWVFWnkvM0orNTBxa081d25BVjB3WHBENXhUTWczOHBhVVlvMWwrNmdvRTNuaHJGQW9HQkFQSzMKaWYzYXdSNFg4MXJZZWc4UzJCdnZjcEhRQXNFQ3pZdENvNlBmandnbjBldnE1VUxTc09yeXZUWHNMRDJUSHVsbwpQY21za3A3OEV1V1JyLzFZbDBQeEpBb3ZmV3lCNVVHd1BOaXU5OGROYzNqQVNOZU90NnRtQmhER2pjZ0s0b0RrCisvN204OXlvWGJZQThMOTRsY2FkMVJSNFRTd1lRZ05TYjBmNjI0cTlBb0dBVGNiTjJ3N0c4WWpCbk9UYUlpanoKMDU1bGtldVArUExhdyt2a0ttNjJYL0RvVWpIM1FJSU5UOTl1UXNzdHljbDJEbkpYMUx1eFFXOTkyVWVnQXYwQQo3V3UxR09IR0h1WmV4b0M3TW9HYkhoc21LZ2tqK2J4SkFJS3h5T2xEUS9OZFRpc2RWTmJoY3pMK1BBS0dzZ0ZsCnAyNkpXM01DeE5KeHJMa09EdnBxTXhrQ2dZRUF3b2ZUOHovV3MvWGlONWQxREl1LzVYUGVVWHQwR1puVGY1L2oKWTc0VDl5ZGpHa0JqaTFFdU5zQmlZY3R1RWRQT1hLZ05qWXZnMzhlTXBhNUViVHNKMFl4OXBDUTMxRFd2dHh3MwpTRHZEbjFzMkJ6dWxwZzVlcXVMVVRiRzFoUFVrWU1ZbUtrQ1VodS95VzZNWlVYeW1Iay8xcmJoVnNkZW5ZTjQ3CkRtZkNlY2tDZ1lFQTNZUXhWbGpOTm5sMi95TkhGcmlZUUdWV2xzZVNpVHVNMUx1S1pCUC9kLzYycUxOTk1QWDQKZjJlenh1d1FsUllma0t2dkRiTEErVFdyT09BTG94MDF3a1NtZW9iUUtCdmh3VStPazdRZzZGVk94cHFJMWgvTQpLd1FoVDVHM0UwYmlBLzJyMkY0ZFM5NU5icFVIYjVUb1c2WEhnTXVpV2h0WmlDeGRUSFJLV3VVPQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo="
            },
            {
                "Filename": "tls/kube-control-plane-signer.crt",
                "Data": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURORENDQWh5Z0F3SUJBZ0lJVmVjTVVKYVFxVk13RFFZSktvWklodmNOQVFFTEJRQXdPREVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1TSXdJQVlEVlFRREV4bHJkV0psTFdOdmJuUnliMnd0Y0d4aGJtVXRjMmxuYm1WeQpNQjRYRFRJek1EUXhPREV6TURneE5Gb1hEVEkwTURReE56RXpNRGd4TkZvd09ERVNNQkFHQTFVRUN4TUpiM0JsCmJuTm9hV1owTVNJd0lBWURWUVFERXhscmRXSmxMV052Ym5SeWIyd3RjR3hoYm1VdGMybG5ibVZ5TUlJQklqQU4KQmdrcWhraUc5dzBCQVFFRkFBT0NBUThBTUlJQkNnS0NBUUVBMmQ1aXY3dHlnZjNsQVZ2REppVFNOSGRMSnRIbgplYk1WSkR2NDdTZWJ3aExyRm94aTNIVkVhWHNvUGFnMDhtMDlSckdPY1I0RGRneHBRb2JqTGdOeDhWQXUySlFQCktUSnJBelFPN2hPZ0VzckhrQmNDWjVsNW5PMFVRZzJMWDhsMzdqQ3JMQWFMditGQUx2L2ZzaE9GOUZLMExzeDMKWE14eDAxMnNrVjBmczBpOHJ2dUE0amttMEsxcEZqTzdMbHY4c0VQLzBLcWxyQUE2M3habHR0Rno3QkZ6WGd5WQp6Tm9na0Z5V0ZVOGZrb002MlIzRG8yUHhUcG9UUGp5bmx5ZXJ5Uy9KTmlCUFdZWG9rRFlQdWdrcmMyaHF3ZW00CnlpSzRCMXJvM0RwclBaMWxuMWhHbGtBSVhpQkhuYmJnVXdBb1NDKzNqWlFzQUpIb2RkTnBrcTcxY1FJREFRQUIKbzBJd1FEQU9CZ05WSFE4QkFmOEVCQU1DQXFRd0R3WURWUjBUQVFIL0JBVXdBd0VCL3pBZEJnTlZIUTRFRmdRVQpZZENaRkFva3JKUDlkWDdKdmhOa2l4QWo2YjB3RFFZSktvWklodmNOQVFFTEJRQURnZ0VCQUgyZ05nUkNvdjBzCnY2eDlBeTQwdzFScjJjQ1p6UXZwT2hXNTJFK01WelVMSXlaWkVidDlwcVo3VUtqZmxqMTRsclJYd0JielNIMWwKM25JQzNNZ1VPZFRaNEE1Rk5yK2FTdWJWaTF2ZzM4WXdrbFVaMkZqWnlhdWg4blNvVEtzUWovdTd3WVZyZ3h3dApiWXc2WlBCSHZ5a1BUSElTUmJtcHpENzNiYXZlVi9YcTZ5b1NrQlU3OTZFQXhqT3A5dUFSSWptdkg0MFJ4SzJzClNFbk1lRk1JZWlnMHU4VTVvN0I2R0MxY3kzbHBXanZiTXFnVTQzMXcrc3dSdnJXTmZsK1lkYTRzclU2TENmckcKNjVscVFNcUkwcHZiSzZCOUVkd1M0bC83aXRZV3c4UzV5eVA1c3NMZ1orcnM1MW9LbFFSdEhLQi9XeVZMNDFCeQpUSytYVk9EZkUvND0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo="
            }
        ]
    },
    "*tls.KubeletBootstrapCABundle": {
        "BundleRaw": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURTRENDQWpDZ0F3SUJBZ0lJSEovdFVDZjFLejh3RFFZSktvWklodmNOQVFFTEJRQXdRakVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1Td3dLZ1lEVlFRREV5TnJkV0psYkdWMExXSnZiM1J6ZEhKaGNDMXJkV0psWTI5dQpabWxuTFhOcFoyNWxjakFlRncweU16QTBNVGd4TXpBNE1UQmFGdzB6TXpBME1UVXhNekE0TVRCYU1FSXhFakFRCkJnTlZCQXNUQ1c5d1pXNXphR2xtZERFc01Db0dBMVVFQXhNamEzVmlaV3hsZEMxaWIyOTBjM1J5WVhBdGEzVmkKWldOdmJtWnBaeTF6YVdkdVpYSXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCRHdBd2dnRUtBb0lCQVFDbQpZNisrOGZuMDl0Zml3cFFjZGRMSVBuVWM5YzJLYjZXWG9wc0s2dEtBWmUxM2NLWFc3aHBDVjVRbkVwTVRUM3NECldvc3VDN3JFMlVNQXVzakJXbkR4OXdEcVNlWUJSL2NXMUZKUjRueW9nUHcyQllsR29MREd5cXZRekFFUURRcisKMkQ0SmNhQUEvUmxMdnBzUXREZHlwR0RjcnJrbEp1cmZvUGtNeHhQRWU4N0RzS2lRTnZ2bE9aVW5samlqSE5seQpTRG5CYm16dVBSS1BvRVlTVHBYaTJ5N0pabDlZNnBBb1F0QkdaS1BIdWVxL3FFUy9RWnZ5bmNneStMS3pCY1duCk5xaklPQVNkRHF1em1jY0lrUGFpdFNkd2dHQlZDL0xxVlp1a2w3NFJlLytmMVBhb1Y0L1o3d2lkMWpoNEEwZ3gKQmhFZ25CRENsWHQxV3FJWFdLUDNBZ01CQUFHalFqQkFNQTRHQTFVZER3RUIvd1FFQXdJQ3BEQVBCZ05WSFJNQgpBZjhFQlRBREFRSC9NQjBHQTFVZERnUVdCQlJGWXV2VSttM3MzYWpXZTZyeGIrejJSNWVIbFRBTkJna3Foa2lHCjl3MEJBUXNGQUFPQ0FRRUFKRjByb2ZabGN6UWRXamlIYTBiVk9jQXdkc1RyQjhBajlqR3BGd2V0VGF4TlpqekwKM3RzcUtXd2k1VEZEcnNpdGt3a1VvZy9jWkxWaDBFYTNmbXlGb2pZM0psVlhUa1VDOWw2ekUxSG85U0E1bjI1Rwp2Ym5OM0Zsc3UrMHFDcUt1VzJzS3QzTHpTdU00dGRKNEZOUG9nbzlzZ0xTZXlLY1RqcVdWVXRmdSs1RWJYN1lTCnFtd09oT05VQzQ4Rk1GenFRdzgyc0dxTEdXRFRWUlorSDhkUnN2MEliN3g3WU9JemNpQXEyd0JGZndlbUQ2ZGYKWTBuSXlLUWdLUU5MaEJ3NmhpdjNEejZEZ2x1TTZFS0pUNDFFYXcyMytkOXJrWHhkVi9UTE0renFQOUdsc3BPcQo1WExyaWRBVjNUbDVMZnJFL1E5TXNPc1Z0N2FtdEswZndaVzAxQT09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K",
        "FileList": [
            {
                "Filename": "tls/kubelet-bootstrap-kubeconfig-ca-bundle.crt",
                "Data": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURTRENDQWpDZ0F3SUJBZ0lJSEovdFVDZjFLejh3RFFZSktvWklodmNOQVFFTEJRQXdRakVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1Td3dLZ1lEVlFRREV5TnJkV0psYkdWMExXSnZiM1J6ZEhKaGNDMXJkV0psWTI5dQpabWxuTFhOcFoyNWxjakFlRncweU16QTBNVGd4TXpBNE1UQmFGdzB6TXpBME1UVXhNekE0TVRCYU1FSXhFakFRCkJnTlZCQXNUQ1c5d1pXNXphR2xtZERFc01Db0dBMVVFQXhNamEzVmlaV3hsZEMxaWIyOTBjM1J5WVhBdGEzVmkKWldOdmJtWnBaeTF6YVdkdVpYSXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCRHdBd2dnRUtBb0lCQVFDbQpZNisrOGZuMDl0Zml3cFFjZGRMSVBuVWM5YzJLYjZXWG9wc0s2dEtBWmUxM2NLWFc3aHBDVjVRbkVwTVRUM3NECldvc3VDN3JFMlVNQXVzakJXbkR4OXdEcVNlWUJSL2NXMUZKUjRueW9nUHcyQllsR29MREd5cXZRekFFUURRcisKMkQ0SmNhQUEvUmxMdnBzUXREZHlwR0RjcnJrbEp1cmZvUGtNeHhQRWU4N0RzS2lRTnZ2bE9aVW5samlqSE5seQpTRG5CYm16dVBSS1BvRVlTVHBYaTJ5N0pabDlZNnBBb1F0QkdaS1BIdWVxL3FFUy9RWnZ5bmNneStMS3pCY1duCk5xaklPQVNkRHF1em1jY0lrUGFpdFNkd2dHQlZDL0xxVlp1a2w3NFJlLytmMVBhb1Y0L1o3d2lkMWpoNEEwZ3gKQmhFZ25CRENsWHQxV3FJWFdLUDNBZ01CQUFHalFqQkFNQTRHQTFVZER3RUIvd1FFQXdJQ3BEQVBCZ05WSFJNQgpBZjhFQlRBREFRSC9NQjBHQTFVZERnUVdCQlJGWXV2VSttM3MzYWpXZTZyeGIrejJSNWVIbFRBTkJna3Foa2lHCjl3MEJBUXNGQUFPQ0FRRUFKRjByb2ZabGN6UWRXamlIYTBiVk9jQXdkc1RyQjhBajlqR3BGd2V0VGF4TlpqekwKM3RzcUtXd2k1VEZEcnNpdGt3a1VvZy9jWkxWaDBFYTNmbXlGb2pZM0psVlhUa1VDOWw2ekUxSG85U0E1bjI1Rwp2Ym5OM0Zsc3UrMHFDcUt1VzJzS3QzTHpTdU00dGRKNEZOUG9nbzlzZ0xTZXlLY1RqcVdWVXRmdSs1RWJYN1lTCnFtd09oT05VQzQ4Rk1GenFRdzgyc0dxTEdXRFRWUlorSDhkUnN2MEliN3g3WU9JemNpQXEyd0JGZndlbUQ2ZGYKWTBuSXlLUWdLUU5MaEJ3NmhpdjNEejZEZ2x1TTZFS0pUNDFFYXcyMytkOXJrWHhkVi9UTE0renFQOUdsc3BPcQo1WExyaWRBVjNUbDVMZnJFL1E5TXNPc1Z0N2FtdEswZndaVzAxQT09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K"
            }
        ]
    },
    "*tls.KubeletBootstrapCertSigner": {
        "CertRaw": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURTRENDQWpDZ0F3SUJBZ0lJSEovdFVDZjFLejh3RFFZSktvWklodmNOQVFFTEJRQXdRakVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1Td3dLZ1lEVlFRREV5TnJkV0psYkdWMExXSnZiM1J6ZEhKaGNDMXJkV0psWTI5dQpabWxuTFhOcFoyNWxjakFlRncweU16QTBNVGd4TXpBNE1UQmFGdzB6TXpBME1UVXhNekE0TVRCYU1FSXhFakFRCkJnTlZCQXNUQ1c5d1pXNXphR2xtZERFc01Db0dBMVVFQXhNamEzVmlaV3hsZEMxaWIyOTBjM1J5WVhBdGEzVmkKWldOdmJtWnBaeTF6YVdkdVpYSXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCRHdBd2dnRUtBb0lCQVFDbQpZNisrOGZuMDl0Zml3cFFjZGRMSVBuVWM5YzJLYjZXWG9wc0s2dEtBWmUxM2NLWFc3aHBDVjVRbkVwTVRUM3NECldvc3VDN3JFMlVNQXVzakJXbkR4OXdEcVNlWUJSL2NXMUZKUjRueW9nUHcyQllsR29MREd5cXZRekFFUURRcisKMkQ0SmNhQUEvUmxMdnBzUXREZHlwR0RjcnJrbEp1cmZvUGtNeHhQRWU4N0RzS2lRTnZ2bE9aVW5samlqSE5seQpTRG5CYm16dVBSS1BvRVlTVHBYaTJ5N0pabDlZNnBBb1F0QkdaS1BIdWVxL3FFUy9RWnZ5bmNneStMS3pCY1duCk5xaklPQVNkRHF1em1jY0lrUGFpdFNkd2dHQlZDL0xxVlp1a2w3NFJlLytmMVBhb1Y0L1o3d2lkMWpoNEEwZ3gKQmhFZ25CRENsWHQxV3FJWFdLUDNBZ01CQUFHalFqQkFNQTRHQTFVZER3RUIvd1FFQXdJQ3BEQVBCZ05WSFJNQgpBZjhFQlRBREFRSC9NQjBHQTFVZERnUVdCQlJGWXV2VSttM3MzYWpXZTZyeGIrejJSNWVIbFRBTkJna3Foa2lHCjl3MEJBUXNGQUFPQ0FRRUFKRjByb2ZabGN6UWRXamlIYTBiVk9jQXdkc1RyQjhBajlqR3BGd2V0VGF4TlpqekwKM3RzcUtXd2k1VEZEcnNpdGt3a1VvZy9jWkxWaDBFYTNmbXlGb2pZM0psVlhUa1VDOWw2ekUxSG85U0E1bjI1Rwp2Ym5OM0Zsc3UrMHFDcUt1VzJzS3QzTHpTdU00dGRKNEZOUG9nbzlzZ0xTZXlLY1RqcVdWVXRmdSs1RWJYN1lTCnFtd09oT05VQzQ4Rk1GenFRdzgyc0dxTEdXRFRWUlorSDhkUnN2MEliN3g3WU9JemNpQXEyd0JGZndlbUQ2ZGYKWTBuSXlLUWdLUU5MaEJ3NmhpdjNEejZEZ2x1TTZFS0pUNDFFYXcyMytkOXJrWHhkVi9UTE0renFQOUdsc3BPcQo1WExyaWRBVjNUbDVMZnJFL1E5TXNPc1Z0N2FtdEswZndaVzAxQT09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K",
        "KeyRaw": "LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb2dJQkFBS0NBUUVBcG1PdnZ2SDU5UGJYNHNLVUhIWFN5RDUxSFBYTmltK2xsNktiQ3VyU2dHWHRkM0NsCjF1NGFRbGVVSnhLVEUwOTdBMXFMTGd1NnhObERBTHJJd1ZwdzhmY0E2a25tQVVmM0Z0UlNVZUo4cUlEOE5nV0oKUnFDd3hzcXIwTXdCRUEwSy90ZytDWEdnQVAwWlM3NmJFTFEzY3FSZzNLNjVKU2JxMzZENURNY1R4SHZPdzdDbwprRGI3NVRtVko1WTRveHpaY2tnNXdXNXM3ajBTajZCR0VrNlY0dHN1eVdaZldPcVFLRUxRUm1Tang3bnF2NmhFCnYwR2I4cDNJTXZpeXN3WEZwemFveURnRW5RNnJzNW5IQ0pEMm9yVW5jSUJnVlF2eTZsV2JwSmUrRVh2L245VDIKcUZlUDJlOEluZFk0ZUFOSU1RWVJJSndRd3BWN2RWcWlGMWlqOXdJREFRQUJBb0lCQUZnSVVnbWltTzdrVXVCawp0bHhBY2w4RHZJNnY5aW1TWEhoWHpkUCszWlNWV1FoaWp6dWlDajZqZTMwWXRMdjR4MHJFOHZKUHZtYzcwOWxrCithWmpKWEsvanJwbWtzeUd1TkpaVDV5SFNoRVUvVnZQbmd2Q0pRVm9ZWE05SENyVDI4ZHR2WlRkaXh3NnpORm8KYlQ1dk93N3FyVnpWREp2OWRUTVFSZlJldDdTeU9oUW1MS29mU2JBcjgwQWgzZTRxMFlaUnZ6RVhMT1JMQ2lXSQpDYU9sd1lKOWU2Vk1peHZYemIreGpPT0lMZFkwWHRqcXlNQkZjSUtSbUJvc2NZOFNlMDVBZ0JTdTRyWDIrOUtzCitONnJFeitqVmtYQkN5YVJlc0RpbmN4UWdQQmZsQW1lVGo4dENFb1BhdkFkV2d0T3doek0wa3NqTW1scXNzVWYKbEtNV2NMRUNnWUVBelgxNTZiVHF0SCtGdFhqTjR3aVB3cjliUkpmT0NJVGh2bXVvT3dFZmpDeUVpeU5aUmJtdApnc1N6ZC9WZHp4ck0rdEo0bTVia1dZUVdZMmdNMnBFSVBIZ2VVVC9HamRuUlN1UG1oT05zVEIxUklYWTlaVURxCkd5R1pSdnNhcWdrMnlYSkV1ZVpYdi9vYVRSYzJraTFDQnVKR0F4cUIvNmtuY0ZjMlRWZ3pmZk1DZ1lFQXowbkoKRG8vWDhDbkJRWkVRblRDR1l4cnA5cmk4cDVuc1NNZjVocVdod3hXSy83V2tqWlBSU3RIUzJmQ3ZTWVJSTk1HdwpIUlFlV2FFV1Z1WkRtZWwzSlpEKzdVL0hUY1FDaGFQNHoySzBHc3daN1h6Qk9XeU1CKzhIWWJ6ckpudkVYQXRSCmUzenhpWUY2VENuUkJybCtxZ3dBSWJGTngvR0oxUFQ4ZHQyL1R1MENnWUJFRlhqWk9Eb3poN1R6aFkwaDFlcGIKNmk4Qk1STHd1NlpZQXkrQUxVVVltbjluNGxSbng3ZDNobGk0UERIU3R0eUhsa2lqdElFQUw4V0ROaXhjRm9XVwpFMjVvR1N0ZVFIY1p5eHpMbHRhQStZMngrbzBwQ1RNSHZrQWN4b0gxS0l4Z2ZsM0xBa2k4c004YUQ4RGkrZC9RCmpCUUtYelFIVXpKZ0JHVlhod3U0aFFLQmdDSnJQQWxBOVRnWmxzOU9TUlh3c3IvTi9qOUxXWGZ5NVBzSXlYUUUKR0tJTjk3Q1I5cXJUZXBNVDJCRDhGLzc3QzRqWkNHY3JxZ1p6NndPdTVGYXdIMnFMY3Vqd3NFVkhZS3ZVR0VKSApQMlNiczBwdHhwL0VXRlFRNm9iZUdhV2dNM0NkS0lCNnRKaUNlVTRnTzJjRWNmWEdYRmM3MjVCeG1OTlZnbjR5ClA4dlpBb0dBVWFyLzlCbisvVTBCcm1rMnpPSkR3Y2o0Y0JXeDZDNXNwVDFDVDVlRUltVnRIakNXTk5tWmxWVTgKTVc5SWQ4OFlFWERkNWJ4Z09nNk1tUXFyT0NRMysvTEpkRE9UQWF0N1BGTng0TXJndkRycmZURGZndmlBdUZFawpKUncrakJ0dTZlMG9UZ3RpakQ2WUFxVUltR3hPTC9QWDdaWitnckZVVVdTeU9KQ0JIWWM9Ci0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==",
        "FileList": [
            {
                "Filename": "tls/kubelet-bootstrap-kubeconfig-signer.key",
                "Data": "LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb2dJQkFBS0NBUUVBcG1PdnZ2SDU5UGJYNHNLVUhIWFN5RDUxSFBYTmltK2xsNktiQ3VyU2dHWHRkM0NsCjF1NGFRbGVVSnhLVEUwOTdBMXFMTGd1NnhObERBTHJJd1ZwdzhmY0E2a25tQVVmM0Z0UlNVZUo4cUlEOE5nV0oKUnFDd3hzcXIwTXdCRUEwSy90ZytDWEdnQVAwWlM3NmJFTFEzY3FSZzNLNjVKU2JxMzZENURNY1R4SHZPdzdDbwprRGI3NVRtVko1WTRveHpaY2tnNXdXNXM3ajBTajZCR0VrNlY0dHN1eVdaZldPcVFLRUxRUm1Tang3bnF2NmhFCnYwR2I4cDNJTXZpeXN3WEZwemFveURnRW5RNnJzNW5IQ0pEMm9yVW5jSUJnVlF2eTZsV2JwSmUrRVh2L245VDIKcUZlUDJlOEluZFk0ZUFOSU1RWVJJSndRd3BWN2RWcWlGMWlqOXdJREFRQUJBb0lCQUZnSVVnbWltTzdrVXVCawp0bHhBY2w4RHZJNnY5aW1TWEhoWHpkUCszWlNWV1FoaWp6dWlDajZqZTMwWXRMdjR4MHJFOHZKUHZtYzcwOWxrCithWmpKWEsvanJwbWtzeUd1TkpaVDV5SFNoRVUvVnZQbmd2Q0pRVm9ZWE05SENyVDI4ZHR2WlRkaXh3NnpORm8KYlQ1dk93N3FyVnpWREp2OWRUTVFSZlJldDdTeU9oUW1MS29mU2JBcjgwQWgzZTRxMFlaUnZ6RVhMT1JMQ2lXSQpDYU9sd1lKOWU2Vk1peHZYemIreGpPT0lMZFkwWHRqcXlNQkZjSUtSbUJvc2NZOFNlMDVBZ0JTdTRyWDIrOUtzCitONnJFeitqVmtYQkN5YVJlc0RpbmN4UWdQQmZsQW1lVGo4dENFb1BhdkFkV2d0T3doek0wa3NqTW1scXNzVWYKbEtNV2NMRUNnWUVBelgxNTZiVHF0SCtGdFhqTjR3aVB3cjliUkpmT0NJVGh2bXVvT3dFZmpDeUVpeU5aUmJtdApnc1N6ZC9WZHp4ck0rdEo0bTVia1dZUVdZMmdNMnBFSVBIZ2VVVC9HamRuUlN1UG1oT05zVEIxUklYWTlaVURxCkd5R1pSdnNhcWdrMnlYSkV1ZVpYdi9vYVRSYzJraTFDQnVKR0F4cUIvNmtuY0ZjMlRWZ3pmZk1DZ1lFQXowbkoKRG8vWDhDbkJRWkVRblRDR1l4cnA5cmk4cDVuc1NNZjVocVdod3hXSy83V2tqWlBSU3RIUzJmQ3ZTWVJSTk1HdwpIUlFlV2FFV1Z1WkRtZWwzSlpEKzdVL0hUY1FDaGFQNHoySzBHc3daN1h6Qk9XeU1CKzhIWWJ6ckpudkVYQXRSCmUzenhpWUY2VENuUkJybCtxZ3dBSWJGTngvR0oxUFQ4ZHQyL1R1MENnWUJFRlhqWk9Eb3poN1R6aFkwaDFlcGIKNmk4Qk1STHd1NlpZQXkrQUxVVVltbjluNGxSbng3ZDNobGk0UERIU3R0eUhsa2lqdElFQUw4V0ROaXhjRm9XVwpFMjVvR1N0ZVFIY1p5eHpMbHRhQStZMngrbzBwQ1RNSHZrQWN4b0gxS0l4Z2ZsM0xBa2k4c004YUQ4RGkrZC9RCmpCUUtYelFIVXpKZ0JHVlhod3U0aFFLQmdDSnJQQWxBOVRnWmxzOU9TUlh3c3IvTi9qOUxXWGZ5NVBzSXlYUUUKR0tJTjk3Q1I5cXJUZXBNVDJCRDhGLzc3QzRqWkNHY3JxZ1p6NndPdTVGYXdIMnFMY3Vqd3NFVkhZS3ZVR0VKSApQMlNiczBwdHhwL0VXRlFRNm9iZUdhV2dNM0NkS0lCNnRKaUNlVTRnTzJjRWNmWEdYRmM3MjVCeG1OTlZnbjR5ClA4dlpBb0dBVWFyLzlCbisvVTBCcm1rMnpPSkR3Y2o0Y0JXeDZDNXNwVDFDVDVlRUltVnRIakNXTk5tWmxWVTgKTVc5SWQ4OFlFWERkNWJ4Z09nNk1tUXFyT0NRMysvTEpkRE9UQWF0N1BGTng0TXJndkRycmZURGZndmlBdUZFawpKUncrakJ0dTZlMG9UZ3RpakQ2WUFxVUltR3hPTC9QWDdaWitnckZVVVdTeU9KQ0JIWWM9Ci0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg=="
            },
            {
                "Filename": "tls/kubelet-bootstrap-kubeconfig-signer.crt",
                "Data": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURTRENDQWpDZ0F3SUJBZ0lJSEovdFVDZjFLejh3RFFZSktvWklodmNOQVFFTEJRQXdRakVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1Td3dLZ1lEVlFRREV5TnJkV0psYkdWMExXSnZiM1J6ZEhKaGNDMXJkV0psWTI5dQpabWxuTFhOcFoyNWxjakFlRncweU16QTBNVGd4TXpBNE1UQmFGdzB6TXpBME1UVXhNekE0TVRCYU1FSXhFakFRCkJnTlZCQXNUQ1c5d1pXNXphR2xtZERFc01Db0dBMVVFQXhNamEzVmlaV3hsZEMxaWIyOTBjM1J5WVhBdGEzVmkKWldOdmJtWnBaeTF6YVdkdVpYSXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCRHdBd2dnRUtBb0lCQVFDbQpZNisrOGZuMDl0Zml3cFFjZGRMSVBuVWM5YzJLYjZXWG9wc0s2dEtBWmUxM2NLWFc3aHBDVjVRbkVwTVRUM3NECldvc3VDN3JFMlVNQXVzakJXbkR4OXdEcVNlWUJSL2NXMUZKUjRueW9nUHcyQllsR29MREd5cXZRekFFUURRcisKMkQ0SmNhQUEvUmxMdnBzUXREZHlwR0RjcnJrbEp1cmZvUGtNeHhQRWU4N0RzS2lRTnZ2bE9aVW5samlqSE5seQpTRG5CYm16dVBSS1BvRVlTVHBYaTJ5N0pabDlZNnBBb1F0QkdaS1BIdWVxL3FFUy9RWnZ5bmNneStMS3pCY1duCk5xaklPQVNkRHF1em1jY0lrUGFpdFNkd2dHQlZDL0xxVlp1a2w3NFJlLytmMVBhb1Y0L1o3d2lkMWpoNEEwZ3gKQmhFZ25CRENsWHQxV3FJWFdLUDNBZ01CQUFHalFqQkFNQTRHQTFVZER3RUIvd1FFQXdJQ3BEQVBCZ05WSFJNQgpBZjhFQlRBREFRSC9NQjBHQTFVZERnUVdCQlJGWXV2VSttM3MzYWpXZTZyeGIrejJSNWVIbFRBTkJna3Foa2lHCjl3MEJBUXNGQUFPQ0FRRUFKRjByb2ZabGN6UWRXamlIYTBiVk9jQXdkc1RyQjhBajlqR3BGd2V0VGF4TlpqekwKM3RzcUtXd2k1VEZEcnNpdGt3a1VvZy9jWkxWaDBFYTNmbXlGb2pZM0psVlhUa1VDOWw2ekUxSG85U0E1bjI1Rwp2Ym5OM0Zsc3UrMHFDcUt1VzJzS3QzTHpTdU00dGRKNEZOUG9nbzlzZ0xTZXlLY1RqcVdWVXRmdSs1RWJYN1lTCnFtd09oT05VQzQ4Rk1GenFRdzgyc0dxTEdXRFRWUlorSDhkUnN2MEliN3g3WU9JemNpQXEyd0JGZndlbUQ2ZGYKWTBuSXlLUWdLUU5MaEJ3NmhpdjNEejZEZ2x1TTZFS0pUNDFFYXcyMytkOXJrWHhkVi9UTE0renFQOUdsc3BPcQo1WExyaWRBVjNUbDVMZnJFL1E5TXNPc1Z0N2FtdEswZndaVzAxQT09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K"
            }
        ]
    },
    "*tls.KubeletCSRSignerCertKey": {
        "CertRaw": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURIakNDQWdhZ0F3SUJBZ0lJSVNGYVllQ0YrekV3RFFZSktvWklodmNOQVFFTEJRQXdMVEVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1SY3dGUVlEVlFRREV3NXJkV0psYkdWMExYTnBaMjVsY2pBZUZ3MHlNekEwTVRneApNekE0TVRSYUZ3MHlNekEwTVRreE16QTRNVFJhTUMweEVqQVFCZ05WQkFzVENXOXdaVzV6YUdsbWRERVhNQlVHCkExVUVBeE1PYTNWaVpXeGxkQzF6YVdkdVpYSXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCRHdBd2dnRUsKQW9JQkFRQ1ltVFNESVh1eVNNbDhVOElkemxOVFNTaFgvWHRnVThXTzFaYXg0NEtEL0ttbnVSbWpnSEVDWW01bQpzQmFENFNUZ3F6a1BPRmltZ1VnV0lwSTJ3eithVlZxUU45TUt5VFgxVnliaGNvN1ZqN1JJSDRuRjFZMHIyRkFmCi9kLzlYYjZlRmFSOXZKSVFUYjMwL25TTnpmTzV1TTYyQnAwKzFvVnlvaUx0ZGljMlpKODNDNnFseVI1YjZId1IKUnl2ODNTeGNMWWlhekNvS0JNYXdQQTc1YWxVNGhNQVJvRnNrVkxEMjdWWW8yL0pyeUhIN2QxNzdHNW5RS2NrUApKTjZkbURWZXN1SWtDdzNpRkpzSyt0Nld6NW5xTnRtVS9saE1hWVNxK0lXMHlWRFRWcHZManRKYjZwZ3JZZ3JxCkZCM0lwV2kvL3ZOQnpsMjF5Qk9iSC9pbmhDb1pBZ01CQUFHalFqQkFNQTRHQTFVZER3RUIvd1FFQXdJQ3BEQVAKQmdOVkhSTUJBZjhFQlRBREFRSC9NQjBHQTFVZERnUVdCQlM2amF3cWpTb01yNExLbUkzMVhTV2hTVllKdGpBTgpCZ2txaGtpRzl3MEJBUXNGQUFPQ0FRRUFoYVV0QkdjRjJicjNvWGNOOUdFQ0cwMWtlZ3Z3c01vdEUvZkpDVHhXCisvN0xzZ1JJY3ZJYnZqTk1GVFZWM1JGVy9aYXpidjREbWJtdTNJdG1FU0RiWXJtdU1YNVNZZDJTNngyNGNCdUMKTmJOVVE2QkZ6ZTF6Q2RLRmxVTHdHeE5NYS9zendBa3BmRUd6TzkrWjBUQUY5eU9yM2tRL204R2pzZTlFRkNsWApLL25BVThYeko3U1VrZXE1S0Z0b3h5NHFvR1hNWWphNktDWGNuYUpqclJTcWdvY0NCL1dwenlMLzc2VFcrYnZ0CjNCdDEzeUs2Y2x0cTJmVWdMdUxibDJ5WXU5MXRmakx3YUg1ZlI2UE1wb3Y0YTBCeUt3KytVa2VBbHp2cmNMTXMKY3hpVWZRVVV1ak9vdGJDRzlxSGtBNmk4NExCR2Y2RnBLSXlWUWJ2eTJxSWMvdz09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K",
        "KeyRaw": "LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBbUprMGd5Rjdza2pKZkZQQ0hjNVRVMGtvVi8xN1lGUEZqdFdXc2VPQ2cveXBwN2taCm80QnhBbUp1WnJBV2crRWs0S3M1RHpoWXBvRklGaUtTTnNNL21sVmFrRGZUQ3NrMTlWY200WEtPMVkrMFNCK0oKeGRXTks5aFFILzNmL1YyK25oV2tmYnlTRUUyOTlQNTBqYzN6dWJqT3RnYWRQdGFGY3FJaTdYWW5ObVNmTnd1cQpwY2tlVytoOEVVY3IvTjBzWEMySW1zd3FDZ1RHc0R3TytXcFZPSVRBRWFCYkpGU3c5dTFXS052eWE4aHgrM2RlCit4dVowQ25KRHlUZW5aZzFYckxpSkFzTjRoU2JDdnJlbHMrWjZqYlpsUDVZVEdtRXF2aUZ0TWxRMDFhYnk0N1MKVytxWUsySUs2aFFkeUtWb3YvN3pRYzVkdGNnVG14LzRwNFFxR1FJREFRQUJBb0lCQUVzYzVvZEJmUVMxNVUrbwpYdDJUQ05ydklNZW5Bd3JZVVY5TWJWL2tzQUxONUtpbGFTUmMvY09CdGZ3ZjR3VkpWb0NzWjJyQmZvbC9DMyt4CnhxemtFTE9rSGU3dE81bU1qMTNUWjFVRHNhRVhtbE1DQ3l2eFFRcjY3LzIvVm5qOW91MW5rODg4ZWQxQ2x5VTMKOXlFeDVpMWQ5WW9OMldycjUwWVUzd0pwN1VWTklaOStlUUsxY3o3Q0RoQUszUGJiOVhHcDdXOWxDVUhtN3V6cQpJUjlRc3J3NHNIbldvUC91enY5Szl6bkkxa1lDQmVaODNTT2x0MkpFOUxxYUk4UGlGVHZuOXFJUnMvTTNRM2hJCndwV29WUzBtdmNJejFUaHdyNGR6UDJCZHJIRDdwdXNYNTg3aDZhY3IzSHNGMHlhOUdkWDVHMmRhMGJZeitHTWcKY1E1SlEyMENnWUVBeWF1WE5iZ0VjcC9FWHJrRHdDL2hBTy9KUnVzdjR2b1J1Sll4VG9sVGZSdWFvcitjbFBmeApvVzZiMUVhbXFETDRtbUY5VmozVFdLeHRQYUVPM29YSGZiZExRdVJsNUxMNlR6MXhlY2ozM3FlcjgxWFJ1YWJ0CmEzQVMyTUxmNVljSHlUTmg4NWgvVWJUd2tCVER3UDU0WTNSNkxNWDc5RmNxZDF4NDF3WTlMR3NDZ1lFQXdiVlMKd2VtSTZqUWlyZjlKd1BnNFA3bmhxQ1pyeXZTTnU0Zi81VEZid0FWRlBrNGdHU0VrdTlNL2kycWRtT1B6ek1YbApKbkJjcWoyMUkvMmpHbmFpRWV4amkvYmxNY2R4cWRwd1BRamNsdWtIR2xSbDFWQlRwbkl0OUxnWmJKUVdFUms4CmNPRGcrM1lHeTBsNXJMam4xd3QwSVlzQVU5TGtvWHRJazBHcUpJc0NnWUFadGNGeVBNSjhabmZmWjVEZDJIekQKNU0zeE41eUVRRU13R0IyekdIakhVMVNVZVA4YVVyM0FTZHlkNUYvc3c0ckVDN2V4M2ZIcXRSaThLYU0rcFNsNAprbnlLeTVsZDNaOWhxTUNsdVFRNG80R2RaUXgyc1p4RS9TVzU4cVllbWVkWk5DN0JvbWhnMzBObjZ1M0YxZXM5CktxVkV2ZnpQK3FqVVRMcXZGd0dIZndLQmdRQytKazJIdHNURkNzcWtQUDdjWTQxcjJQOVB2ZStBZWxJTExiU2YKK3JUVEtSbFEwUVluUk9hM1RlYUo1KzJ1WU00NVRHWG1OdFJ2OVVVMGdFMjBzNUhpd0ViejVUZ1ZobS9vU1ZwMgpQNVd5dWl0VHlGZHliM2k5NGtXRWZaZlBnd3FxWERoOW9mS1lSY0xqbVV2TXBuSkhJYUl0THpMeUZncUREZTh2ClJuMUxnd0tCZ1FDMlNuUitDclhQZnNtaU85R2JHTjc5L2xuNEVEQ1k4VHlBU21TOUZDMWZ3WFlDMHV0LzhZbmYKSUEvTWxEQVB0OWdwYmxhbHVrdWxlai9yRnoyZVlxUEtZRVhIMTdnZVUwbVByNVVQVEpJZ3ZQVDN0bXdhWFgyRQo0c3Y2cnp4YUo3aERwZlNjT2toUFg1V085dEFPM01SUUlldi9IRHB0TXZhN25sTmZQNTZmT1E9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=",
        "FileList": [
            {
                "Filename": "tls/kubelet-signer.key",
                "Data": "LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBbUprMGd5Rjdza2pKZkZQQ0hjNVRVMGtvVi8xN1lGUEZqdFdXc2VPQ2cveXBwN2taCm80QnhBbUp1WnJBV2crRWs0S3M1RHpoWXBvRklGaUtTTnNNL21sVmFrRGZUQ3NrMTlWY200WEtPMVkrMFNCK0oKeGRXTks5aFFILzNmL1YyK25oV2tmYnlTRUUyOTlQNTBqYzN6dWJqT3RnYWRQdGFGY3FJaTdYWW5ObVNmTnd1cQpwY2tlVytoOEVVY3IvTjBzWEMySW1zd3FDZ1RHc0R3TytXcFZPSVRBRWFCYkpGU3c5dTFXS052eWE4aHgrM2RlCit4dVowQ25KRHlUZW5aZzFYckxpSkFzTjRoU2JDdnJlbHMrWjZqYlpsUDVZVEdtRXF2aUZ0TWxRMDFhYnk0N1MKVytxWUsySUs2aFFkeUtWb3YvN3pRYzVkdGNnVG14LzRwNFFxR1FJREFRQUJBb0lCQUVzYzVvZEJmUVMxNVUrbwpYdDJUQ05ydklNZW5Bd3JZVVY5TWJWL2tzQUxONUtpbGFTUmMvY09CdGZ3ZjR3VkpWb0NzWjJyQmZvbC9DMyt4CnhxemtFTE9rSGU3dE81bU1qMTNUWjFVRHNhRVhtbE1DQ3l2eFFRcjY3LzIvVm5qOW91MW5rODg4ZWQxQ2x5VTMKOXlFeDVpMWQ5WW9OMldycjUwWVUzd0pwN1VWTklaOStlUUsxY3o3Q0RoQUszUGJiOVhHcDdXOWxDVUhtN3V6cQpJUjlRc3J3NHNIbldvUC91enY5Szl6bkkxa1lDQmVaODNTT2x0MkpFOUxxYUk4UGlGVHZuOXFJUnMvTTNRM2hJCndwV29WUzBtdmNJejFUaHdyNGR6UDJCZHJIRDdwdXNYNTg3aDZhY3IzSHNGMHlhOUdkWDVHMmRhMGJZeitHTWcKY1E1SlEyMENnWUVBeWF1WE5iZ0VjcC9FWHJrRHdDL2hBTy9KUnVzdjR2b1J1Sll4VG9sVGZSdWFvcitjbFBmeApvVzZiMUVhbXFETDRtbUY5VmozVFdLeHRQYUVPM29YSGZiZExRdVJsNUxMNlR6MXhlY2ozM3FlcjgxWFJ1YWJ0CmEzQVMyTUxmNVljSHlUTmg4NWgvVWJUd2tCVER3UDU0WTNSNkxNWDc5RmNxZDF4NDF3WTlMR3NDZ1lFQXdiVlMKd2VtSTZqUWlyZjlKd1BnNFA3bmhxQ1pyeXZTTnU0Zi81VEZid0FWRlBrNGdHU0VrdTlNL2kycWRtT1B6ek1YbApKbkJjcWoyMUkvMmpHbmFpRWV4amkvYmxNY2R4cWRwd1BRamNsdWtIR2xSbDFWQlRwbkl0OUxnWmJKUVdFUms4CmNPRGcrM1lHeTBsNXJMam4xd3QwSVlzQVU5TGtvWHRJazBHcUpJc0NnWUFadGNGeVBNSjhabmZmWjVEZDJIekQKNU0zeE41eUVRRU13R0IyekdIakhVMVNVZVA4YVVyM0FTZHlkNUYvc3c0ckVDN2V4M2ZIcXRSaThLYU0rcFNsNAprbnlLeTVsZDNaOWhxTUNsdVFRNG80R2RaUXgyc1p4RS9TVzU4cVllbWVkWk5DN0JvbWhnMzBObjZ1M0YxZXM5CktxVkV2ZnpQK3FqVVRMcXZGd0dIZndLQmdRQytKazJIdHNURkNzcWtQUDdjWTQxcjJQOVB2ZStBZWxJTExiU2YKK3JUVEtSbFEwUVluUk9hM1RlYUo1KzJ1WU00NVRHWG1OdFJ2OVVVMGdFMjBzNUhpd0ViejVUZ1ZobS9vU1ZwMgpQNVd5dWl0VHlGZHliM2k5NGtXRWZaZlBnd3FxWERoOW9mS1lSY0xqbVV2TXBuSkhJYUl0THpMeUZncUREZTh2ClJuMUxnd0tCZ1FDMlNuUitDclhQZnNtaU85R2JHTjc5L2xuNEVEQ1k4VHlBU21TOUZDMWZ3WFlDMHV0LzhZbmYKSUEvTWxEQVB0OWdwYmxhbHVrdWxlai9yRnoyZVlxUEtZRVhIMTdnZVUwbVByNVVQVEpJZ3ZQVDN0bXdhWFgyRQo0c3Y2cnp4YUo3aERwZlNjT2toUFg1V085dEFPM01SUUlldi9IRHB0TXZhN25sTmZQNTZmT1E9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo="
            },
            {
                "Filename": "tls/kubelet-signer.crt",
                "Data": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURIakNDQWdhZ0F3SUJBZ0lJSVNGYVllQ0YrekV3RFFZSktvWklodmNOQVFFTEJRQXdMVEVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1SY3dGUVlEVlFRREV3NXJkV0psYkdWMExYTnBaMjVsY2pBZUZ3MHlNekEwTVRneApNekE0TVRSYUZ3MHlNekEwTVRreE16QTRNVFJhTUMweEVqQVFCZ05WQkFzVENXOXdaVzV6YUdsbWRERVhNQlVHCkExVUVBeE1PYTNWaVpXeGxkQzF6YVdkdVpYSXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCRHdBd2dnRUsKQW9JQkFRQ1ltVFNESVh1eVNNbDhVOElkemxOVFNTaFgvWHRnVThXTzFaYXg0NEtEL0ttbnVSbWpnSEVDWW01bQpzQmFENFNUZ3F6a1BPRmltZ1VnV0lwSTJ3eithVlZxUU45TUt5VFgxVnliaGNvN1ZqN1JJSDRuRjFZMHIyRkFmCi9kLzlYYjZlRmFSOXZKSVFUYjMwL25TTnpmTzV1TTYyQnAwKzFvVnlvaUx0ZGljMlpKODNDNnFseVI1YjZId1IKUnl2ODNTeGNMWWlhekNvS0JNYXdQQTc1YWxVNGhNQVJvRnNrVkxEMjdWWW8yL0pyeUhIN2QxNzdHNW5RS2NrUApKTjZkbURWZXN1SWtDdzNpRkpzSyt0Nld6NW5xTnRtVS9saE1hWVNxK0lXMHlWRFRWcHZManRKYjZwZ3JZZ3JxCkZCM0lwV2kvL3ZOQnpsMjF5Qk9iSC9pbmhDb1pBZ01CQUFHalFqQkFNQTRHQTFVZER3RUIvd1FFQXdJQ3BEQVAKQmdOVkhSTUJBZjhFQlRBREFRSC9NQjBHQTFVZERnUVdCQlM2amF3cWpTb01yNExLbUkzMVhTV2hTVllKdGpBTgpCZ2txaGtpRzl3MEJBUXNGQUFPQ0FRRUFoYVV0QkdjRjJicjNvWGNOOUdFQ0cwMWtlZ3Z3c01vdEUvZkpDVHhXCisvN0xzZ1JJY3ZJYnZqTk1GVFZWM1JGVy9aYXpidjREbWJtdTNJdG1FU0RiWXJtdU1YNVNZZDJTNngyNGNCdUMKTmJOVVE2QkZ6ZTF6Q2RLRmxVTHdHeE5NYS9zendBa3BmRUd6TzkrWjBUQUY5eU9yM2tRL204R2pzZTlFRkNsWApLL25BVThYeko3U1VrZXE1S0Z0b3h5NHFvR1hNWWphNktDWGNuYUpqclJTcWdvY0NCL1dwenlMLzc2VFcrYnZ0CjNCdDEzeUs2Y2x0cTJmVWdMdUxibDJ5WXU5MXRmakx3YUg1ZlI2UE1wb3Y0YTBCeUt3KytVa2VBbHp2cmNMTXMKY3hpVWZRVVV1ak9vdGJDRzlxSGtBNmk4NExCR2Y2RnBLSXlWUWJ2eTJxSWMvdz09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K"
            }
        ]
    },
    "*tls.KubeletClientCABundle": {
        "BundleRaw": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURIakNDQWdhZ0F3SUJBZ0lJSVNGYVllQ0YrekV3RFFZSktvWklodmNOQVFFTEJRQXdMVEVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1SY3dGUVlEVlFRREV3NXJkV0psYkdWMExYTnBaMjVsY2pBZUZ3MHlNekEwTVRneApNekE0TVRSYUZ3MHlNekEwTVRreE16QTRNVFJhTUMweEVqQVFCZ05WQkFzVENXOXdaVzV6YUdsbWRERVhNQlVHCkExVUVBeE1PYTNWaVpXeGxkQzF6YVdkdVpYSXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCRHdBd2dnRUsKQW9JQkFRQ1ltVFNESVh1eVNNbDhVOElkemxOVFNTaFgvWHRnVThXTzFaYXg0NEtEL0ttbnVSbWpnSEVDWW01bQpzQmFENFNUZ3F6a1BPRmltZ1VnV0lwSTJ3eithVlZxUU45TUt5VFgxVnliaGNvN1ZqN1JJSDRuRjFZMHIyRkFmCi9kLzlYYjZlRmFSOXZKSVFUYjMwL25TTnpmTzV1TTYyQnAwKzFvVnlvaUx0ZGljMlpKODNDNnFseVI1YjZId1IKUnl2ODNTeGNMWWlhekNvS0JNYXdQQTc1YWxVNGhNQVJvRnNrVkxEMjdWWW8yL0pyeUhIN2QxNzdHNW5RS2NrUApKTjZkbURWZXN1SWtDdzNpRkpzSyt0Nld6NW5xTnRtVS9saE1hWVNxK0lXMHlWRFRWcHZManRKYjZwZ3JZZ3JxCkZCM0lwV2kvL3ZOQnpsMjF5Qk9iSC9pbmhDb1pBZ01CQUFHalFqQkFNQTRHQTFVZER3RUIvd1FFQXdJQ3BEQVAKQmdOVkhSTUJBZjhFQlRBREFRSC9NQjBHQTFVZERnUVdCQlM2amF3cWpTb01yNExLbUkzMVhTV2hTVllKdGpBTgpCZ2txaGtpRzl3MEJBUXNGQUFPQ0FRRUFoYVV0QkdjRjJicjNvWGNOOUdFQ0cwMWtlZ3Z3c01vdEUvZkpDVHhXCisvN0xzZ1JJY3ZJYnZqTk1GVFZWM1JGVy9aYXpidjREbWJtdTNJdG1FU0RiWXJtdU1YNVNZZDJTNngyNGNCdUMKTmJOVVE2QkZ6ZTF6Q2RLRmxVTHdHeE5NYS9zendBa3BmRUd6TzkrWjBUQUY5eU9yM2tRL204R2pzZTlFRkNsWApLL25BVThYeko3U1VrZXE1S0Z0b3h5NHFvR1hNWWphNktDWGNuYUpqclJTcWdvY0NCL1dwenlMLzc2VFcrYnZ0CjNCdDEzeUs2Y2x0cTJmVWdMdUxibDJ5WXU5MXRmakx3YUg1ZlI2UE1wb3Y0YTBCeUt3KytVa2VBbHp2cmNMTXMKY3hpVWZRVVV1ak9vdGJDRzlxSGtBNmk4NExCR2Y2RnBLSXlWUWJ2eTJxSWMvdz09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K",
        "FileList": [
            {
                "Filename": "tls/kubelet-client-ca-bundle.crt",
                "Data": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURIakNDQWdhZ0F3SUJBZ0lJSVNGYVllQ0YrekV3RFFZSktvWklodmNOQVFFTEJRQXdMVEVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1SY3dGUVlEVlFRREV3NXJkV0psYkdWMExYTnBaMjVsY2pBZUZ3MHlNekEwTVRneApNekE0TVRSYUZ3MHlNekEwTVRreE16QTRNVFJhTUMweEVqQVFCZ05WQkFzVENXOXdaVzV6YUdsbWRERVhNQlVHCkExVUVBeE1PYTNWaVpXeGxkQzF6YVdkdVpYSXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCRHdBd2dnRUsKQW9JQkFRQ1ltVFNESVh1eVNNbDhVOElkemxOVFNTaFgvWHRnVThXTzFaYXg0NEtEL0ttbnVSbWpnSEVDWW01bQpzQmFENFNUZ3F6a1BPRmltZ1VnV0lwSTJ3eithVlZxUU45TUt5VFgxVnliaGNvN1ZqN1JJSDRuRjFZMHIyRkFmCi9kLzlYYjZlRmFSOXZKSVFUYjMwL25TTnpmTzV1TTYyQnAwKzFvVnlvaUx0ZGljMlpKODNDNnFseVI1YjZId1IKUnl2ODNTeGNMWWlhekNvS0JNYXdQQTc1YWxVNGhNQVJvRnNrVkxEMjdWWW8yL0pyeUhIN2QxNzdHNW5RS2NrUApKTjZkbURWZXN1SWtDdzNpRkpzSyt0Nld6NW5xTnRtVS9saE1hWVNxK0lXMHlWRFRWcHZManRKYjZwZ3JZZ3JxCkZCM0lwV2kvL3ZOQnpsMjF5Qk9iSC9pbmhDb1pBZ01CQUFHalFqQkFNQTRHQTFVZER3RUIvd1FFQXdJQ3BEQVAKQmdOVkhSTUJBZjhFQlRBREFRSC9NQjBHQTFVZERnUVdCQlM2amF3cWpTb01yNExLbUkzMVhTV2hTVllKdGpBTgpCZ2txaGtpRzl3MEJBUXNGQUFPQ0FRRUFoYVV0QkdjRjJicjNvWGNOOUdFQ0cwMWtlZ3Z3c01vdEUvZkpDVHhXCisvN0xzZ1JJY3ZJYnZqTk1GVFZWM1JGVy9aYXpidjREbWJtdTNJdG1FU0RiWXJtdU1YNVNZZDJTNngyNGNCdUMKTmJOVVE2QkZ6ZTF6Q2RLRmxVTHdHeE5NYS9zendBa3BmRUd6TzkrWjBUQUY5eU9yM2tRL204R2pzZTlFRkNsWApLL25BVThYeko3U1VrZXE1S0Z0b3h5NHFvR1hNWWphNktDWGNuYUpqclJTcWdvY0NCL1dwenlMLzc2VFcrYnZ0CjNCdDEzeUs2Y2x0cTJmVWdMdUxibDJ5WXU5MXRmakx3YUg1ZlI2UE1wb3Y0YTBCeUt3KytVa2VBbHp2cmNMTXMKY3hpVWZRVVV1ak9vdGJDRzlxSGtBNmk4NExCR2Y2RnBLSXlWUWJ2eTJxSWMvdz09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K"
            }
        ]
    },
    "*tls.KubeletClientCertKey": {
        "CertRaw": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUQ4RENDQXRpZ0F3SUJBZ0lJUmtxWC91T1JCOHN3RFFZSktvWklodmNOQVFFTEJRQXdRakVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1Td3dLZ1lEVlFRREV5TnJkV0psYkdWMExXSnZiM1J6ZEhKaGNDMXJkV0psWTI5dQpabWxuTFhOcFoyNWxjakFlRncweU16QTBNVGd4TXpBNE1UQmFGdzB6TXpBME1UVXhNekE0TVRCYU1JRzJNV0F3CkhRWURWUVFLRXhaemVYTjBaVzA2YzJWeWRtbGpaV0ZqWTI5MWJuUnpNRDhHQTFVRUNoTTRjM2x6ZEdWdE9uTmwKY25acFkyVmhZMk52ZFc1MGN6cHZjR1Z1YzJocFpuUXRiV0ZqYUdsdVpTMWpiMjVtYVdjdGIzQmxjbUYwYjNJeApVakJRQmdOVkJBTVRTWE41YzNSbGJUcHpaWEoyYVdObFlXTmpiM1Z1ZERwdmNHVnVjMmhwWm5RdGJXRmphR2x1ClpTMWpiMjVtYVdjdGIzQmxjbUYwYjNJNmJtOWtaUzFpYjI5MGMzUnlZWEJ3WlhJd2dnRWlNQTBHQ1NxR1NJYjMKRFFFQkFRVUFBNElCRHdBd2dnRUtBb0lCQVFDeDk5M0lqSStLWFZpNExsajBnSzlKeUhncU4xUjRYMnpQUXVpTApMZkRqaDFzaWo1ekx2Q3VtMmFRN29Ec1NTOFVKM3ltUGpDM0JMVFkvZ1FVQkhjTUhWZVo4M2s4V01YWWV0MUJSCnBhRW1FdlJVcENQSG9wSEhMSlJKdHV3MmV0RHZOV1A5bHRJUXg4UFUrSHBBUFJDU0lkc3JjUXI3Vm0waVg1K2sKL1hsS1p2TzBaS3ZZTGpSdmVkSlpubkdjZkVJSWdvMEE4QVFBUXV1T0VTNkpUZGpIcXZnZ3dvM2pTci9xd0plQgpnMVE5T1RJYUlRa0VjSFlVLzIydnhzaW15aFJaVk9VWnN5NFZLdUtQSmh6dEE5NDBEMWcraHA0cVhFR1JFcUUvCkE4UGRZTjNKWmM0dDd3SUViejBEUWVCTDBndkVFdFhMNXE1eVFTRzIrVExZOW1ydEFnTUJBQUdqZFRCek1BNEcKQTFVZER3RUIvd1FFQXdJRm9EQVRCZ05WSFNVRUREQUtCZ2dyQmdFRkJRY0RBakFNQmdOVkhSTUJBZjhFQWpBQQpNQjBHQTFVZERnUVdCQlQzcnhSaS9KSndKK3kvSW5wbSsyeHV4dUpoTURBZkJnTlZIU01FR0RBV2dCUkZZdXZVCittM3MzYWpXZTZyeGIrejJSNWVIbFRBTkJna3Foa2lHOXcwQkFRc0ZBQU9DQVFFQWZHMS96QmlvenNwREtSTHkKSHRTWXdOWHFqT2pNWkZUbVZvRktqVEpJTktwYXpFeFFzQkZJTlEzYU13bmoxcTFmM2tta01hR1c5Y2hzbWlZMgp2WjN3cXB2S0UwUXdqUXgvcDJaUmpRSXVlWlAvT0ZVbzkzQ2VZcXVQWmt1bHhlTjErTnRqc0hobDBOS2FFMU8xCkFzMHlGWEh4VzVQWEhDNlkranEwd3cwZU9EVGFOV2EveHhCMnM2UUlMb3FpVXdkQWFqdWc5N0ptb0c5YTJ6RGIKd0ZHRk5YbEV6VXcxZHVRSjhXR0R3Rld2MWJmN0xYdEhIdUdNa2g4VkgvVHRoR20yVzA5QVVMTE9LQXRLcXFSZgpydlZoOGkxeVBCanI2cjRLSHFteHlCZXRndEF6VTNsVUl5VWNBWGlwd2V3ZUZiTEdZQzRmcFBMRjhsMkt6NGZiCjR3QUVUdz09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K",
        "KeyRaw": "LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBc2ZmZHlJeVBpbDFZdUM1WTlJQ3ZTY2g0S2pkVWVGOXN6MExvaXkzdzQ0ZGJJbytjCnk3d3JwdG1rTzZBN0VrdkZDZDhwajR3dHdTMDJQNEVGQVIzREIxWG1mTjVQRmpGMkhyZFFVYVdoSmhMMFZLUWoKeDZLUnh5eVVTYmJzTm5yUTd6VmovWmJTRU1mRDFQaDZRRDBRa2lIYkszRUsrMVp0SWwrZnBQMTVTbWJ6dEdTcgoyQzQwYjNuU1daNXhuSHhDQ0lLTkFQQUVBRUxyamhFdWlVM1l4NnI0SU1LTjQwcS82c0NYZ1lOVVBUa3lHaUVKCkJIQjJGUDl0cjhiSXBzb1VXVlRsR2JNdUZTcmlqeVljN1FQZU5BOVlQb2FlS2x4QmtSS2hQd1BEM1dEZHlXWE8KTGU4Q0JHODlBMEhnUzlJTHhCTFZ5K2F1Y2tFaHR2a3kyUFpxN1FJREFRQUJBb0lCQVFDYnlsbHhwK28zdTROZwpwK0hqRjR0YTBZeXZtQVB2NDhrQ25wV20wSzZnM3VxZWxJMHpwQ09xU2JlRklyelRSVlRWVVcrMlk0WGlKMHZuCngyKzBESE9meGtpZ1lwTms0Q09BdkFRcGxRNCtvRFVXcXlGUEx6YmgzbHBwTlNJT2h2RERsajlUekdWVG55d0YKRVFjam1ORWF1MXg2Nk5ndU1QZ1VNUlUxZjFaZ0U4Mnd3MVpCOWdGaEtwSDZ3ei92a0RlM0lOcEl5NGc2M0hDTgpCaTZKNndWb2ttekZ2OVJ6Uy9OdG52T05jbHRnSTd2U3pmS2xzWmFLWWRwZTZVRG1aQzBEV3k1bTBGdTdWS2pFCjNMWmJuMVAxdXBycm45VGFaYW1ONHFGYy94SGEvVjhCYXBwN2U5aUpSU05saXRIc3U5cC9wS2RCWWtlRzFodnUKakpUc0dyT0JBb0dCQU4wRmJ6SlZMc0h3aStZd0dvamx6ZEgvNTRkbTh1dlhLZEltNzc3ZTJWbEErbGczcnJ3NAp0T2hCcER0WW0xVEh0Mk9NSHp4OUxDckF0Z1I2MVowWHFNa3ZLL0Z0NE91T2pMT2ZNQ09PRlZiaVZzSnRQY2pkClFWTHIrSUhJV2lIekR3NXZhYXlZRXlHamJRcGk0d1YxMXk3Y1JMUi91YW8vR0ZnNEFObjZvU1RkQW9HQkFNNGkKS1RicFByVU11UE5KYzE1b0YySmtGRk9mRExkMktJaElsbTREck81Ukp3ZDgyeDdnVmdDSEpIQzg2MzRkR0lQMgpETmROU0hoS2g4N1JhdDJtU3hiK2R2SEFudm9qOGxVT1huZEd5dFVWTTRrWEVpalEzVlhabzlCWElWNTQ3OXE2CkROc3dOMHlhQjJGRFVvemZpZ0c5UDNldjBmdHduWCtrZ1I0ck9EVlJBb0dBUG8xdkx4dVVwQ2JrTVQya0JPS2wKSWEzL1pQN3ArWDFueEtab2EraStNdGlGQWJxZ3BYeVhGclNkT242VlY2VStiZG9XYlJRd0Q5bUNxam5wZ3hCVApJTDFNL29OT2lOeExUZnJic1BSaGJibVpQR1dXZXViRHVpZzJxT1IvUGVTQWVtRmwwd2NuUXZueHZtTEdSYUZZClNWYmx5di9yR0JmTFdBeGhrVSt4azdFQ2dZQS9vRkhDYmtwNXpmeUVzK1pWZktIRE1Bc0tLS3pmTUN5Z3JHOHEKZEIzN3piYlRXOW15OVNIMnRjQXN3Rk9jTU5UeFhwQm1JS2UrNFpwNzN5NHlUbk1kSE55UUVKbkJzampKd2s2cwpXSUNoTnhNYVBMSFJRVzhnWWJacng0azRSUEljUEpOZFVNdXc3RlpjMGsvM3hjUXVkMERRNjhkUDZsbmpIVjd4CmRmdTZrUUtCZ0NyS1Vzb0xUR2VJVUo3MFpQcER3ZHdZT1MvZkJ2YVFGcHIyajFSZW45blZWVzhVQnV4dnFJTFIKU1pQZ0lYQjRQZnNuVEZjNzhxSkFmc1dxUTBLT2I1c21QVVZCOEkzeitJMmgzbDZIVDBjcXFucjMxUy9NOVljagp5eFA3a1oxdVZOWmZhQXQ5dXhQMFFQbHFvSlVqWHFkcE9Na1ljSWFOc1BRcHV3bVlValRCCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==",
        "FileList": [
            {
                "Filename": "tls/kubelet-client.key",
                "Data": "LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBc2ZmZHlJeVBpbDFZdUM1WTlJQ3ZTY2g0S2pkVWVGOXN6MExvaXkzdzQ0ZGJJbytjCnk3d3JwdG1rTzZBN0VrdkZDZDhwajR3dHdTMDJQNEVGQVIzREIxWG1mTjVQRmpGMkhyZFFVYVdoSmhMMFZLUWoKeDZLUnh5eVVTYmJzTm5yUTd6VmovWmJTRU1mRDFQaDZRRDBRa2lIYkszRUsrMVp0SWwrZnBQMTVTbWJ6dEdTcgoyQzQwYjNuU1daNXhuSHhDQ0lLTkFQQUVBRUxyamhFdWlVM1l4NnI0SU1LTjQwcS82c0NYZ1lOVVBUa3lHaUVKCkJIQjJGUDl0cjhiSXBzb1VXVlRsR2JNdUZTcmlqeVljN1FQZU5BOVlQb2FlS2x4QmtSS2hQd1BEM1dEZHlXWE8KTGU4Q0JHODlBMEhnUzlJTHhCTFZ5K2F1Y2tFaHR2a3kyUFpxN1FJREFRQUJBb0lCQVFDYnlsbHhwK28zdTROZwpwK0hqRjR0YTBZeXZtQVB2NDhrQ25wV20wSzZnM3VxZWxJMHpwQ09xU2JlRklyelRSVlRWVVcrMlk0WGlKMHZuCngyKzBESE9meGtpZ1lwTms0Q09BdkFRcGxRNCtvRFVXcXlGUEx6YmgzbHBwTlNJT2h2RERsajlUekdWVG55d0YKRVFjam1ORWF1MXg2Nk5ndU1QZ1VNUlUxZjFaZ0U4Mnd3MVpCOWdGaEtwSDZ3ei92a0RlM0lOcEl5NGc2M0hDTgpCaTZKNndWb2ttekZ2OVJ6Uy9OdG52T05jbHRnSTd2U3pmS2xzWmFLWWRwZTZVRG1aQzBEV3k1bTBGdTdWS2pFCjNMWmJuMVAxdXBycm45VGFaYW1ONHFGYy94SGEvVjhCYXBwN2U5aUpSU05saXRIc3U5cC9wS2RCWWtlRzFodnUKakpUc0dyT0JBb0dCQU4wRmJ6SlZMc0h3aStZd0dvamx6ZEgvNTRkbTh1dlhLZEltNzc3ZTJWbEErbGczcnJ3NAp0T2hCcER0WW0xVEh0Mk9NSHp4OUxDckF0Z1I2MVowWHFNa3ZLL0Z0NE91T2pMT2ZNQ09PRlZiaVZzSnRQY2pkClFWTHIrSUhJV2lIekR3NXZhYXlZRXlHamJRcGk0d1YxMXk3Y1JMUi91YW8vR0ZnNEFObjZvU1RkQW9HQkFNNGkKS1RicFByVU11UE5KYzE1b0YySmtGRk9mRExkMktJaElsbTREck81Ukp3ZDgyeDdnVmdDSEpIQzg2MzRkR0lQMgpETmROU0hoS2g4N1JhdDJtU3hiK2R2SEFudm9qOGxVT1huZEd5dFVWTTRrWEVpalEzVlhabzlCWElWNTQ3OXE2CkROc3dOMHlhQjJGRFVvemZpZ0c5UDNldjBmdHduWCtrZ1I0ck9EVlJBb0dBUG8xdkx4dVVwQ2JrTVQya0JPS2wKSWEzL1pQN3ArWDFueEtab2EraStNdGlGQWJxZ3BYeVhGclNkT242VlY2VStiZG9XYlJRd0Q5bUNxam5wZ3hCVApJTDFNL29OT2lOeExUZnJic1BSaGJibVpQR1dXZXViRHVpZzJxT1IvUGVTQWVtRmwwd2NuUXZueHZtTEdSYUZZClNWYmx5di9yR0JmTFdBeGhrVSt4azdFQ2dZQS9vRkhDYmtwNXpmeUVzK1pWZktIRE1Bc0tLS3pmTUN5Z3JHOHEKZEIzN3piYlRXOW15OVNIMnRjQXN3Rk9jTU5UeFhwQm1JS2UrNFpwNzN5NHlUbk1kSE55UUVKbkJzampKd2s2cwpXSUNoTnhNYVBMSFJRVzhnWWJacng0azRSUEljUEpOZFVNdXc3RlpjMGsvM3hjUXVkMERRNjhkUDZsbmpIVjd4CmRmdTZrUUtCZ0NyS1Vzb0xUR2VJVUo3MFpQcER3ZHdZT1MvZkJ2YVFGcHIyajFSZW45blZWVzhVQnV4dnFJTFIKU1pQZ0lYQjRQZnNuVEZjNzhxSkFmc1dxUTBLT2I1c21QVVZCOEkzeitJMmgzbDZIVDBjcXFucjMxUy9NOVljagp5eFA3a1oxdVZOWmZhQXQ5dXhQMFFQbHFvSlVqWHFkcE9Na1ljSWFOc1BRcHV3bVlValRCCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg=="
            },
            {
                "Filename": "tls/kubelet-client.crt",
                "Data": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUQ4RENDQXRpZ0F3SUJBZ0lJUmtxWC91T1JCOHN3RFFZSktvWklodmNOQVFFTEJRQXdRakVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1Td3dLZ1lEVlFRREV5TnJkV0psYkdWMExXSnZiM1J6ZEhKaGNDMXJkV0psWTI5dQpabWxuTFhOcFoyNWxjakFlRncweU16QTBNVGd4TXpBNE1UQmFGdzB6TXpBME1UVXhNekE0TVRCYU1JRzJNV0F3CkhRWURWUVFLRXhaemVYTjBaVzA2YzJWeWRtbGpaV0ZqWTI5MWJuUnpNRDhHQTFVRUNoTTRjM2x6ZEdWdE9uTmwKY25acFkyVmhZMk52ZFc1MGN6cHZjR1Z1YzJocFpuUXRiV0ZqYUdsdVpTMWpiMjVtYVdjdGIzQmxjbUYwYjNJeApVakJRQmdOVkJBTVRTWE41YzNSbGJUcHpaWEoyYVdObFlXTmpiM1Z1ZERwdmNHVnVjMmhwWm5RdGJXRmphR2x1ClpTMWpiMjVtYVdjdGIzQmxjbUYwYjNJNmJtOWtaUzFpYjI5MGMzUnlZWEJ3WlhJd2dnRWlNQTBHQ1NxR1NJYjMKRFFFQkFRVUFBNElCRHdBd2dnRUtBb0lCQVFDeDk5M0lqSStLWFZpNExsajBnSzlKeUhncU4xUjRYMnpQUXVpTApMZkRqaDFzaWo1ekx2Q3VtMmFRN29Ec1NTOFVKM3ltUGpDM0JMVFkvZ1FVQkhjTUhWZVo4M2s4V01YWWV0MUJSCnBhRW1FdlJVcENQSG9wSEhMSlJKdHV3MmV0RHZOV1A5bHRJUXg4UFUrSHBBUFJDU0lkc3JjUXI3Vm0waVg1K2sKL1hsS1p2TzBaS3ZZTGpSdmVkSlpubkdjZkVJSWdvMEE4QVFBUXV1T0VTNkpUZGpIcXZnZ3dvM2pTci9xd0plQgpnMVE5T1RJYUlRa0VjSFlVLzIydnhzaW15aFJaVk9VWnN5NFZLdUtQSmh6dEE5NDBEMWcraHA0cVhFR1JFcUUvCkE4UGRZTjNKWmM0dDd3SUViejBEUWVCTDBndkVFdFhMNXE1eVFTRzIrVExZOW1ydEFnTUJBQUdqZFRCek1BNEcKQTFVZER3RUIvd1FFQXdJRm9EQVRCZ05WSFNVRUREQUtCZ2dyQmdFRkJRY0RBakFNQmdOVkhSTUJBZjhFQWpBQQpNQjBHQTFVZERnUVdCQlQzcnhSaS9KSndKK3kvSW5wbSsyeHV4dUpoTURBZkJnTlZIU01FR0RBV2dCUkZZdXZVCittM3MzYWpXZTZyeGIrejJSNWVIbFRBTkJna3Foa2lHOXcwQkFRc0ZBQU9DQVFFQWZHMS96QmlvenNwREtSTHkKSHRTWXdOWHFqT2pNWkZUbVZvRktqVEpJTktwYXpFeFFzQkZJTlEzYU13bmoxcTFmM2tta01hR1c5Y2hzbWlZMgp2WjN3cXB2S0UwUXdqUXgvcDJaUmpRSXVlWlAvT0ZVbzkzQ2VZcXVQWmt1bHhlTjErTnRqc0hobDBOS2FFMU8xCkFzMHlGWEh4VzVQWEhDNlkranEwd3cwZU9EVGFOV2EveHhCMnM2UUlMb3FpVXdkQWFqdWc5N0ptb0c5YTJ6RGIKd0ZHRk5YbEV6VXcxZHVRSjhXR0R3Rld2MWJmN0xYdEhIdUdNa2g4VkgvVHRoR20yVzA5QVVMTE9LQXRLcXFSZgpydlZoOGkxeVBCanI2cjRLSHFteHlCZXRndEF6VTNsVUl5VWNBWGlwd2V3ZUZiTEdZQzRmcFBMRjhsMkt6NGZiCjR3QUVUdz09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K"
            }
        ]
    },
    "*tls.KubeletServingCABundle": {
        "BundleRaw": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURIakNDQWdhZ0F3SUJBZ0lJSVNGYVllQ0YrekV3RFFZSktvWklodmNOQVFFTEJRQXdMVEVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1SY3dGUVlEVlFRREV3NXJkV0psYkdWMExYTnBaMjVsY2pBZUZ3MHlNekEwTVRneApNekE0TVRSYUZ3MHlNekEwTVRreE16QTRNVFJhTUMweEVqQVFCZ05WQkFzVENXOXdaVzV6YUdsbWRERVhNQlVHCkExVUVBeE1PYTNWaVpXeGxkQzF6YVdkdVpYSXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCRHdBd2dnRUsKQW9JQkFRQ1ltVFNESVh1eVNNbDhVOElkemxOVFNTaFgvWHRnVThXTzFaYXg0NEtEL0ttbnVSbWpnSEVDWW01bQpzQmFENFNUZ3F6a1BPRmltZ1VnV0lwSTJ3eithVlZxUU45TUt5VFgxVnliaGNvN1ZqN1JJSDRuRjFZMHIyRkFmCi9kLzlYYjZlRmFSOXZKSVFUYjMwL25TTnpmTzV1TTYyQnAwKzFvVnlvaUx0ZGljMlpKODNDNnFseVI1YjZId1IKUnl2ODNTeGNMWWlhekNvS0JNYXdQQTc1YWxVNGhNQVJvRnNrVkxEMjdWWW8yL0pyeUhIN2QxNzdHNW5RS2NrUApKTjZkbURWZXN1SWtDdzNpRkpzSyt0Nld6NW5xTnRtVS9saE1hWVNxK0lXMHlWRFRWcHZManRKYjZwZ3JZZ3JxCkZCM0lwV2kvL3ZOQnpsMjF5Qk9iSC9pbmhDb1pBZ01CQUFHalFqQkFNQTRHQTFVZER3RUIvd1FFQXdJQ3BEQVAKQmdOVkhSTUJBZjhFQlRBREFRSC9NQjBHQTFVZERnUVdCQlM2amF3cWpTb01yNExLbUkzMVhTV2hTVllKdGpBTgpCZ2txaGtpRzl3MEJBUXNGQUFPQ0FRRUFoYVV0QkdjRjJicjNvWGNOOUdFQ0cwMWtlZ3Z3c01vdEUvZkpDVHhXCisvN0xzZ1JJY3ZJYnZqTk1GVFZWM1JGVy9aYXpidjREbWJtdTNJdG1FU0RiWXJtdU1YNVNZZDJTNngyNGNCdUMKTmJOVVE2QkZ6ZTF6Q2RLRmxVTHdHeE5NYS9zendBa3BmRUd6TzkrWjBUQUY5eU9yM2tRL204R2pzZTlFRkNsWApLL25BVThYeko3U1VrZXE1S0Z0b3h5NHFvR1hNWWphNktDWGNuYUpqclJTcWdvY0NCL1dwenlMLzc2VFcrYnZ0CjNCdDEzeUs2Y2x0cTJmVWdMdUxibDJ5WXU5MXRmakx3YUg1ZlI2UE1wb3Y0YTBCeUt3KytVa2VBbHp2cmNMTXMKY3hpVWZRVVV1ak9vdGJDRzlxSGtBNmk4NExCR2Y2RnBLSXlWUWJ2eTJxSWMvdz09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K",
        "FileList": [
            {
                "Filename": "tls/kubelet-serving-ca-bundle.crt",
                "Data": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURIakNDQWdhZ0F3SUJBZ0lJSVNGYVllQ0YrekV3RFFZSktvWklodmNOQVFFTEJRQXdMVEVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1SY3dGUVlEVlFRREV3NXJkV0psYkdWMExYTnBaMjVsY2pBZUZ3MHlNekEwTVRneApNekE0TVRSYUZ3MHlNekEwTVRreE16QTRNVFJhTUMweEVqQVFCZ05WQkFzVENXOXdaVzV6YUdsbWRERVhNQlVHCkExVUVBeE1PYTNWaVpXeGxkQzF6YVdkdVpYSXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCRHdBd2dnRUsKQW9JQkFRQ1ltVFNESVh1eVNNbDhVOElkemxOVFNTaFgvWHRnVThXTzFaYXg0NEtEL0ttbnVSbWpnSEVDWW01bQpzQmFENFNUZ3F6a1BPRmltZ1VnV0lwSTJ3eithVlZxUU45TUt5VFgxVnliaGNvN1ZqN1JJSDRuRjFZMHIyRkFmCi9kLzlYYjZlRmFSOXZKSVFUYjMwL25TTnpmTzV1TTYyQnAwKzFvVnlvaUx0ZGljMlpKODNDNnFseVI1YjZId1IKUnl2ODNTeGNMWWlhekNvS0JNYXdQQTc1YWxVNGhNQVJvRnNrVkxEMjdWWW8yL0pyeUhIN2QxNzdHNW5RS2NrUApKTjZkbURWZXN1SWtDdzNpRkpzSyt0Nld6NW5xTnRtVS9saE1hWVNxK0lXMHlWRFRWcHZManRKYjZwZ3JZZ3JxCkZCM0lwV2kvL3ZOQnpsMjF5Qk9iSC9pbmhDb1pBZ01CQUFHalFqQkFNQTRHQTFVZER3RUIvd1FFQXdJQ3BEQVAKQmdOVkhSTUJBZjhFQlRBREFRSC9NQjBHQTFVZERnUVdCQlM2amF3cWpTb01yNExLbUkzMVhTV2hTVllKdGpBTgpCZ2txaGtpRzl3MEJBUXNGQUFPQ0FRRUFoYVV0QkdjRjJicjNvWGNOOUdFQ0cwMWtlZ3Z3c01vdEUvZkpDVHhXCisvN0xzZ1JJY3ZJYnZqTk1GVFZWM1JGVy9aYXpidjREbWJtdTNJdG1FU0RiWXJtdU1YNVNZZDJTNngyNGNCdUMKTmJOVVE2QkZ6ZTF6Q2RLRmxVTHdHeE5NYS9zendBa3BmRUd6TzkrWjBUQUY5eU9yM2tRL204R2pzZTlFRkNsWApLL25BVThYeko3U1VrZXE1S0Z0b3h5NHFvR1hNWWphNktDWGNuYUpqclJTcWdvY0NCL1dwenlMLzc2VFcrYnZ0CjNCdDEzeUs2Y2x0cTJmVWdMdUxibDJ5WXU5MXRmakx3YUg1ZlI2UE1wb3Y0YTBCeUt3KytVa2VBbHp2cmNMTXMKY3hpVWZRVVV1ak9vdGJDRzlxSGtBNmk4NExCR2Y2RnBLSXlWUWJ2eTJxSWMvdz09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K"
            }
        ]
    },
    "*tls.MCSCertKey": {
        "CertRaw": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURjakNDQWxxZ0F3SUJBZ0lJQXhqOHk0bWRjakl3RFFZSktvWklodmNOQVFFTEJRQXdKakVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1SQXdEZ1lEVlFRREV3ZHliMjkwTFdOaE1CNFhEVEl6TURReE9ERXpNRGd3T1ZvWApEVE16TURReE5URXpNRGd3T1Zvd0p6RWxNQ01HQTFVRUF4TWNjM2x6ZEdWdE9tMWhZMmhwYm1VdFkyOXVabWxuCkxYTmxjblpsY2pDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBUGVsYThpVVdoWmgKdHVpa3g3TVJQVjg5a3Z1Uk1qNmx6bmkzYUJ3alpRWXQvcDVzU2RmUE5halpIYmdNMHdSTnRCWGpFbHZGZkpLSApqY1dGS29OS3BFQWxjVTN4a2trbzRtdmZvWEdoaFBIYTYvcktmeXZnWHJENzVtbVZaejRZNUx3ak9DQ3NMQ1AvCkNWY2podWJsRzFWUTlNbS9jTGcwZEM0SGRqQUNrVVpydXo4NnZWVTd3SWRwMWNmOExkMUNPUVQ2Q3d3QzJyVWkKRFpnaG90aFV0dVZXWUVaZEM1ZWFXV1pNcTducFVpdC9weXBKRUkxelVUUDlNS2tZc0RKR0ZkOEVmR013eGFFbwpLeGcyQlFJcGZDd3U3aG1CZHFTQW5xNi9veG1zNUFGNlhtOWNNTnJRQmpYOWF0UUJiRVIzS0ljSmdaVWZHcFc5CklLalhSL21EaGE4Q0F3RUFBYU9Cb2pDQm56QVRCZ05WSFNVRUREQUtCZ2dyQmdFRkJRY0RBVEFNQmdOVkhSTUIKQWY4RUFqQUFNQjBHQTFVZERnUVdCQlE4TW5YaTJKUVVreUpYOHRxN2lCZjNsK2V2OERBZkJnTlZIU01FR0RBVwpnQlI3aVRKUEV3VFlxcFM5L3Vmc0o3d2x2azV2Q1RBNkJnTlZIUkVFTXpBeGdpOWhjR2t0YVc1MExuSmxaSEJ2ClpDMWhkM010YzI1dkxtUmxkbU5zZFhOMFpYSXViM0JsYm5Ob2FXWjBMbU52YlRBTkJna3Foa2lHOXcwQkFRc0YKQUFPQ0FRRUFXNWJwaGpBdUg4YW1pLy9oeWJhWnlVVzZqTXI3OXlvZDg5b0hJRGRRd2dEV2dUekEraENydUJvcQo3cmdlN3ViOWlFMzZzb2xSMHRpcTJyWWpxaE1ucFRjcGtOQnRkU2hHNEJyMGRCRG50VFYrbDI1ZGhCRmN1L0F0CmxGK0p0aEk2ZzN0bW5TZnkrN092bU16MXlIWFZrTDltVGV0WmU0UDNmVGFjUCtyNDQ0aGE0aFNIU2xCOHdzc3QKOHNGYWNFSzcvNmc3dlhaTldWUUQwbCt6UjdFc1pVZkVpOEVoOWJLWGhjOGl4Z3NleWZXN2hiQkpBK1BVZ0VvVAovSmNVWm9pZFkvbGRpWG0wREJkbUlSRVBNV0pKcGlGVmpkcHBzb0lpZ3JUeDQrYmJMbUE3clhkMnloN3ZZNitWCmdmMzZEbDJzTnFocXFhazhKcnQ3U3FwMlB0T2xMQT09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K",
        "KeyRaw": "LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcGdJQkFBS0NBUUVBOTZWcnlKUmFGbUcyNktUSHN4RTlYejJTKzVFeVBxWE9lTGRvSENObEJpMytubXhKCjE4ODFxTmtkdUF6VEJFMjBGZU1TVzhWOGtvZU54WVVxZzBxa1FDVnhUZkdTU1NqaWE5K2hjYUdFOGRycitzcC8KSytCZXNQdm1hWlZuUGhqa3ZDTTRJS3dzSS84SlZ5T0c1dVViVlZEMHliOXd1RFIwTGdkMk1BS1JSbXU3UHpxOQpWVHZBaDJuVngvd3QzVUk1QlBvTERBTGF0U0lObUNHaTJGUzI1VlpnUmwwTGw1cFpaa3lydWVsU0szK25La2tRCmpYTlJNLzB3cVJpd01rWVYzd1I4WXpERm9TZ3JHRFlGQWlsOExDN3VHWUYycElDZXJyK2pHYXprQVhwZWIxd3cKMnRBR05mMXExQUZzUkhjb2h3bUJsUjhhbGIwZ3FOZEgrWU9GcndJREFRQUJBb0lCQVFETTU3Q2hEQzdtS2YrLwp5dWY1Z0NBNXQ2YndSQmxBd014d0VjRXcxeEIxNW9TdzdJVEU3Z3hHSXk5MTVCYU5qd1djdm4rb00yVjVrSE43CnBVMmh5SmJUQktnVmgvWTBWb0hTSS8xZkdmZjRiZDJuYXZtQ2dtbVhJelpvMGxmVWg2QnJFdkVVQjZHV1B5V3AKVmhuKzNqNlpmeHlyK1p6NHJWNGIzOHlvdU5jZlhjK2xLOGo4ZE8wYXNveEtVUndzOUliaml5cnVkY3FxOHdubQo3VDJJcW01ZHNWbkRpQ3QzT1krT2tQN0QzclFOMUsxYnFSNDdweGExdHQwdDRCaDR1Zk04SjlQL0lnR09KaGRWClZUTGxlYTNMQnUwckdGTmJUUnMycmJ3b2tpaGlBRHRVZVNsR1hRcEo0VjlvYXErUGp6UXVXejFFTFJwaHVEbkkKVEFqMWNDdVJBb0dCQVBrbVZNQkE4L0lOdGx5SXhKaWFPVWIyMFZ5em8zdHpwS3V6aW1uRzhRZGIvVUpPSFdBcwpIcWREMERnZ2hBTEVWaGFiMVBJVHdZS2UrWDlMQWhrcjBXdEhIUW5teUk4VGw4S1EwenhOYWM0K3lXS3VxSEdwCnVkRi9xSmxlR0hUb3VGV0FPdWs5dzN3TlFOaXZWZkpqcnNhODZkV2pZVUI1aHVRaGdhTTUyTzRqQW9HQkFQNTAKZ2N5VmlwbmdRSHdWdTJHUkdRa09PL01vOWdYVDFRbWV3eEc1UklnaWRkbitLMHh2d1d2S25kblhsNnlKTjFEbApxckd3MjVPVnUra3FncDBqeFdMTDBnZzR0N1lRNU9EcXAvdXJyQndTN3p4ZzZzdnFBOUFqNm1sTmlEL1VXUmN5CmxNR1QzRWRhVmp1VytVdi9scGlCLzlEMXBocFNOU1M5NjE1SktoVUZBb0dCQUp3UDZZaGZaeTZZYmtFNkhrTWsKWDNwWEFqOVorcTVLZXJ4ZWd2WE0rbzlNaksvcXREWFlqUDdpMkZzLzZ0Qzg0TnZha3FGcnhJdW9Qc29BVnZragpYRk1oUVV4QmRpRkErWStUSGUybzQveWZrWSt4cmFzODBEc3RCcFBDdi9rRENPdnRuWGthQ2dmN1dVSWhXZW14CmpQbkp2WUxuaXZSUzZ5NmMybEkrMnVZWEFvR0JBTlJiR3pCSDVRSUNXdzZ6ZkV3eXNiZ1Mvd2t4dUJDbzl2UXUKWVJIYmtrd2lwa1Fsa0xFYjIwcEFNSGhyS3BPOWVFSzFTVDArSWlJTEptV3pLb3BHSGljVGZ0ZUpyaGZ1QlhXSApvR1d5b2RKVUl3QTZ5ZmtmOWNxeERxS1BLQlJNL1lVVW0zenFEejRsTUM1UEV3TFA3VGlkMVlib1c1VS80a1lsCmtkYUFMUFNaQW9HQkFNRXpkc2ZjNXB6dk5mVk1mQjd4NnZ0dFR5dXcvb1RNeTdBWnBTRmh2K2Z4aTdNQ1NhUGwKNWdHQWdaWHBvNExJUUV6VU41VEhWZ2pjcFZIMzF2ZnhqU1JhTTR1eFdSdXk3RXJ1K1hjZGNJS0FxdDN3UWcvbQpjdld1WURkemJiNStldTFTbzZocXcvVXBVS0ZrdkttQ20rTytFS1hRcW9pRnRvUlcyOVlqaFFHMQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=",
        "FileList": [
            {
                "Filename": "tls/machine-config-server.key",
                "Data": "LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcGdJQkFBS0NBUUVBOTZWcnlKUmFGbUcyNktUSHN4RTlYejJTKzVFeVBxWE9lTGRvSENObEJpMytubXhKCjE4ODFxTmtkdUF6VEJFMjBGZU1TVzhWOGtvZU54WVVxZzBxa1FDVnhUZkdTU1NqaWE5K2hjYUdFOGRycitzcC8KSytCZXNQdm1hWlZuUGhqa3ZDTTRJS3dzSS84SlZ5T0c1dVViVlZEMHliOXd1RFIwTGdkMk1BS1JSbXU3UHpxOQpWVHZBaDJuVngvd3QzVUk1QlBvTERBTGF0U0lObUNHaTJGUzI1VlpnUmwwTGw1cFpaa3lydWVsU0szK25La2tRCmpYTlJNLzB3cVJpd01rWVYzd1I4WXpERm9TZ3JHRFlGQWlsOExDN3VHWUYycElDZXJyK2pHYXprQVhwZWIxd3cKMnRBR05mMXExQUZzUkhjb2h3bUJsUjhhbGIwZ3FOZEgrWU9GcndJREFRQUJBb0lCQVFETTU3Q2hEQzdtS2YrLwp5dWY1Z0NBNXQ2YndSQmxBd014d0VjRXcxeEIxNW9TdzdJVEU3Z3hHSXk5MTVCYU5qd1djdm4rb00yVjVrSE43CnBVMmh5SmJUQktnVmgvWTBWb0hTSS8xZkdmZjRiZDJuYXZtQ2dtbVhJelpvMGxmVWg2QnJFdkVVQjZHV1B5V3AKVmhuKzNqNlpmeHlyK1p6NHJWNGIzOHlvdU5jZlhjK2xLOGo4ZE8wYXNveEtVUndzOUliaml5cnVkY3FxOHdubQo3VDJJcW01ZHNWbkRpQ3QzT1krT2tQN0QzclFOMUsxYnFSNDdweGExdHQwdDRCaDR1Zk04SjlQL0lnR09KaGRWClZUTGxlYTNMQnUwckdGTmJUUnMycmJ3b2tpaGlBRHRVZVNsR1hRcEo0VjlvYXErUGp6UXVXejFFTFJwaHVEbkkKVEFqMWNDdVJBb0dCQVBrbVZNQkE4L0lOdGx5SXhKaWFPVWIyMFZ5em8zdHpwS3V6aW1uRzhRZGIvVUpPSFdBcwpIcWREMERnZ2hBTEVWaGFiMVBJVHdZS2UrWDlMQWhrcjBXdEhIUW5teUk4VGw4S1EwenhOYWM0K3lXS3VxSEdwCnVkRi9xSmxlR0hUb3VGV0FPdWs5dzN3TlFOaXZWZkpqcnNhODZkV2pZVUI1aHVRaGdhTTUyTzRqQW9HQkFQNTAKZ2N5VmlwbmdRSHdWdTJHUkdRa09PL01vOWdYVDFRbWV3eEc1UklnaWRkbitLMHh2d1d2S25kblhsNnlKTjFEbApxckd3MjVPVnUra3FncDBqeFdMTDBnZzR0N1lRNU9EcXAvdXJyQndTN3p4ZzZzdnFBOUFqNm1sTmlEL1VXUmN5CmxNR1QzRWRhVmp1VytVdi9scGlCLzlEMXBocFNOU1M5NjE1SktoVUZBb0dCQUp3UDZZaGZaeTZZYmtFNkhrTWsKWDNwWEFqOVorcTVLZXJ4ZWd2WE0rbzlNaksvcXREWFlqUDdpMkZzLzZ0Qzg0TnZha3FGcnhJdW9Qc29BVnZragpYRk1oUVV4QmRpRkErWStUSGUybzQveWZrWSt4cmFzODBEc3RCcFBDdi9rRENPdnRuWGthQ2dmN1dVSWhXZW14CmpQbkp2WUxuaXZSUzZ5NmMybEkrMnVZWEFvR0JBTlJiR3pCSDVRSUNXdzZ6ZkV3eXNiZ1Mvd2t4dUJDbzl2UXUKWVJIYmtrd2lwa1Fsa0xFYjIwcEFNSGhyS3BPOWVFSzFTVDArSWlJTEptV3pLb3BHSGljVGZ0ZUpyaGZ1QlhXSApvR1d5b2RKVUl3QTZ5ZmtmOWNxeERxS1BLQlJNL1lVVW0zenFEejRsTUM1UEV3TFA3VGlkMVlib1c1VS80a1lsCmtkYUFMUFNaQW9HQkFNRXpkc2ZjNXB6dk5mVk1mQjd4NnZ0dFR5dXcvb1RNeTdBWnBTRmh2K2Z4aTdNQ1NhUGwKNWdHQWdaWHBvNExJUUV6VU41VEhWZ2pjcFZIMzF2ZnhqU1JhTTR1eFdSdXk3RXJ1K1hjZGNJS0FxdDN3UWcvbQpjdld1WURkemJiNStldTFTbzZocXcvVXBVS0ZrdkttQ20rTytFS1hRcW9pRnRvUlcyOVlqaFFHMQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo="
            },
            {
                "Filename": "tls/machine-config-server.crt",
                "Data": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURjakNDQWxxZ0F3SUJBZ0lJQXhqOHk0bWRjakl3RFFZSktvWklodmNOQVFFTEJRQXdKakVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1SQXdEZ1lEVlFRREV3ZHliMjkwTFdOaE1CNFhEVEl6TURReE9ERXpNRGd3T1ZvWApEVE16TURReE5URXpNRGd3T1Zvd0p6RWxNQ01HQTFVRUF4TWNjM2x6ZEdWdE9tMWhZMmhwYm1VdFkyOXVabWxuCkxYTmxjblpsY2pDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBUGVsYThpVVdoWmgKdHVpa3g3TVJQVjg5a3Z1Uk1qNmx6bmkzYUJ3alpRWXQvcDVzU2RmUE5halpIYmdNMHdSTnRCWGpFbHZGZkpLSApqY1dGS29OS3BFQWxjVTN4a2trbzRtdmZvWEdoaFBIYTYvcktmeXZnWHJENzVtbVZaejRZNUx3ak9DQ3NMQ1AvCkNWY2podWJsRzFWUTlNbS9jTGcwZEM0SGRqQUNrVVpydXo4NnZWVTd3SWRwMWNmOExkMUNPUVQ2Q3d3QzJyVWkKRFpnaG90aFV0dVZXWUVaZEM1ZWFXV1pNcTducFVpdC9weXBKRUkxelVUUDlNS2tZc0RKR0ZkOEVmR013eGFFbwpLeGcyQlFJcGZDd3U3aG1CZHFTQW5xNi9veG1zNUFGNlhtOWNNTnJRQmpYOWF0UUJiRVIzS0ljSmdaVWZHcFc5CklLalhSL21EaGE4Q0F3RUFBYU9Cb2pDQm56QVRCZ05WSFNVRUREQUtCZ2dyQmdFRkJRY0RBVEFNQmdOVkhSTUIKQWY4RUFqQUFNQjBHQTFVZERnUVdCQlE4TW5YaTJKUVVreUpYOHRxN2lCZjNsK2V2OERBZkJnTlZIU01FR0RBVwpnQlI3aVRKUEV3VFlxcFM5L3Vmc0o3d2x2azV2Q1RBNkJnTlZIUkVFTXpBeGdpOWhjR2t0YVc1MExuSmxaSEJ2ClpDMWhkM010YzI1dkxtUmxkbU5zZFhOMFpYSXViM0JsYm5Ob2FXWjBMbU52YlRBTkJna3Foa2lHOXcwQkFRc0YKQUFPQ0FRRUFXNWJwaGpBdUg4YW1pLy9oeWJhWnlVVzZqTXI3OXlvZDg5b0hJRGRRd2dEV2dUekEraENydUJvcQo3cmdlN3ViOWlFMzZzb2xSMHRpcTJyWWpxaE1ucFRjcGtOQnRkU2hHNEJyMGRCRG50VFYrbDI1ZGhCRmN1L0F0CmxGK0p0aEk2ZzN0bW5TZnkrN092bU16MXlIWFZrTDltVGV0WmU0UDNmVGFjUCtyNDQ0aGE0aFNIU2xCOHdzc3QKOHNGYWNFSzcvNmc3dlhaTldWUUQwbCt6UjdFc1pVZkVpOEVoOWJLWGhjOGl4Z3NleWZXN2hiQkpBK1BVZ0VvVAovSmNVWm9pZFkvbGRpWG0wREJkbUlSRVBNV0pKcGlGVmpkcHBzb0lpZ3JUeDQrYmJMbUE3clhkMnloN3ZZNitWCmdmMzZEbDJzTnFocXFhazhKcnQ3U3FwMlB0T2xMQT09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K"
            }
        ]
    },
    "*tls.RootCA": {
        "CertRaw": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFRENDQWZpZ0F3SUJBZ0lJVTVpTWZlTEFzMFV3RFFZSktvWklodmNOQVFFTEJRQXdKakVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1SQXdEZ1lEVlFRREV3ZHliMjkwTFdOaE1CNFhEVEl6TURReE9ERXpNRGd3T1ZvWApEVE16TURReE5URXpNRGd3T1Zvd0pqRVNNQkFHQTFVRUN4TUpiM0JsYm5Ob2FXWjBNUkF3RGdZRFZRUURFd2R5CmIyOTBMV05oTUlJQklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQ0FRRUFzYTV3YzRSdzZRQWEKV09yMFZYOTVGY0wrWDlxWjVtbS8yNy9Ud2trVTc0Yzh1R093TXdjVGMzc0ZMWWxQa3l2WjdtVWNQT1BuZzVqcgovN1JPeG5LMUwwUDFWMkRZQ0p0a3c1c2Mxbzl0eDRoVUhIMTJ1b1c0Um9mMkIyQVRObHR2RU5sblBFbldTalR5CmdEZjRTc25HaXJ5d1NYZE1SZHAzK0N2R2VjQUFmZWw5OHVQdEYzcWd5ZnRScEM2Ri8zSmVUTEQ4Z29CQ0I1aWkKVGs2MDJYNkFMNUMrV0lRMnlFR3VIT0tDOFlYWjRwOWNRdC9LSENHSy9iUUUxc1RFVEJ2YnFSM0tTTnJwU1MzVAp4MFZBYUxkN05xQlFCSVFha3dUazN0KzdzaUpWZFdlbDZVZjE1eWtibzJDUkdacXFKMWMvYVhKNXdTQUhaM1FuCmZ6cnJJRHR5SlFJREFRQUJvMEl3UURBT0JnTlZIUThCQWY4RUJBTUNBcVF3RHdZRFZSMFRBUUgvQkFVd0F3RUIKL3pBZEJnTlZIUTRFRmdRVWU0a3lUeE1FMktxVXZmN243Q2U4SmI1T2J3a3dEUVlKS29aSWh2Y05BUUVMQlFBRApnZ0VCQUhxUWdLZG9lVUtDdGVmTTZ0U2IwVG9wdCtNUXNLY0dyL1JFbWlCUi9MREFhY21kOXZWWUMyU0lKQk1TCldwcjlSS2lreENqMTlFSDdsL1FrbGJ6a0VTcS96TUlYTmpaU3NHUTFJZWpBQ0RSdVVDZzFTS21sZHlBeCtHemYKM3NaeVRWUGx6NFN3Q0pHM3BnMG4yK2VjQXQxNGRQVEhucEV6YlN3VEdIK1l4anNUN3ZDazEzMUR6OE5Cb2tCSwpyQzV0aUNIWGJ0MFkycHB1emdjaVQ4OXlIYlJOWG1UdXdtZHhuVUZtaGIwc1BEWFJ4V21RS0k0bHhrRGVTVFBVCm91blZwbWt4SlAzWW9KcXJCZFZ6TW5GZmJtR2RvL3M4N3J4Zng1cnRrcVVTOUVtbDh5N25kR1pKTXIyWDBsd0YKcmZpMTcxRm42V2RQZEJkRWRIVDQ0SHVLSURvPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==",
        "KeyRaw": "LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBc2E1d2M0Unc2UUFhV09yMFZYOTVGY0wrWDlxWjVtbS8yNy9Ud2trVTc0Yzh1R093Ck13Y1RjM3NGTFlsUGt5dlo3bVVjUE9Qbmc1anIvN1JPeG5LMUwwUDFWMkRZQ0p0a3c1c2Mxbzl0eDRoVUhIMTIKdW9XNFJvZjJCMkFUTmx0dkVObG5QRW5XU2pUeWdEZjRTc25HaXJ5d1NYZE1SZHAzK0N2R2VjQUFmZWw5OHVQdApGM3FneWZ0UnBDNkYvM0plVExEOGdvQkNCNWlpVGs2MDJYNkFMNUMrV0lRMnlFR3VIT0tDOFlYWjRwOWNRdC9LCkhDR0svYlFFMXNURVRCdmJxUjNLU05ycFNTM1R4MFZBYUxkN05xQlFCSVFha3dUazN0KzdzaUpWZFdlbDZVZjEKNXlrYm8yQ1JHWnFxSjFjL2FYSjV3U0FIWjNRbmZ6cnJJRHR5SlFJREFRQUJBb0lCQVFDYVZwcnBUTTdESmNxOQpHQUg2emtxQWc2dHYyYk83T0hwbVNIK0prTysxakhSSytwVFFEa0p3R2hrS1QrNm1PUDRKblJ4bEs5WXJNa2MxCkN3c3VSKzlvU2hDdndMaUc2V3dpbVBiNHpRZWZ2YVRLUnBVK09lOHluT0V4ME50L2FQYlYzUEpXcFJDVnp0NGkKVC92R0F2VUtDQkxkRGRwY0J3UVV0dm1sUWdsclZGWS9wVDY2ZGc0ektmVHV6cE5GZjRsc09leTR3dDZ2S1hwQQpYRTNuVzlGTjRyYWNhQ3J2elcraXZnZUloVFFWWW1MMDVqTUVpbjJjUDRGMzZMVE8vM1czcHVVYlRqZ2U0QUxMCm5hejBTYnB0V213anZtZXBwaTRVMjhraGhzS0NyQjVHVjJBNGxMZVUzdVJJTWpkNy81QWRwNGF1b1ZNaThySTQKdmp6VzlxeUJBb0dCQU9PQUFNTE1Ba3hKZzVBWGR4YXRJLzRwRmlYWXFUcDQ3SC9FQ09paktLdnp3T3NQSDVVSgpLZFJISUtNR2dxdXdkQngxTTl0TzBuS2JTVXM3SERlTGhzTUdZYkttM2d0aUZGNVp3OThKV2p0R2JieUpNWG9hCmt2NmZ0MjdjQmtSZXJVbHpoYTh0S1dvek41UzliOE1pU1NETklUekVrM1drSHBPdUh0dUxmdGJoQW9HQkFNZncKdk9LYTYxWnFvNExrNncwSTl6VFB5ZFkzRkNRK1V2RytlY1hQWDUyeURSQWwvQng5NnFuSXJDODVjemMyMjNDTgowRTRKTGZoQ1Z1QnBJa3NrZnNtM3NVUEFkbDUyVWFRYnNJaUFQMlpvM2F1M0dtOW1MS05VMURsNXRlVWcrQ0x6ClVQeFM5L1pKOG5NN3Bjc0VHeWZrTkFyU2FZeERFVVdibFp0NDdmZkZBb0dBTGtoN1h5WU1EYU1qSGV4NE1PZlcKbTcyV0lPcjhPc1loTHprZHF0Nk94clRYZWJyZzdQd3BRMk9aRXpHZTRma0xGa01ONHI4ZGQyMTZNdEQ2dzU0aQpNNGtYMVRXM2xNOUdYNCtabHNXYlV0WFlPM1FaMmNLUVJ6Y05KWU9qenNNSU5CcEpoME1EMnZSQ2lZTWt1cWsrCkFXdGFLTGZCWER5Z2IrRUxyQlNzSUdFQ2dZQWpObHl0dEFiNll6R0UzZmdmaFpLejlGeGhvN1dpWkcrTEw3YVcKaGQwYkVyNkdONHBkSWpmdnl1MjRLM0FGSzE0ZVJudUhJc3E3ekVNc3BwZHBrSFhiNU1RTllKbjRMUEpYNnFCKwppY2VncTV0T29LTEJOOGRveEluVHpZR2hadHNNbkxtSWxyd2czZ2tiRGtnMnB2UjVaQkZlVG94VUxZT2ZOTFYyCmVpZSsyUUtCZ1FDWGNKa2tpM3Q3RUJDZ01aZWd5QTlicWRPdFBBZHd2eDhQeUtyZlF5NE50Y0VjVHVNVFN1Zm0KWEUxT3hEalYrTXcwYTF1QXcxL285NURRdFBBZXJJWXBrYTZOK1lMdXc1aEt4U1EzSlN3T0tRY016U0RoZVdRWgo1Ti85T3lWdDQwbVBsZ2svelNFaStKU2xSdzhSYk00SlQrcGwzWTF1aG1vWjFsclZENUkwTVE9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=",
        "FileList": [
            {
                "Filename": "tls/root-ca.key",
                "Data": "LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBc2E1d2M0Unc2UUFhV09yMFZYOTVGY0wrWDlxWjVtbS8yNy9Ud2trVTc0Yzh1R093Ck13Y1RjM3NGTFlsUGt5dlo3bVVjUE9Qbmc1anIvN1JPeG5LMUwwUDFWMkRZQ0p0a3c1c2Mxbzl0eDRoVUhIMTIKdW9XNFJvZjJCMkFUTmx0dkVObG5QRW5XU2pUeWdEZjRTc25HaXJ5d1NYZE1SZHAzK0N2R2VjQUFmZWw5OHVQdApGM3FneWZ0UnBDNkYvM0plVExEOGdvQkNCNWlpVGs2MDJYNkFMNUMrV0lRMnlFR3VIT0tDOFlYWjRwOWNRdC9LCkhDR0svYlFFMXNURVRCdmJxUjNLU05ycFNTM1R4MFZBYUxkN05xQlFCSVFha3dUazN0KzdzaUpWZFdlbDZVZjEKNXlrYm8yQ1JHWnFxSjFjL2FYSjV3U0FIWjNRbmZ6cnJJRHR5SlFJREFRQUJBb0lCQVFDYVZwcnBUTTdESmNxOQpHQUg2emtxQWc2dHYyYk83T0hwbVNIK0prTysxakhSSytwVFFEa0p3R2hrS1QrNm1PUDRKblJ4bEs5WXJNa2MxCkN3c3VSKzlvU2hDdndMaUc2V3dpbVBiNHpRZWZ2YVRLUnBVK09lOHluT0V4ME50L2FQYlYzUEpXcFJDVnp0NGkKVC92R0F2VUtDQkxkRGRwY0J3UVV0dm1sUWdsclZGWS9wVDY2ZGc0ektmVHV6cE5GZjRsc09leTR3dDZ2S1hwQQpYRTNuVzlGTjRyYWNhQ3J2elcraXZnZUloVFFWWW1MMDVqTUVpbjJjUDRGMzZMVE8vM1czcHVVYlRqZ2U0QUxMCm5hejBTYnB0V213anZtZXBwaTRVMjhraGhzS0NyQjVHVjJBNGxMZVUzdVJJTWpkNy81QWRwNGF1b1ZNaThySTQKdmp6VzlxeUJBb0dCQU9PQUFNTE1Ba3hKZzVBWGR4YXRJLzRwRmlYWXFUcDQ3SC9FQ09paktLdnp3T3NQSDVVSgpLZFJISUtNR2dxdXdkQngxTTl0TzBuS2JTVXM3SERlTGhzTUdZYkttM2d0aUZGNVp3OThKV2p0R2JieUpNWG9hCmt2NmZ0MjdjQmtSZXJVbHpoYTh0S1dvek41UzliOE1pU1NETklUekVrM1drSHBPdUh0dUxmdGJoQW9HQkFNZncKdk9LYTYxWnFvNExrNncwSTl6VFB5ZFkzRkNRK1V2RytlY1hQWDUyeURSQWwvQng5NnFuSXJDODVjemMyMjNDTgowRTRKTGZoQ1Z1QnBJa3NrZnNtM3NVUEFkbDUyVWFRYnNJaUFQMlpvM2F1M0dtOW1MS05VMURsNXRlVWcrQ0x6ClVQeFM5L1pKOG5NN3Bjc0VHeWZrTkFyU2FZeERFVVdibFp0NDdmZkZBb0dBTGtoN1h5WU1EYU1qSGV4NE1PZlcKbTcyV0lPcjhPc1loTHprZHF0Nk94clRYZWJyZzdQd3BRMk9aRXpHZTRma0xGa01ONHI4ZGQyMTZNdEQ2dzU0aQpNNGtYMVRXM2xNOUdYNCtabHNXYlV0WFlPM1FaMmNLUVJ6Y05KWU9qenNNSU5CcEpoME1EMnZSQ2lZTWt1cWsrCkFXdGFLTGZCWER5Z2IrRUxyQlNzSUdFQ2dZQWpObHl0dEFiNll6R0UzZmdmaFpLejlGeGhvN1dpWkcrTEw3YVcKaGQwYkVyNkdONHBkSWpmdnl1MjRLM0FGSzE0ZVJudUhJc3E3ekVNc3BwZHBrSFhiNU1RTllKbjRMUEpYNnFCKwppY2VncTV0T29LTEJOOGRveEluVHpZR2hadHNNbkxtSWxyd2czZ2tiRGtnMnB2UjVaQkZlVG94VUxZT2ZOTFYyCmVpZSsyUUtCZ1FDWGNKa2tpM3Q3RUJDZ01aZWd5QTlicWRPdFBBZHd2eDhQeUtyZlF5NE50Y0VjVHVNVFN1Zm0KWEUxT3hEalYrTXcwYTF1QXcxL285NURRdFBBZXJJWXBrYTZOK1lMdXc1aEt4U1EzSlN3T0tRY016U0RoZVdRWgo1Ti85T3lWdDQwbVBsZ2svelNFaStKU2xSdzhSYk00SlQrcGwzWTF1aG1vWjFsclZENUkwTVE9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo="
            },
            {
                "Filename": "tls/root-ca.crt",
                "Data": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFRENDQWZpZ0F3SUJBZ0lJVTVpTWZlTEFzMFV3RFFZSktvWklodmNOQVFFTEJRQXdKakVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1SQXdEZ1lEVlFRREV3ZHliMjkwTFdOaE1CNFhEVEl6TURReE9ERXpNRGd3T1ZvWApEVE16TURReE5URXpNRGd3T1Zvd0pqRVNNQkFHQTFVRUN4TUpiM0JsYm5Ob2FXWjBNUkF3RGdZRFZRUURFd2R5CmIyOTBMV05oTUlJQklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQ0FRRUFzYTV3YzRSdzZRQWEKV09yMFZYOTVGY0wrWDlxWjVtbS8yNy9Ud2trVTc0Yzh1R093TXdjVGMzc0ZMWWxQa3l2WjdtVWNQT1BuZzVqcgovN1JPeG5LMUwwUDFWMkRZQ0p0a3c1c2Mxbzl0eDRoVUhIMTJ1b1c0Um9mMkIyQVRObHR2RU5sblBFbldTalR5CmdEZjRTc25HaXJ5d1NYZE1SZHAzK0N2R2VjQUFmZWw5OHVQdEYzcWd5ZnRScEM2Ri8zSmVUTEQ4Z29CQ0I1aWkKVGs2MDJYNkFMNUMrV0lRMnlFR3VIT0tDOFlYWjRwOWNRdC9LSENHSy9iUUUxc1RFVEJ2YnFSM0tTTnJwU1MzVAp4MFZBYUxkN05xQlFCSVFha3dUazN0KzdzaUpWZFdlbDZVZjE1eWtibzJDUkdacXFKMWMvYVhKNXdTQUhaM1FuCmZ6cnJJRHR5SlFJREFRQUJvMEl3UURBT0JnTlZIUThCQWY4RUJBTUNBcVF3RHdZRFZSMFRBUUgvQkFVd0F3RUIKL3pBZEJnTlZIUTRFRmdRVWU0a3lUeE1FMktxVXZmN243Q2U4SmI1T2J3a3dEUVlKS29aSWh2Y05BUUVMQlFBRApnZ0VCQUhxUWdLZG9lVUtDdGVmTTZ0U2IwVG9wdCtNUXNLY0dyL1JFbWlCUi9MREFhY21kOXZWWUMyU0lKQk1TCldwcjlSS2lreENqMTlFSDdsL1FrbGJ6a0VTcS96TUlYTmpaU3NHUTFJZWpBQ0RSdVVDZzFTS21sZHlBeCtHemYKM3NaeVRWUGx6NFN3Q0pHM3BnMG4yK2VjQXQxNGRQVEhucEV6YlN3VEdIK1l4anNUN3ZDazEzMUR6OE5Cb2tCSwpyQzV0aUNIWGJ0MFkycHB1emdjaVQ4OXlIYlJOWG1UdXdtZHhuVUZtaGIwc1BEWFJ4V21RS0k0bHhrRGVTVFBVCm91blZwbWt4SlAzWW9KcXJCZFZ6TW5GZmJtR2RvL3M4N3J4Zng1cnRrcVVTOUVtbDh5N25kR1pKTXIyWDBsd0YKcmZpMTcxRm42V2RQZEJkRWRIVDQ0SHVLSURvPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg=="
            }
        ]
    },
    "*tls.ServiceAccountKeyPair": {
        "Pvt": "LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBdUlEV081OVJYbytKVnc5UnVZN3BPN215MUprU2owS1FrS1J5K1h3dFp2TVpla2ZTCk9vNXdjZlVTTFpySW1SQi9pOG5hdGxaY29leDlqaVBsNmJXVVhaTnlFcmhYanlTbThOc3NrNkcwNXBleVFZZU0KYkNxclNrY0JGeUhIZ0NBbXFTcmtjb0VkN1FtcVVDdktLOUFuanRNZ0xWNGZzZlB0OFNJeDFGd1AwclEyWWpQdwowemFwRFNyRzErUHV3OVFPQUtMaXRyYVBsK1BpcW5Sd2l1Q3hNR1Q4ektKV3k2NzFOa29US0h5TVhCRmM2KzlGCnlFMkpQZGMrQU41UXNSNGlLYW1Lenh1RlR3ZW9sa0tBUS9Wcm1MaEozZ05ENjRkcmtWRGJoTU5tdG55dWtHelQKN092azdVTENkZFcxdS90NDc1U1BQTVFMaGpTUVVhYlV1Q3VxeXdJREFRQUJBb0lCQUhqOXUvOXpWYWZlRnVGcApvVjArODRJQUg5NjgxdWZ0YmVIOGhZMUh1bnBWbHZLU1lMR1hzUE42RThhbVJ6L2hDdE0vdHRaMXdkOUp0M2hiCjRDeW5yN2pCdFQvRGRWL2dXRDJBYlRZUENCTmpqVGpkeTk4dkNBNzRpeVdCT0ZPMFFjWVQ0NldYT0dtMk9lTEQKSkp3Z3I2QkFvVXcrK2lmM1g2VU9tSUM3TW9Fb0g1dmtqWVo5NEZmb0lsVUdLNUlEdlJ5QUZOTm1EYVZQZXlZego0bkRHZFN0am9hSjc2S2kybXhPMmtuSXc3YXFhdEFmZHN1YldWc2QxZWtXNzRTWnN1cmF0Qjh5ZzhKdUJBSHBXCjdxSlNDYk5Tb0IzaHdPc2h0Z2NqRW5ycUtSbVl4WnViU3p4Z3NHZWkvVCtZYWUrM1pudm1TbzZBMWpsbWFZQzAKejNieldPa0NnWUVBd0xxNm5wSE5aVXdiNVNEWTJsTGhBd2tIY3FtTDZHYWZ3eU5kM0FTeGk4YmJmNXJkdnJadAoxL1FnMFpwOFhUTGVhTEZyQzl2V1RsV1JHd05aNFE0TDlxSUp4dnJvcFJkcFBXTTlnQ1EycUtiOUpqRTFTL1plCmhoYTlqVS83Ujl0TTBxQktxWE9sVTlxbG1xZjVsTFUxVW80VjZmeitlQjFpaGQvVUJIZnRFYjBDZ1lFQTlSTEYKUVNkVW1oandwL2JQL0hEUGY2VW5XNmlzR25DazlVUlg3VkQ5M2UxWGNtWjFHM3ZLZlFXaHExYzNCelpaWTM3eApRN3NzUG1yQTNwNUxBN0c4cmRSaUlOL0t2dTNBbjBDcy9hTjVGNVNidnJ4MEdmY0p6cnkwc0dEU1VYbzdIYlFTCnFXQnVTWDdRaFVSUGMvanR2NnNKZ3IvUWFhSkdWdWpsUXFIbnd5Y0NnWUI3djJuVUp3b2E0S09JbTI2aHdGVjUKL1hJcXpYSm41bnp1YnViMVBvNUJrWTJlZ1hHZjRzTGt4bnZNR2NXQWtnajhiKzZyenB2cjhFVWJjeXRpdGdJNAplaEtORU00UU10Zi84cGlxanBZSjlDN1hOd0ZocE85TWFZMk1EcTdwbElYZk44eTR3T2lHenYxR01GU3doeW1WCnVHV1p1RGdzSjdIN0E1eSt3Y0lXZ1FLQmdCK3ZPcE51MjFCRTh6QTBCN1hTZS9FN3ovZll1Yzk5U3NadS9KTXgKQ25GYjB4ZDJTYU94QUgvamI0QndlU3ZVaWdBRUZIczJRc1ViRmk1eDlxN1dsdGMrZ3lWTzZhNS9uSXk2VnVNLwo5RkxwSXEycFBiVnhxL0h2a2NqUDY4RWU5VytrclZqNm42ZWUzcVNzTFQySUxHekFWeTF4VVNlbkZFTCtQMDI3CkV2UzNBb0dCQUpHdnpsS2dpQkc0SnlPTUVQZVlkcHFwb3YvYnlLNFhlVTkvaWs1RjgrOFcrcDFEOE9UZVVtTVYKbXUvRnF0c0xCcitVbUE0cFV4MWFBS2NmSXpBdlRnNy8rdHBSTmNER3pBRnNuWTNsS2M0LzFJVVY2UTY4K3VsTwo1TnVhV2p5RStxNER3VEh2U3FpZzZSS1IzZGd1MFllWENqOVhTT1BTbUY5emhUam03YkRlCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==",
        "Pub": "LS0tLS1CRUdJTiBSU0EgUFVCTElDIEtFWS0tLS0tCk1JSUJJakFOQmdrcWhraUc5dzBCQVFFRkFBT0NBUThBTUlJQkNnS0NBUUVBdUlEV081OVJYbytKVnc5UnVZN3AKTzdteTFKa1NqMEtRa0tSeStYd3Radk1aZWtmU09vNXdjZlVTTFpySW1SQi9pOG5hdGxaY29leDlqaVBsNmJXVQpYWk55RXJoWGp5U204TnNzazZHMDVwZXlRWWVNYkNxclNrY0JGeUhIZ0NBbXFTcmtjb0VkN1FtcVVDdktLOUFuCmp0TWdMVjRmc2ZQdDhTSXgxRndQMHJRMllqUHcwemFwRFNyRzErUHV3OVFPQUtMaXRyYVBsK1BpcW5Sd2l1Q3gKTUdUOHpLSld5NjcxTmtvVEtIeU1YQkZjNis5RnlFMkpQZGMrQU41UXNSNGlLYW1Lenh1RlR3ZW9sa0tBUS9WcgptTGhKM2dORDY0ZHJrVkRiaE1ObXRueXVrR3pUN092azdVTENkZFcxdS90NDc1U1BQTVFMaGpTUVVhYlV1Q3VxCnl3SURBUUFCCi0tLS0tRU5EIFJTQSBQVUJMSUMgS0VZLS0tLS0K",
        "FileList": [
            {
                "Filename": "tls/service-account.key",
                "Data": "LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBdUlEV081OVJYbytKVnc5UnVZN3BPN215MUprU2owS1FrS1J5K1h3dFp2TVpla2ZTCk9vNXdjZlVTTFpySW1SQi9pOG5hdGxaY29leDlqaVBsNmJXVVhaTnlFcmhYanlTbThOc3NrNkcwNXBleVFZZU0KYkNxclNrY0JGeUhIZ0NBbXFTcmtjb0VkN1FtcVVDdktLOUFuanRNZ0xWNGZzZlB0OFNJeDFGd1AwclEyWWpQdwowemFwRFNyRzErUHV3OVFPQUtMaXRyYVBsK1BpcW5Sd2l1Q3hNR1Q4ektKV3k2NzFOa29US0h5TVhCRmM2KzlGCnlFMkpQZGMrQU41UXNSNGlLYW1Lenh1RlR3ZW9sa0tBUS9Wcm1MaEozZ05ENjRkcmtWRGJoTU5tdG55dWtHelQKN092azdVTENkZFcxdS90NDc1U1BQTVFMaGpTUVVhYlV1Q3VxeXdJREFRQUJBb0lCQUhqOXUvOXpWYWZlRnVGcApvVjArODRJQUg5NjgxdWZ0YmVIOGhZMUh1bnBWbHZLU1lMR1hzUE42RThhbVJ6L2hDdE0vdHRaMXdkOUp0M2hiCjRDeW5yN2pCdFQvRGRWL2dXRDJBYlRZUENCTmpqVGpkeTk4dkNBNzRpeVdCT0ZPMFFjWVQ0NldYT0dtMk9lTEQKSkp3Z3I2QkFvVXcrK2lmM1g2VU9tSUM3TW9Fb0g1dmtqWVo5NEZmb0lsVUdLNUlEdlJ5QUZOTm1EYVZQZXlZego0bkRHZFN0am9hSjc2S2kybXhPMmtuSXc3YXFhdEFmZHN1YldWc2QxZWtXNzRTWnN1cmF0Qjh5ZzhKdUJBSHBXCjdxSlNDYk5Tb0IzaHdPc2h0Z2NqRW5ycUtSbVl4WnViU3p4Z3NHZWkvVCtZYWUrM1pudm1TbzZBMWpsbWFZQzAKejNieldPa0NnWUVBd0xxNm5wSE5aVXdiNVNEWTJsTGhBd2tIY3FtTDZHYWZ3eU5kM0FTeGk4YmJmNXJkdnJadAoxL1FnMFpwOFhUTGVhTEZyQzl2V1RsV1JHd05aNFE0TDlxSUp4dnJvcFJkcFBXTTlnQ1EycUtiOUpqRTFTL1plCmhoYTlqVS83Ujl0TTBxQktxWE9sVTlxbG1xZjVsTFUxVW80VjZmeitlQjFpaGQvVUJIZnRFYjBDZ1lFQTlSTEYKUVNkVW1oandwL2JQL0hEUGY2VW5XNmlzR25DazlVUlg3VkQ5M2UxWGNtWjFHM3ZLZlFXaHExYzNCelpaWTM3eApRN3NzUG1yQTNwNUxBN0c4cmRSaUlOL0t2dTNBbjBDcy9hTjVGNVNidnJ4MEdmY0p6cnkwc0dEU1VYbzdIYlFTCnFXQnVTWDdRaFVSUGMvanR2NnNKZ3IvUWFhSkdWdWpsUXFIbnd5Y0NnWUI3djJuVUp3b2E0S09JbTI2aHdGVjUKL1hJcXpYSm41bnp1YnViMVBvNUJrWTJlZ1hHZjRzTGt4bnZNR2NXQWtnajhiKzZyenB2cjhFVWJjeXRpdGdJNAplaEtORU00UU10Zi84cGlxanBZSjlDN1hOd0ZocE85TWFZMk1EcTdwbElYZk44eTR3T2lHenYxR01GU3doeW1WCnVHV1p1RGdzSjdIN0E1eSt3Y0lXZ1FLQmdCK3ZPcE51MjFCRTh6QTBCN1hTZS9FN3ovZll1Yzk5U3NadS9KTXgKQ25GYjB4ZDJTYU94QUgvamI0QndlU3ZVaWdBRUZIczJRc1ViRmk1eDlxN1dsdGMrZ3lWTzZhNS9uSXk2VnVNLwo5RkxwSXEycFBiVnhxL0h2a2NqUDY4RWU5VytrclZqNm42ZWUzcVNzTFQySUxHekFWeTF4VVNlbkZFTCtQMDI3CkV2UzNBb0dCQUpHdnpsS2dpQkc0SnlPTUVQZVlkcHFwb3YvYnlLNFhlVTkvaWs1RjgrOFcrcDFEOE9UZVVtTVYKbXUvRnF0c0xCcitVbUE0cFV4MWFBS2NmSXpBdlRnNy8rdHBSTmNER3pBRnNuWTNsS2M0LzFJVVY2UTY4K3VsTwo1TnVhV2p5RStxNER3VEh2U3FpZzZSS1IzZGd1MFllWENqOVhTT1BTbUY5emhUam03YkRlCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg=="
            },
            {
                "Filename": "tls/service-account.pub",
                "Data": "LS0tLS1CRUdJTiBSU0EgUFVCTElDIEtFWS0tLS0tCk1JSUJJakFOQmdrcWhraUc5dzBCQVFFRkFBT0NBUThBTUlJQkNnS0NBUUVBdUlEV081OVJYbytKVnc5UnVZN3AKTzdteTFKa1NqMEtRa0tSeStYd3Radk1aZWtmU09vNXdjZlVTTFpySW1SQi9pOG5hdGxaY29leDlqaVBsNmJXVQpYWk55RXJoWGp5U204TnNzazZHMDVwZXlRWWVNYkNxclNrY0JGeUhIZ0NBbXFTcmtjb0VkN1FtcVVDdktLOUFuCmp0TWdMVjRmc2ZQdDhTSXgxRndQMHJRMllqUHcwemFwRFNyRzErUHV3OVFPQUtMaXRyYVBsK1BpcW5Sd2l1Q3gKTUdUOHpLSld5NjcxTmtvVEtIeU1YQkZjNis5RnlFMkpQZGMrQU41UXNSNGlLYW1Lenh1RlR3ZW9sa0tBUS9WcgptTGhKM2dORDY0ZHJrVkRiaE1ObXRueXVrR3pUN092azdVTENkZFcxdS90NDc1U1BQTVFMaGpTUVVhYlV1Q3VxCnl3SURBUUFCCi0tLS0tRU5EIFJTQSBQVUJMSUMgS0VZLS0tLS0K"
            }
        ]
    }
}